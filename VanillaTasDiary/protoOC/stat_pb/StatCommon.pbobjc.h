// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: stat_pb/stat_common.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class PB3TrackingParam;
@class PB3TrackingParamList;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum PB3TrackingParamType

typedef GPB_ENUM(PB3TrackingParamType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3TrackingParamType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3TrackingParamType_TrackingParamTypeDefault = 0,

  /** 数字 */
  PB3TrackingParamType_TrackingParamTypeInt64 = 1,

  /** 字符串 */
  PB3TrackingParamType_TrackingParamTypeStr = 2,

  /** 浮点型 */
  PB3TrackingParamType_TrackingParamTypeFloat = 3,
};

GPBEnumDescriptor *PB3TrackingParamType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3TrackingParamType_IsValidValue(int32_t value);

#pragma mark - PB3StatCommonRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface PB3StatCommonRoot : GPBRootObject
@end

#pragma mark - PB3TrackingReq

typedef GPB_ENUM(PB3TrackingReq_FieldNumber) {
  PB3TrackingReq_FieldNumber_Application = 1,
  PB3TrackingReq_FieldNumber_Timestamp = 2,
  PB3TrackingReq_FieldNumber_Sign = 3,
  PB3TrackingReq_FieldNumber_TrackingParamListArray = 4,
};

@interface PB3TrackingReq : GPBMessage

/** 应用名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *application;

/** 时间戳，必填 */
@property(nonatomic, readwrite) int64_t timestamp;

@property(nonatomic, readwrite, copy, null_resettable) NSString *sign;

/** 打点上报字段 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3TrackingParamList*> *trackingParamListArray;
/** The number of items in @c trackingParamListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger trackingParamListArray_Count;

@end

#pragma mark - PB3TrackingParamList

typedef GPB_ENUM(PB3TrackingParamList_FieldNumber) {
  PB3TrackingParamList_FieldNumber_Event = 1,
  PB3TrackingParamList_FieldNumber_TrackingParamsArray = 2,
};

@interface PB3TrackingParamList : GPBMessage

/** 事件名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *event;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3TrackingParam*> *trackingParamsArray;
/** The number of items in @c trackingParamsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger trackingParamsArray_Count;

@end

#pragma mark - PB3TrackingParam

typedef GPB_ENUM(PB3TrackingParam_FieldNumber) {
  PB3TrackingParam_FieldNumber_Key = 1,
  PB3TrackingParam_FieldNumber_Value = 2,
  PB3TrackingParam_FieldNumber_TrackingParamType = 3,
};

@interface PB3TrackingParam : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *key;

@property(nonatomic, readwrite, copy, null_resettable) NSString *value;

@property(nonatomic, readwrite) PB3TrackingParamType trackingParamType;

@end

/**
 * Fetches the raw value of a @c PB3TrackingParam's @c trackingParamType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3TrackingParam_TrackingParamType_RawValue(PB3TrackingParam *message);
/**
 * Sets the raw value of an @c PB3TrackingParam's @c trackingParamType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3TrackingParam_TrackingParamType_RawValue(PB3TrackingParam *message, int32_t value);

#pragma mark - PB3TrackingRes

@interface PB3TrackingRes : GPBMessage

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
