// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: plugin_pb/phome.ext.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import <stdatomic.h>

#import "plugin_pb/PhomeExt.pbobjc.h"
#import "plugin_pb/PluginExt.pbobjc.h"
#import "plugin_pb/CommunityExt.pbobjc.h"
#import "plugin_pb/VideoExt.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - PB3PhomeExtRoot

@implementation PB3PhomeExtRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - PB3PhomeExtRoot_FileDescriptor

static GPBFileDescriptor *PB3PhomeExtRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"plugin_pb"
                                                 objcPrefix:@"PB3"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - Enum PB3PHomeCmdId

GPBEnumDescriptor *PB3PHomeCmdId_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "IcHomeZero\000IcHomePushBcFriend\000IcHomePush"
        "Bubble\000IcHomePushBcFriendGame\000IcHomeSyst"
        "emToastCmdId\000IcHomeMatchCmdId\000IcHomePush"
        "UpdateAction\000IcHomePushModActionReset\000Ic"
        "HomePushNavRed\000IcHomePushBcFriendPlayerT"
        "ogether\000IcHomePushHotPoint\000IcHomePushBcG"
        "ift\000";
    static const int32_t values[] = {
        PB3PHomeCmdId_IcHomeZero,
        PB3PHomeCmdId_IcHomePushBcFriend,
        PB3PHomeCmdId_IcHomePushBubble,
        PB3PHomeCmdId_IcHomePushBcFriendGame,
        PB3PHomeCmdId_IcHomeSystemToastCmdId,
        PB3PHomeCmdId_IcHomeMatchCmdId,
        PB3PHomeCmdId_IcHomePushUpdateAction,
        PB3PHomeCmdId_IcHomePushModActionReset,
        PB3PHomeCmdId_IcHomePushNavRed,
        PB3PHomeCmdId_IcHomePushBcFriendPlayerTogether,
        PB3PHomeCmdId_IcHomePushHotPoint,
        PB3PHomeCmdId_IcHomePushBcGift,
    };
    static const char *extraTextFormatInfo = "\014\000b\210\000\001b\220\000\002b\216\000\003b\224\000\004b\204\346\345\343\342\000\005b\204\345\343\342\000\006b\224\000\007b\226\000\010b\216\000\tb\236\000\nb\220\000\013b\216\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3PHomeCmdId)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3PHomeCmdId_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3PHomeCmdId_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3PHomeCmdId_IcHomeZero:
    case PB3PHomeCmdId_IcHomePushBcFriend:
    case PB3PHomeCmdId_IcHomePushBubble:
    case PB3PHomeCmdId_IcHomePushBcFriendGame:
    case PB3PHomeCmdId_IcHomeSystemToastCmdId:
    case PB3PHomeCmdId_IcHomeMatchCmdId:
    case PB3PHomeCmdId_IcHomePushUpdateAction:
    case PB3PHomeCmdId_IcHomePushModActionReset:
    case PB3PHomeCmdId_IcHomePushNavRed:
    case PB3PHomeCmdId_IcHomePushBcFriendPlayerTogether:
    case PB3PHomeCmdId_IcHomePushHotPoint:
    case PB3PHomeCmdId_IcHomePushBcGift:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3PHomeSysToastType

GPBEnumDescriptor *PB3PHomeSysToastType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "SysToastNormal\000SysToastSucc\000SysToastWarn"
        "\000SysToastError\000";
    static const int32_t values[] = {
        PB3PHomeSysToastType_SysToastNormal,
        PB3PHomeSysToastType_SysToastSucc,
        PB3PHomeSysToastType_SysToastWarn,
        PB3PHomeSysToastType_SysToastError,
    };
    static const char *extraTextFormatInfo = "\004\000\016\000\001\014\000\002\014\000\003\r\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3PHomeSysToastType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3PHomeSysToastType_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3PHomeSysToastType_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3PHomeSysToastType_SysToastNormal:
    case PB3PHomeSysToastType_SysToastSucc:
    case PB3PHomeSysToastType_SysToastWarn:
    case PB3PHomeSysToastType_SysToastError:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3PHomeModStyle

GPBEnumDescriptor *PB3PHomeModStyle_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "HmsStyleZero\000HmsStyleBanner001\000HmsStyleB"
        "anner002\000HmsStyleSubNav\000HmsStylePlayerFa"
        "lls\000HmsStylePlayer3P\000HmsStylePlayerList\000"
        "HmsStyleRoomList\000HmsStyleRoomListSex\000Hms"
        "StyleRoom3Pbig\000HmsStyleRoom3Psmall\000HmsSt"
        "yleRoom2Pbig\000HmsStyleBfbarrage\000HmsStyleB"
        "fscroll\000HmsStyleTjcollection\000HmsStyleMyC"
        "ollection\000HmsStyleMyFootPrint\000HmsStyleOr"
        "derPlayer2Pbig\000HmsStyleBannerList\000HmsSty"
        "leRouter\000HmsStyleActivity\000HmsStyleRankLi"
        "st\000HmsStyleRouterSmall\000HmsStyleRoom2Psma"
        "ll\000HmsStyleNearByList\000HmsStyleNearBy3Psm"
        "all\000HmsStylePlayerInsertTop\000HmsStyleOrde"
        "rPlayer3P\000HmsStyleNearByWithAlbum\000HmsSty"
        "leCommunityTag\000HmsStyleCommunityGroup3Pb"
        "igHead\000HmsStyleCommunityGroupSlide\000HmsSt"
        "yleCommunityGroupList\000HmsStyleCommunityT"
        "rendList\000HmsStyleCommunityGroupTrendList"
        "\000HmsStyleCommunityTrendPublish\000HmsStyleC"
        "ommunityGroupSlideBigHead\000HmsStyleBanner"
        "Matrix24Slide\000HmsStyleBanner3P\000HmsStyleB"
        "anner2P\000HmsStyleRoomListSlide\000HmsStyleNe"
        "arByBigCard\000HmsStylePlayerSoundCard\000HmsS"
        "tyleBfbarrageGame\000HmsStyleBfscrollGame\000H"
        "msStyleRoomLarge\000HmsStyleGameRoomList\000Hm"
        "sStylePlayerSoundCardList\000HmsStyleShowOr"
        "derRoomList\000HmsStyleRoomRadioList\000HmsSty"
        "leBannerAverage3P\000HmsStyleOrderRank\000HmsS"
        "tyleMatching\000HmsStyleCommunityGroupTrend"
        "HotList\000HmsStyleSearchRoomList\000HmsStyleS"
        "earchBanner\000HmsStyleSearchModule\000HmsStyl"
        "eSearchRecord\000HmsStyleSearchRecordRoom\000H"
        "msStyleGameRoomListNew\000HmsStyleGamePlaye"
        "rList\000HmsStyleGamePlayerListOpen\000HmsStyl"
        "ePersonalRecommend\000HmsStyleRoomRecommend"
        "\000HmsStyleLeaveRoomRecommendRowCircle\000Hms"
        "StyleLeaveRoomRecommendColumnCircle\000HmsS"
        "tyleLeaveRoomRecommendRowSquare\000HmsStyle"
        "LeaveRoomRecommendColumnSquare\000HmsStyleB"
        "annerMatrix25Slide\000HmsStyleBannerMatrix1"
        "5\000HmsStyleBannerIrregular4P\000HmsStyleFrie"
        "ndRecommend\000HmsStylePublishHeadlines\000Hms"
        "StyleTopWealth\000HmsStyleTopCharm\000HmsStyle"
        "NobilityUser\000HmsStyleGameGangUp\000HmsStyle"
        "MobaTeamRoom\000HmsStyleMobaTeamRoomList\000Hm"
        "sStylePlayerSlideSupportJumpMore\000HmsStyl"
        "eRoomSlideSupportJumpMore\000HmsStyleCpinfo"
        "\000HmsStyleSingleLive2\000HmsStyleSmallActivi"
        "tyRoom\000HmsStyleBannerIrregular5P\000HmsStyl"
        "eRoomHotList\000HmsStyleNoData\000HmsStyleCons"
        "ortiaPkrank\000HmsStyleCpinfo5P\000HmsStyleRoo"
        "mListLongPicIcon\000HmsStyleRoomListSquareP"
        "icIcon\000HmsStyleCompositeSearchRecord\000Hms"
        "StyleHotPointScroll\000HmsStyleHotPointList"
        "\000HmsStyleCpplayer\000HmsStyleCpblindBox\000Hms"
        "StyleRoom2P\000HmsStyleOxygenCarNormalList\000"
        "HmsStyleOxygenCarScrollList\000HmsStyleBfgi"
        "ft\000HmsStyleRoomNestedList\000HmsStyleNested"
        "Banner\000HmsStyleVideoCard\000HmsStyleVideoLi"
        "st\000HmsStyleRankBigImage\000HmsStyleRouter2P"
        "\000HmsStyleRouter3P\000HmsStyleBubble\000HmsStyl"
        "eOrderList\000HmsStyleBannerMatrix44\000";
    static const int32_t values[] = {
        PB3PHomeModStyle_HmsStyleZero,
        PB3PHomeModStyle_HmsStyleBanner001,
        PB3PHomeModStyle_HmsStyleBanner002,
        PB3PHomeModStyle_HmsStyleSubNav,
        PB3PHomeModStyle_HmsStylePlayerFalls,
        PB3PHomeModStyle_HmsStylePlayer3P,
        PB3PHomeModStyle_HmsStylePlayerList,
        PB3PHomeModStyle_HmsStyleRoomList,
        PB3PHomeModStyle_HmsStyleRoomListSex,
        PB3PHomeModStyle_HmsStyleRoom3Pbig,
        PB3PHomeModStyle_HmsStyleRoom3Psmall,
        PB3PHomeModStyle_HmsStyleRoom2Pbig,
        PB3PHomeModStyle_HmsStyleBfbarrage,
        PB3PHomeModStyle_HmsStyleBfscroll,
        PB3PHomeModStyle_HmsStyleTjcollection,
        PB3PHomeModStyle_HmsStyleMyCollection,
        PB3PHomeModStyle_HmsStyleMyFootPrint,
        PB3PHomeModStyle_HmsStyleOrderPlayer2Pbig,
        PB3PHomeModStyle_HmsStyleBannerList,
        PB3PHomeModStyle_HmsStyleRouter,
        PB3PHomeModStyle_HmsStyleActivity,
        PB3PHomeModStyle_HmsStyleRankList,
        PB3PHomeModStyle_HmsStyleRouterSmall,
        PB3PHomeModStyle_HmsStyleRoom2Psmall,
        PB3PHomeModStyle_HmsStyleNearByList,
        PB3PHomeModStyle_HmsStyleNearBy3Psmall,
        PB3PHomeModStyle_HmsStylePlayerInsertTop,
        PB3PHomeModStyle_HmsStyleOrderPlayer3P,
        PB3PHomeModStyle_HmsStyleNearByWithAlbum,
        PB3PHomeModStyle_HmsStyleCommunityTag,
        PB3PHomeModStyle_HmsStyleCommunityGroup3PbigHead,
        PB3PHomeModStyle_HmsStyleCommunityGroupSlide,
        PB3PHomeModStyle_HmsStyleCommunityGroupList,
        PB3PHomeModStyle_HmsStyleCommunityTrendList,
        PB3PHomeModStyle_HmsStyleCommunityGroupTrendList,
        PB3PHomeModStyle_HmsStyleCommunityTrendPublish,
        PB3PHomeModStyle_HmsStyleCommunityGroupSlideBigHead,
        PB3PHomeModStyle_HmsStyleBannerMatrix24Slide,
        PB3PHomeModStyle_HmsStyleBanner3P,
        PB3PHomeModStyle_HmsStyleBanner2P,
        PB3PHomeModStyle_HmsStyleRoomListSlide,
        PB3PHomeModStyle_HmsStyleNearByBigCard,
        PB3PHomeModStyle_HmsStylePlayerSoundCard,
        PB3PHomeModStyle_HmsStyleBfbarrageGame,
        PB3PHomeModStyle_HmsStyleBfscrollGame,
        PB3PHomeModStyle_HmsStyleRoomLarge,
        PB3PHomeModStyle_HmsStyleGameRoomList,
        PB3PHomeModStyle_HmsStylePlayerSoundCardList,
        PB3PHomeModStyle_HmsStyleShowOrderRoomList,
        PB3PHomeModStyle_HmsStyleRoomRadioList,
        PB3PHomeModStyle_HmsStyleBannerAverage3P,
        PB3PHomeModStyle_HmsStyleOrderRank,
        PB3PHomeModStyle_HmsStyleMatching,
        PB3PHomeModStyle_HmsStyleCommunityGroupTrendHotList,
        PB3PHomeModStyle_HmsStyleSearchRoomList,
        PB3PHomeModStyle_HmsStyleSearchBanner,
        PB3PHomeModStyle_HmsStyleSearchModule,
        PB3PHomeModStyle_HmsStyleSearchRecord,
        PB3PHomeModStyle_HmsStyleSearchRecordRoom,
        PB3PHomeModStyle_HmsStyleGameRoomListNew,
        PB3PHomeModStyle_HmsStyleGamePlayerList,
        PB3PHomeModStyle_HmsStyleGamePlayerListOpen,
        PB3PHomeModStyle_HmsStylePersonalRecommend,
        PB3PHomeModStyle_HmsStyleRoomRecommend,
        PB3PHomeModStyle_HmsStyleLeaveRoomRecommendRowCircle,
        PB3PHomeModStyle_HmsStyleLeaveRoomRecommendColumnCircle,
        PB3PHomeModStyle_HmsStyleLeaveRoomRecommendRowSquare,
        PB3PHomeModStyle_HmsStyleLeaveRoomRecommendColumnSquare,
        PB3PHomeModStyle_HmsStyleBannerMatrix25Slide,
        PB3PHomeModStyle_HmsStyleBannerMatrix15,
        PB3PHomeModStyle_HmsStyleBannerIrregular4P,
        PB3PHomeModStyle_HmsStyleFriendRecommend,
        PB3PHomeModStyle_HmsStylePublishHeadlines,
        PB3PHomeModStyle_HmsStyleTopWealth,
        PB3PHomeModStyle_HmsStyleTopCharm,
        PB3PHomeModStyle_HmsStyleNobilityUser,
        PB3PHomeModStyle_HmsStyleGameGangUp,
        PB3PHomeModStyle_HmsStyleMobaTeamRoom,
        PB3PHomeModStyle_HmsStyleMobaTeamRoomList,
        PB3PHomeModStyle_HmsStylePlayerSlideSupportJumpMore,
        PB3PHomeModStyle_HmsStyleRoomSlideSupportJumpMore,
        PB3PHomeModStyle_HmsStyleCpinfo,
        PB3PHomeModStyle_HmsStyleSingleLive2,
        PB3PHomeModStyle_HmsStyleSmallActivityRoom,
        PB3PHomeModStyle_HmsStyleBannerIrregular5P,
        PB3PHomeModStyle_HmsStyleRoomHotList,
        PB3PHomeModStyle_HmsStyleNoData,
        PB3PHomeModStyle_HmsStyleConsortiaPkrank,
        PB3PHomeModStyle_HmsStyleCpinfo5P,
        PB3PHomeModStyle_HmsStyleRoomListLongPicIcon,
        PB3PHomeModStyle_HmsStyleRoomListSquarePicIcon,
        PB3PHomeModStyle_HmsStyleCompositeSearchRecord,
        PB3PHomeModStyle_HmsStyleHotPointScroll,
        PB3PHomeModStyle_HmsStyleHotPointList,
        PB3PHomeModStyle_HmsStyleCpplayer,
        PB3PHomeModStyle_HmsStyleCpblindBox,
        PB3PHomeModStyle_HmsStyleRoom2P,
        PB3PHomeModStyle_HmsStyleOxygenCarNormalList,
        PB3PHomeModStyle_HmsStyleOxygenCarScrollList,
        PB3PHomeModStyle_HmsStyleBfgift,
        PB3PHomeModStyle_HmsStyleRoomNestedList,
        PB3PHomeModStyle_HmsStyleNestedBanner,
        PB3PHomeModStyle_HmsStyleVideoCard,
        PB3PHomeModStyle_HmsStyleVideoList,
        PB3PHomeModStyle_HmsStyleRankBigImage,
        PB3PHomeModStyle_HmsStyleRouter2P,
        PB3PHomeModStyle_HmsStyleRouter3P,
        PB3PHomeModStyle_HmsStyleBubble,
        PB3PHomeModStyle_HmsStyleOrderList,
        PB3PHomeModStyle_HmsStyleBannerMatrix44,
    };
    static const char *extraTextFormatInfo = "n\000c\211\000\001c\213\203\000\002c\213\203\000\003c\213\000\004c\220\000\005c\215\000\006c\217\000\007c\215\000\010c\220\000\tc\213C\000\nc\213E\000\013c\213C\000\014c\206b\006\000\rc\206b\005\000\016c\206b\t\000\017c\221\000\020c\220\000\021c\222C\000\022c\217\000\023c\213\000\024c\215\000\025c\215\000\026c\220\000\027c\213E\000\030c\217\000\031c\215E\000\032c\224\000\033c\222\000\034c\224\000\035c\221\000\036c\225G\000\037c\230\000 c\227\000!c\227\000\"c\234\000#c\232\000$c\237\000%c\230\000&c\215\000\'c\215\000(c\222\000)c\222\000*c\224\000+c\206b\n\000,c\206b\t\000-c\216\000.c\221\000/c\230\0000c\226\0001c\222\0002c\224\0003c\216\0004c\215\0005c\237\0006c\223\0007c\221\0008c\221\0009c\221\000:c\225\000;c\224\000<c\223\000=c\227\000>c\226\000?c\222\000@c\237\001\000Ac\237\004\000Bc\237\001\000Cc\237\004\000Dc\230\000Ec\223\000Fc\226\000Gc\224\000Hc\225\000Ic\216\000Jc\215\000Kc\221\000Lc\217\000Mc\221\000Nc\225\000Oc\237\000Pc\235\000Qc\206b\003\000Rc\220\000Sc\226\000Tc\226\000Uc\220\000Vc\213\000Wc\217b\003\000Xc\206b\005\000Yc\230\000Zc\232\000[c\232\000\\c\223\000]c\221\000^c\206b\005\000_c\206b\007\000`c\213\000ac\230\000bc\230\000cc\206b\003\000dc\223\000ec\221\000fc\216\000gc\216\000hc\221\000ic\215\000jc\215\000kc\213\000lc\216\000mc\223\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3PHomeModStyle)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3PHomeModStyle_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3PHomeModStyle_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3PHomeModStyle_HmsStyleZero:
    case PB3PHomeModStyle_HmsStyleBanner001:
    case PB3PHomeModStyle_HmsStyleBanner002:
    case PB3PHomeModStyle_HmsStyleSubNav:
    case PB3PHomeModStyle_HmsStylePlayerFalls:
    case PB3PHomeModStyle_HmsStylePlayer3P:
    case PB3PHomeModStyle_HmsStylePlayerList:
    case PB3PHomeModStyle_HmsStyleRoomList:
    case PB3PHomeModStyle_HmsStyleRoomListSex:
    case PB3PHomeModStyle_HmsStyleRoom3Pbig:
    case PB3PHomeModStyle_HmsStyleRoom3Psmall:
    case PB3PHomeModStyle_HmsStyleRoom2Pbig:
    case PB3PHomeModStyle_HmsStyleBfbarrage:
    case PB3PHomeModStyle_HmsStyleBfscroll:
    case PB3PHomeModStyle_HmsStyleTjcollection:
    case PB3PHomeModStyle_HmsStyleMyCollection:
    case PB3PHomeModStyle_HmsStyleMyFootPrint:
    case PB3PHomeModStyle_HmsStyleOrderPlayer2Pbig:
    case PB3PHomeModStyle_HmsStyleBannerList:
    case PB3PHomeModStyle_HmsStyleRouter:
    case PB3PHomeModStyle_HmsStyleActivity:
    case PB3PHomeModStyle_HmsStyleRankList:
    case PB3PHomeModStyle_HmsStyleRouterSmall:
    case PB3PHomeModStyle_HmsStyleRoom2Psmall:
    case PB3PHomeModStyle_HmsStyleNearByList:
    case PB3PHomeModStyle_HmsStyleNearBy3Psmall:
    case PB3PHomeModStyle_HmsStylePlayerInsertTop:
    case PB3PHomeModStyle_HmsStyleOrderPlayer3P:
    case PB3PHomeModStyle_HmsStyleNearByWithAlbum:
    case PB3PHomeModStyle_HmsStyleCommunityTag:
    case PB3PHomeModStyle_HmsStyleCommunityGroup3PbigHead:
    case PB3PHomeModStyle_HmsStyleCommunityGroupSlide:
    case PB3PHomeModStyle_HmsStyleCommunityGroupList:
    case PB3PHomeModStyle_HmsStyleCommunityTrendList:
    case PB3PHomeModStyle_HmsStyleCommunityGroupTrendList:
    case PB3PHomeModStyle_HmsStyleCommunityTrendPublish:
    case PB3PHomeModStyle_HmsStyleCommunityGroupSlideBigHead:
    case PB3PHomeModStyle_HmsStyleBannerMatrix24Slide:
    case PB3PHomeModStyle_HmsStyleBanner3P:
    case PB3PHomeModStyle_HmsStyleBanner2P:
    case PB3PHomeModStyle_HmsStyleRoomListSlide:
    case PB3PHomeModStyle_HmsStyleNearByBigCard:
    case PB3PHomeModStyle_HmsStylePlayerSoundCard:
    case PB3PHomeModStyle_HmsStyleBfbarrageGame:
    case PB3PHomeModStyle_HmsStyleBfscrollGame:
    case PB3PHomeModStyle_HmsStyleRoomLarge:
    case PB3PHomeModStyle_HmsStyleGameRoomList:
    case PB3PHomeModStyle_HmsStylePlayerSoundCardList:
    case PB3PHomeModStyle_HmsStyleShowOrderRoomList:
    case PB3PHomeModStyle_HmsStyleRoomRadioList:
    case PB3PHomeModStyle_HmsStyleBannerAverage3P:
    case PB3PHomeModStyle_HmsStyleOrderRank:
    case PB3PHomeModStyle_HmsStyleMatching:
    case PB3PHomeModStyle_HmsStyleCommunityGroupTrendHotList:
    case PB3PHomeModStyle_HmsStyleSearchRoomList:
    case PB3PHomeModStyle_HmsStyleSearchBanner:
    case PB3PHomeModStyle_HmsStyleSearchModule:
    case PB3PHomeModStyle_HmsStyleSearchRecord:
    case PB3PHomeModStyle_HmsStyleSearchRecordRoom:
    case PB3PHomeModStyle_HmsStyleGameRoomListNew:
    case PB3PHomeModStyle_HmsStyleGamePlayerList:
    case PB3PHomeModStyle_HmsStyleGamePlayerListOpen:
    case PB3PHomeModStyle_HmsStylePersonalRecommend:
    case PB3PHomeModStyle_HmsStyleRoomRecommend:
    case PB3PHomeModStyle_HmsStyleLeaveRoomRecommendRowCircle:
    case PB3PHomeModStyle_HmsStyleLeaveRoomRecommendColumnCircle:
    case PB3PHomeModStyle_HmsStyleLeaveRoomRecommendRowSquare:
    case PB3PHomeModStyle_HmsStyleLeaveRoomRecommendColumnSquare:
    case PB3PHomeModStyle_HmsStyleBannerMatrix25Slide:
    case PB3PHomeModStyle_HmsStyleBannerMatrix15:
    case PB3PHomeModStyle_HmsStyleBannerIrregular4P:
    case PB3PHomeModStyle_HmsStyleFriendRecommend:
    case PB3PHomeModStyle_HmsStylePublishHeadlines:
    case PB3PHomeModStyle_HmsStyleTopWealth:
    case PB3PHomeModStyle_HmsStyleTopCharm:
    case PB3PHomeModStyle_HmsStyleNobilityUser:
    case PB3PHomeModStyle_HmsStyleGameGangUp:
    case PB3PHomeModStyle_HmsStyleMobaTeamRoom:
    case PB3PHomeModStyle_HmsStyleMobaTeamRoomList:
    case PB3PHomeModStyle_HmsStylePlayerSlideSupportJumpMore:
    case PB3PHomeModStyle_HmsStyleRoomSlideSupportJumpMore:
    case PB3PHomeModStyle_HmsStyleCpinfo:
    case PB3PHomeModStyle_HmsStyleSingleLive2:
    case PB3PHomeModStyle_HmsStyleSmallActivityRoom:
    case PB3PHomeModStyle_HmsStyleBannerIrregular5P:
    case PB3PHomeModStyle_HmsStyleRoomHotList:
    case PB3PHomeModStyle_HmsStyleNoData:
    case PB3PHomeModStyle_HmsStyleConsortiaPkrank:
    case PB3PHomeModStyle_HmsStyleCpinfo5P:
    case PB3PHomeModStyle_HmsStyleRoomListLongPicIcon:
    case PB3PHomeModStyle_HmsStyleRoomListSquarePicIcon:
    case PB3PHomeModStyle_HmsStyleCompositeSearchRecord:
    case PB3PHomeModStyle_HmsStyleHotPointScroll:
    case PB3PHomeModStyle_HmsStyleHotPointList:
    case PB3PHomeModStyle_HmsStyleCpplayer:
    case PB3PHomeModStyle_HmsStyleCpblindBox:
    case PB3PHomeModStyle_HmsStyleRoom2P:
    case PB3PHomeModStyle_HmsStyleOxygenCarNormalList:
    case PB3PHomeModStyle_HmsStyleOxygenCarScrollList:
    case PB3PHomeModStyle_HmsStyleBfgift:
    case PB3PHomeModStyle_HmsStyleRoomNestedList:
    case PB3PHomeModStyle_HmsStyleNestedBanner:
    case PB3PHomeModStyle_HmsStyleVideoCard:
    case PB3PHomeModStyle_HmsStyleVideoList:
    case PB3PHomeModStyle_HmsStyleRankBigImage:
    case PB3PHomeModStyle_HmsStyleRouter2P:
    case PB3PHomeModStyle_HmsStyleRouter3P:
    case PB3PHomeModStyle_HmsStyleBubble:
    case PB3PHomeModStyle_HmsStyleOrderList:
    case PB3PHomeModStyle_HmsStyleBannerMatrix44:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3PHomeMoreRule

GPBEnumDescriptor *PB3PHomeMoreRule_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "HmrRuleNone\000HmrRuleSubPage\000HmrRuleNextPa"
        "ge\000HmrRuleRefre\000HmrRuleFole\000HmrRuleClean"
        "\000HmrRuleModClassify\000HmrRuleModBcFriend\000H"
        "mrRuleModMyZone\000HmrRuleModRecommend\000HmrR"
        "uleModRoute\000HmrRuleModBubble\000HmrRuleSubP"
        "ageGame\000";
    static const int32_t values[] = {
        PB3PHomeMoreRule_HmrRuleNone,
        PB3PHomeMoreRule_HmrRuleSubPage,
        PB3PHomeMoreRule_HmrRuleNextPage,
        PB3PHomeMoreRule_HmrRuleRefre,
        PB3PHomeMoreRule_HmrRuleFole,
        PB3PHomeMoreRule_HmrRuleClean,
        PB3PHomeMoreRule_HmrRuleModClassify,
        PB3PHomeMoreRule_HmrRuleModBcFriend,
        PB3PHomeMoreRule_HmrRuleModMyZone,
        PB3PHomeMoreRule_HmrRuleModRecommend,
        PB3PHomeMoreRule_HmrRuleModRoute,
        PB3PHomeMoreRule_HmrRuleModBubble,
        PB3PHomeMoreRule_HmrRuleSubPageGame,
    };
    static const char *extraTextFormatInfo = "\r\000c\210\000\001c\213\000\002c\214\000\003c\211\000\004c\210\000\005c\211\000\006c\217\000\007c\217\000\010c\215\000\tc\220\000\nc\214\000\013c\215\000\014c\217\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3PHomeMoreRule)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3PHomeMoreRule_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3PHomeMoreRule_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3PHomeMoreRule_HmrRuleNone:
    case PB3PHomeMoreRule_HmrRuleSubPage:
    case PB3PHomeMoreRule_HmrRuleNextPage:
    case PB3PHomeMoreRule_HmrRuleRefre:
    case PB3PHomeMoreRule_HmrRuleFole:
    case PB3PHomeMoreRule_HmrRuleClean:
    case PB3PHomeMoreRule_HmrRuleModClassify:
    case PB3PHomeMoreRule_HmrRuleModBcFriend:
    case PB3PHomeMoreRule_HmrRuleModMyZone:
    case PB3PHomeMoreRule_HmrRuleModRecommend:
    case PB3PHomeMoreRule_HmrRuleModRoute:
    case PB3PHomeMoreRule_HmrRuleModBubble:
    case PB3PHomeMoreRule_HmrRuleSubPageGame:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3PHomeShowStatus

GPBEnumDescriptor *PB3PHomeShowStatus_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "HssShowNone\000HssShowNormal\000HssShowFole\000";
    static const int32_t values[] = {
        PB3PHomeShowStatus_HssShowNone,
        PB3PHomeShowStatus_HssShowNormal,
        PB3PHomeShowStatus_HssShowFole,
    };
    static const char *extraTextFormatInfo = "\003\000c\210\000\001c\212\000\002c\210\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3PHomeShowStatus)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3PHomeShowStatus_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3PHomeShowStatus_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3PHomeShowStatus_HssShowNone:
    case PB3PHomeShowStatus_HssShowNormal:
    case PB3PHomeShowStatus_HssShowFole:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3PHomeDataType

GPBEnumDescriptor *PB3PHomeDataType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "HdtDataTypeNone\000HdtDataTypeRoom\000HdtDataT"
        "ypePlayer\000HdtDataTypeBanner\000HdtDataTypeS"
        "ubNav\000HdtDataTypeBcFriend\000HdtDataTypeRou"
        "ter\000HdtDataTypeRank\000HdtDataTypeActivity\000"
        "HdtDateTypeCommunityTag\000HdtDateTypeCommu"
        "nityGroup\000HdtDateTypeCommunityTrend\000HdtD"
        "ateTypeCommunityGroupDetail\000HdtDataTypeB"
        "ubble\000HdtDataTypeBcFriendGame\000HdtDateTyp"
        "eRadioStation\000HdtDataTypeBcFriendGameGan"
        "gUp\000HdtDataTypeCpinfo\000HdtDataTypeProgram"
        "Show\000HdtDataTypeNoData\000HdtDataTypeCpinfo"
        "Fish\000HdtDataTypeHotPoint\000HdtDataTypeBcGi"
        "ft\000";
    static const int32_t values[] = {
        PB3PHomeDataType_HdtDataTypeNone,
        PB3PHomeDataType_HdtDataTypeRoom,
        PB3PHomeDataType_HdtDataTypePlayer,
        PB3PHomeDataType_HdtDataTypeBanner,
        PB3PHomeDataType_HdtDataTypeSubNav,
        PB3PHomeDataType_HdtDataTypeBcFriend,
        PB3PHomeDataType_HdtDataTypeRouter,
        PB3PHomeDataType_HdtDataTypeRank,
        PB3PHomeDataType_HdtDataTypeActivity,
        PB3PHomeDataType_HdtDateTypeCommunityTag,
        PB3PHomeDataType_HdtDateTypeCommunityGroup,
        PB3PHomeDataType_HdtDateTypeCommunityTrend,
        PB3PHomeDataType_HdtDateTypeCommunityGroupDetail,
        PB3PHomeDataType_HdtDataTypeBubble,
        PB3PHomeDataType_HdtDataTypeBcFriendGame,
        PB3PHomeDataType_HdtDateTypeRadioStation,
        PB3PHomeDataType_HdtDataTypeBcFriendGameGangUp,
        PB3PHomeDataType_HdtDataTypeCpinfo,
        PB3PHomeDataType_HdtDataTypeProgramShow,
        PB3PHomeDataType_HdtDataTypeNoData,
        PB3PHomeDataType_HdtDataTypeCpinfoFish,
        PB3PHomeDataType_HdtDataTypeHotPoint,
        PB3PHomeDataType_HdtDataTypeBcGift,
    };
    static const char *extraTextFormatInfo = "\027\000c\214\000\001c\214\000\002c\216\000\003c\216\000\004c\216\000\005c\220\000\006c\216\000\007c\214\000\010c\220\000\tc\224\000\nc\226\000\013c\226\000\014c\234\000\rc\216\000\016c\224\000\017c\224\000\020c\232\000\021c\211b\003\000\022c\223\000\023c\216\000\024c\211b\007\000\025c\220\000\026c\216\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3PHomeDataType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3PHomeDataType_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3PHomeDataType_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3PHomeDataType_HdtDataTypeNone:
    case PB3PHomeDataType_HdtDataTypeRoom:
    case PB3PHomeDataType_HdtDataTypePlayer:
    case PB3PHomeDataType_HdtDataTypeBanner:
    case PB3PHomeDataType_HdtDataTypeSubNav:
    case PB3PHomeDataType_HdtDataTypeBcFriend:
    case PB3PHomeDataType_HdtDataTypeRouter:
    case PB3PHomeDataType_HdtDataTypeRank:
    case PB3PHomeDataType_HdtDataTypeActivity:
    case PB3PHomeDataType_HdtDateTypeCommunityTag:
    case PB3PHomeDataType_HdtDateTypeCommunityGroup:
    case PB3PHomeDataType_HdtDateTypeCommunityTrend:
    case PB3PHomeDataType_HdtDateTypeCommunityGroupDetail:
    case PB3PHomeDataType_HdtDataTypeBubble:
    case PB3PHomeDataType_HdtDataTypeBcFriendGame:
    case PB3PHomeDataType_HdtDateTypeRadioStation:
    case PB3PHomeDataType_HdtDataTypeBcFriendGameGangUp:
    case PB3PHomeDataType_HdtDataTypeCpinfo:
    case PB3PHomeDataType_HdtDataTypeProgramShow:
    case PB3PHomeDataType_HdtDataTypeNoData:
    case PB3PHomeDataType_HdtDataTypeCpinfoFish:
    case PB3PHomeDataType_HdtDataTypeHotPoint:
    case PB3PHomeDataType_HdtDataTypeBcGift:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3PHomeRouteType

GPBEnumDescriptor *PB3PHomeRouteType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "HdtRouteTypeNone\000HdtRouteTypeId\000HdtRoute"
        "TypeSubPage\000HdtRouteTypeDefine\000HdtRouteT"
        "ypeMiwoZero\000HdtRouteTypeEnterRoom\000HdtRou"
        "teTypePlayerCard\000HdtRouteTypeImchat\000HdtR"
        "outeTypeMiwoOne\000HdtRouteTypeSkill\000";
    static const int32_t values[] = {
        PB3PHomeRouteType_HdtRouteTypeNone,
        PB3PHomeRouteType_HdtRouteTypeId,
        PB3PHomeRouteType_HdtRouteTypeSubPage,
        PB3PHomeRouteType_HdtRouteTypeDefine,
        PB3PHomeRouteType_HdtRouteTypeMiwoZero,
        PB3PHomeRouteType_HdtRouteTypeEnterRoom,
        PB3PHomeRouteType_HdtRouteTypePlayerCard,
        PB3PHomeRouteType_HdtRouteTypeImchat,
        PB3PHomeRouteType_HdtRouteTypeMiwoOne,
        PB3PHomeRouteType_HdtRouteTypeSkill,
    };
    static const char *extraTextFormatInfo = "\n\000c\215\000\001c\212A\000\002c\220\000\003c\217\000\004c\221\000\005c\222\000\006c\223\000\007c\212b\003\000\010c\220\000\tc\216\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3PHomeRouteType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3PHomeRouteType_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3PHomeRouteType_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3PHomeRouteType_HdtRouteTypeNone:
    case PB3PHomeRouteType_HdtRouteTypeId:
    case PB3PHomeRouteType_HdtRouteTypeSubPage:
    case PB3PHomeRouteType_HdtRouteTypeDefine:
    case PB3PHomeRouteType_HdtRouteTypeMiwoZero:
    case PB3PHomeRouteType_HdtRouteTypeEnterRoom:
    case PB3PHomeRouteType_HdtRouteTypePlayerCard:
    case PB3PHomeRouteType_HdtRouteTypeImchat:
    case PB3PHomeRouteType_HdtRouteTypeMiwoOne:
    case PB3PHomeRouteType_HdtRouteTypeSkill:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3PHomeClassify

GPBEnumDescriptor *PB3PHomeClassify_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "HmcClassifyNone\000HmcClassifySexAll\000HmcCla"
        "ssifyAllMale\000HmcClassifyAllFemale\000";
    static const int32_t values[] = {
        PB3PHomeClassify_HmcClassifyNone,
        PB3PHomeClassify_HmcClassifySexAll,
        PB3PHomeClassify_HmcClassifyAllMale,
        PB3PHomeClassify_HmcClassifyAllFemale,
    };
    static const char *extraTextFormatInfo = "\004\000c\214\000\001c\216\000\002c\217\000\003c\221\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3PHomeClassify)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3PHomeClassify_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3PHomeClassify_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3PHomeClassify_HmcClassifyNone:
    case PB3PHomeClassify_HmcClassifySexAll:
    case PB3PHomeClassify_HmcClassifyAllMale:
    case PB3PHomeClassify_HmcClassifyAllFemale:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3PHomeExtraType

GPBEnumDescriptor *PB3PHomeExtraType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "HmcExtraTypeNone\000HmcExtraTypeAll\000HmcExtr"
        "aTypePeople\000HmcExtraTypeRoom\000";
    static const int32_t values[] = {
        PB3PHomeExtraType_HmcExtraTypeNone,
        PB3PHomeExtraType_HmcExtraTypeAll,
        PB3PHomeExtraType_HmcExtraTypePeople,
        PB3PHomeExtraType_HmcExtraTypeRoom,
    };
    static const char *extraTextFormatInfo = "\004\000c\215\000\001c\214\000\002c\217\000\003c\215\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3PHomeExtraType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3PHomeExtraType_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3PHomeExtraType_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3PHomeExtraType_HmcExtraTypeNone:
    case PB3PHomeExtraType_HmcExtraTypeAll:
    case PB3PHomeExtraType_HmcExtraTypePeople:
    case PB3PHomeExtraType_HmcExtraTypeRoom:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3PHomeNavStyle

GPBEnumDescriptor *PB3PHomeNavStyle_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "HmcNavStyleNone\000HmcNavStyleNearBy\000HmcNav"
        "StyleHotPoint\000HmcNavStyleGenderPattern\000";
    static const int32_t values[] = {
        PB3PHomeNavStyle_HmcNavStyleNone,
        PB3PHomeNavStyle_HmcNavStyleNearBy,
        PB3PHomeNavStyle_HmcNavStyleHotPoint,
        PB3PHomeNavStyle_HmcNavStyleGenderPattern,
    };
    static const char *extraTextFormatInfo = "\004\000c\214\000\001c\216\000\002c\220\000\003c\225\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3PHomeNavStyle)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3PHomeNavStyle_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3PHomeNavStyle_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3PHomeNavStyle_HmcNavStyleNone:
    case PB3PHomeNavStyle_HmcNavStyleNearBy:
    case PB3PHomeNavStyle_HmcNavStyleHotPoint:
    case PB3PHomeNavStyle_HmcNavStyleGenderPattern:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3PluginRankType

GPBEnumDescriptor *PB3PluginRankType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "PrtZero\000PrtCharmDay\000PrtCharmWeek\000PrtChar"
        "mAll\000PrtWealthDay\000PrtWealthWeek\000PrtWealt"
        "hAll\000PrtGiftAll\000PrtWeekStar\000PrtCharmYear"
        "\000PrtWealthYear\000PrtOrderRank\000PrtGirlWealt"
        "hHour\000PrtManWealthHour\000PrtGirlCharmHour\000"
        "PrtManCharmHour\000PrtConsortiaPkweek\000PrtCo"
        "nsortiaPkhour\000";
    static const int32_t values[] = {
        PB3PluginRankType_PrtZero,
        PB3PluginRankType_PrtCharmDay,
        PB3PluginRankType_PrtCharmWeek,
        PB3PluginRankType_PrtCharmAll,
        PB3PluginRankType_PrtWealthDay,
        PB3PluginRankType_PrtWealthWeek,
        PB3PluginRankType_PrtWealthAll,
        PB3PluginRankType_PrtGiftAll,
        PB3PluginRankType_PrtWeekStar,
        PB3PluginRankType_PrtCharmYear,
        PB3PluginRankType_PrtWealthYear,
        PB3PluginRankType_PrtOrderRank,
        PB3PluginRankType_PrtGirlWealthHour,
        PB3PluginRankType_PrtManWealthHour,
        PB3PluginRankType_PrtGirlCharmHour,
        PB3PluginRankType_PrtManCharmHour,
        PB3PluginRankType_PrtConsortiaPkweek,
        PB3PluginRankType_PrtConsortiaPkhour,
    };
    static const char *extraTextFormatInfo = "\021\001c\210\000\002c\211\000\003c\210\000\004c\211\000\005c\212\000\006c\211\000\007c\207\000\010c\210\000\tc\211\000\nc\212\000\013c\211\000\014c\216\000\rc\215\000\016c\215\000\017c\214\000\020c\212b\003\000\021c\212b\003\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3PluginRankType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3PluginRankType_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3PluginRankType_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3PluginRankType_PrtZero:
    case PB3PluginRankType_PrtCharmDay:
    case PB3PluginRankType_PrtCharmWeek:
    case PB3PluginRankType_PrtCharmAll:
    case PB3PluginRankType_PrtWealthDay:
    case PB3PluginRankType_PrtWealthWeek:
    case PB3PluginRankType_PrtWealthAll:
    case PB3PluginRankType_PrtGiftAll:
    case PB3PluginRankType_PrtWeekStar:
    case PB3PluginRankType_PrtCharmYear:
    case PB3PluginRankType_PrtWealthYear:
    case PB3PluginRankType_PrtOrderRank:
    case PB3PluginRankType_PrtGirlWealthHour:
    case PB3PluginRankType_PrtManWealthHour:
    case PB3PluginRankType_PrtGirlCharmHour:
    case PB3PluginRankType_PrtManCharmHour:
    case PB3PluginRankType_PrtConsortiaPkweek:
    case PB3PluginRankType_PrtConsortiaPkhour:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3MatchDirectType

GPBEnumDescriptor *PB3MatchDirectType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "MatchDirectTypeDefault\000MatchDirectTypeRo"
        "om\000MatchDirectTypeChat\000MatchDirectTypeMo"
        "d\000MatchDirectTypeGame\000MatchDirectTypeCon"
        "tinue\000MatchDirectTypeNotice\000MatchDirectT"
        "ypeFollow\000MatchDirectTypeLink\000";
    static const int32_t values[] = {
        PB3MatchDirectType_MatchDirectTypeDefault,
        PB3MatchDirectType_MatchDirectTypeRoom,
        PB3MatchDirectType_MatchDirectTypeChat,
        PB3MatchDirectType_MatchDirectTypeMod,
        PB3MatchDirectType_MatchDirectTypeGame,
        PB3MatchDirectType_MatchDirectTypeContinue,
        PB3MatchDirectType_MatchDirectTypeNotice,
        PB3MatchDirectType_MatchDirectTypeFollow,
        PB3MatchDirectType_MatchDirectTypeLink,
    };
    static const char *extraTextFormatInfo = "\t\000\026\000\001\023\000\002\023\000\003\022\000\004\023\000\005\027\000\006\025\000\007\025\000\010\023\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3MatchDirectType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3MatchDirectType_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3MatchDirectType_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3MatchDirectType_MatchDirectTypeDefault:
    case PB3MatchDirectType_MatchDirectTypeRoom:
    case PB3MatchDirectType_MatchDirectTypeChat:
    case PB3MatchDirectType_MatchDirectTypeMod:
    case PB3MatchDirectType_MatchDirectTypeGame:
    case PB3MatchDirectType_MatchDirectTypeContinue:
    case PB3MatchDirectType_MatchDirectTypeNotice:
    case PB3MatchDirectType_MatchDirectTypeFollow:
    case PB3MatchDirectType_MatchDirectTypeLink:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3MatchStatusType

GPBEnumDescriptor *PB3MatchStatusType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "MatchStatusTypeDefault\000MatchStatusTypeIn"
        "g\000MatchStatusCancel\000";
    static const int32_t values[] = {
        PB3MatchStatusType_MatchStatusTypeDefault,
        PB3MatchStatusType_MatchStatusTypeIng,
        PB3MatchStatusType_MatchStatusCancel,
    };
    static const char *extraTextFormatInfo = "\003\000\026\000\001\022\000\002\021\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3MatchStatusType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3MatchStatusType_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3MatchStatusType_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3MatchStatusType_MatchStatusTypeDefault:
    case PB3MatchStatusType_MatchStatusTypeIng:
    case PB3MatchStatusType_MatchStatusCancel:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3QuickGamePreType

GPBEnumDescriptor *PB3QuickGamePreType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "QuickGamePreTypeDefault\000QuickGamePreType"
        "Ing\000";
    static const int32_t values[] = {
        PB3QuickGamePreType_QuickGamePreTypeDefault,
        PB3QuickGamePreType_QuickGamePreTypeIng,
    };
    static const char *extraTextFormatInfo = "\002\000\027\000\001\023\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3QuickGamePreType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3QuickGamePreType_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3QuickGamePreType_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3QuickGamePreType_QuickGamePreTypeDefault:
    case PB3QuickGamePreType_QuickGamePreTypeIng:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3PHomeEntryRoomExtendKey

GPBEnumDescriptor *PB3PHomeEntryRoomExtendKey_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "PerekNone\000PerekGameIcon\000PerekGameBgURL\000P"
        "erekGameNameBgColorStart\000PerekGameNameBg"
        "ColorEnd\000PerekGameName\000";
    static const int32_t values[] = {
        PB3PHomeEntryRoomExtendKey_PerekNone,
        PB3PHomeEntryRoomExtendKey_PerekGameIcon,
        PB3PHomeEntryRoomExtendKey_PerekGameBgURL,
        PB3PHomeEntryRoomExtendKey_PerekGameNameBgColorStart,
        PB3PHomeEntryRoomExtendKey_PerekGameNameBgColorEnd,
        PB3PHomeEntryRoomExtendKey_PerekGameName,
    };
    static const char *extraTextFormatInfo = "\001\002e\344\342\203\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3PHomeEntryRoomExtendKey)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3PHomeEntryRoomExtendKey_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3PHomeEntryRoomExtendKey_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3PHomeEntryRoomExtendKey_PerekNone:
    case PB3PHomeEntryRoomExtendKey_PerekGameIcon:
    case PB3PHomeEntryRoomExtendKey_PerekGameBgURL:
    case PB3PHomeEntryRoomExtendKey_PerekGameNameBgColorStart:
    case PB3PHomeEntryRoomExtendKey_PerekGameNameBgColorEnd:
    case PB3PHomeEntryRoomExtendKey_PerekGameName:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3PHomeFlowSupportType

GPBEnumDescriptor *PB3PHomeFlowSupportType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "PfstNone\000PfstNewTing\000PfstConsortiaPkWeek"
        "\000PfstConsortiaPkHour\000";
    static const int32_t values[] = {
        PB3PHomeFlowSupportType_PfstNone,
        PB3PHomeFlowSupportType_PfstNewTing,
        PB3PHomeFlowSupportType_PfstConsortiaPkWeek,
        PB3PHomeFlowSupportType_PfstConsortiaPkHour,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3PHomeFlowSupportType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3PHomeFlowSupportType_IsValidValue];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3PHomeFlowSupportType_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3PHomeFlowSupportType_PfstNone:
    case PB3PHomeFlowSupportType_PfstNewTing:
    case PB3PHomeFlowSupportType_PfstConsortiaPkWeek:
    case PB3PHomeFlowSupportType_PfstConsortiaPkHour:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3PHomeEntryRoomStatus

GPBEnumDescriptor *PB3PHomeEntryRoomStatus_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "PhersZero\000PhersPk\000PhersBarragegame\000";
    static const int32_t values[] = {
        PB3PHomeEntryRoomStatus_PhersZero,
        PB3PHomeEntryRoomStatus_PhersPk,
        PB3PHomeEntryRoomStatus_PhersBarragegame,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3PHomeEntryRoomStatus)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3PHomeEntryRoomStatus_IsValidValue];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3PHomeEntryRoomStatus_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3PHomeEntryRoomStatus_PhersZero:
    case PB3PHomeEntryRoomStatus_PhersPk:
    case PB3PHomeEntryRoomStatus_PhersBarragegame:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3PGameRoomStatusTypeExt

GPBEnumDescriptor *PB3PGameRoomStatusTypeExt_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "ExtPgrstNone\000ExtPgrstWait\000ExtPgrstPlayin"
        "g\000";
    static const int32_t values[] = {
        PB3PGameRoomStatusTypeExt_ExtPgrstNone,
        PB3PGameRoomStatusTypeExt_ExtPgrstWait,
        PB3PGameRoomStatusTypeExt_ExtPgrstPlaying,
    };
    static const char *extraTextFormatInfo = "\003\000c\345\204\000\001c\345\204\000\002c\345\207\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3PGameRoomStatusTypeExt)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3PGameRoomStatusTypeExt_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3PGameRoomStatusTypeExt_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3PGameRoomStatusTypeExt_ExtPgrstNone:
    case PB3PGameRoomStatusTypeExt_ExtPgrstWait:
    case PB3PGameRoomStatusTypeExt_ExtPgrstPlaying:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3PGamePlayerStatusTypeExt

GPBEnumDescriptor *PB3PGamePlayerStatusTypeExt_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "ExtPgpstNone\000ExtPgpstUnReady\000ExtPgpstRea"
        "dy\000ExtPgpstStart\000";
    static const int32_t values[] = {
        PB3PGamePlayerStatusTypeExt_ExtPgpstNone,
        PB3PGamePlayerStatusTypeExt_ExtPgpstUnReady,
        PB3PGamePlayerStatusTypeExt_ExtPgpstReady,
        PB3PGamePlayerStatusTypeExt_ExtPgpstStart,
    };
    static const char *extraTextFormatInfo = "\004\000c\345\204\000\001c\345\207\000\002c\345\205\000\003c\345\205\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3PGamePlayerStatusTypeExt)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3PGamePlayerStatusTypeExt_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3PGamePlayerStatusTypeExt_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3PGamePlayerStatusTypeExt_ExtPgpstNone:
    case PB3PGamePlayerStatusTypeExt_ExtPgpstUnReady:
    case PB3PGamePlayerStatusTypeExt_ExtPgpstReady:
    case PB3PGamePlayerStatusTypeExt_ExtPgpstStart:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3PHomeExtendKey

GPBEnumDescriptor *PB3PHomeExtendKey_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "PekNone\000PekGameBgBro\000PekGameFrameBro\000Pek"
        "GameFrameColor\000PekCarId\000PekGameBgBroPc\000";
    static const int32_t values[] = {
        PB3PHomeExtendKey_PekNone,
        PB3PHomeExtendKey_PekGameBgBro,
        PB3PHomeExtendKey_PekGameFrameBro,
        PB3PHomeExtendKey_PekGameFrameColor,
        PB3PHomeExtendKey_PekCarId,
        PB3PHomeExtendKey_PekGameBgBroPc,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3PHomeExtendKey)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3PHomeExtendKey_IsValidValue];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3PHomeExtendKey_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3PHomeExtendKey_PekNone:
    case PB3PHomeExtendKey_PekGameBgBro:
    case PB3PHomeExtendKey_PekGameFrameBro:
    case PB3PHomeExtendKey_PekGameFrameColor:
    case PB3PHomeExtendKey_PekCarId:
    case PB3PHomeExtendKey_PekGameBgBroPc:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3BF_RECORD_TYPE

GPBEnumDescriptor *PB3BF_RECORD_TYPE_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "BfrtNormal\000BfrtTiaoTiao\000BfrtWorldGift\000";
    static const int32_t values[] = {
        PB3BF_RECORD_TYPE_BfrtNormal,
        PB3BF_RECORD_TYPE_BfrtTiaoTiao,
        PB3BF_RECORD_TYPE_BfrtWorldGift,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3BF_RECORD_TYPE)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3BF_RECORD_TYPE_IsValidValue];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3BF_RECORD_TYPE_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3BF_RECORD_TYPE_BfrtNormal:
    case PB3BF_RECORD_TYPE_BfrtTiaoTiao:
    case PB3BF_RECORD_TYPE_BfrtWorldGift:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3BannerPosition

GPBEnumDescriptor *PB3BannerPosition_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "BpZero\000BpLeftTop\000BpRightTop\000BpLeftBottom"
        "\000BpRightBottom\000BpMiddleTop\000BpMiddleBotto"
        "m\000";
    static const int32_t values[] = {
        PB3BannerPosition_BpZero,
        PB3BannerPosition_BpLeftTop,
        PB3BannerPosition_BpRightTop,
        PB3BannerPosition_BpLeftBottom,
        PB3BannerPosition_BpRightBottom,
        PB3BannerPosition_BpMiddleTop,
        PB3BannerPosition_BpMiddleBottom,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3BannerPosition)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3BannerPosition_IsValidValue];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3BannerPosition_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3BannerPosition_BpZero:
    case PB3BannerPosition_BpLeftTop:
    case PB3BannerPosition_BpRightTop:
    case PB3BannerPosition_BpLeftBottom:
    case PB3BannerPosition_BpRightBottom:
    case PB3BannerPosition_BpMiddleTop:
    case PB3BannerPosition_BpMiddleBottom:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3HomeNavButtonType

GPBEnumDescriptor *PB3HomeNavButtonType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "HnbtNone\000HnbtRank\000HnbtMessage\000HnbtPerson"
        "a\000HnbtMiwo\000HnbtRoom\000HnbtOkami\000";
    static const int32_t values[] = {
        PB3HomeNavButtonType_HnbtNone,
        PB3HomeNavButtonType_HnbtRank,
        PB3HomeNavButtonType_HnbtMessage,
        PB3HomeNavButtonType_HnbtPersona,
        PB3HomeNavButtonType_HnbtMiwo,
        PB3HomeNavButtonType_HnbtRoom,
        PB3HomeNavButtonType_HnbtOkami,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3HomeNavButtonType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3HomeNavButtonType_IsValidValue];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3HomeNavButtonType_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3HomeNavButtonType_HnbtNone:
    case PB3HomeNavButtonType_HnbtRank:
    case PB3HomeNavButtonType_HnbtMessage:
    case PB3HomeNavButtonType_HnbtPersona:
    case PB3HomeNavButtonType_HnbtMiwo:
    case PB3HomeNavButtonType_HnbtRoom:
    case PB3HomeNavButtonType_HnbtOkami:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3HomeType

GPBEnumDescriptor *PB3HomeType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "HtIndex\000HtCommunity\000HtDiscovery\000HtSearch"
        "Id\000HtSearchRoom\000HtLeaveRoom\000HtIndex2\000HtC"
        "ompositeSearch\000";
    static const int32_t values[] = {
        PB3HomeType_HtIndex,
        PB3HomeType_HtCommunity,
        PB3HomeType_HtDiscovery,
        PB3HomeType_HtSearchId,
        PB3HomeType_HtSearchRoom,
        PB3HomeType_HtLeaveRoom,
        PB3HomeType_HtIndex2,
        PB3HomeType_HtCompositeSearch,
    };
    static const char *extraTextFormatInfo = "\010\000b\205\000\001b\211\000\002b\211\000\003b\206\202\000\004b\206\204\000\005b\205\204\000\006b\206\000\007b\217\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3HomeType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3HomeType_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3HomeType_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3HomeType_HtIndex:
    case PB3HomeType_HtCommunity:
    case PB3HomeType_HtDiscovery:
    case PB3HomeType_HtSearchId:
    case PB3HomeType_HtSearchRoom:
    case PB3HomeType_HtLeaveRoom:
    case PB3HomeType_HtIndex2:
    case PB3HomeType_HtCompositeSearch:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3ClearFootType

GPBEnumDescriptor *PB3ClearFootType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "CftNone\000CftCommunityGroup\000";
    static const int32_t values[] = {
        PB3ClearFootType_CftNone,
        PB3ClearFootType_CftCommunityGroup,
    };
    static const char *extraTextFormatInfo = "\002\000c\204\000\001c\216\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3ClearFootType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3ClearFootType_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3ClearFootType_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3ClearFootType_CftNone:
    case PB3ClearFootType_CftCommunityGroup:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3ExtraModType

GPBEnumDescriptor *PB3ExtraModType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "EmtNone\000EmtSearchPlayerBanner\000EmtSearchR"
        "oomBanner\000EmtRecentRoom\000EmtRadioStation\000"
        "EmtImNearby\000EmtBillEvaluateBanner\000EmtAct"
        "ivityDialogBanner\000EmtClanBanner\000EmtMiniP"
        "rogramRoom\000";
    static const int32_t values[] = {
        PB3ExtraModType_EmtNone,
        PB3ExtraModType_EmtSearchPlayerBanner,
        PB3ExtraModType_EmtSearchRoomBanner,
        PB3ExtraModType_EmtRecentRoom,
        PB3ExtraModType_EmtRadioStation,
        PB3ExtraModType_EmtImNearby,
        PB3ExtraModType_EmtBillEvaluateBanner,
        PB3ExtraModType_EmtActivityDialogBanner,
        PB3ExtraModType_EmtClanBanner,
        PB3ExtraModType_EmtMiniProgramRoom,
    };
    static const char *extraTextFormatInfo = "\001\006c\204\210\346\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3ExtraModType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3ExtraModType_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3ExtraModType_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3ExtraModType_EmtNone:
    case PB3ExtraModType_EmtSearchPlayerBanner:
    case PB3ExtraModType_EmtSearchRoomBanner:
    case PB3ExtraModType_EmtRecentRoom:
    case PB3ExtraModType_EmtRadioStation:
    case PB3ExtraModType_EmtImNearby:
    case PB3ExtraModType_EmtBillEvaluateBanner:
    case PB3ExtraModType_EmtActivityDialogBanner:
    case PB3ExtraModType_EmtClanBanner:
    case PB3ExtraModType_EmtMiniProgramRoom:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3PHomeMainTabImgType

GPBEnumDescriptor *PB3PHomeMainTabImgType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "PhomeMtitNone\000PhomeMtitNormal\000PhomeMtitL"
        "arge\000";
    static const int32_t values[] = {
        PB3PHomeMainTabImgType_PhomeMtitNone,
        PB3PHomeMainTabImgType_PhomeMtitNormal,
        PB3PHomeMainTabImgType_PhomeMtitLarge,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3PHomeMainTabImgType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3PHomeMainTabImgType_IsValidValue];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3PHomeMainTabImgType_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3PHomeMainTabImgType_PhomeMtitNone:
    case PB3PHomeMainTabImgType_PhomeMtitNormal:
    case PB3PHomeMainTabImgType_PhomeMtitLarge:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3TabType

GPBEnumDescriptor *PB3TabType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "TabTypeNone\000TabTypeEntertainment\000TabType"
        "RankingList\000TabTypeMine\000TabTypeCommunity"
        "\000TabTypeMessage\000TabTypeMediaPlayer\000TabTy"
        "peDiscovery\000TabTypeMatch\000TabTypeRoute\000Ta"
        "bTypeWipe\000TabTypeEntertainment2\000TabTypeC"
        "pcard\000";
    static const int32_t values[] = {
        PB3TabType_TabTypeNone,
        PB3TabType_TabTypeEntertainment,
        PB3TabType_TabTypeRankingList,
        PB3TabType_TabTypeMine,
        PB3TabType_TabTypeCommunity,
        PB3TabType_TabTypeMessage,
        PB3TabType_TabTypeMediaPlayer,
        PB3TabType_TabTypeDiscovery,
        PB3TabType_TabTypeMatch,
        PB3TabType_TabTypeRoute,
        PB3TabType_TabTypeWipe,
        PB3TabType_TabTypeEntertainment2,
        PB3TabType_TabTypeCpcard,
    };
    static const char *extraTextFormatInfo = "\r\000\007\204\000\001\007\215\000\002\007\213\000\003\007\204\000\004\007\211\000\005\007\207\000\006\007\213\000\007\007\211\000\010\007\205\000\t\007\205\000\n\007\204\000\013\007\216\000\014\007\343\003\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3TabType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3TabType_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3TabType_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3TabType_TabTypeNone:
    case PB3TabType_TabTypeEntertainment:
    case PB3TabType_TabTypeRankingList:
    case PB3TabType_TabTypeMine:
    case PB3TabType_TabTypeCommunity:
    case PB3TabType_TabTypeMessage:
    case PB3TabType_TabTypeMediaPlayer:
    case PB3TabType_TabTypeDiscovery:
    case PB3TabType_TabTypeMatch:
    case PB3TabType_TabTypeRoute:
    case PB3TabType_TabTypeWipe:
    case PB3TabType_TabTypeEntertainment2:
    case PB3TabType_TabTypeCpcard:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3MainTabHomeStyle

GPBEnumDescriptor *PB3MainTabHomeStyle_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "MthsStyleZero\000MthsStyleGenderPattern\000";
    static const int32_t values[] = {
        PB3MainTabHomeStyle_MthsStyleZero,
        PB3MainTabHomeStyle_MthsStyleGenderPattern,
    };
    static const char *extraTextFormatInfo = "\002\000d\211\000\001d\222\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3MainTabHomeStyle)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3MainTabHomeStyle_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3MainTabHomeStyle_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3MainTabHomeStyle_MthsStyleZero:
    case PB3MainTabHomeStyle_MthsStyleGenderPattern:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3FilterRule

GPBEnumDescriptor *PB3FilterRule_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "FrZero\000FrDifferentSex\000";
    static const int32_t values[] = {
        PB3FilterRule_FrZero,
        PB3FilterRule_FrDifferentSex,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3FilterRule)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3FilterRule_IsValidValue];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3FilterRule_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3FilterRule_FrZero:
    case PB3FilterRule_FrDifferentSex:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3PhomeRoomProgramShowDayType

GPBEnumDescriptor *PB3PhomeRoomProgramShowDayType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "PrpsdtNone\000PrpsdtToday\000PrpsdtTomorrow\000";
    static const int32_t values[] = {
        PB3PhomeRoomProgramShowDayType_PrpsdtNone,
        PB3PhomeRoomProgramShowDayType_PrpsdtToday,
        PB3PhomeRoomProgramShowDayType_PrpsdtTomorrow,
    };
    static const char *extraTextFormatInfo = "\003\000b\004\204\000\001b\004\205\000\002b\004\210\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3PhomeRoomProgramShowDayType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3PhomeRoomProgramShowDayType_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3PhomeRoomProgramShowDayType_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3PhomeRoomProgramShowDayType_PrpsdtNone:
    case PB3PhomeRoomProgramShowDayType_PrpsdtToday:
    case PB3PhomeRoomProgramShowDayType_PrpsdtTomorrow:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3UpdateHotPointType

GPBEnumDescriptor *PB3UpdateHotPointType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "UphptNone\000UphptAdd\000UphptRemove\000";
    static const int32_t values[] = {
        PB3UpdateHotPointType_UphptNone,
        PB3UpdateHotPointType_UphptAdd,
        PB3UpdateHotPointType_UphptRemove,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3UpdateHotPointType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3UpdateHotPointType_IsValidValue];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3UpdateHotPointType_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3UpdateHotPointType_UphptNone:
    case PB3UpdateHotPointType_UphptAdd:
    case PB3UpdateHotPointType_UphptRemove:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3GetPHomeEntryHotPointType

GPBEnumDescriptor *PB3GetPHomeEntryHotPointType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "GpehptNone\000GpehptList\000GpehptTotal\000";
    static const int32_t values[] = {
        PB3GetPHomeEntryHotPointType_GpehptNone,
        PB3GetPHomeEntryHotPointType_GpehptList,
        PB3GetPHomeEntryHotPointType_GpehptTotal,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3GetPHomeEntryHotPointType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3GetPHomeEntryHotPointType_IsValidValue];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3GetPHomeEntryHotPointType_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3GetPHomeEntryHotPointType_GpehptNone:
    case PB3GetPHomeEntryHotPointType_GpehptList:
    case PB3GetPHomeEntryHotPointType_GpehptTotal:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3HotHideType

GPBEnumDescriptor *PB3HotHideType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "HotHideTypeInvisible\000HotHideTypeVisible\000";
    static const int32_t values[] = {
        PB3HotHideType_HotHideTypeInvisible,
        PB3HotHideType_HotHideTypeVisible,
    };
    static const char *extraTextFormatInfo = "\002\000\013\351\000\001\013\347\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3HotHideType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3HotHideType_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3HotHideType_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3HotHideType_HotHideTypeInvisible:
    case PB3HotHideType_HotHideTypeVisible:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - PB3MatchDirectTypeGameData

@implementation PB3MatchDirectTypeGameData

@dynamic gameId;
@dynamic roomId;
@dynamic matchStatus;
@dynamic quickGamePre;

typedef struct PB3MatchDirectTypeGameData__storage_ {
  uint32_t _has_storage_[1];
  int32_t gameId;
  int32_t roomId;
  PB3MatchStatusType matchStatus;
  PB3QuickGamePreType quickGamePre;
} PB3MatchDirectTypeGameData__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "gameId",
        .dataTypeSpecific.className = NULL,
        .number = PB3MatchDirectTypeGameData_FieldNumber_GameId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3MatchDirectTypeGameData__storage_, gameId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "roomId",
        .dataTypeSpecific.className = NULL,
        .number = PB3MatchDirectTypeGameData_FieldNumber_RoomId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3MatchDirectTypeGameData__storage_, roomId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "matchStatus",
        .dataTypeSpecific.enumDescFunc = PB3MatchStatusType_EnumDescriptor,
        .number = PB3MatchDirectTypeGameData_FieldNumber_MatchStatus,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3MatchDirectTypeGameData__storage_, matchStatus),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "quickGamePre",
        .dataTypeSpecific.enumDescFunc = PB3QuickGamePreType_EnumDescriptor,
        .number = PB3MatchDirectTypeGameData_FieldNumber_QuickGamePre,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3MatchDirectTypeGameData__storage_, quickGamePre),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3MatchDirectTypeGameData class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3MatchDirectTypeGameData__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3MatchDirectTypeGameData_MatchStatus_RawValue(PB3MatchDirectTypeGameData *message) {
  GPBDescriptor *descriptor = [PB3MatchDirectTypeGameData descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3MatchDirectTypeGameData_FieldNumber_MatchStatus];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3MatchDirectTypeGameData_MatchStatus_RawValue(PB3MatchDirectTypeGameData *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3MatchDirectTypeGameData descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3MatchDirectTypeGameData_FieldNumber_MatchStatus];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t PB3MatchDirectTypeGameData_QuickGamePre_RawValue(PB3MatchDirectTypeGameData *message) {
  GPBDescriptor *descriptor = [PB3MatchDirectTypeGameData descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3MatchDirectTypeGameData_FieldNumber_QuickGamePre];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3MatchDirectTypeGameData_QuickGamePre_RawValue(PB3MatchDirectTypeGameData *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3MatchDirectTypeGameData descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3MatchDirectTypeGameData_FieldNumber_QuickGamePre];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3MatchDirectTypeNormal

@implementation PB3MatchDirectTypeNormal

@dynamic normalId;
@dynamic normalURL;
@dynamic normalMsg;
@dynamic followId;
@dynamic followType;
@dynamic followName;
@dynamic followMsg;

typedef struct PB3MatchDirectTypeNormal__storage_ {
  uint32_t _has_storage_[1];
  int32_t normalId;
  int32_t followId;
  int32_t followType;
  NSString *normalURL;
  NSString *normalMsg;
  NSString *followName;
  NSString *followMsg;
} PB3MatchDirectTypeNormal__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "normalId",
        .dataTypeSpecific.className = NULL,
        .number = PB3MatchDirectTypeNormal_FieldNumber_NormalId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3MatchDirectTypeNormal__storage_, normalId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "normalURL",
        .dataTypeSpecific.className = NULL,
        .number = PB3MatchDirectTypeNormal_FieldNumber_NormalURL,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3MatchDirectTypeNormal__storage_, normalURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "normalMsg",
        .dataTypeSpecific.className = NULL,
        .number = PB3MatchDirectTypeNormal_FieldNumber_NormalMsg,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3MatchDirectTypeNormal__storage_, normalMsg),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "followId",
        .dataTypeSpecific.className = NULL,
        .number = PB3MatchDirectTypeNormal_FieldNumber_FollowId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3MatchDirectTypeNormal__storage_, followId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "followType",
        .dataTypeSpecific.className = NULL,
        .number = PB3MatchDirectTypeNormal_FieldNumber_FollowType,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3MatchDirectTypeNormal__storage_, followType),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "followName",
        .dataTypeSpecific.className = NULL,
        .number = PB3MatchDirectTypeNormal_FieldNumber_FollowName,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PB3MatchDirectTypeNormal__storage_, followName),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "followMsg",
        .dataTypeSpecific.className = NULL,
        .number = PB3MatchDirectTypeNormal_FieldNumber_FollowMsg,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PB3MatchDirectTypeNormal__storage_, followMsg),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3MatchDirectTypeNormal class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3MatchDirectTypeNormal__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\002\006\241!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3PHomeModClassify

@implementation PB3PHomeModClassify

@dynamic id_p;
@dynamic name;
@dynamic URL;
@dynamic selectedURL;

typedef struct PB3PHomeModClassify__storage_ {
  uint32_t _has_storage_[1];
  PB3PHomeClassify id_p;
  NSString *name;
  NSString *URL;
  NSString *selectedURL;
} PB3PHomeModClassify__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.enumDescFunc = PB3PHomeClassify_EnumDescriptor,
        .number = PB3PHomeModClassify_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3PHomeModClassify__storage_, id_p),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeModClassify_FieldNumber_Name,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3PHomeModClassify__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "URL",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeModClassify_FieldNumber_URL,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3PHomeModClassify__storage_, URL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "selectedURL",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeModClassify_FieldNumber_SelectedURL,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3PHomeModClassify__storage_, selectedURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PHomeModClassify class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PHomeModClassify__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\003!!!\000\004\010\241!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3PHomeModClassify_Id_p_RawValue(PB3PHomeModClassify *message) {
  GPBDescriptor *descriptor = [PB3PHomeModClassify descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeModClassify_FieldNumber_Id_p];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3PHomeModClassify_Id_p_RawValue(PB3PHomeModClassify *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3PHomeModClassify descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeModClassify_FieldNumber_Id_p];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3PHomeMod

@implementation PB3PHomeMod

@dynamic id_p;
@dynamic title;
@dynamic isShowTitle;
@dynamic style;
@dynamic isShowCtrlBtn;
@dynamic ctrlBtnImgURL;
@dynamic ctrlBtnRule;
@dynamic isEnd;
@dynamic classifysArray, classifysArray_Count;
@dynamic dataType;
@dynamic dataByte;
@dynamic routeType;
@dynamic route;
@dynamic isInsterMod;
@dynamic showNum;
@dynamic emptyImg;
@dynamic exposureNum;
@dynamic followMsg;
@dynamic isNew;
@dynamic rightTopRoute;
@dynamic emptyImgRoute;
@dynamic isDynamicLoad;
@dynamic isRouter;
@dynamic photoRouter;
@dynamic isOpenOnline;
@dynamic bgURL;
@dynamic titleURL;
@dynamic bgColor;
@dynamic autoplay;
@dynamic nestedModPosition;
@dynamic nestedModListArray, nestedModListArray_Count;
@dynamic nestedId;

typedef struct PB3PHomeMod__storage_ {
  uint32_t _has_storage_[2];
  int32_t id_p;
  PB3PHomeModStyle style;
  PB3PHomeMoreRule ctrlBtnRule;
  PB3PHomeDataType dataType;
  PB3PHomeRouteType routeType;
  int32_t showNum;
  int32_t exposureNum;
  int32_t nestedModPosition;
  int32_t nestedId;
  NSString *title;
  NSString *ctrlBtnImgURL;
  NSMutableArray *classifysArray;
  NSData *dataByte;
  NSString *route;
  NSString *emptyImg;
  NSString *followMsg;
  NSString *rightTopRoute;
  NSString *emptyImgRoute;
  NSString *photoRouter;
  NSString *bgURL;
  NSString *titleURL;
  NSString *bgColor;
  NSMutableArray *nestedModListArray;
} PB3PHomeMod__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeMod_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3PHomeMod__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "title",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeMod_FieldNumber_Title,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3PHomeMod__storage_, title),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isShowTitle",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeMod_FieldNumber_IsShowTitle,
        .hasIndex = 2,
        .offset = 3,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "style",
        .dataTypeSpecific.enumDescFunc = PB3PHomeModStyle_EnumDescriptor,
        .number = PB3PHomeMod_FieldNumber_Style,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3PHomeMod__storage_, style),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "isShowCtrlBtn",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeMod_FieldNumber_IsShowCtrlBtn,
        .hasIndex = 5,
        .offset = 6,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "ctrlBtnImgURL",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeMod_FieldNumber_CtrlBtnImgURL,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PB3PHomeMod__storage_, ctrlBtnImgURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "ctrlBtnRule",
        .dataTypeSpecific.enumDescFunc = PB3PHomeMoreRule_EnumDescriptor,
        .number = PB3PHomeMod_FieldNumber_CtrlBtnRule,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(PB3PHomeMod__storage_, ctrlBtnRule),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "isEnd",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeMod_FieldNumber_IsEnd,
        .hasIndex = 9,
        .offset = 10,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "classifysArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3PHomeModClassify),
        .number = PB3PHomeMod_FieldNumber_ClassifysArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeMod__storage_, classifysArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "dataType",
        .dataTypeSpecific.enumDescFunc = PB3PHomeDataType_EnumDescriptor,
        .number = PB3PHomeMod_FieldNumber_DataType,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(PB3PHomeMod__storage_, dataType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "dataByte",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeMod_FieldNumber_DataByte,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(PB3PHomeMod__storage_, dataByte),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "routeType",
        .dataTypeSpecific.enumDescFunc = PB3PHomeRouteType_EnumDescriptor,
        .number = PB3PHomeMod_FieldNumber_RouteType,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(PB3PHomeMod__storage_, routeType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "route",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeMod_FieldNumber_Route,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(PB3PHomeMod__storage_, route),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isInsterMod",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeMod_FieldNumber_IsInsterMod,
        .hasIndex = 15,
        .offset = 16,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "showNum",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeMod_FieldNumber_ShowNum,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(PB3PHomeMod__storage_, showNum),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "emptyImg",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeMod_FieldNumber_EmptyImg,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(PB3PHomeMod__storage_, emptyImg),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "exposureNum",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeMod_FieldNumber_ExposureNum,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(PB3PHomeMod__storage_, exposureNum),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "followMsg",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeMod_FieldNumber_FollowMsg,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(PB3PHomeMod__storage_, followMsg),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isNew",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeMod_FieldNumber_IsNew,
        .hasIndex = 21,
        .offset = 22,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "rightTopRoute",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeMod_FieldNumber_RightTopRoute,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(PB3PHomeMod__storage_, rightTopRoute),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "emptyImgRoute",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeMod_FieldNumber_EmptyImgRoute,
        .hasIndex = 24,
        .offset = (uint32_t)offsetof(PB3PHomeMod__storage_, emptyImgRoute),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isDynamicLoad",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeMod_FieldNumber_IsDynamicLoad,
        .hasIndex = 25,
        .offset = 26,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "isRouter",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeMod_FieldNumber_IsRouter,
        .hasIndex = 27,
        .offset = 28,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "photoRouter",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeMod_FieldNumber_PhotoRouter,
        .hasIndex = 29,
        .offset = (uint32_t)offsetof(PB3PHomeMod__storage_, photoRouter),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isOpenOnline",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeMod_FieldNumber_IsOpenOnline,
        .hasIndex = 30,
        .offset = 31,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "bgURL",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeMod_FieldNumber_BgURL,
        .hasIndex = 32,
        .offset = (uint32_t)offsetof(PB3PHomeMod__storage_, bgURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "titleURL",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeMod_FieldNumber_TitleURL,
        .hasIndex = 33,
        .offset = (uint32_t)offsetof(PB3PHomeMod__storage_, titleURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "bgColor",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeMod_FieldNumber_BgColor,
        .hasIndex = 34,
        .offset = (uint32_t)offsetof(PB3PHomeMod__storage_, bgColor),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "autoplay",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeMod_FieldNumber_Autoplay,
        .hasIndex = 35,
        .offset = 36,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "nestedModPosition",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeMod_FieldNumber_NestedModPosition,
        .hasIndex = 37,
        .offset = (uint32_t)offsetof(PB3PHomeMod__storage_, nestedModPosition),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "nestedModListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3PHomeMod),
        .number = PB3PHomeMod_FieldNumber_NestedModListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeMod__storage_, nestedModListArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "nestedId",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeMod_FieldNumber_NestedId,
        .hasIndex = 38,
        .offset = (uint32_t)offsetof(PB3PHomeMod__storage_, nestedId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PHomeMod class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PHomeMod__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\006\004\243\243\241!!\000\034\002\241!!\000\035\005\241!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3PHomeMod_Style_RawValue(PB3PHomeMod *message) {
  GPBDescriptor *descriptor = [PB3PHomeMod descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeMod_FieldNumber_Style];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3PHomeMod_Style_RawValue(PB3PHomeMod *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3PHomeMod descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeMod_FieldNumber_Style];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t PB3PHomeMod_CtrlBtnRule_RawValue(PB3PHomeMod *message) {
  GPBDescriptor *descriptor = [PB3PHomeMod descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeMod_FieldNumber_CtrlBtnRule];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3PHomeMod_CtrlBtnRule_RawValue(PB3PHomeMod *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3PHomeMod descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeMod_FieldNumber_CtrlBtnRule];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t PB3PHomeMod_DataType_RawValue(PB3PHomeMod *message) {
  GPBDescriptor *descriptor = [PB3PHomeMod descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeMod_FieldNumber_DataType];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3PHomeMod_DataType_RawValue(PB3PHomeMod *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3PHomeMod descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeMod_FieldNumber_DataType];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t PB3PHomeMod_RouteType_RawValue(PB3PHomeMod *message) {
  GPBDescriptor *descriptor = [PB3PHomeMod descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeMod_FieldNumber_RouteType];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3PHomeMod_RouteType_RawValue(PB3PHomeMod *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3PHomeMod descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeMod_FieldNumber_RouteType];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3PHomeEntryRoomList

@implementation PB3PHomeEntryRoomList

@dynamic listArray, listArray_Count;

typedef struct PB3PHomeEntryRoomList__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *listArray;
} PB3PHomeEntryRoomList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "listArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3PHomeEntryRoom),
        .number = PB3PHomeEntryRoomList_FieldNumber_ListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoomList__storage_, listArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PHomeEntryRoomList class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PHomeEntryRoomList__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3PHomeEntryRoom

@implementation PB3PHomeEntryRoom

@dynamic id_p;
@dynamic index;
@dynamic type;
@dynamic id2;
@dynamic name;
@dynamic icon;
@dynamic onlineNum;
@dynamic hasPasswd;
@dynamic isRoomOwnerOnline;
@dynamic category;
@dynamic pattern;
@dynamic detailsImg;
@dynamic flags;
@dynamic rank;
@dynamic isTop;
@dynamic recommendWord;
@dynamic fans;
@dynamic roomId;
@dynamic highQualityOnlineNum;
@dynamic hasTips, tips;
@dynamic lastTime;
@dynamic sex;
@dynamic heat;
@dynamic chairs;
@dynamic coverPic;
@dynamic roomDecorateArray, roomDecorateArray_Count;
@dynamic hasVideoInfo, videoInfo;
@dynamic hasHost, host;
@dynamic roomGameIcon;
@dynamic roomTypeTag;
@dynamic hasEightDescribe, eightDescribe;
@dynamic ownerName;
@dynamic isClan;
@dynamic gameStatus;
@dynamic gamePlayerStatusArray, gamePlayerStatusArray_Count;
@dynamic actionTalk;
@dynamic roomTypeStr;
@dynamic chairPlayerListArray, chairPlayerListArray_Count;
@dynamic gameName;
@dynamic extend, extend_Count;
@dynamic labelsArray, labelsArray_Count;
@dynamic roomTingTag;
@dynamic status;
@dynamic heatArrArray, heatArrArray_Count;
@dynamic flowSupportType;
@dynamic cubismModelName;
@dynamic hasRoomStatus, roomStatus;

typedef struct PB3PHomeEntryRoom__storage_ {
  uint32_t _has_storage_[2];
  int32_t index;
  PB3PluginRoomType type;
  int32_t onlineNum;
  int32_t category;
  int32_t pattern;
  int32_t flags;
  int32_t highQualityOnlineNum;
  PB3PluginSexType sex;
  int32_t heat;
  int32_t chairs;
  PB3PGameRoomStatusTypeExt gameStatus;
  PB3PHomeEntryRoomStatus status;
  int32_t flowSupportType;
  NSString *name;
  NSString *icon;
  NSString *detailsImg;
  NSString *recommendWord;
  PB3PluginHomeTips *tips;
  NSString *coverPic;
  NSMutableArray *roomDecorateArray;
  PB3PhomeVideoInfo *videoInfo;
  PB3PlayerBaseInfo *host;
  NSString *roomGameIcon;
  NSString *roomTypeTag;
  PB3EightDescribe *eightDescribe;
  NSString *ownerName;
  NSMutableArray *gamePlayerStatusArray;
  NSString *actionTalk;
  NSString *roomTypeStr;
  NSMutableArray *chairPlayerListArray;
  NSString *gameName;
  GPBInt32ObjectDictionary *extend;
  NSMutableArray *labelsArray;
  NSString *roomTingTag;
  GPBInt32Array *heatArrArray;
  NSString *cubismModelName;
  PB3RoomStatus *roomStatus;
  int64_t id_p;
  int64_t id2;
  int64_t rank;
  int64_t fans;
  int64_t roomId;
  int64_t lastTime;
} PB3PHomeEntryRoom__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "index",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_Index,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, index),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt32,
      },
      {
        .name = "type",
        .dataTypeSpecific.enumDescFunc = PB3PluginRoomType_EnumDescriptor,
        .number = PB3PHomeEntryRoom_FieldNumber_Type,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, type),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "id2",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_Id2,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, id2),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt64,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_Name,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "icon",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_Icon,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, icon),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "onlineNum",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_OnlineNum,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, onlineNum),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "hasPasswd",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_HasPasswd,
        .hasIndex = 7,
        .offset = 8,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "isRoomOwnerOnline",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_IsRoomOwnerOnline,
        .hasIndex = 9,
        .offset = 10,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "category",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_Category,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, category),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt32,
      },
      {
        .name = "pattern",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_Pattern,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, pattern),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt32,
      },
      {
        .name = "detailsImg",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_DetailsImg,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, detailsImg),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "flags",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_Flags,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, flags),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "rank",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_Rank,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, rank),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt64,
      },
      {
        .name = "isTop",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_IsTop,
        .hasIndex = 16,
        .offset = 17,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "recommendWord",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_RecommendWord,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, recommendWord),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fans",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_Fans,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, fans),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt64,
      },
      {
        .name = "roomId",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_RoomId,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, roomId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt64,
      },
      {
        .name = "highQualityOnlineNum",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_HighQualityOnlineNum,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, highQualityOnlineNum),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt32,
      },
      {
        .name = "tips",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3PluginHomeTips),
        .number = PB3PHomeEntryRoom_FieldNumber_Tips,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, tips),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "lastTime",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_LastTime,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, lastTime),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt64,
      },
      {
        .name = "sex",
        .dataTypeSpecific.enumDescFunc = PB3PluginSexType_EnumDescriptor,
        .number = PB3PHomeEntryRoom_FieldNumber_Sex,
        .hasIndex = 24,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, sex),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "heat",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_Heat,
        .hasIndex = 25,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, heat),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt32,
      },
      {
        .name = "chairs",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_Chairs,
        .hasIndex = 26,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, chairs),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt32,
      },
      {
        .name = "coverPic",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_CoverPic,
        .hasIndex = 27,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, coverPic),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "roomDecorateArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3RoomDecorate),
        .number = PB3PHomeEntryRoom_FieldNumber_RoomDecorateArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, roomDecorateArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "videoInfo",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3PhomeVideoInfo),
        .number = PB3PHomeEntryRoom_FieldNumber_VideoInfo,
        .hasIndex = 28,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, videoInfo),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "host",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3PlayerBaseInfo),
        .number = PB3PHomeEntryRoom_FieldNumber_Host,
        .hasIndex = 29,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, host),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "roomGameIcon",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_RoomGameIcon,
        .hasIndex = 30,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, roomGameIcon),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "roomTypeTag",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_RoomTypeTag,
        .hasIndex = 31,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, roomTypeTag),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "eightDescribe",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3EightDescribe),
        .number = PB3PHomeEntryRoom_FieldNumber_EightDescribe,
        .hasIndex = 32,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, eightDescribe),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "ownerName",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_OwnerName,
        .hasIndex = 33,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, ownerName),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isClan",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_IsClan,
        .hasIndex = 34,
        .offset = 35,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "gameStatus",
        .dataTypeSpecific.enumDescFunc = PB3PGameRoomStatusTypeExt_EnumDescriptor,
        .number = PB3PHomeEntryRoom_FieldNumber_GameStatus,
        .hasIndex = 36,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, gameStatus),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "gamePlayerStatusArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3PGamePlayerStatusExt),
        .number = PB3PHomeEntryRoom_FieldNumber_GamePlayerStatusArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, gamePlayerStatusArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "actionTalk",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_ActionTalk,
        .hasIndex = 37,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, actionTalk),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "roomTypeStr",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_RoomTypeStr,
        .hasIndex = 38,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, roomTypeStr),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "chairPlayerListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3ChairPlayerInfo),
        .number = PB3PHomeEntryRoom_FieldNumber_ChairPlayerListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, chairPlayerListArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "gameName",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_GameName,
        .hasIndex = 39,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, gameName),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "extend",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_Extend,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, extend),
        .flags = GPBFieldMapKeyInt32,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "labelsArray",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_LabelsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, labelsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "roomTingTag",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_RoomTingTag,
        .hasIndex = 40,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, roomTingTag),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "status",
        .dataTypeSpecific.enumDescFunc = PB3PHomeEntryRoomStatus_EnumDescriptor,
        .number = PB3PHomeEntryRoom_FieldNumber_Status,
        .hasIndex = 41,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, status),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "heatArrArray",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_HeatArrArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, heatArrArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldPacked),
        .dataType = GPBDataTypeSInt32,
      },
      {
        .name = "flowSupportType",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_FlowSupportType,
        .hasIndex = 42,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, flowSupportType),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "cubismModelName",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryRoom_FieldNumber_CubismModelName,
        .hasIndex = 43,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, cubismModelName),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "roomStatus",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3RoomStatus),
        .number = PB3PHomeEntryRoom_FieldNumber_RoomStatus,
        .hasIndex = 44,
        .offset = (uint32_t)offsetof(PB3PHomeEntryRoom__storage_, roomStatus),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PHomeEntryRoom class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PHomeEntryRoom__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\017\005\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3PHomeEntryRoom_Type_RawValue(PB3PHomeEntryRoom *message) {
  GPBDescriptor *descriptor = [PB3PHomeEntryRoom descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeEntryRoom_FieldNumber_Type];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3PHomeEntryRoom_Type_RawValue(PB3PHomeEntryRoom *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3PHomeEntryRoom descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeEntryRoom_FieldNumber_Type];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t PB3PHomeEntryRoom_Sex_RawValue(PB3PHomeEntryRoom *message) {
  GPBDescriptor *descriptor = [PB3PHomeEntryRoom descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeEntryRoom_FieldNumber_Sex];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3PHomeEntryRoom_Sex_RawValue(PB3PHomeEntryRoom *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3PHomeEntryRoom descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeEntryRoom_FieldNumber_Sex];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t PB3PHomeEntryRoom_GameStatus_RawValue(PB3PHomeEntryRoom *message) {
  GPBDescriptor *descriptor = [PB3PHomeEntryRoom descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeEntryRoom_FieldNumber_GameStatus];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3PHomeEntryRoom_GameStatus_RawValue(PB3PHomeEntryRoom *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3PHomeEntryRoom descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeEntryRoom_FieldNumber_GameStatus];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t PB3PHomeEntryRoom_Status_RawValue(PB3PHomeEntryRoom *message) {
  GPBDescriptor *descriptor = [PB3PHomeEntryRoom descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeEntryRoom_FieldNumber_Status];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3PHomeEntryRoom_Status_RawValue(PB3PHomeEntryRoom *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3PHomeEntryRoom descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeEntryRoom_FieldNumber_Status];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3RoomStatus

@implementation PB3RoomStatus

@dynamic status;
@dynamic icon;
@dynamic msg;

typedef struct PB3RoomStatus__storage_ {
  uint32_t _has_storage_[1];
  PB3PHomeEntryRoomStatus status;
  NSString *icon;
  NSString *msg;
} PB3RoomStatus__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "status",
        .dataTypeSpecific.enumDescFunc = PB3PHomeEntryRoomStatus_EnumDescriptor,
        .number = PB3RoomStatus_FieldNumber_Status,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3RoomStatus__storage_, status),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "icon",
        .dataTypeSpecific.className = NULL,
        .number = PB3RoomStatus_FieldNumber_Icon,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3RoomStatus__storage_, icon),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msg",
        .dataTypeSpecific.className = NULL,
        .number = PB3RoomStatus_FieldNumber_Msg,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3RoomStatus__storage_, msg),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3RoomStatus class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3RoomStatus__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3RoomStatus_Status_RawValue(PB3RoomStatus *message) {
  GPBDescriptor *descriptor = [PB3RoomStatus descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3RoomStatus_FieldNumber_Status];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3RoomStatus_Status_RawValue(PB3RoomStatus *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3RoomStatus descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3RoomStatus_FieldNumber_Status];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3ChairPlayerInfo

@implementation PB3ChairPlayerInfo

@dynamic playerId;
@dynamic icon;
@dynamic isBoss;

typedef struct PB3ChairPlayerInfo__storage_ {
  uint32_t _has_storage_[1];
  NSString *icon;
  int64_t playerId;
} PB3ChairPlayerInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "playerId",
        .dataTypeSpecific.className = NULL,
        .number = PB3ChairPlayerInfo_FieldNumber_PlayerId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3ChairPlayerInfo__storage_, playerId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "icon",
        .dataTypeSpecific.className = NULL,
        .number = PB3ChairPlayerInfo_FieldNumber_Icon,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3ChairPlayerInfo__storage_, icon),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isBoss",
        .dataTypeSpecific.className = NULL,
        .number = PB3ChairPlayerInfo_FieldNumber_IsBoss,
        .hasIndex = 2,
        .offset = 3,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3ChairPlayerInfo class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3ChairPlayerInfo__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3PGamePlayerStatusExt

@implementation PB3PGamePlayerStatusExt

@dynamic playerId;
@dynamic status;
@dynamic icon;

typedef struct PB3PGamePlayerStatusExt__storage_ {
  uint32_t _has_storage_[1];
  PB3PGamePlayerStatusTypeExt status;
  NSString *icon;
  int64_t playerId;
} PB3PGamePlayerStatusExt__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "playerId",
        .dataTypeSpecific.className = NULL,
        .number = PB3PGamePlayerStatusExt_FieldNumber_PlayerId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3PGamePlayerStatusExt__storage_, playerId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "status",
        .dataTypeSpecific.enumDescFunc = PB3PGamePlayerStatusTypeExt_EnumDescriptor,
        .number = PB3PGamePlayerStatusExt_FieldNumber_Status,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3PGamePlayerStatusExt__storage_, status),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "icon",
        .dataTypeSpecific.className = NULL,
        .number = PB3PGamePlayerStatusExt_FieldNumber_Icon,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3PGamePlayerStatusExt__storage_, icon),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PGamePlayerStatusExt class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PGamePlayerStatusExt__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3PGamePlayerStatusExt_Status_RawValue(PB3PGamePlayerStatusExt *message) {
  GPBDescriptor *descriptor = [PB3PGamePlayerStatusExt descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PGamePlayerStatusExt_FieldNumber_Status];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3PGamePlayerStatusExt_Status_RawValue(PB3PGamePlayerStatusExt *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3PGamePlayerStatusExt descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PGamePlayerStatusExt_FieldNumber_Status];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3EightDescribe

@implementation PB3EightDescribe

@dynamic text;

typedef struct PB3EightDescribe__storage_ {
  uint32_t _has_storage_[1];
  NSString *text;
} PB3EightDescribe__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "text",
        .dataTypeSpecific.className = NULL,
        .number = PB3EightDescribe_FieldNumber_Text,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3EightDescribe__storage_, text),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3EightDescribe class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3EightDescribe__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3PhomeVideoInfo

@implementation PB3PhomeVideoInfo

@dynamic title;
@dynamic tagsArray, tagsArray_Count;
@dynamic image;

typedef struct PB3PhomeVideoInfo__storage_ {
  uint32_t _has_storage_[1];
  NSString *title;
  NSMutableArray *tagsArray;
  NSString *image;
} PB3PhomeVideoInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "title",
        .dataTypeSpecific.className = NULL,
        .number = PB3PhomeVideoInfo_FieldNumber_Title,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3PhomeVideoInfo__storage_, title),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "tagsArray",
        .dataTypeSpecific.className = NULL,
        .number = PB3PhomeVideoInfo_FieldNumber_TagsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PhomeVideoInfo__storage_, tagsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "image",
        .dataTypeSpecific.className = NULL,
        .number = PB3PhomeVideoInfo_FieldNumber_Image,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3PhomeVideoInfo__storage_, image),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PhomeVideoInfo class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PhomeVideoInfo__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3PHomeEntryBcFriendList

@implementation PB3PHomeEntryBcFriendList

@dynamic listArray, listArray_Count;

typedef struct PB3PHomeEntryBcFriendList__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *listArray;
} PB3PHomeEntryBcFriendList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "listArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3PHomeEntryBcFriend),
        .number = PB3PHomeEntryBcFriendList_FieldNumber_ListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcFriendList__storage_, listArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PHomeEntryBcFriendList class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PHomeEntryBcFriendList__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3PHomeEntryBcGiftList

@implementation PB3PHomeEntryBcGiftList

@dynamic listArray, listArray_Count;
@dynamic hasNewestBcGift, newestBcGift;

typedef struct PB3PHomeEntryBcGiftList__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *listArray;
  PB3PHomeEntryBcGift *newestBcGift;
} PB3PHomeEntryBcGiftList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "listArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3PHomeEntryBcGift),
        .number = PB3PHomeEntryBcGiftList_FieldNumber_ListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcGiftList__storage_, listArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "newestBcGift",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3PHomeEntryBcGift),
        .number = PB3PHomeEntryBcGiftList_FieldNumber_NewestBcGift,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcGiftList__storage_, newestBcGift),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PHomeEntryBcGiftList class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PHomeEntryBcGiftList__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\002\014\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3PHomeCPInfoList

@implementation PB3PHomeCPInfoList

@dynamic listArray, listArray_Count;
@dynamic sameSexListArray, sameSexListArray_Count;
@dynamic defaultSexType;

typedef struct PB3PHomeCPInfoList__storage_ {
  uint32_t _has_storage_[1];
  PB3PluginSexType defaultSexType;
  NSMutableArray *listArray;
  NSMutableArray *sameSexListArray;
} PB3PHomeCPInfoList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "listArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3PHomeCPInfo),
        .number = PB3PHomeCPInfoList_FieldNumber_ListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeCPInfoList__storage_, listArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "sameSexListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3PHomeCPInfo),
        .number = PB3PHomeCPInfoList_FieldNumber_SameSexListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeCPInfoList__storage_, sameSexListArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "defaultSexType",
        .dataTypeSpecific.enumDescFunc = PB3PluginSexType_EnumDescriptor,
        .number = PB3PHomeCPInfoList_FieldNumber_DefaultSexType,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3PHomeCPInfoList__storage_, defaultSexType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PHomeCPInfoList class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PHomeCPInfoList__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3PHomeCPInfoList_DefaultSexType_RawValue(PB3PHomeCPInfoList *message) {
  GPBDescriptor *descriptor = [PB3PHomeCPInfoList descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeCPInfoList_FieldNumber_DefaultSexType];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3PHomeCPInfoList_DefaultSexType_RawValue(PB3PHomeCPInfoList *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3PHomeCPInfoList descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeCPInfoList_FieldNumber_DefaultSexType];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3PHomeCPInfo

@implementation PB3PHomeCPInfo

@dynamic imageURL;
@dynamic voiceURL;
@dynamic condition;
@dynamic voiceTime;
@dynamic voiceId;
@dynamic sex;
@dynamic id_p;
@dynamic anchorNum;

typedef struct PB3PHomeCPInfo__storage_ {
  uint32_t _has_storage_[1];
  int32_t voiceTime;
  int32_t voiceId;
  PB3PluginSexType sex;
  int32_t id_p;
  int32_t anchorNum;
  NSString *imageURL;
  NSString *voiceURL;
  NSString *condition;
} PB3PHomeCPInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "imageURL",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeCPInfo_FieldNumber_ImageURL,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3PHomeCPInfo__storage_, imageURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "voiceURL",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeCPInfo_FieldNumber_VoiceURL,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3PHomeCPInfo__storage_, voiceURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "condition",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeCPInfo_FieldNumber_Condition,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3PHomeCPInfo__storage_, condition),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "voiceTime",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeCPInfo_FieldNumber_VoiceTime,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3PHomeCPInfo__storage_, voiceTime),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "voiceId",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeCPInfo_FieldNumber_VoiceId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3PHomeCPInfo__storage_, voiceId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "sex",
        .dataTypeSpecific.enumDescFunc = PB3PluginSexType_EnumDescriptor,
        .number = PB3PHomeCPInfo_FieldNumber_Sex,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PB3PHomeCPInfo__storage_, sex),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeCPInfo_FieldNumber_Id_p,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PB3PHomeCPInfo__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "anchorNum",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeCPInfo_FieldNumber_AnchorNum,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PB3PHomeCPInfo__storage_, anchorNum),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PHomeCPInfo class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PHomeCPInfo__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\005\241!!\000\002\005\241!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3PHomeCPInfo_Sex_RawValue(PB3PHomeCPInfo *message) {
  GPBDescriptor *descriptor = [PB3PHomeCPInfo descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeCPInfo_FieldNumber_Sex];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3PHomeCPInfo_Sex_RawValue(PB3PHomeCPInfo *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3PHomeCPInfo descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeCPInfo_FieldNumber_Sex];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3PHomeEntryBcFriend

@implementation PB3PHomeEntryBcFriend

@dynamic id_p;
@dynamic index;
@dynamic sex;
@dynamic id2;
@dynamic wealthLevel;
@dynamic charmLevel;
@dynamic content;
@dynamic endTime;
@dynamic headlineCost;
@dynamic type;
@dynamic name;
@dynamic icon;
@dynamic recordId;
@dynamic recordType;
@dynamic onChairNum;
@dynamic roomPatternBcName;
@dynamic roomPatternBcNameColor;
@dynamic roomPatternBcBorderColor;
@dynamic extend, extend_Count;
@dynamic labelsArray, labelsArray_Count;
@dynamic pushTime;

typedef struct PB3PHomeEntryBcFriend__storage_ {
  uint32_t _has_storage_[1];
  int32_t index;
  PB3PluginSexType sex;
  int32_t wealthLevel;
  int32_t charmLevel;
  int32_t headlineCost;
  PB3PluginBcFriendType type;
  PB3BF_RECORD_TYPE recordType;
  int32_t onChairNum;
  NSString *content;
  NSString *name;
  NSString *icon;
  NSString *recordId;
  NSString *roomPatternBcName;
  NSString *roomPatternBcNameColor;
  NSString *roomPatternBcBorderColor;
  GPBInt32ObjectDictionary *extend;
  NSMutableArray *labelsArray;
  int64_t id_p;
  int64_t id2;
  int64_t endTime;
  int64_t pushTime;
} PB3PHomeEntryBcFriend__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcFriend_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcFriend__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "index",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcFriend_FieldNumber_Index,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcFriend__storage_, index),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt32,
      },
      {
        .name = "sex",
        .dataTypeSpecific.enumDescFunc = PB3PluginSexType_EnumDescriptor,
        .number = PB3PHomeEntryBcFriend_FieldNumber_Sex,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcFriend__storage_, sex),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "id2",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcFriend_FieldNumber_Id2,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcFriend__storage_, id2),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt64,
      },
      {
        .name = "wealthLevel",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcFriend_FieldNumber_WealthLevel,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcFriend__storage_, wealthLevel),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "charmLevel",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcFriend_FieldNumber_CharmLevel,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcFriend__storage_, charmLevel),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "content",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcFriend_FieldNumber_Content,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcFriend__storage_, content),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "endTime",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcFriend_FieldNumber_EndTime,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcFriend__storage_, endTime),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt64,
      },
      {
        .name = "headlineCost",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcFriend_FieldNumber_HeadlineCost,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcFriend__storage_, headlineCost),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt32,
      },
      {
        .name = "type",
        .dataTypeSpecific.enumDescFunc = PB3PluginBcFriendType_EnumDescriptor,
        .number = PB3PHomeEntryBcFriend_FieldNumber_Type,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcFriend__storage_, type),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcFriend_FieldNumber_Name,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcFriend__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "icon",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcFriend_FieldNumber_Icon,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcFriend__storage_, icon),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "recordId",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcFriend_FieldNumber_RecordId,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcFriend__storage_, recordId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "recordType",
        .dataTypeSpecific.enumDescFunc = PB3BF_RECORD_TYPE_EnumDescriptor,
        .number = PB3PHomeEntryBcFriend_FieldNumber_RecordType,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcFriend__storage_, recordType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "onChairNum",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcFriend_FieldNumber_OnChairNum,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcFriend__storage_, onChairNum),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "roomPatternBcName",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcFriend_FieldNumber_RoomPatternBcName,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcFriend__storage_, roomPatternBcName),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "roomPatternBcNameColor",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcFriend_FieldNumber_RoomPatternBcNameColor,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcFriend__storage_, roomPatternBcNameColor),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "roomPatternBcBorderColor",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcFriend_FieldNumber_RoomPatternBcBorderColor,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcFriend__storage_, roomPatternBcBorderColor),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "extend",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcFriend_FieldNumber_Extend,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcFriend__storage_, extend),
        .flags = GPBFieldMapKeyInt32,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "labelsArray",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcFriend_FieldNumber_LabelsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcFriend__storage_, labelsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pushTime",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcFriend_FieldNumber_PushTime,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcFriend__storage_, pushTime),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PHomeEntryBcFriend class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PHomeEntryBcFriend__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3PHomeEntryBcFriend_Sex_RawValue(PB3PHomeEntryBcFriend *message) {
  GPBDescriptor *descriptor = [PB3PHomeEntryBcFriend descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeEntryBcFriend_FieldNumber_Sex];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3PHomeEntryBcFriend_Sex_RawValue(PB3PHomeEntryBcFriend *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3PHomeEntryBcFriend descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeEntryBcFriend_FieldNumber_Sex];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t PB3PHomeEntryBcFriend_Type_RawValue(PB3PHomeEntryBcFriend *message) {
  GPBDescriptor *descriptor = [PB3PHomeEntryBcFriend descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeEntryBcFriend_FieldNumber_Type];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3PHomeEntryBcFriend_Type_RawValue(PB3PHomeEntryBcFriend *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3PHomeEntryBcFriend descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeEntryBcFriend_FieldNumber_Type];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t PB3PHomeEntryBcFriend_RecordType_RawValue(PB3PHomeEntryBcFriend *message) {
  GPBDescriptor *descriptor = [PB3PHomeEntryBcFriend descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeEntryBcFriend_FieldNumber_RecordType];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3PHomeEntryBcFriend_RecordType_RawValue(PB3PHomeEntryBcFriend *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3PHomeEntryBcFriend descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeEntryBcFriend_FieldNumber_RecordType];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3PHomeEntryBcGift

@implementation PB3PHomeEntryBcGift

@dynamic sendId;
@dynamic sendName;
@dynamic sendIcon;
@dynamic sendSex;
@dynamic recvId;
@dynamic recvName;
@dynamic recvIcon;
@dynamic recvSex;
@dynamic roomId;
@dynamic roomPwd;
@dynamic giftId;
@dynamic giftNum;
@dynamic createTime;
@dynamic gold;
@dynamic roomId2;
@dynamic isWorld;
@dynamic giftIcon;
@dynamic giftType;
@dynamic fromIdCubismIcon;
@dynamic toIdCubismIcon;
@dynamic roomName;
@dynamic message;

typedef struct PB3PHomeEntryBcGift__storage_ {
  uint32_t _has_storage_[1];
  PB3PluginSexType sendSex;
  PB3PluginSexType recvSex;
  int32_t giftId;
  int32_t giftNum;
  int32_t gold;
  int32_t giftType;
  NSString *sendName;
  NSString *sendIcon;
  NSString *recvName;
  NSString *recvIcon;
  NSString *roomPwd;
  NSString *giftIcon;
  NSString *fromIdCubismIcon;
  NSString *toIdCubismIcon;
  NSString *roomName;
  NSString *message;
  int64_t sendId;
  int64_t recvId;
  int64_t roomId;
  int64_t createTime;
  int64_t roomId2;
} PB3PHomeEntryBcGift__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sendId",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcGift_FieldNumber_SendId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcGift__storage_, sendId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt64,
      },
      {
        .name = "sendName",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcGift_FieldNumber_SendName,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcGift__storage_, sendName),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sendIcon",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcGift_FieldNumber_SendIcon,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcGift__storage_, sendIcon),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sendSex",
        .dataTypeSpecific.enumDescFunc = PB3PluginSexType_EnumDescriptor,
        .number = PB3PHomeEntryBcGift_FieldNumber_SendSex,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcGift__storage_, sendSex),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "recvId",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcGift_FieldNumber_RecvId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcGift__storage_, recvId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt64,
      },
      {
        .name = "recvName",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcGift_FieldNumber_RecvName,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcGift__storage_, recvName),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "recvIcon",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcGift_FieldNumber_RecvIcon,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcGift__storage_, recvIcon),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "recvSex",
        .dataTypeSpecific.enumDescFunc = PB3PluginSexType_EnumDescriptor,
        .number = PB3PHomeEntryBcGift_FieldNumber_RecvSex,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcGift__storage_, recvSex),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "roomId",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcGift_FieldNumber_RoomId,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcGift__storage_, roomId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt64,
      },
      {
        .name = "roomPwd",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcGift_FieldNumber_RoomPwd,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcGift__storage_, roomPwd),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "giftId",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcGift_FieldNumber_GiftId,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcGift__storage_, giftId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt32,
      },
      {
        .name = "giftNum",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcGift_FieldNumber_GiftNum,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcGift__storage_, giftNum),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt32,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcGift_FieldNumber_CreateTime,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcGift__storage_, createTime),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt64,
      },
      {
        .name = "gold",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcGift_FieldNumber_Gold,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcGift__storage_, gold),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeSInt32,
      },
      {
        .name = "roomId2",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcGift_FieldNumber_RoomId2,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcGift__storage_, roomId2),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt64,
      },
      {
        .name = "isWorld",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcGift_FieldNumber_IsWorld,
        .hasIndex = 15,
        .offset = 16,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "giftIcon",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcGift_FieldNumber_GiftIcon,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcGift__storage_, giftIcon),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "giftType",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcGift_FieldNumber_GiftType,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcGift__storage_, giftType),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "fromIdCubismIcon",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcGift_FieldNumber_FromIdCubismIcon,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcGift__storage_, fromIdCubismIcon),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "toIdCubismIcon",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcGift_FieldNumber_ToIdCubismIcon,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcGift__storage_, toIdCubismIcon),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "roomName",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcGift_FieldNumber_RoomName,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcGift__storage_, roomName),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "message",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBcGift_FieldNumber_Message,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBcGift__storage_, message),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PHomeEntryBcGift class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PHomeEntryBcGift__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\016D\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3PHomeEntryBcGift_SendSex_RawValue(PB3PHomeEntryBcGift *message) {
  GPBDescriptor *descriptor = [PB3PHomeEntryBcGift descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeEntryBcGift_FieldNumber_SendSex];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3PHomeEntryBcGift_SendSex_RawValue(PB3PHomeEntryBcGift *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3PHomeEntryBcGift descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeEntryBcGift_FieldNumber_SendSex];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t PB3PHomeEntryBcGift_RecvSex_RawValue(PB3PHomeEntryBcGift *message) {
  GPBDescriptor *descriptor = [PB3PHomeEntryBcGift descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeEntryBcGift_FieldNumber_RecvSex];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3PHomeEntryBcGift_RecvSex_RawValue(PB3PHomeEntryBcGift *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3PHomeEntryBcGift descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeEntryBcGift_FieldNumber_RecvSex];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3PHomeRouterList

@implementation PB3PHomeRouterList

@dynamic listArray, listArray_Count;

typedef struct PB3PHomeRouterList__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *listArray;
} PB3PHomeRouterList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "listArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3PHomeRouter),
        .number = PB3PHomeRouterList_FieldNumber_ListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeRouterList__storage_, listArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PHomeRouterList class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PHomeRouterList__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3PHomeRouter

@implementation PB3PHomeRouter

@dynamic title;
@dynamic featureImg;
@dynamic featureText;
@dynamic backgroundImg;
@dynamic router;

typedef struct PB3PHomeRouter__storage_ {
  uint32_t _has_storage_[1];
  NSString *title;
  NSString *featureImg;
  NSString *featureText;
  NSString *backgroundImg;
  NSString *router;
} PB3PHomeRouter__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "title",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRouter_FieldNumber_Title,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3PHomeRouter__storage_, title),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "featureImg",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRouter_FieldNumber_FeatureImg,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3PHomeRouter__storage_, featureImg),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "featureText",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRouter_FieldNumber_FeatureText,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3PHomeRouter__storage_, featureText),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "backgroundImg",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRouter_FieldNumber_BackgroundImg,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3PHomeRouter__storage_, backgroundImg),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "router",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRouter_FieldNumber_Router,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3PHomeRouter__storage_, router),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PHomeRouter class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PHomeRouter__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3PHomeRankList

@implementation PB3PHomeRankList

@dynamic listArray, listArray_Count;

typedef struct PB3PHomeRankList__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *listArray;
} PB3PHomeRankList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "listArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3PHomeRank),
        .number = PB3PHomeRankList_FieldNumber_ListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeRankList__storage_, listArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PHomeRankList class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PHomeRankList__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3PHomeRank

@implementation PB3PHomeRank

@dynamic rankName;
@dynamic rankIcon;
@dynamic num;
@dynamic router;
@dynamic rankListArray, rankListArray_Count;
@dynamic rankType;
@dynamic title;
@dynamic msg;
@dynamic bgImage;
@dynamic describe;
@dynamic reloadTime;

typedef struct PB3PHomeRank__storage_ {
  uint32_t _has_storage_[1];
  int32_t num;
  PB3PluginRankType rankType;
  NSString *rankName;
  NSString *rankIcon;
  NSString *router;
  NSMutableArray *rankListArray;
  NSString *title;
  NSString *msg;
  NSString *bgImage;
  NSString *describe;
  int64_t reloadTime;
} PB3PHomeRank__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "rankName",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRank_FieldNumber_RankName,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3PHomeRank__storage_, rankName),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "rankIcon",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRank_FieldNumber_RankIcon,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3PHomeRank__storage_, rankIcon),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "num",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRank_FieldNumber_Num,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3PHomeRank__storage_, num),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "router",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRank_FieldNumber_Router,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3PHomeRank__storage_, router),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "rankListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3PHomeRankItem),
        .number = PB3PHomeRank_FieldNumber_RankListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeRank__storage_, rankListArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "rankType",
        .dataTypeSpecific.enumDescFunc = PB3PluginRankType_EnumDescriptor,
        .number = PB3PHomeRank_FieldNumber_RankType,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3PHomeRank__storage_, rankType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "title",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRank_FieldNumber_Title,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PB3PHomeRank__storage_, title),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msg",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRank_FieldNumber_Msg,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PB3PHomeRank__storage_, msg),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "bgImage",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRank_FieldNumber_BgImage,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PB3PHomeRank__storage_, bgImage),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "describe",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRank_FieldNumber_Describe,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(PB3PHomeRank__storage_, describe),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "reloadTime",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRank_FieldNumber_ReloadTime,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(PB3PHomeRank__storage_, reloadTime),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PHomeRank class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PHomeRank__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3PHomeRank_RankType_RawValue(PB3PHomeRank *message) {
  GPBDescriptor *descriptor = [PB3PHomeRank descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeRank_FieldNumber_RankType];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3PHomeRank_RankType_RawValue(PB3PHomeRank *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3PHomeRank descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeRank_FieldNumber_RankType];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3PHomeRankItem

@implementation PB3PHomeRankItem

@dynamic id_p;
@dynamic name;
@dynamic sex;
@dynamic level;
@dynamic value;
@dynamic resTime;
@dynamic gapVal;
@dynamic icon;
@dynamic giftId;
@dynamic giftNum;
@dynamic ranking;
@dynamic id2;
@dynamic giftName;
@dynamic isChair;
@dynamic isRoom;

typedef struct PB3PHomeRankItem__storage_ {
  uint32_t _has_storage_[1];
  PB3PluginSexType sex;
  int32_t level;
  int32_t resTime;
  int32_t giftNum;
  int32_t ranking;
  NSString *name;
  NSString *icon;
  NSString *giftName;
  int64_t id_p;
  int64_t value;
  int64_t gapVal;
  int64_t giftId;
  int64_t id2;
} PB3PHomeRankItem__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRankItem_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3PHomeRankItem__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt64,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRankItem_FieldNumber_Name,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3PHomeRankItem__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sex",
        .dataTypeSpecific.enumDescFunc = PB3PluginSexType_EnumDescriptor,
        .number = PB3PHomeRankItem_FieldNumber_Sex,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3PHomeRankItem__storage_, sex),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "level",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRankItem_FieldNumber_Level,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3PHomeRankItem__storage_, level),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt32,
      },
      {
        .name = "value",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRankItem_FieldNumber_Value,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3PHomeRankItem__storage_, value),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt64,
      },
      {
        .name = "resTime",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRankItem_FieldNumber_ResTime,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PB3PHomeRankItem__storage_, resTime),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt32,
      },
      {
        .name = "gapVal",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRankItem_FieldNumber_GapVal,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PB3PHomeRankItem__storage_, gapVal),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt64,
      },
      {
        .name = "icon",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRankItem_FieldNumber_Icon,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PB3PHomeRankItem__storage_, icon),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "giftId",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRankItem_FieldNumber_GiftId,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(PB3PHomeRankItem__storage_, giftId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt64,
      },
      {
        .name = "giftNum",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRankItem_FieldNumber_GiftNum,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(PB3PHomeRankItem__storage_, giftNum),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt32,
      },
      {
        .name = "ranking",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRankItem_FieldNumber_Ranking,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(PB3PHomeRankItem__storage_, ranking),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt32,
      },
      {
        .name = "id2",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRankItem_FieldNumber_Id2,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(PB3PHomeRankItem__storage_, id2),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt64,
      },
      {
        .name = "giftName",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRankItem_FieldNumber_GiftName,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(PB3PHomeRankItem__storage_, giftName),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isChair",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRankItem_FieldNumber_IsChair,
        .hasIndex = 13,
        .offset = 14,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "isRoom",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRankItem_FieldNumber_IsRoom,
        .hasIndex = 15,
        .offset = 16,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PHomeRankItem class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PHomeRankItem__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3PHomeRankItem_Sex_RawValue(PB3PHomeRankItem *message) {
  GPBDescriptor *descriptor = [PB3PHomeRankItem descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeRankItem_FieldNumber_Sex];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3PHomeRankItem_Sex_RawValue(PB3PHomeRankItem *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3PHomeRankItem descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeRankItem_FieldNumber_Sex];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3PHomeActivityList

@implementation PB3PHomeActivityList

@dynamic listArray, listArray_Count;

typedef struct PB3PHomeActivityList__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *listArray;
} PB3PHomeActivityList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "listArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3PHomeActivity),
        .number = PB3PHomeActivityList_FieldNumber_ListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeActivityList__storage_, listArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PHomeActivityList class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PHomeActivityList__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3PHomeActivity

@implementation PB3PHomeActivity

@dynamic activityIcon;
@dynamic activityTextArray, activityTextArray_Count;
@dynamic router;
@dynamic interval;
@dynamic title;

typedef struct PB3PHomeActivity__storage_ {
  uint32_t _has_storage_[1];
  int32_t interval;
  NSString *activityIcon;
  NSMutableArray *activityTextArray;
  NSString *router;
  NSString *title;
} PB3PHomeActivity__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "activityIcon",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeActivity_FieldNumber_ActivityIcon,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3PHomeActivity__storage_, activityIcon),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "activityTextArray",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeActivity_FieldNumber_ActivityTextArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeActivity__storage_, activityTextArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "router",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeActivity_FieldNumber_Router,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3PHomeActivity__storage_, router),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "interval",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeActivity_FieldNumber_Interval,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3PHomeActivity__storage_, interval),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "title",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeActivity_FieldNumber_Title,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3PHomeActivity__storage_, title),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PHomeActivity class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PHomeActivity__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3PHomeEntryOrderPlayer

@implementation PB3PHomeEntryOrderPlayer

@dynamic orderNum;
@dynamic voiceURL;
@dynamic briefIntroduction;
@dynamic orderLevel;
@dynamic orderLevelPicture;
@dynamic priceId;
@dynamic priceNum;
@dynamic unit;
@dynamic voiceTime;
@dynamic skillId;
@dynamic gold;
@dynamic skillLevelId;
@dynamic hasBillConf, billConf;
@dynamic skillLevelName;
@dynamic textColor;
@dynamic borderColor;

typedef struct PB3PHomeEntryOrderPlayer__storage_ {
  uint32_t _has_storage_[1];
  int32_t orderNum;
  int32_t orderLevel;
  int32_t priceNum;
  int32_t voiceTime;
  int32_t skillId;
  int32_t gold;
  int32_t skillLevelId;
  NSString *voiceURL;
  NSString *briefIntroduction;
  NSString *orderLevelPicture;
  NSString *unit;
  PB3BillConf *billConf;
  NSString *skillLevelName;
  NSString *textColor;
  NSString *borderColor;
  int64_t priceId;
} PB3PHomeEntryOrderPlayer__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "orderNum",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryOrderPlayer_FieldNumber_OrderNum,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3PHomeEntryOrderPlayer__storage_, orderNum),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "voiceURL",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryOrderPlayer_FieldNumber_VoiceURL,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3PHomeEntryOrderPlayer__storage_, voiceURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "briefIntroduction",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryOrderPlayer_FieldNumber_BriefIntroduction,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3PHomeEntryOrderPlayer__storage_, briefIntroduction),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "orderLevel",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryOrderPlayer_FieldNumber_OrderLevel,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3PHomeEntryOrderPlayer__storage_, orderLevel),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "orderLevelPicture",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryOrderPlayer_FieldNumber_OrderLevelPicture,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3PHomeEntryOrderPlayer__storage_, orderLevelPicture),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "priceId",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryOrderPlayer_FieldNumber_PriceId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PB3PHomeEntryOrderPlayer__storage_, priceId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "priceNum",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryOrderPlayer_FieldNumber_PriceNum,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PB3PHomeEntryOrderPlayer__storage_, priceNum),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "unit",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryOrderPlayer_FieldNumber_Unit,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PB3PHomeEntryOrderPlayer__storage_, unit),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "voiceTime",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryOrderPlayer_FieldNumber_VoiceTime,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(PB3PHomeEntryOrderPlayer__storage_, voiceTime),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "skillId",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryOrderPlayer_FieldNumber_SkillId,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(PB3PHomeEntryOrderPlayer__storage_, skillId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "gold",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryOrderPlayer_FieldNumber_Gold,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(PB3PHomeEntryOrderPlayer__storage_, gold),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "skillLevelId",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryOrderPlayer_FieldNumber_SkillLevelId,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(PB3PHomeEntryOrderPlayer__storage_, skillLevelId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "billConf",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3BillConf),
        .number = PB3PHomeEntryOrderPlayer_FieldNumber_BillConf,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(PB3PHomeEntryOrderPlayer__storage_, billConf),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "skillLevelName",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryOrderPlayer_FieldNumber_SkillLevelName,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(PB3PHomeEntryOrderPlayer__storage_, skillLevelName),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "textColor",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryOrderPlayer_FieldNumber_TextColor,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(PB3PHomeEntryOrderPlayer__storage_, textColor),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "borderColor",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryOrderPlayer_FieldNumber_BorderColor,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(PB3PHomeEntryOrderPlayer__storage_, borderColor),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PHomeEntryOrderPlayer class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PHomeEntryOrderPlayer__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\002\005\241!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3PHomeEntryPlayerList

@implementation PB3PHomeEntryPlayerList

@dynamic listArray, listArray_Count;

typedef struct PB3PHomeEntryPlayerList__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *listArray;
} PB3PHomeEntryPlayerList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "listArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3PHomeEntryPlayer),
        .number = PB3PHomeEntryPlayerList_FieldNumber_ListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayerList__storage_, listArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PHomeEntryPlayerList class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PHomeEntryPlayerList__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3PHomeEntryPlayer

@implementation PB3PHomeEntryPlayer

@dynamic id_p;
@dynamic index;
@dynamic id2;
@dynamic name;
@dynamic icon;
@dynamic hasRoomPasswd;
@dynamic recommendWord;
@dynamic fans;
@dynamic roomId;
@dynamic sex;
@dynamic hasOrderInfo, orderInfo;
@dynamic coverPic;
@dynamic flag;
@dynamic signature;
@dynamic distances;
@dynamic province;
@dynamic municipality;
@dynamic county;
@dynamic addressDetail;
@dynamic recommendTags;
@dynamic billIconArray, billIconArray_Count;
@dynamic isOnline;
@dynamic imageListArray, imageListArray_Count;
@dynamic updateTime;
@dynamic orderInfoListArray, orderInfoListArray_Count;
@dynamic talkArray, talkArray_Count;
@dynamic playerAbilityArray, playerAbilityArray_Count;
@dynamic voiceURL;
@dynamic voiceTime;
@dynamic recommendWordIcon;
@dynamic userStateContent;
@dynamic authTagsArray, authTagsArray_Count;
@dynamic billIconInfoArray, billIconInfoArray_Count;
@dynamic gameName;
@dynamic age;
@dynamic constellation;
@dynamic isChair;
@dynamic actionTalk;
@dynamic nobilityId;
@dynamic hasCpInfo, cpInfo;
@dynamic mind;

typedef struct PB3PHomeEntryPlayer__storage_ {
  uint32_t _has_storage_[2];
  int32_t index;
  PB3PluginSexType sex;
  int32_t distances;
  int32_t voiceTime;
  int32_t age;
  int32_t nobilityId;
  NSString *name;
  NSString *icon;
  NSString *recommendWord;
  PB3PHomeEntryOrderPlayer *orderInfo;
  NSString *coverPic;
  NSString *signature;
  NSString *province;
  NSString *municipality;
  NSString *county;
  NSString *addressDetail;
  NSString *recommendTags;
  NSMutableArray *billIconArray;
  NSMutableArray *imageListArray;
  NSMutableArray *orderInfoListArray;
  NSMutableArray *talkArray;
  NSMutableArray *playerAbilityArray;
  NSString *voiceURL;
  NSString *recommendWordIcon;
  NSString *userStateContent;
  NSMutableArray *authTagsArray;
  NSMutableArray *billIconInfoArray;
  NSString *gameName;
  NSString *constellation;
  NSString *actionTalk;
  PB3PHomeCPPlayer *cpInfo;
  NSString *mind;
  int64_t id_p;
  int64_t id2;
  int64_t fans;
  int64_t roomId;
  int64_t flag;
  int64_t updateTime;
} PB3PHomeEntryPlayer__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryPlayer_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "index",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryPlayer_FieldNumber_Index,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, index),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "id2",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryPlayer_FieldNumber_Id2,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, id2),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt64,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryPlayer_FieldNumber_Name,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "icon",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryPlayer_FieldNumber_Icon,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, icon),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "hasRoomPasswd",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryPlayer_FieldNumber_HasRoomPasswd,
        .hasIndex = 5,
        .offset = 6,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "recommendWord",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryPlayer_FieldNumber_RecommendWord,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, recommendWord),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fans",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryPlayer_FieldNumber_Fans,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, fans),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt64,
      },
      {
        .name = "roomId",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryPlayer_FieldNumber_RoomId,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, roomId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt64,
      },
      {
        .name = "sex",
        .dataTypeSpecific.enumDescFunc = PB3PluginSexType_EnumDescriptor,
        .number = PB3PHomeEntryPlayer_FieldNumber_Sex,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, sex),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "orderInfo",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3PHomeEntryOrderPlayer),
        .number = PB3PHomeEntryPlayer_FieldNumber_OrderInfo,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, orderInfo),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "coverPic",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryPlayer_FieldNumber_CoverPic,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, coverPic),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "flag",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryPlayer_FieldNumber_Flag,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, flag),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt64,
      },
      {
        .name = "signature",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryPlayer_FieldNumber_Signature,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, signature),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "distances",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryPlayer_FieldNumber_Distances,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, distances),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "province",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryPlayer_FieldNumber_Province,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, province),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "municipality",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryPlayer_FieldNumber_Municipality,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, municipality),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "county",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryPlayer_FieldNumber_County,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, county),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "addressDetail",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryPlayer_FieldNumber_AddressDetail,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, addressDetail),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "recommendTags",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryPlayer_FieldNumber_RecommendTags,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, recommendTags),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "billIconArray",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryPlayer_FieldNumber_BillIconArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, billIconArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isOnline",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryPlayer_FieldNumber_IsOnline,
        .hasIndex = 21,
        .offset = 22,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "imageListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3PlayerImageInfo),
        .number = PB3PHomeEntryPlayer_FieldNumber_ImageListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, imageListArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "updateTime",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryPlayer_FieldNumber_UpdateTime,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, updateTime),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "orderInfoListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3PHomeEntryOrderPlayer),
        .number = PB3PHomeEntryPlayer_FieldNumber_OrderInfoListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, orderInfoListArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "talkArray",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryPlayer_FieldNumber_TalkArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, talkArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "playerAbilityArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3PHomePlayerAbility),
        .number = PB3PHomeEntryPlayer_FieldNumber_PlayerAbilityArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, playerAbilityArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "voiceURL",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryPlayer_FieldNumber_VoiceURL,
        .hasIndex = 24,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, voiceURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "voiceTime",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryPlayer_FieldNumber_VoiceTime,
        .hasIndex = 25,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, voiceTime),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "recommendWordIcon",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryPlayer_FieldNumber_RecommendWordIcon,
        .hasIndex = 26,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, recommendWordIcon),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userStateContent",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryPlayer_FieldNumber_UserStateContent,
        .hasIndex = 27,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, userStateContent),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "authTagsArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3AuthTag),
        .number = PB3PHomeEntryPlayer_FieldNumber_AuthTagsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, authTagsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "billIconInfoArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3BillPlayerIconInfo),
        .number = PB3PHomeEntryPlayer_FieldNumber_BillIconInfoArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, billIconInfoArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "gameName",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryPlayer_FieldNumber_GameName,
        .hasIndex = 28,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, gameName),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "age",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryPlayer_FieldNumber_Age,
        .hasIndex = 29,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, age),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "constellation",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryPlayer_FieldNumber_Constellation,
        .hasIndex = 30,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, constellation),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isChair",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryPlayer_FieldNumber_IsChair,
        .hasIndex = 31,
        .offset = 32,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "actionTalk",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryPlayer_FieldNumber_ActionTalk,
        .hasIndex = 33,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, actionTalk),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "nobilityId",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryPlayer_FieldNumber_NobilityId,
        .hasIndex = 34,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, nobilityId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "cpInfo",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3PHomeCPPlayer),
        .number = PB3PHomeEntryPlayer_FieldNumber_CpInfo,
        .hasIndex = 35,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, cpInfo),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "mind",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryPlayer_FieldNumber_Mind,
        .hasIndex = 36,
        .offset = (uint32_t)offsetof(PB3PHomeEntryPlayer__storage_, mind),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PHomeEntryPlayer class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PHomeEntryPlayer__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\034\005\241!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3PHomeEntryPlayer_Sex_RawValue(PB3PHomeEntryPlayer *message) {
  GPBDescriptor *descriptor = [PB3PHomeEntryPlayer descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeEntryPlayer_FieldNumber_Sex];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3PHomeEntryPlayer_Sex_RawValue(PB3PHomeEntryPlayer *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3PHomeEntryPlayer descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeEntryPlayer_FieldNumber_Sex];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3BillConf

@implementation PB3BillConf

@dynamic skillId;
@dynamic name;
@dynamic skillIconURL;
@dynamic skillStartColor;
@dynamic skillEndColor;
@dynamic levSkillStartColor;
@dynamic levSkillEndColor;

typedef struct PB3BillConf__storage_ {
  uint32_t _has_storage_[1];
  int32_t skillId;
  NSString *name;
  NSString *skillIconURL;
  NSString *skillStartColor;
  NSString *skillEndColor;
  NSString *levSkillStartColor;
  NSString *levSkillEndColor;
} PB3BillConf__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "skillId",
        .dataTypeSpecific.className = NULL,
        .number = PB3BillConf_FieldNumber_SkillId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3BillConf__storage_, skillId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = PB3BillConf_FieldNumber_Name,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3BillConf__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "skillIconURL",
        .dataTypeSpecific.className = NULL,
        .number = PB3BillConf_FieldNumber_SkillIconURL,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3BillConf__storage_, skillIconURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "skillStartColor",
        .dataTypeSpecific.className = NULL,
        .number = PB3BillConf_FieldNumber_SkillStartColor,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3BillConf__storage_, skillStartColor),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "skillEndColor",
        .dataTypeSpecific.className = NULL,
        .number = PB3BillConf_FieldNumber_SkillEndColor,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3BillConf__storage_, skillEndColor),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "levSkillStartColor",
        .dataTypeSpecific.className = NULL,
        .number = PB3BillConf_FieldNumber_LevSkillStartColor,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PB3BillConf__storage_, levSkillStartColor),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "levSkillEndColor",
        .dataTypeSpecific.className = NULL,
        .number = PB3BillConf_FieldNumber_LevSkillEndColor,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PB3BillConf__storage_, levSkillEndColor),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3BillConf class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3BillConf__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\003\005\244\241!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3BillPlayerIconInfo

@implementation PB3BillPlayerIconInfo

@dynamic URL;
@dynamic iconLocation;

typedef struct PB3BillPlayerIconInfo__storage_ {
  uint32_t _has_storage_[1];
  PB3IconLocationType iconLocation;
  NSString *URL;
} PB3BillPlayerIconInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "URL",
        .dataTypeSpecific.className = NULL,
        .number = PB3BillPlayerIconInfo_FieldNumber_URL,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3BillPlayerIconInfo__storage_, URL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "iconLocation",
        .dataTypeSpecific.enumDescFunc = PB3IconLocationType_EnumDescriptor,
        .number = PB3BillPlayerIconInfo_FieldNumber_IconLocation,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3BillPlayerIconInfo__storage_, iconLocation),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3BillPlayerIconInfo class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3BillPlayerIconInfo__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001!!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3BillPlayerIconInfo_IconLocation_RawValue(PB3BillPlayerIconInfo *message) {
  GPBDescriptor *descriptor = [PB3BillPlayerIconInfo descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3BillPlayerIconInfo_FieldNumber_IconLocation];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3BillPlayerIconInfo_IconLocation_RawValue(PB3BillPlayerIconInfo *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3BillPlayerIconInfo descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3BillPlayerIconInfo_FieldNumber_IconLocation];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3AuthTag

@implementation PB3AuthTag

@dynamic icon;

typedef struct PB3AuthTag__storage_ {
  uint32_t _has_storage_[1];
  NSString *icon;
} PB3AuthTag__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "icon",
        .dataTypeSpecific.className = NULL,
        .number = PB3AuthTag_FieldNumber_Icon,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3AuthTag__storage_, icon),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3AuthTag class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3AuthTag__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3PHomePlayerAbility

@implementation PB3PHomePlayerAbility

@dynamic abilityName;
@dynamic abilityValue;

typedef struct PB3PHomePlayerAbility__storage_ {
  uint32_t _has_storage_[1];
  int32_t abilityValue;
  NSString *abilityName;
} PB3PHomePlayerAbility__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "abilityName",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomePlayerAbility_FieldNumber_AbilityName,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3PHomePlayerAbility__storage_, abilityName),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "abilityValue",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomePlayerAbility_FieldNumber_AbilityValue,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3PHomePlayerAbility__storage_, abilityValue),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PHomePlayerAbility class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PHomePlayerAbility__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3PHomeEntryBannerList

@implementation PB3PHomeEntryBannerList

@dynamic listArray, listArray_Count;

typedef struct PB3PHomeEntryBannerList__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *listArray;
} PB3PHomeEntryBannerList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "listArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3PHomeEntryBanner),
        .number = PB3PHomeEntryBannerList_FieldNumber_ListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBannerList__storage_, listArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PHomeEntryBannerList class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PHomeEntryBannerList__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3PHomeEntryBanner

@implementation PB3PHomeEntryBanner

@dynamic id_p;
@dynamic index;
@dynamic URL;
@dynamic route;
@dynamic name;
@dynamic onlineNum;
@dynamic position;

typedef struct PB3PHomeEntryBanner__storage_ {
  uint32_t _has_storage_[1];
  int32_t index;
  PB3BannerPosition position;
  NSString *URL;
  NSString *route;
  NSString *name;
  int64_t id_p;
  int64_t onlineNum;
} PB3PHomeEntryBanner__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBanner_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBanner__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "index",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBanner_FieldNumber_Index,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBanner__storage_, index),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "URL",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBanner_FieldNumber_URL,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBanner__storage_, URL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "route",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBanner_FieldNumber_Route,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBanner__storage_, route),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBanner_FieldNumber_Name,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBanner__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "onlineNum",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBanner_FieldNumber_OnlineNum,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBanner__storage_, onlineNum),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "position",
        .dataTypeSpecific.enumDescFunc = PB3BannerPosition_EnumDescriptor,
        .number = PB3PHomeEntryBanner_FieldNumber_Position,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBanner__storage_, position),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PHomeEntryBanner class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PHomeEntryBanner__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\003!!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3PHomeEntryBanner_Position_RawValue(PB3PHomeEntryBanner *message) {
  GPBDescriptor *descriptor = [PB3PHomeEntryBanner descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeEntryBanner_FieldNumber_Position];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3PHomeEntryBanner_Position_RawValue(PB3PHomeEntryBanner *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3PHomeEntryBanner descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeEntryBanner_FieldNumber_Position];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3PHomeEntrySubNavList

@implementation PB3PHomeEntrySubNavList

@dynamic listArray, listArray_Count;

typedef struct PB3PHomeEntrySubNavList__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *listArray;
} PB3PHomeEntrySubNavList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "listArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3PHomeEntrySubNav),
        .number = PB3PHomeEntrySubNavList_FieldNumber_ListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeEntrySubNavList__storage_, listArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PHomeEntrySubNavList class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PHomeEntrySubNavList__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3PHomeEntrySubNav

@implementation PB3PHomeEntrySubNav

@dynamic id_p;
@dynamic index;
@dynamic name;
@dynamic imgURL;
@dynamic selectedImgURL;
@dynamic isDefault;
@dynamic navStyle;
@dynamic showSelectSex;
@dynamic classify;
@dynamic buttonsArray, buttonsArray_Count;
@dynamic redNum;

typedef struct PB3PHomeEntrySubNav__storage_ {
  uint32_t _has_storage_[1];
  int32_t id_p;
  int32_t index;
  PB3PHomeNavStyle navStyle;
  PB3PHomeClassify classify;
  int32_t redNum;
  NSString *name;
  NSString *imgURL;
  NSString *selectedImgURL;
  NSMutableArray *buttonsArray;
} PB3PHomeEntrySubNav__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntrySubNav_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3PHomeEntrySubNav__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "index",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntrySubNav_FieldNumber_Index,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3PHomeEntrySubNav__storage_, index),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntrySubNav_FieldNumber_Name,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3PHomeEntrySubNav__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "imgURL",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntrySubNav_FieldNumber_ImgURL,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3PHomeEntrySubNav__storage_, imgURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "selectedImgURL",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntrySubNav_FieldNumber_SelectedImgURL,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3PHomeEntrySubNav__storage_, selectedImgURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isDefault",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntrySubNav_FieldNumber_IsDefault,
        .hasIndex = 5,
        .offset = 6,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "navStyle",
        .dataTypeSpecific.enumDescFunc = PB3PHomeNavStyle_EnumDescriptor,
        .number = PB3PHomeEntrySubNav_FieldNumber_NavStyle,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PB3PHomeEntrySubNav__storage_, navStyle),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "showSelectSex",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntrySubNav_FieldNumber_ShowSelectSex,
        .hasIndex = 8,
        .offset = 9,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "classify",
        .dataTypeSpecific.enumDescFunc = PB3PHomeClassify_EnumDescriptor,
        .number = PB3PHomeEntrySubNav_FieldNumber_Classify,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(PB3PHomeEntrySubNav__storage_, classify),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "buttonsArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3Button),
        .number = PB3PHomeEntrySubNav_FieldNumber_ButtonsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeEntrySubNav__storage_, buttonsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "redNum",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntrySubNav_FieldNumber_RedNum,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(PB3PHomeEntrySubNav__storage_, redNum),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PHomeEntrySubNav class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PHomeEntrySubNav__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\004\003\241!!\000\005\010\243\241!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3PHomeEntrySubNav_NavStyle_RawValue(PB3PHomeEntrySubNav *message) {
  GPBDescriptor *descriptor = [PB3PHomeEntrySubNav descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeEntrySubNav_FieldNumber_NavStyle];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3PHomeEntrySubNav_NavStyle_RawValue(PB3PHomeEntrySubNav *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3PHomeEntrySubNav descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeEntrySubNav_FieldNumber_NavStyle];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t PB3PHomeEntrySubNav_Classify_RawValue(PB3PHomeEntrySubNav *message) {
  GPBDescriptor *descriptor = [PB3PHomeEntrySubNav descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeEntrySubNav_FieldNumber_Classify];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3PHomeEntrySubNav_Classify_RawValue(PB3PHomeEntrySubNav *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3PHomeEntrySubNav descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeEntrySubNav_FieldNumber_Classify];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3PHomeNav

@implementation PB3PHomeNav

@dynamic id_p;
@dynamic name;
@dynamic sort;
@dynamic isDefault;
@dynamic modListArray, modListArray_Count;
@dynamic imgURL;
@dynamic selectedImgURL;
@dynamic navStyle;
@dynamic isFixed;
@dynamic navIcon;
@dynamic bgURL;
@dynamic buttonsArray, buttonsArray_Count;
@dynamic unselectImgURL;
@dynamic selectImgURL;

typedef struct PB3PHomeNav__storage_ {
  uint32_t _has_storage_[1];
  int32_t id_p;
  int32_t sort;
  PB3PHomeNavStyle navStyle;
  NSString *name;
  NSMutableArray *modListArray;
  NSString *imgURL;
  NSString *selectedImgURL;
  NSString *navIcon;
  NSString *bgURL;
  NSMutableArray *buttonsArray;
  NSString *unselectImgURL;
  NSString *selectImgURL;
} PB3PHomeNav__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeNav_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3PHomeNav__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeNav_FieldNumber_Name,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3PHomeNav__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sort",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeNav_FieldNumber_Sort,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3PHomeNav__storage_, sort),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "isDefault",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeNav_FieldNumber_IsDefault,
        .hasIndex = 3,
        .offset = 4,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "modListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3PHomeMod),
        .number = PB3PHomeNav_FieldNumber_ModListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeNav__storage_, modListArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "imgURL",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeNav_FieldNumber_ImgURL,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PB3PHomeNav__storage_, imgURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "selectedImgURL",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeNav_FieldNumber_SelectedImgURL,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PB3PHomeNav__storage_, selectedImgURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "navStyle",
        .dataTypeSpecific.enumDescFunc = PB3PHomeNavStyle_EnumDescriptor,
        .number = PB3PHomeNav_FieldNumber_NavStyle,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PB3PHomeNav__storage_, navStyle),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "isFixed",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeNav_FieldNumber_IsFixed,
        .hasIndex = 8,
        .offset = 9,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "navIcon",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeNav_FieldNumber_NavIcon,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(PB3PHomeNav__storage_, navIcon),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "bgURL",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeNav_FieldNumber_BgURL,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(PB3PHomeNav__storage_, bgURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "buttonsArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3Button),
        .number = PB3PHomeNav_FieldNumber_ButtonsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeNav__storage_, buttonsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "unselectImgURL",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeNav_FieldNumber_UnselectImgURL,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(PB3PHomeNav__storage_, unselectImgURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "selectImgURL",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeNav_FieldNumber_SelectImgURL,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(PB3PHomeNav__storage_, selectImgURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PHomeNav class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PHomeNav__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\006\003\241!!\000\007\010\243\241!!\000\013\002\241!!\000\r\010\243\241!!\000\016\006\243\241!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3PHomeNav_NavStyle_RawValue(PB3PHomeNav *message) {
  GPBDescriptor *descriptor = [PB3PHomeNav descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeNav_FieldNumber_NavStyle];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3PHomeNav_NavStyle_RawValue(PB3PHomeNav *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3PHomeNav descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeNav_FieldNumber_NavStyle];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3Button

@implementation PB3Button

@dynamic buttonIcon;
@dynamic router;
@dynamic butType;

typedef struct PB3Button__storage_ {
  uint32_t _has_storage_[1];
  PB3HomeNavButtonType butType;
  NSString *buttonIcon;
  NSString *router;
} PB3Button__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "buttonIcon",
        .dataTypeSpecific.className = NULL,
        .number = PB3Button_FieldNumber_ButtonIcon,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3Button__storage_, buttonIcon),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "router",
        .dataTypeSpecific.className = NULL,
        .number = PB3Button_FieldNumber_Router,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3Button__storage_, router),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "butType",
        .dataTypeSpecific.enumDescFunc = PB3HomeNavButtonType_EnumDescriptor,
        .number = PB3Button_FieldNumber_ButType,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3Button__storage_, butType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3Button class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3Button__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3Button_ButType_RawValue(PB3Button *message) {
  GPBDescriptor *descriptor = [PB3Button descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3Button_FieldNumber_ButType];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3Button_ButType_RawValue(PB3Button *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3Button descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3Button_FieldNumber_ButType];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3GetPHomeNavReq

@implementation PB3GetPHomeNavReq

@dynamic pageId;
@dynamic type;
@dynamic navId;
@dynamic subNavId;

typedef struct PB3GetPHomeNavReq__storage_ {
  uint32_t _has_storage_[1];
  int32_t pageId;
  PB3HomeType type;
  int32_t navId;
  int32_t subNavId;
} PB3GetPHomeNavReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "pageId",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetPHomeNavReq_FieldNumber_PageId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3GetPHomeNavReq__storage_, pageId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "type",
        .dataTypeSpecific.enumDescFunc = PB3HomeType_EnumDescriptor,
        .number = PB3GetPHomeNavReq_FieldNumber_Type,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3GetPHomeNavReq__storage_, type),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "navId",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetPHomeNavReq_FieldNumber_NavId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3GetPHomeNavReq__storage_, navId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "subNavId",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetPHomeNavReq_FieldNumber_SubNavId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3GetPHomeNavReq__storage_, subNavId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3GetPHomeNavReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3GetPHomeNavReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3GetPHomeNavReq_Type_RawValue(PB3GetPHomeNavReq *message) {
  GPBDescriptor *descriptor = [PB3GetPHomeNavReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3GetPHomeNavReq_FieldNumber_Type];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3GetPHomeNavReq_Type_RawValue(PB3GetPHomeNavReq *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3GetPHomeNavReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3GetPHomeNavReq_FieldNumber_Type];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3GetPHomeNavRes

@implementation PB3GetPHomeNavRes

@dynamic isRemember;
@dynamic navListArray, navListArray_Count;
@dynamic md5;
@dynamic buttonsArray, buttonsArray_Count;
@dynamic redNum;

typedef struct PB3GetPHomeNavRes__storage_ {
  uint32_t _has_storage_[1];
  int32_t redNum;
  NSMutableArray *navListArray;
  NSString *md5;
  NSMutableArray *buttonsArray;
} PB3GetPHomeNavRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "isRemember",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetPHomeNavRes_FieldNumber_IsRemember,
        .hasIndex = 0,
        .offset = 1,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "navListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3PHomeNav),
        .number = PB3GetPHomeNavRes_FieldNumber_NavListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3GetPHomeNavRes__storage_, navListArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "md5",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetPHomeNavRes_FieldNumber_Md5,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3GetPHomeNavRes__storage_, md5),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "buttonsArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3Button),
        .number = PB3GetPHomeNavRes_FieldNumber_ButtonsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3GetPHomeNavRes__storage_, buttonsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "redNum",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetPHomeNavRes_FieldNumber_RedNum,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3GetPHomeNavRes__storage_, redNum),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3GetPHomeNavRes class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3GetPHomeNavRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3GetPHomeModReq

@implementation PB3GetPHomeModReq

@dynamic navId;
@dynamic subNavId;
@dynamic modId;
@dynamic index;
@dynamic isEnd;
@dynamic classify;

typedef struct PB3GetPHomeModReq__storage_ {
  uint32_t _has_storage_[1];
  int32_t navId;
  int32_t subNavId;
  int32_t modId;
  int32_t index;
  PB3PHomeClassify classify;
} PB3GetPHomeModReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "navId",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetPHomeModReq_FieldNumber_NavId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3GetPHomeModReq__storage_, navId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "subNavId",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetPHomeModReq_FieldNumber_SubNavId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3GetPHomeModReq__storage_, subNavId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "modId",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetPHomeModReq_FieldNumber_ModId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3GetPHomeModReq__storage_, modId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "index",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetPHomeModReq_FieldNumber_Index,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3GetPHomeModReq__storage_, index),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "isEnd",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetPHomeModReq_FieldNumber_IsEnd,
        .hasIndex = 4,
        .offset = 5,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "classify",
        .dataTypeSpecific.enumDescFunc = PB3PHomeClassify_EnumDescriptor,
        .number = PB3GetPHomeModReq_FieldNumber_Classify,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PB3GetPHomeModReq__storage_, classify),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3GetPHomeModReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3GetPHomeModReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3GetPHomeModReq_Classify_RawValue(PB3GetPHomeModReq *message) {
  GPBDescriptor *descriptor = [PB3GetPHomeModReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3GetPHomeModReq_FieldNumber_Classify];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3GetPHomeModReq_Classify_RawValue(PB3GetPHomeModReq *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3GetPHomeModReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3GetPHomeModReq_FieldNumber_Classify];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3GetPHomeModRes

@implementation PB3GetPHomeModRes

@dynamic listArray, listArray_Count;

typedef struct PB3GetPHomeModRes__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *listArray;
} PB3GetPHomeModRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "listArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3PHomeMod),
        .number = PB3GetPHomeModRes_FieldNumber_ListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3GetPHomeModRes__storage_, listArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3GetPHomeModRes class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3GetPHomeModRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3GetPHomeCtrlBtnReq

@implementation PB3GetPHomeCtrlBtnReq

@dynamic navId;
@dynamic subNavId;
@dynamic modId;
@dynamic index;
@dynamic moreRule;
@dynamic hasModClassify, modClassify;
@dynamic pageNum;

typedef struct PB3GetPHomeCtrlBtnReq__storage_ {
  uint32_t _has_storage_[1];
  int32_t navId;
  int32_t subNavId;
  int32_t modId;
  int32_t index;
  PB3PHomeMoreRule moreRule;
  int32_t pageNum;
  PB3PHomeModClassify *modClassify;
} PB3GetPHomeCtrlBtnReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "navId",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetPHomeCtrlBtnReq_FieldNumber_NavId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3GetPHomeCtrlBtnReq__storage_, navId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "subNavId",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetPHomeCtrlBtnReq_FieldNumber_SubNavId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3GetPHomeCtrlBtnReq__storage_, subNavId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "modId",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetPHomeCtrlBtnReq_FieldNumber_ModId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3GetPHomeCtrlBtnReq__storage_, modId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "index",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetPHomeCtrlBtnReq_FieldNumber_Index,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3GetPHomeCtrlBtnReq__storage_, index),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "moreRule",
        .dataTypeSpecific.enumDescFunc = PB3PHomeMoreRule_EnumDescriptor,
        .number = PB3GetPHomeCtrlBtnReq_FieldNumber_MoreRule,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3GetPHomeCtrlBtnReq__storage_, moreRule),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "modClassify",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3PHomeModClassify),
        .number = PB3GetPHomeCtrlBtnReq_FieldNumber_ModClassify,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PB3GetPHomeCtrlBtnReq__storage_, modClassify),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "pageNum",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetPHomeCtrlBtnReq_FieldNumber_PageNum,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PB3GetPHomeCtrlBtnReq__storage_, pageNum),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3GetPHomeCtrlBtnReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3GetPHomeCtrlBtnReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3GetPHomeCtrlBtnReq_MoreRule_RawValue(PB3GetPHomeCtrlBtnReq *message) {
  GPBDescriptor *descriptor = [PB3GetPHomeCtrlBtnReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3GetPHomeCtrlBtnReq_FieldNumber_MoreRule];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3GetPHomeCtrlBtnReq_MoreRule_RawValue(PB3GetPHomeCtrlBtnReq *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3GetPHomeCtrlBtnReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3GetPHomeCtrlBtnReq_FieldNumber_MoreRule];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3GetPHomeCtrlBtnRes

@implementation PB3GetPHomeCtrlBtnRes

@dynamic dataType;
@dynamic dataByte;
@dynamic routeType;
@dynamic route;
@dynamic maxIndex;
@dynamic fiterClassify;
@dynamic subPageStyle;
@dynamic topPic;
@dynamic topString;
@dynamic isRouter;
@dynamic photoRouter;
@dynamic isOpenOnline;

typedef struct PB3GetPHomeCtrlBtnRes__storage_ {
  uint32_t _has_storage_[1];
  PB3PHomeDataType dataType;
  PB3PHomeRouteType routeType;
  int32_t maxIndex;
  PB3PHomeClassify fiterClassify;
  PB3PHomeModStyle subPageStyle;
  NSData *dataByte;
  NSString *route;
  NSString *topPic;
  NSString *topString;
  NSString *photoRouter;
} PB3GetPHomeCtrlBtnRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "dataType",
        .dataTypeSpecific.enumDescFunc = PB3PHomeDataType_EnumDescriptor,
        .number = PB3GetPHomeCtrlBtnRes_FieldNumber_DataType,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3GetPHomeCtrlBtnRes__storage_, dataType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "dataByte",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetPHomeCtrlBtnRes_FieldNumber_DataByte,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3GetPHomeCtrlBtnRes__storage_, dataByte),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "routeType",
        .dataTypeSpecific.enumDescFunc = PB3PHomeRouteType_EnumDescriptor,
        .number = PB3GetPHomeCtrlBtnRes_FieldNumber_RouteType,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3GetPHomeCtrlBtnRes__storage_, routeType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "route",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetPHomeCtrlBtnRes_FieldNumber_Route,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3GetPHomeCtrlBtnRes__storage_, route),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "maxIndex",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetPHomeCtrlBtnRes_FieldNumber_MaxIndex,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3GetPHomeCtrlBtnRes__storage_, maxIndex),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "fiterClassify",
        .dataTypeSpecific.enumDescFunc = PB3PHomeClassify_EnumDescriptor,
        .number = PB3GetPHomeCtrlBtnRes_FieldNumber_FiterClassify,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PB3GetPHomeCtrlBtnRes__storage_, fiterClassify),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "subPageStyle",
        .dataTypeSpecific.enumDescFunc = PB3PHomeModStyle_EnumDescriptor,
        .number = PB3GetPHomeCtrlBtnRes_FieldNumber_SubPageStyle,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PB3GetPHomeCtrlBtnRes__storage_, subPageStyle),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "topPic",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetPHomeCtrlBtnRes_FieldNumber_TopPic,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PB3GetPHomeCtrlBtnRes__storage_, topPic),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "topString",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetPHomeCtrlBtnRes_FieldNumber_TopString,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(PB3GetPHomeCtrlBtnRes__storage_, topString),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isRouter",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetPHomeCtrlBtnRes_FieldNumber_IsRouter,
        .hasIndex = 9,
        .offset = 10,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "photoRouter",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetPHomeCtrlBtnRes_FieldNumber_PhotoRouter,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(PB3GetPHomeCtrlBtnRes__storage_, photoRouter),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isOpenOnline",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetPHomeCtrlBtnRes_FieldNumber_IsOpenOnline,
        .hasIndex = 12,
        .offset = 13,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3GetPHomeCtrlBtnRes class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3GetPHomeCtrlBtnRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3GetPHomeCtrlBtnRes_DataType_RawValue(PB3GetPHomeCtrlBtnRes *message) {
  GPBDescriptor *descriptor = [PB3GetPHomeCtrlBtnRes descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3GetPHomeCtrlBtnRes_FieldNumber_DataType];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3GetPHomeCtrlBtnRes_DataType_RawValue(PB3GetPHomeCtrlBtnRes *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3GetPHomeCtrlBtnRes descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3GetPHomeCtrlBtnRes_FieldNumber_DataType];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t PB3GetPHomeCtrlBtnRes_RouteType_RawValue(PB3GetPHomeCtrlBtnRes *message) {
  GPBDescriptor *descriptor = [PB3GetPHomeCtrlBtnRes descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3GetPHomeCtrlBtnRes_FieldNumber_RouteType];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3GetPHomeCtrlBtnRes_RouteType_RawValue(PB3GetPHomeCtrlBtnRes *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3GetPHomeCtrlBtnRes descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3GetPHomeCtrlBtnRes_FieldNumber_RouteType];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t PB3GetPHomeCtrlBtnRes_FiterClassify_RawValue(PB3GetPHomeCtrlBtnRes *message) {
  GPBDescriptor *descriptor = [PB3GetPHomeCtrlBtnRes descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3GetPHomeCtrlBtnRes_FieldNumber_FiterClassify];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3GetPHomeCtrlBtnRes_FiterClassify_RawValue(PB3GetPHomeCtrlBtnRes *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3GetPHomeCtrlBtnRes descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3GetPHomeCtrlBtnRes_FieldNumber_FiterClassify];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t PB3GetPHomeCtrlBtnRes_SubPageStyle_RawValue(PB3GetPHomeCtrlBtnRes *message) {
  GPBDescriptor *descriptor = [PB3GetPHomeCtrlBtnRes descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3GetPHomeCtrlBtnRes_FieldNumber_SubPageStyle];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3GetPHomeCtrlBtnRes_SubPageStyle_RawValue(PB3GetPHomeCtrlBtnRes *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3GetPHomeCtrlBtnRes descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3GetPHomeCtrlBtnRes_FieldNumber_SubPageStyle];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3ClearHomeFootPrintReq

@implementation PB3ClearHomeFootPrintReq

@dynamic type;

typedef struct PB3ClearHomeFootPrintReq__storage_ {
  uint32_t _has_storage_[1];
  PB3ClearFootType type;
} PB3ClearHomeFootPrintReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "type",
        .dataTypeSpecific.enumDescFunc = PB3ClearFootType_EnumDescriptor,
        .number = PB3ClearHomeFootPrintReq_FieldNumber_Type,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3ClearHomeFootPrintReq__storage_, type),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3ClearHomeFootPrintReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3ClearHomeFootPrintReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3ClearHomeFootPrintReq_Type_RawValue(PB3ClearHomeFootPrintReq *message) {
  GPBDescriptor *descriptor = [PB3ClearHomeFootPrintReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3ClearHomeFootPrintReq_FieldNumber_Type];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3ClearHomeFootPrintReq_Type_RawValue(PB3ClearHomeFootPrintReq *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3ClearHomeFootPrintReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3ClearHomeFootPrintReq_FieldNumber_Type];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3ClearHomeFootPrintRes

@implementation PB3ClearHomeFootPrintRes

@dynamic flag;

typedef struct PB3ClearHomeFootPrintRes__storage_ {
  uint32_t _has_storage_[1];
} PB3ClearHomeFootPrintRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "flag",
        .dataTypeSpecific.className = NULL,
        .number = PB3ClearHomeFootPrintRes_FieldNumber_Flag,
        .hasIndex = 0,
        .offset = 1,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3ClearHomeFootPrintRes class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3ClearHomeFootPrintRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3Position

@implementation PB3Position

@dynamic latitude;
@dynamic longitude;
@dynamic province;
@dynamic municipality;
@dynamic county;
@dynamic addressDetail;

typedef struct PB3Position__storage_ {
  uint32_t _has_storage_[1];
  NSString *province;
  NSString *municipality;
  NSString *county;
  NSString *addressDetail;
  double latitude;
  double longitude;
} PB3Position__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "latitude",
        .dataTypeSpecific.className = NULL,
        .number = PB3Position_FieldNumber_Latitude,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3Position__storage_, latitude),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "longitude",
        .dataTypeSpecific.className = NULL,
        .number = PB3Position_FieldNumber_Longitude,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3Position__storage_, longitude),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "province",
        .dataTypeSpecific.className = NULL,
        .number = PB3Position_FieldNumber_Province,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3Position__storage_, province),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "municipality",
        .dataTypeSpecific.className = NULL,
        .number = PB3Position_FieldNumber_Municipality,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3Position__storage_, municipality),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "county",
        .dataTypeSpecific.className = NULL,
        .number = PB3Position_FieldNumber_County,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3Position__storage_, county),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "addressDetail",
        .dataTypeSpecific.className = NULL,
        .number = PB3Position_FieldNumber_AddressDetail,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PB3Position__storage_, addressDetail),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3Position class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3Position__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3PeopleNearbyReq

@implementation PB3PeopleNearbyReq

@dynamic hasInfo, info;

typedef struct PB3PeopleNearbyReq__storage_ {
  uint32_t _has_storage_[1];
  PB3Position *info;
} PB3PeopleNearbyReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "info",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3Position),
        .number = PB3PeopleNearbyReq_FieldNumber_Info,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3PeopleNearbyReq__storage_, info),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PeopleNearbyReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PeopleNearbyReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3PeopleNearbyRes

@implementation PB3PeopleNearbyRes

@dynamic interval;

typedef struct PB3PeopleNearbyRes__storage_ {
  uint32_t _has_storage_[1];
  int32_t interval;
} PB3PeopleNearbyRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "interval",
        .dataTypeSpecific.className = NULL,
        .number = PB3PeopleNearbyRes_FieldNumber_Interval,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3PeopleNearbyRes__storage_, interval),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PeopleNearbyRes class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PeopleNearbyRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3FriendDistanceReq

@implementation PB3FriendDistanceReq

@dynamic friendId;

typedef struct PB3FriendDistanceReq__storage_ {
  uint32_t _has_storage_[1];
  int64_t friendId;
} PB3FriendDistanceReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "friendId",
        .dataTypeSpecific.className = NULL,
        .number = PB3FriendDistanceReq_FieldNumber_FriendId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3FriendDistanceReq__storage_, friendId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3FriendDistanceReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3FriendDistanceReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3FriendDistanceRes

@implementation PB3FriendDistanceRes

@dynamic distances;
@dynamic city;

typedef struct PB3FriendDistanceRes__storage_ {
  uint32_t _has_storage_[1];
  int32_t distances;
  NSString *city;
} PB3FriendDistanceRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "distances",
        .dataTypeSpecific.className = NULL,
        .number = PB3FriendDistanceRes_FieldNumber_Distances,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3FriendDistanceRes__storage_, distances),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "city",
        .dataTypeSpecific.className = NULL,
        .number = PB3FriendDistanceRes_FieldNumber_City,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3FriendDistanceRes__storage_, city),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3FriendDistanceRes class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3FriendDistanceRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3LocationOffReq

@implementation PB3LocationOffReq


typedef struct PB3LocationOffReq__storage_ {
  uint32_t _has_storage_[1];
} PB3LocationOffReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3LocationOffReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(PB3LocationOffReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3LocationOffRes

@implementation PB3LocationOffRes


typedef struct PB3LocationOffRes__storage_ {
  uint32_t _has_storage_[1];
} PB3LocationOffRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3LocationOffRes class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(PB3LocationOffRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3CommunityDataDetail

@implementation PB3CommunityDataDetail

@dynamic style;
@dynamic isEnd;
@dynamic dataType;
@dynamic data_p;
@dynamic defaultImg;
@dynamic fiterClassify;
@dynamic index;

typedef struct PB3CommunityDataDetail__storage_ {
  uint32_t _has_storage_[1];
  PB3PHomeModStyle style;
  PB3PHomeDataType dataType;
  PB3PHomeClassify fiterClassify;
  int32_t index;
  NSData *data_p;
  NSString *defaultImg;
} PB3CommunityDataDetail__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "style",
        .dataTypeSpecific.enumDescFunc = PB3PHomeModStyle_EnumDescriptor,
        .number = PB3CommunityDataDetail_FieldNumber_Style,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3CommunityDataDetail__storage_, style),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "isEnd",
        .dataTypeSpecific.className = NULL,
        .number = PB3CommunityDataDetail_FieldNumber_IsEnd,
        .hasIndex = 1,
        .offset = 2,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "dataType",
        .dataTypeSpecific.enumDescFunc = PB3PHomeDataType_EnumDescriptor,
        .number = PB3CommunityDataDetail_FieldNumber_DataType,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3CommunityDataDetail__storage_, dataType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "data_p",
        .dataTypeSpecific.className = NULL,
        .number = PB3CommunityDataDetail_FieldNumber_Data_p,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3CommunityDataDetail__storage_, data_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "defaultImg",
        .dataTypeSpecific.className = NULL,
        .number = PB3CommunityDataDetail_FieldNumber_DefaultImg,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PB3CommunityDataDetail__storage_, defaultImg),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fiterClassify",
        .dataTypeSpecific.enumDescFunc = PB3PHomeClassify_EnumDescriptor,
        .number = PB3CommunityDataDetail_FieldNumber_FiterClassify,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PB3CommunityDataDetail__storage_, fiterClassify),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "index",
        .dataTypeSpecific.className = NULL,
        .number = PB3CommunityDataDetail_FieldNumber_Index,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PB3CommunityDataDetail__storage_, index),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3CommunityDataDetail class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3CommunityDataDetail__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3CommunityDataDetail_Style_RawValue(PB3CommunityDataDetail *message) {
  GPBDescriptor *descriptor = [PB3CommunityDataDetail descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3CommunityDataDetail_FieldNumber_Style];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3CommunityDataDetail_Style_RawValue(PB3CommunityDataDetail *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3CommunityDataDetail descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3CommunityDataDetail_FieldNumber_Style];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t PB3CommunityDataDetail_DataType_RawValue(PB3CommunityDataDetail *message) {
  GPBDescriptor *descriptor = [PB3CommunityDataDetail descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3CommunityDataDetail_FieldNumber_DataType];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3CommunityDataDetail_DataType_RawValue(PB3CommunityDataDetail *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3CommunityDataDetail descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3CommunityDataDetail_FieldNumber_DataType];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t PB3CommunityDataDetail_FiterClassify_RawValue(PB3CommunityDataDetail *message) {
  GPBDescriptor *descriptor = [PB3CommunityDataDetail descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3CommunityDataDetail_FieldNumber_FiterClassify];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3CommunityDataDetail_FiterClassify_RawValue(PB3CommunityDataDetail *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3CommunityDataDetail descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3CommunityDataDetail_FieldNumber_FiterClassify];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3CommunityTagDetailReq

@implementation PB3CommunityTagDetailReq

@dynamic tagId;
@dynamic fiterClassify;
@dynamic index;

typedef struct PB3CommunityTagDetailReq__storage_ {
  uint32_t _has_storage_[1];
  PB3PHomeClassify fiterClassify;
  int32_t index;
  int64_t tagId;
} PB3CommunityTagDetailReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "tagId",
        .dataTypeSpecific.className = NULL,
        .number = PB3CommunityTagDetailReq_FieldNumber_TagId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3CommunityTagDetailReq__storage_, tagId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "fiterClassify",
        .dataTypeSpecific.enumDescFunc = PB3PHomeClassify_EnumDescriptor,
        .number = PB3CommunityTagDetailReq_FieldNumber_FiterClassify,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3CommunityTagDetailReq__storage_, fiterClassify),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "index",
        .dataTypeSpecific.className = NULL,
        .number = PB3CommunityTagDetailReq_FieldNumber_Index,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3CommunityTagDetailReq__storage_, index),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3CommunityTagDetailReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3CommunityTagDetailReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3CommunityTagDetailReq_FiterClassify_RawValue(PB3CommunityTagDetailReq *message) {
  GPBDescriptor *descriptor = [PB3CommunityTagDetailReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3CommunityTagDetailReq_FieldNumber_FiterClassify];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3CommunityTagDetailReq_FiterClassify_RawValue(PB3CommunityTagDetailReq *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3CommunityTagDetailReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3CommunityTagDetailReq_FieldNumber_FiterClassify];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3CommunityGroupDetailReq

@implementation PB3CommunityGroupDetailReq

@dynamic groupId;
@dynamic fiterClassify;
@dynamic index;

typedef struct PB3CommunityGroupDetailReq__storage_ {
  uint32_t _has_storage_[1];
  PB3PHomeClassify fiterClassify;
  int32_t index;
  int64_t groupId;
} PB3CommunityGroupDetailReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "groupId",
        .dataTypeSpecific.className = NULL,
        .number = PB3CommunityGroupDetailReq_FieldNumber_GroupId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3CommunityGroupDetailReq__storage_, groupId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "fiterClassify",
        .dataTypeSpecific.enumDescFunc = PB3PHomeClassify_EnumDescriptor,
        .number = PB3CommunityGroupDetailReq_FieldNumber_FiterClassify,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3CommunityGroupDetailReq__storage_, fiterClassify),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "index",
        .dataTypeSpecific.className = NULL,
        .number = PB3CommunityGroupDetailReq_FieldNumber_Index,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3CommunityGroupDetailReq__storage_, index),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3CommunityGroupDetailReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3CommunityGroupDetailReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3CommunityGroupDetailReq_FiterClassify_RawValue(PB3CommunityGroupDetailReq *message) {
  GPBDescriptor *descriptor = [PB3CommunityGroupDetailReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3CommunityGroupDetailReq_FieldNumber_FiterClassify];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3CommunityGroupDetailReq_FiterClassify_RawValue(PB3CommunityGroupDetailReq *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3CommunityGroupDetailReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3CommunityGroupDetailReq_FieldNumber_FiterClassify];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3ExtraModReq

@implementation PB3ExtraModReq

@dynamic modType;
@dynamic fiterClassify;
@dynamic index;

typedef struct PB3ExtraModReq__storage_ {
  uint32_t _has_storage_[1];
  PB3ExtraModType modType;
  PB3PHomeClassify fiterClassify;
  int32_t index;
} PB3ExtraModReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "modType",
        .dataTypeSpecific.enumDescFunc = PB3ExtraModType_EnumDescriptor,
        .number = PB3ExtraModReq_FieldNumber_ModType,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3ExtraModReq__storage_, modType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "fiterClassify",
        .dataTypeSpecific.enumDescFunc = PB3PHomeClassify_EnumDescriptor,
        .number = PB3ExtraModReq_FieldNumber_FiterClassify,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3ExtraModReq__storage_, fiterClassify),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "index",
        .dataTypeSpecific.className = NULL,
        .number = PB3ExtraModReq_FieldNumber_Index,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3ExtraModReq__storage_, index),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3ExtraModReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3ExtraModReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3ExtraModReq_ModType_RawValue(PB3ExtraModReq *message) {
  GPBDescriptor *descriptor = [PB3ExtraModReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3ExtraModReq_FieldNumber_ModType];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3ExtraModReq_ModType_RawValue(PB3ExtraModReq *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3ExtraModReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3ExtraModReq_FieldNumber_ModType];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t PB3ExtraModReq_FiterClassify_RawValue(PB3ExtraModReq *message) {
  GPBDescriptor *descriptor = [PB3ExtraModReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3ExtraModReq_FieldNumber_FiterClassify];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3ExtraModReq_FiterClassify_RawValue(PB3ExtraModReq *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3ExtraModReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3ExtraModReq_FieldNumber_FiterClassify];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3ExtraModRes

@implementation PB3ExtraModRes

@dynamic dataType;
@dynamic bin;
@dynamic maxIndex;
@dynamic fiterClassify;
@dynamic nextIndex;
@dynamic topPic;
@dynamic topString;

typedef struct PB3ExtraModRes__storage_ {
  uint32_t _has_storage_[1];
  PB3PHomeDataType dataType;
  int32_t maxIndex;
  PB3PHomeClassify fiterClassify;
  int32_t nextIndex;
  NSData *bin;
  NSString *topPic;
  NSString *topString;
} PB3ExtraModRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "dataType",
        .dataTypeSpecific.enumDescFunc = PB3PHomeDataType_EnumDescriptor,
        .number = PB3ExtraModRes_FieldNumber_DataType,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3ExtraModRes__storage_, dataType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "bin",
        .dataTypeSpecific.className = NULL,
        .number = PB3ExtraModRes_FieldNumber_Bin,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3ExtraModRes__storage_, bin),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "maxIndex",
        .dataTypeSpecific.className = NULL,
        .number = PB3ExtraModRes_FieldNumber_MaxIndex,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3ExtraModRes__storage_, maxIndex),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "fiterClassify",
        .dataTypeSpecific.enumDescFunc = PB3PHomeClassify_EnumDescriptor,
        .number = PB3ExtraModRes_FieldNumber_FiterClassify,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3ExtraModRes__storage_, fiterClassify),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "nextIndex",
        .dataTypeSpecific.className = NULL,
        .number = PB3ExtraModRes_FieldNumber_NextIndex,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3ExtraModRes__storage_, nextIndex),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "topPic",
        .dataTypeSpecific.className = NULL,
        .number = PB3ExtraModRes_FieldNumber_TopPic,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PB3ExtraModRes__storage_, topPic),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "topString",
        .dataTypeSpecific.className = NULL,
        .number = PB3ExtraModRes_FieldNumber_TopString,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PB3ExtraModRes__storage_, topString),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3ExtraModRes class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3ExtraModRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3ExtraModRes_DataType_RawValue(PB3ExtraModRes *message) {
  GPBDescriptor *descriptor = [PB3ExtraModRes descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3ExtraModRes_FieldNumber_DataType];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3ExtraModRes_DataType_RawValue(PB3ExtraModRes *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3ExtraModRes descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3ExtraModRes_FieldNumber_DataType];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t PB3ExtraModRes_FiterClassify_RawValue(PB3ExtraModRes *message) {
  GPBDescriptor *descriptor = [PB3ExtraModRes descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3ExtraModRes_FieldNumber_FiterClassify];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3ExtraModRes_FiterClassify_RawValue(PB3ExtraModRes *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3ExtraModRes descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3ExtraModRes_FieldNumber_FiterClassify];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3RadioStationList

@implementation PB3RadioStationList

@dynamic listArray, listArray_Count;

typedef struct PB3RadioStationList__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *listArray;
} PB3RadioStationList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "listArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3RadioStationRoom),
        .number = PB3RadioStationList_FieldNumber_ListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3RadioStationList__storage_, listArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3RadioStationList class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3RadioStationList__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3RadioStationRoom

@implementation PB3RadioStationRoom

@dynamic roomId;
@dynamic roomId2;
@dynamic roomName;
@dynamic briefIntroduction;
@dynamic cover;
@dynamic hot;

typedef struct PB3RadioStationRoom__storage_ {
  uint32_t _has_storage_[1];
  int32_t hot;
  NSString *roomName;
  NSString *briefIntroduction;
  NSString *cover;
  int64_t roomId;
  int64_t roomId2;
} PB3RadioStationRoom__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "roomId",
        .dataTypeSpecific.className = NULL,
        .number = PB3RadioStationRoom_FieldNumber_RoomId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3RadioStationRoom__storage_, roomId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "roomId2",
        .dataTypeSpecific.className = NULL,
        .number = PB3RadioStationRoom_FieldNumber_RoomId2,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3RadioStationRoom__storage_, roomId2),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "roomName",
        .dataTypeSpecific.className = NULL,
        .number = PB3RadioStationRoom_FieldNumber_RoomName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3RadioStationRoom__storage_, roomName),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "briefIntroduction",
        .dataTypeSpecific.className = NULL,
        .number = PB3RadioStationRoom_FieldNumber_BriefIntroduction,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3RadioStationRoom__storage_, briefIntroduction),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "cover",
        .dataTypeSpecific.className = NULL,
        .number = PB3RadioStationRoom_FieldNumber_Cover,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3RadioStationRoom__storage_, cover),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "hot",
        .dataTypeSpecific.className = NULL,
        .number = PB3RadioStationRoom_FieldNumber_Hot,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PB3RadioStationRoom__storage_, hot),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3RadioStationRoom class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3RadioStationRoom__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3CommentInfo

@implementation PB3CommentInfo

@dynamic id_p;
@dynamic articleId;
@dynamic articleName;
@dynamic content;
@dynamic likeCount;
@dynamic commentCount;
@dynamic parentId;
@dynamic userId;
@dynamic userName;
@dynamic userIcon;
@dynamic charmLevel;
@dynamic wealthlEvel;
@dynamic toUserId;
@dynamic toUserName;
@dynamic hasLike;
@dynamic createAt;
@dynamic childCommentArray, childCommentArray_Count;
@dynamic isTop;
@dynamic likeNum;

typedef struct PB3CommentInfo__storage_ {
  uint32_t _has_storage_[1];
  int32_t charmLevel;
  int32_t wealthlEvel;
  int32_t likeNum;
  NSString *articleName;
  NSString *content;
  NSString *userName;
  NSString *userIcon;
  NSString *toUserName;
  NSMutableArray *childCommentArray;
  int64_t id_p;
  int64_t articleId;
  int64_t likeCount;
  int64_t commentCount;
  int64_t parentId;
  int64_t userId;
  int64_t toUserId;
  int64_t createAt;
} PB3CommentInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = PB3CommentInfo_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3CommentInfo__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "articleId",
        .dataTypeSpecific.className = NULL,
        .number = PB3CommentInfo_FieldNumber_ArticleId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3CommentInfo__storage_, articleId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "articleName",
        .dataTypeSpecific.className = NULL,
        .number = PB3CommentInfo_FieldNumber_ArticleName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3CommentInfo__storage_, articleName),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "content",
        .dataTypeSpecific.className = NULL,
        .number = PB3CommentInfo_FieldNumber_Content,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3CommentInfo__storage_, content),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "likeCount",
        .dataTypeSpecific.className = NULL,
        .number = PB3CommentInfo_FieldNumber_LikeCount,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3CommentInfo__storage_, likeCount),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "commentCount",
        .dataTypeSpecific.className = NULL,
        .number = PB3CommentInfo_FieldNumber_CommentCount,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PB3CommentInfo__storage_, commentCount),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "parentId",
        .dataTypeSpecific.className = NULL,
        .number = PB3CommentInfo_FieldNumber_ParentId,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PB3CommentInfo__storage_, parentId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = PB3CommentInfo_FieldNumber_UserId,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PB3CommentInfo__storage_, userId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "userName",
        .dataTypeSpecific.className = NULL,
        .number = PB3CommentInfo_FieldNumber_UserName,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(PB3CommentInfo__storage_, userName),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userIcon",
        .dataTypeSpecific.className = NULL,
        .number = PB3CommentInfo_FieldNumber_UserIcon,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(PB3CommentInfo__storage_, userIcon),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "charmLevel",
        .dataTypeSpecific.className = NULL,
        .number = PB3CommentInfo_FieldNumber_CharmLevel,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(PB3CommentInfo__storage_, charmLevel),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt32,
      },
      {
        .name = "wealthlEvel",
        .dataTypeSpecific.className = NULL,
        .number = PB3CommentInfo_FieldNumber_WealthlEvel,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(PB3CommentInfo__storage_, wealthlEvel),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt32,
      },
      {
        .name = "toUserId",
        .dataTypeSpecific.className = NULL,
        .number = PB3CommentInfo_FieldNumber_ToUserId,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(PB3CommentInfo__storage_, toUserId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "toUserName",
        .dataTypeSpecific.className = NULL,
        .number = PB3CommentInfo_FieldNumber_ToUserName,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(PB3CommentInfo__storage_, toUserName),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "hasLike",
        .dataTypeSpecific.className = NULL,
        .number = PB3CommentInfo_FieldNumber_HasLike,
        .hasIndex = 14,
        .offset = 15,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "createAt",
        .dataTypeSpecific.className = NULL,
        .number = PB3CommentInfo_FieldNumber_CreateAt,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(PB3CommentInfo__storage_, createAt),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "childCommentArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3CommentInfo),
        .number = PB3CommentInfo_FieldNumber_ChildCommentArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3CommentInfo__storage_, childCommentArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "isTop",
        .dataTypeSpecific.className = NULL,
        .number = PB3CommentInfo_FieldNumber_IsTop,
        .hasIndex = 17,
        .offset = 18,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "likeNum",
        .dataTypeSpecific.className = NULL,
        .number = PB3CommentInfo_FieldNumber_LikeNum,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(PB3CommentInfo__storage_, likeNum),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3CommentInfo class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3CommentInfo__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\023\005\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3GetHotCommentListByArticleIdReq

@implementation PB3GetHotCommentListByArticleIdReq

@dynamic userId;
@dynamic articleId;

typedef struct PB3GetHotCommentListByArticleIdReq__storage_ {
  uint32_t _has_storage_[1];
  int64_t userId;
  int64_t articleId;
} PB3GetHotCommentListByArticleIdReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetHotCommentListByArticleIdReq_FieldNumber_UserId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3GetHotCommentListByArticleIdReq__storage_, userId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "articleId",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetHotCommentListByArticleIdReq_FieldNumber_ArticleId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3GetHotCommentListByArticleIdReq__storage_, articleId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3GetHotCommentListByArticleIdReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3GetHotCommentListByArticleIdReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3GetHotCommentListByArticleIdRes

@implementation PB3GetHotCommentListByArticleIdRes

@dynamic commentListArray, commentListArray_Count;

typedef struct PB3GetHotCommentListByArticleIdRes__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *commentListArray;
} PB3GetHotCommentListByArticleIdRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "commentListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3CommentInfo),
        .number = PB3GetHotCommentListByArticleIdRes_FieldNumber_CommentListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3GetHotCommentListByArticleIdRes__storage_, commentListArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3GetHotCommentListByArticleIdRes class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3GetHotCommentListByArticleIdRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3GetCommentListByArticleIdReq

@implementation PB3GetCommentListByArticleIdReq

@dynamic userId;
@dynamic articleId;
@dynamic parentId;
@dynamic lastId;
@dynamic pageSize;

typedef struct PB3GetCommentListByArticleIdReq__storage_ {
  uint32_t _has_storage_[1];
  int64_t userId;
  int64_t articleId;
  int64_t parentId;
  int64_t lastId;
  int64_t pageSize;
} PB3GetCommentListByArticleIdReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetCommentListByArticleIdReq_FieldNumber_UserId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3GetCommentListByArticleIdReq__storage_, userId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "articleId",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetCommentListByArticleIdReq_FieldNumber_ArticleId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3GetCommentListByArticleIdReq__storage_, articleId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "parentId",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetCommentListByArticleIdReq_FieldNumber_ParentId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3GetCommentListByArticleIdReq__storage_, parentId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "lastId",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetCommentListByArticleIdReq_FieldNumber_LastId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3GetCommentListByArticleIdReq__storage_, lastId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "pageSize",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetCommentListByArticleIdReq_FieldNumber_PageSize,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3GetCommentListByArticleIdReq__storage_, pageSize),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3GetCommentListByArticleIdReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3GetCommentListByArticleIdReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\004\006\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3GetCommentListByArticleIdRes

@implementation PB3GetCommentListByArticleIdRes

@dynamic commentListArray, commentListArray_Count;
@dynamic hasMore;
@dynamic likeCount;
@dynamic commentCount;
@dynamic like;

typedef struct PB3GetCommentListByArticleIdRes__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *commentListArray;
  int64_t likeCount;
  int64_t commentCount;
} PB3GetCommentListByArticleIdRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "commentListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3CommentInfo),
        .number = PB3GetCommentListByArticleIdRes_FieldNumber_CommentListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3GetCommentListByArticleIdRes__storage_, commentListArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "hasMore",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetCommentListByArticleIdRes_FieldNumber_HasMore,
        .hasIndex = 0,
        .offset = 1,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "likeCount",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetCommentListByArticleIdRes_FieldNumber_LikeCount,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3GetCommentListByArticleIdRes__storage_, likeCount),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "commentCount",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetCommentListByArticleIdRes_FieldNumber_CommentCount,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3GetCommentListByArticleIdRes__storage_, commentCount),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "like",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetCommentListByArticleIdRes_FieldNumber_Like,
        .hasIndex = 4,
        .offset = 5,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3GetCommentListByArticleIdRes class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3GetCommentListByArticleIdRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3GetCommentInfoByArticleIdReq

@implementation PB3GetCommentInfoByArticleIdReq

@dynamic userId;
@dynamic articleId;
@dynamic commentId;

typedef struct PB3GetCommentInfoByArticleIdReq__storage_ {
  uint32_t _has_storage_[1];
  int64_t userId;
  int64_t articleId;
  int64_t commentId;
} PB3GetCommentInfoByArticleIdReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetCommentInfoByArticleIdReq_FieldNumber_UserId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3GetCommentInfoByArticleIdReq__storage_, userId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "articleId",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetCommentInfoByArticleIdReq_FieldNumber_ArticleId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3GetCommentInfoByArticleIdReq__storage_, articleId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "commentId",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetCommentInfoByArticleIdReq_FieldNumber_CommentId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3GetCommentInfoByArticleIdReq__storage_, commentId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3GetCommentInfoByArticleIdReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3GetCommentInfoByArticleIdReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3GetCommentInfoByArticleIdRes

@implementation PB3GetCommentInfoByArticleIdRes

@dynamic hasCommentInfo, commentInfo;
@dynamic hotCommentListArray, hotCommentListArray_Count;

typedef struct PB3GetCommentInfoByArticleIdRes__storage_ {
  uint32_t _has_storage_[1];
  PB3CommentInfo *commentInfo;
  NSMutableArray *hotCommentListArray;
} PB3GetCommentInfoByArticleIdRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "commentInfo",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3CommentInfo),
        .number = PB3GetCommentInfoByArticleIdRes_FieldNumber_CommentInfo,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3GetCommentInfoByArticleIdRes__storage_, commentInfo),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "hotCommentListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3CommentInfo),
        .number = PB3GetCommentInfoByArticleIdRes_FieldNumber_HotCommentListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3GetCommentInfoByArticleIdRes__storage_, hotCommentListArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3GetCommentInfoByArticleIdRes class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3GetCommentInfoByArticleIdRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3AddArticleCommentReq

@implementation PB3AddArticleCommentReq

@dynamic articleId;
@dynamic articleName;
@dynamic parentId;
@dynamic content;
@dynamic toUserId;
@dynamic toUserName;
@dynamic commentURL;

typedef struct PB3AddArticleCommentReq__storage_ {
  uint32_t _has_storage_[1];
  NSString *articleName;
  NSString *content;
  NSString *toUserName;
  NSString *commentURL;
  int64_t articleId;
  int64_t parentId;
  int64_t toUserId;
} PB3AddArticleCommentReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "articleId",
        .dataTypeSpecific.className = NULL,
        .number = PB3AddArticleCommentReq_FieldNumber_ArticleId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3AddArticleCommentReq__storage_, articleId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "articleName",
        .dataTypeSpecific.className = NULL,
        .number = PB3AddArticleCommentReq_FieldNumber_ArticleName,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3AddArticleCommentReq__storage_, articleName),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "parentId",
        .dataTypeSpecific.className = NULL,
        .number = PB3AddArticleCommentReq_FieldNumber_ParentId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3AddArticleCommentReq__storage_, parentId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "content",
        .dataTypeSpecific.className = NULL,
        .number = PB3AddArticleCommentReq_FieldNumber_Content,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3AddArticleCommentReq__storage_, content),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "toUserId",
        .dataTypeSpecific.className = NULL,
        .number = PB3AddArticleCommentReq_FieldNumber_ToUserId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3AddArticleCommentReq__storage_, toUserId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "toUserName",
        .dataTypeSpecific.className = NULL,
        .number = PB3AddArticleCommentReq_FieldNumber_ToUserName,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PB3AddArticleCommentReq__storage_, toUserName),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "commentURL",
        .dataTypeSpecific.className = NULL,
        .number = PB3AddArticleCommentReq_FieldNumber_CommentURL,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PB3AddArticleCommentReq__storage_, commentURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3AddArticleCommentReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3AddArticleCommentReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\007\007\241!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3AddArticleCommentRes

@implementation PB3AddArticleCommentRes

@dynamic id_p;

typedef struct PB3AddArticleCommentRes__storage_ {
  uint32_t _has_storage_[1];
  int64_t id_p;
} PB3AddArticleCommentRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = PB3AddArticleCommentRes_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3AddArticleCommentRes__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3AddArticleCommentRes class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3AddArticleCommentRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3DelArticleCommentReq

@implementation PB3DelArticleCommentReq

@dynamic id_p;
@dynamic articleId;
@dynamic parentId;

typedef struct PB3DelArticleCommentReq__storage_ {
  uint32_t _has_storage_[1];
  int64_t id_p;
  int64_t articleId;
  int64_t parentId;
} PB3DelArticleCommentReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = PB3DelArticleCommentReq_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3DelArticleCommentReq__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "articleId",
        .dataTypeSpecific.className = NULL,
        .number = PB3DelArticleCommentReq_FieldNumber_ArticleId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3DelArticleCommentReq__storage_, articleId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "parentId",
        .dataTypeSpecific.className = NULL,
        .number = PB3DelArticleCommentReq_FieldNumber_ParentId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3DelArticleCommentReq__storage_, parentId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3DelArticleCommentReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3DelArticleCommentReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3DelArticleCommentRes

@implementation PB3DelArticleCommentRes


typedef struct PB3DelArticleCommentRes__storage_ {
  uint32_t _has_storage_[1];
} PB3DelArticleCommentRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3DelArticleCommentRes class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(PB3DelArticleCommentRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3UpdateCommentLikeReq

@implementation PB3UpdateCommentLikeReq

@dynamic articleId;
@dynamic commentId;
@dynamic parentCommentId;
@dynamic like;

typedef struct PB3UpdateCommentLikeReq__storage_ {
  uint32_t _has_storage_[1];
  int64_t articleId;
  int64_t commentId;
  int64_t parentCommentId;
} PB3UpdateCommentLikeReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "articleId",
        .dataTypeSpecific.className = NULL,
        .number = PB3UpdateCommentLikeReq_FieldNumber_ArticleId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3UpdateCommentLikeReq__storage_, articleId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "commentId",
        .dataTypeSpecific.className = NULL,
        .number = PB3UpdateCommentLikeReq_FieldNumber_CommentId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3UpdateCommentLikeReq__storage_, commentId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "parentCommentId",
        .dataTypeSpecific.className = NULL,
        .number = PB3UpdateCommentLikeReq_FieldNumber_ParentCommentId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3UpdateCommentLikeReq__storage_, parentCommentId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "like",
        .dataTypeSpecific.className = NULL,
        .number = PB3UpdateCommentLikeReq_FieldNumber_Like,
        .hasIndex = 3,
        .offset = 4,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3UpdateCommentLikeReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3UpdateCommentLikeReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3UpdateCommentLikeRes

@implementation PB3UpdateCommentLikeRes


typedef struct PB3UpdateCommentLikeRes__storage_ {
  uint32_t _has_storage_[1];
} PB3UpdateCommentLikeRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3UpdateCommentLikeRes class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(PB3UpdateCommentLikeRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3CheckUserIsAdminReq

@implementation PB3CheckUserIsAdminReq


typedef struct PB3CheckUserIsAdminReq__storage_ {
  uint32_t _has_storage_[1];
} PB3CheckUserIsAdminReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3CheckUserIsAdminReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(PB3CheckUserIsAdminReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3CheckUserIsAdminRes

@implementation PB3CheckUserIsAdminRes

@dynamic isAdmin;

typedef struct PB3CheckUserIsAdminRes__storage_ {
  uint32_t _has_storage_[1];
} PB3CheckUserIsAdminRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "isAdmin",
        .dataTypeSpecific.className = NULL,
        .number = PB3CheckUserIsAdminRes_FieldNumber_IsAdmin,
        .hasIndex = 0,
        .offset = 1,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3CheckUserIsAdminRes class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3CheckUserIsAdminRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3MainTabReq

@implementation PB3MainTabReq


typedef struct PB3MainTabReq__storage_ {
  uint32_t _has_storage_[1];
} PB3MainTabReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3MainTabReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(PB3MainTabReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3MainTabRes

@implementation PB3MainTabRes

@dynamic tabListArray, tabListArray_Count;
@dynamic rememberChoose;

typedef struct PB3MainTabRes__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *tabListArray;
} PB3MainTabRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "tabListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3MainTab),
        .number = PB3MainTabRes_FieldNumber_TabListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3MainTabRes__storage_, tabListArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "rememberChoose",
        .dataTypeSpecific.className = NULL,
        .number = PB3MainTabRes_FieldNumber_RememberChoose,
        .hasIndex = 0,
        .offset = 1,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3MainTabRes class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3MainTabRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3MainTab

@implementation PB3MainTab

@dynamic tabType;
@dynamic tabName;
@dynamic tabImg;
@dynamic tabImgActivated;
@dynamic isDefault;
@dynamic route;
@dynamic tabImgSwipe;
@dynamic homeStyle;
@dynamic headBgImage;
@dynamic footBgImage;
@dynamic tabImgType;
@dynamic isHiddenName;
@dynamic isShowCartoon;

typedef struct PB3MainTab__storage_ {
  uint32_t _has_storage_[1];
  PB3TabType tabType;
  PB3MainTabHomeStyle homeStyle;
  PB3PHomeMainTabImgType tabImgType;
  NSString *tabName;
  NSString *tabImg;
  NSString *tabImgActivated;
  NSString *route;
  NSString *tabImgSwipe;
  NSString *headBgImage;
  NSString *footBgImage;
} PB3MainTab__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "tabType",
        .dataTypeSpecific.enumDescFunc = PB3TabType_EnumDescriptor,
        .number = PB3MainTab_FieldNumber_TabType,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3MainTab__storage_, tabType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "tabName",
        .dataTypeSpecific.className = NULL,
        .number = PB3MainTab_FieldNumber_TabName,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3MainTab__storage_, tabName),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "tabImg",
        .dataTypeSpecific.className = NULL,
        .number = PB3MainTab_FieldNumber_TabImg,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3MainTab__storage_, tabImg),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "tabImgActivated",
        .dataTypeSpecific.className = NULL,
        .number = PB3MainTab_FieldNumber_TabImgActivated,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3MainTab__storage_, tabImgActivated),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isDefault",
        .dataTypeSpecific.className = NULL,
        .number = PB3MainTab_FieldNumber_IsDefault,
        .hasIndex = 4,
        .offset = 5,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "route",
        .dataTypeSpecific.className = NULL,
        .number = PB3MainTab_FieldNumber_Route,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PB3MainTab__storage_, route),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "tabImgSwipe",
        .dataTypeSpecific.className = NULL,
        .number = PB3MainTab_FieldNumber_TabImgSwipe,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PB3MainTab__storage_, tabImgSwipe),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "homeStyle",
        .dataTypeSpecific.enumDescFunc = PB3MainTabHomeStyle_EnumDescriptor,
        .number = PB3MainTab_FieldNumber_HomeStyle,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(PB3MainTab__storage_, homeStyle),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "headBgImage",
        .dataTypeSpecific.className = NULL,
        .number = PB3MainTab_FieldNumber_HeadBgImage,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(PB3MainTab__storage_, headBgImage),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "footBgImage",
        .dataTypeSpecific.className = NULL,
        .number = PB3MainTab_FieldNumber_FootBgImage,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(PB3MainTab__storage_, footBgImage),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "tabImgType",
        .dataTypeSpecific.enumDescFunc = PB3PHomeMainTabImgType_EnumDescriptor,
        .number = PB3MainTab_FieldNumber_TabImgType,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(PB3MainTab__storage_, tabImgType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "isHiddenName",
        .dataTypeSpecific.className = NULL,
        .number = PB3MainTab_FieldNumber_IsHiddenName,
        .hasIndex = 12,
        .offset = 13,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "isShowCartoon",
        .dataTypeSpecific.className = NULL,
        .number = PB3MainTab_FieldNumber_IsShowCartoon,
        .hasIndex = 14,
        .offset = 15,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3MainTab class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3MainTab__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3MainTab_TabType_RawValue(PB3MainTab *message) {
  GPBDescriptor *descriptor = [PB3MainTab descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3MainTab_FieldNumber_TabType];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3MainTab_TabType_RawValue(PB3MainTab *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3MainTab descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3MainTab_FieldNumber_TabType];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t PB3MainTab_HomeStyle_RawValue(PB3MainTab *message) {
  GPBDescriptor *descriptor = [PB3MainTab descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3MainTab_FieldNumber_HomeStyle];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3MainTab_HomeStyle_RawValue(PB3MainTab *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3MainTab descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3MainTab_FieldNumber_HomeStyle];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t PB3MainTab_TabImgType_RawValue(PB3MainTab *message) {
  GPBDescriptor *descriptor = [PB3MainTab descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3MainTab_FieldNumber_TabImgType];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3MainTab_TabImgType_RawValue(PB3MainTab *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3MainTab descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3MainTab_FieldNumber_TabImgType];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3PHomeEntryBubble

@implementation PB3PHomeEntryBubble

@dynamic playerId;
@dynamic nickName;
@dynamic sex;
@dynamic icon;
@dynamic content;
@dynamic labelName;
@dynamic heat;
@dynamic roomId;
@dynamic navIdsArray, navIdsArray_Count;

typedef struct PB3PHomeEntryBubble__storage_ {
  uint32_t _has_storage_[1];
  PB3PluginSexType sex;
  int32_t heat;
  NSString *nickName;
  NSString *icon;
  NSString *content;
  NSString *labelName;
  GPBInt32Array *navIdsArray;
  int64_t playerId;
  int64_t roomId;
} PB3PHomeEntryBubble__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "playerId",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBubble_FieldNumber_PlayerId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBubble__storage_, playerId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "nickName",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBubble_FieldNumber_NickName,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBubble__storage_, nickName),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sex",
        .dataTypeSpecific.enumDescFunc = PB3PluginSexType_EnumDescriptor,
        .number = PB3PHomeEntryBubble_FieldNumber_Sex,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBubble__storage_, sex),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "icon",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBubble_FieldNumber_Icon,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBubble__storage_, icon),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "content",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBubble_FieldNumber_Content,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBubble__storage_, content),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "labelName",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBubble_FieldNumber_LabelName,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBubble__storage_, labelName),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "heat",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBubble_FieldNumber_Heat,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBubble__storage_, heat),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "roomId",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBubble_FieldNumber_RoomId,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBubble__storage_, roomId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "navIdsArray",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeEntryBubble_FieldNumber_NavIdsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBubble__storage_, navIdsArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldPacked),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PHomeEntryBubble class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PHomeEntryBubble__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3PHomeEntryBubble_Sex_RawValue(PB3PHomeEntryBubble *message) {
  GPBDescriptor *descriptor = [PB3PHomeEntryBubble descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeEntryBubble_FieldNumber_Sex];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3PHomeEntryBubble_Sex_RawValue(PB3PHomeEntryBubble *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3PHomeEntryBubble descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeEntryBubble_FieldNumber_Sex];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3PHomeEntryBubbleList

@implementation PB3PHomeEntryBubbleList

@dynamic listArray, listArray_Count;

typedef struct PB3PHomeEntryBubbleList__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *listArray;
} PB3PHomeEntryBubbleList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "listArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3PHomeEntryBubble),
        .number = PB3PHomeEntryBubbleList_FieldNumber_ListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeEntryBubbleList__storage_, listArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PHomeEntryBubbleList class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PHomeEntryBubbleList__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3UserSongReq

@implementation PB3UserSongReq

@dynamic singer;
@dynamic song;
@dynamic playType;

typedef struct PB3UserSongReq__storage_ {
  uint32_t _has_storage_[1];
  PB3UserSongType playType;
  NSString *singer;
  NSString *song;
} PB3UserSongReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "singer",
        .dataTypeSpecific.className = NULL,
        .number = PB3UserSongReq_FieldNumber_Singer,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3UserSongReq__storage_, singer),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "song",
        .dataTypeSpecific.className = NULL,
        .number = PB3UserSongReq_FieldNumber_Song,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3UserSongReq__storage_, song),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "playType",
        .dataTypeSpecific.enumDescFunc = PB3UserSongType_EnumDescriptor,
        .number = PB3UserSongReq_FieldNumber_PlayType,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3UserSongReq__storage_, playType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3UserSongReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3UserSongReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3UserSongReq_PlayType_RawValue(PB3UserSongReq *message) {
  GPBDescriptor *descriptor = [PB3UserSongReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3UserSongReq_FieldNumber_PlayType];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3UserSongReq_PlayType_RawValue(PB3UserSongReq *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3UserSongReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3UserSongReq_FieldNumber_PlayType];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3UserSongRes

@implementation PB3UserSongRes


typedef struct PB3UserSongRes__storage_ {
  uint32_t _has_storage_[1];
} PB3UserSongRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3UserSongRes class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(PB3UserSongRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3PHomeSysToastMsg

@implementation PB3PHomeSysToastMsg

@dynamic type;
@dynamic msg;

typedef struct PB3PHomeSysToastMsg__storage_ {
  uint32_t _has_storage_[1];
  PB3PHomeSysToastType type;
  NSString *msg;
} PB3PHomeSysToastMsg__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "type",
        .dataTypeSpecific.enumDescFunc = PB3PHomeSysToastType_EnumDescriptor,
        .number = PB3PHomeSysToastMsg_FieldNumber_Type,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3PHomeSysToastMsg__storage_, type),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "msg",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeSysToastMsg_FieldNumber_Msg,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3PHomeSysToastMsg__storage_, msg),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PHomeSysToastMsg class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PHomeSysToastMsg__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3PHomeSysToastMsg_Type_RawValue(PB3PHomeSysToastMsg *message) {
  GPBDescriptor *descriptor = [PB3PHomeSysToastMsg descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeSysToastMsg_FieldNumber_Type];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3PHomeSysToastMsg_Type_RawValue(PB3PHomeSysToastMsg *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3PHomeSysToastMsg descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeSysToastMsg_FieldNumber_Type];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3SysMatchMsg

@implementation PB3SysMatchMsg

@dynamic matchType;
@dynamic dataByte;
@dynamic matchItemId;

typedef struct PB3SysMatchMsg__storage_ {
  uint32_t _has_storage_[1];
  PB3MatchDirectType matchType;
  int32_t matchItemId;
  NSData *dataByte;
} PB3SysMatchMsg__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "matchType",
        .dataTypeSpecific.enumDescFunc = PB3MatchDirectType_EnumDescriptor,
        .number = PB3SysMatchMsg_FieldNumber_MatchType,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3SysMatchMsg__storage_, matchType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "dataByte",
        .dataTypeSpecific.className = NULL,
        .number = PB3SysMatchMsg_FieldNumber_DataByte,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3SysMatchMsg__storage_, dataByte),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "matchItemId",
        .dataTypeSpecific.className = NULL,
        .number = PB3SysMatchMsg_FieldNumber_MatchItemId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3SysMatchMsg__storage_, matchItemId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3SysMatchMsg class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3SysMatchMsg__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3SysMatchMsg_MatchType_RawValue(PB3SysMatchMsg *message) {
  GPBDescriptor *descriptor = [PB3SysMatchMsg descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3SysMatchMsg_FieldNumber_MatchType];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3SysMatchMsg_MatchType_RawValue(PB3SysMatchMsg *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3SysMatchMsg descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3SysMatchMsg_FieldNumber_MatchType];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3MatchUserPageDataReq

@implementation PB3MatchUserPageDataReq

@dynamic matchPageId;

typedef struct PB3MatchUserPageDataReq__storage_ {
  uint32_t _has_storage_[1];
  int32_t matchPageId;
} PB3MatchUserPageDataReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "matchPageId",
        .dataTypeSpecific.className = NULL,
        .number = PB3MatchUserPageDataReq_FieldNumber_MatchPageId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3MatchUserPageDataReq__storage_, matchPageId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3MatchUserPageDataReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3MatchUserPageDataReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3MatchUserPageDataRes

@implementation PB3MatchUserPageDataRes

@dynamic matchSourceListArray, matchSourceListArray_Count;
@dynamic matchPageHeadimg;

typedef struct PB3MatchUserPageDataRes__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *matchSourceListArray;
  NSString *matchPageHeadimg;
} PB3MatchUserPageDataRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "matchSourceListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3MatchSource),
        .number = PB3MatchUserPageDataRes_FieldNumber_MatchSourceListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3MatchUserPageDataRes__storage_, matchSourceListArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "matchPageHeadimg",
        .dataTypeSpecific.className = NULL,
        .number = PB3MatchUserPageDataRes_FieldNumber_MatchPageHeadimg,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3MatchUserPageDataRes__storage_, matchPageHeadimg),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3MatchUserPageDataRes class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3MatchUserPageDataRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3MatchSource

@implementation PB3MatchSource

@dynamic name;
@dynamic matchItemId;
@dynamic icon;
@dynamic smallIcon;
@dynamic matchType;
@dynamic src;

typedef struct PB3MatchSource__storage_ {
  uint32_t _has_storage_[1];
  int32_t matchItemId;
  PB3MatchDirectType matchType;
  NSString *name;
  NSString *icon;
  NSString *smallIcon;
  NSString *src;
} PB3MatchSource__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = PB3MatchSource_FieldNumber_Name,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3MatchSource__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "matchItemId",
        .dataTypeSpecific.className = NULL,
        .number = PB3MatchSource_FieldNumber_MatchItemId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3MatchSource__storage_, matchItemId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "icon",
        .dataTypeSpecific.className = NULL,
        .number = PB3MatchSource_FieldNumber_Icon,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3MatchSource__storage_, icon),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "smallIcon",
        .dataTypeSpecific.className = NULL,
        .number = PB3MatchSource_FieldNumber_SmallIcon,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3MatchSource__storage_, smallIcon),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "matchType",
        .dataTypeSpecific.enumDescFunc = PB3MatchDirectType_EnumDescriptor,
        .number = PB3MatchSource_FieldNumber_MatchType,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3MatchSource__storage_, matchType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "src",
        .dataTypeSpecific.className = NULL,
        .number = PB3MatchSource_FieldNumber_Src,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PB3MatchSource__storage_, src),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3MatchSource class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3MatchSource__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3MatchSource_MatchType_RawValue(PB3MatchSource *message) {
  GPBDescriptor *descriptor = [PB3MatchSource descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3MatchSource_FieldNumber_MatchType];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3MatchSource_MatchType_RawValue(PB3MatchSource *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3MatchSource descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3MatchSource_FieldNumber_MatchType];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3MatchUserReq

@implementation PB3MatchUserReq

@dynamic matchPageId;
@dynamic matchItemId;

typedef struct PB3MatchUserReq__storage_ {
  uint32_t _has_storage_[1];
  int32_t matchPageId;
  int32_t matchItemId;
} PB3MatchUserReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "matchPageId",
        .dataTypeSpecific.className = NULL,
        .number = PB3MatchUserReq_FieldNumber_MatchPageId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3MatchUserReq__storage_, matchPageId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "matchItemId",
        .dataTypeSpecific.className = NULL,
        .number = PB3MatchUserReq_FieldNumber_MatchItemId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3MatchUserReq__storage_, matchItemId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3MatchUserReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3MatchUserReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3MatchUserRes

@implementation PB3MatchUserRes

@dynamic userIconArray, userIconArray_Count;

typedef struct PB3MatchUserRes__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *userIconArray;
} PB3MatchUserRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userIconArray",
        .dataTypeSpecific.className = NULL,
        .number = PB3MatchUserRes_FieldNumber_UserIconArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3MatchUserRes__storage_, userIconArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3MatchUserRes class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3MatchUserRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3MatchUserGameStatusReq

@implementation PB3MatchUserGameStatusReq

@dynamic roomId;
@dynamic gameId;

typedef struct PB3MatchUserGameStatusReq__storage_ {
  uint32_t _has_storage_[1];
  int32_t roomId;
  int32_t gameId;
} PB3MatchUserGameStatusReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "roomId",
        .dataTypeSpecific.className = NULL,
        .number = PB3MatchUserGameStatusReq_FieldNumber_RoomId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3MatchUserGameStatusReq__storage_, roomId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "gameId",
        .dataTypeSpecific.className = NULL,
        .number = PB3MatchUserGameStatusReq_FieldNumber_GameId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3MatchUserGameStatusReq__storage_, gameId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3MatchUserGameStatusReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3MatchUserGameStatusReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3MatchUserGameStatusRes

@implementation PB3MatchUserGameStatusRes

@dynamic matchStatus;

typedef struct PB3MatchUserGameStatusRes__storage_ {
  uint32_t _has_storage_[1];
  PB3MatchStatusType matchStatus;
} PB3MatchUserGameStatusRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "matchStatus",
        .dataTypeSpecific.enumDescFunc = PB3MatchStatusType_EnumDescriptor,
        .number = PB3MatchUserGameStatusRes_FieldNumber_MatchStatus,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3MatchUserGameStatusRes__storage_, matchStatus),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3MatchUserGameStatusRes class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3MatchUserGameStatusRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3MatchUserGameStatusRes_MatchStatus_RawValue(PB3MatchUserGameStatusRes *message) {
  GPBDescriptor *descriptor = [PB3MatchUserGameStatusRes descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3MatchUserGameStatusRes_FieldNumber_MatchStatus];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3MatchUserGameStatusRes_MatchStatus_RawValue(PB3MatchUserGameStatusRes *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3MatchUserGameStatusRes descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3MatchUserGameStatusRes_FieldNumber_MatchStatus];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3InterestConfReq

@implementation PB3InterestConfReq


typedef struct PB3InterestConfReq__storage_ {
  uint32_t _has_storage_[1];
} PB3InterestConfReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3InterestConfReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(PB3InterestConfReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3InterestConfRes

@implementation PB3InterestConfRes

@dynamic listArray, listArray_Count;
@dynamic maxInterestNum;
@dynamic sex;

typedef struct PB3InterestConfRes__storage_ {
  uint32_t _has_storage_[1];
  int32_t maxInterestNum;
  PB3PluginSexType sex;
  NSMutableArray *listArray;
} PB3InterestConfRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "listArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3InterestItem),
        .number = PB3InterestConfRes_FieldNumber_ListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3InterestConfRes__storage_, listArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "maxInterestNum",
        .dataTypeSpecific.className = NULL,
        .number = PB3InterestConfRes_FieldNumber_MaxInterestNum,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3InterestConfRes__storage_, maxInterestNum),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "sex",
        .dataTypeSpecific.enumDescFunc = PB3PluginSexType_EnumDescriptor,
        .number = PB3InterestConfRes_FieldNumber_Sex,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3InterestConfRes__storage_, sex),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3InterestConfRes class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3InterestConfRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3InterestConfRes_Sex_RawValue(PB3InterestConfRes *message) {
  GPBDescriptor *descriptor = [PB3InterestConfRes descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3InterestConfRes_FieldNumber_Sex];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3InterestConfRes_Sex_RawValue(PB3InterestConfRes *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3InterestConfRes descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3InterestConfRes_FieldNumber_Sex];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3InterestItem

@implementation PB3InterestItem

@dynamic id_p;
@dynamic name;

typedef struct PB3InterestItem__storage_ {
  uint32_t _has_storage_[1];
  int32_t id_p;
  NSString *name;
} PB3InterestItem__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = PB3InterestItem_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3InterestItem__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = PB3InterestItem_FieldNumber_Name,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3InterestItem__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3InterestItem class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3InterestItem__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3SetMyInterestReq

@implementation PB3SetMyInterestReq

@dynamic interestIdsArray, interestIdsArray_Count;

typedef struct PB3SetMyInterestReq__storage_ {
  uint32_t _has_storage_[1];
  GPBInt32Array *interestIdsArray;
} PB3SetMyInterestReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "interestIdsArray",
        .dataTypeSpecific.className = NULL,
        .number = PB3SetMyInterestReq_FieldNumber_InterestIdsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3SetMyInterestReq__storage_, interestIdsArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldPacked),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3SetMyInterestReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3SetMyInterestReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3SetMyInterestRes

@implementation PB3SetMyInterestRes


typedef struct PB3SetMyInterestRes__storage_ {
  uint32_t _has_storage_[1];
} PB3SetMyInterestRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3SetMyInterestRes class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(PB3SetMyInterestRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3SetNavSortReq

@implementation PB3SetNavSortReq

@dynamic navIdsArray, navIdsArray_Count;

typedef struct PB3SetNavSortReq__storage_ {
  uint32_t _has_storage_[1];
  GPBInt32Array *navIdsArray;
} PB3SetNavSortReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "navIdsArray",
        .dataTypeSpecific.className = NULL,
        .number = PB3SetNavSortReq_FieldNumber_NavIdsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3SetNavSortReq__storage_, navIdsArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldPacked),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3SetNavSortReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3SetNavSortReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3SetNavSortRes

@implementation PB3SetNavSortRes


typedef struct PB3SetNavSortRes__storage_ {
  uint32_t _has_storage_[1];
} PB3SetNavSortRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3SetNavSortRes class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(PB3SetNavSortRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3PushUpdateAction

@implementation PB3PushUpdateAction

@dynamic id_p;
@dynamic dataType;
@dynamic dataByte;
@dynamic filterArray, filterArray_Count;

typedef struct PB3PushUpdateAction__storage_ {
  uint32_t _has_storage_[1];
  int32_t id_p;
  PB3PHomeDataType dataType;
  NSData *dataByte;
  GPBEnumArray *filterArray;
} PB3PushUpdateAction__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = PB3PushUpdateAction_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3PushUpdateAction__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "dataType",
        .dataTypeSpecific.enumDescFunc = PB3PHomeDataType_EnumDescriptor,
        .number = PB3PushUpdateAction_FieldNumber_DataType,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3PushUpdateAction__storage_, dataType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "dataByte",
        .dataTypeSpecific.className = NULL,
        .number = PB3PushUpdateAction_FieldNumber_DataByte,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3PushUpdateAction__storage_, dataByte),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "filterArray",
        .dataTypeSpecific.enumDescFunc = PB3FilterRule_EnumDescriptor,
        .number = PB3PushUpdateAction_FieldNumber_FilterArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PushUpdateAction__storage_, filterArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldPacked | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PushUpdateAction class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PushUpdateAction__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3PushUpdateAction_DataType_RawValue(PB3PushUpdateAction *message) {
  GPBDescriptor *descriptor = [PB3PushUpdateAction descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PushUpdateAction_FieldNumber_DataType];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3PushUpdateAction_DataType_RawValue(PB3PushUpdateAction *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3PushUpdateAction descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PushUpdateAction_FieldNumber_DataType];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3PushModActionReset

@implementation PB3PushModActionReset

@dynamic id_p;

typedef struct PB3PushModActionReset__storage_ {
  uint32_t _has_storage_[1];
  int32_t id_p;
} PB3PushModActionReset__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = PB3PushModActionReset_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3PushModActionReset__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PushModActionReset class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PushModActionReset__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3PhomeNavRed

@implementation PB3PhomeNavRed

@dynamic navRedArray, navRedArray_Count;

typedef struct PB3PhomeNavRed__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *navRedArray;
} PB3PhomeNavRed__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "navRedArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3NavRed),
        .number = PB3PhomeNavRed_FieldNumber_NavRedArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PhomeNavRed__storage_, navRedArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PhomeNavRed class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PhomeNavRed__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3NavRed

@implementation PB3NavRed

@dynamic id_p;
@dynamic subNavArray, subNavArray_Count;

typedef struct PB3NavRed__storage_ {
  uint32_t _has_storage_[1];
  int32_t id_p;
  NSMutableArray *subNavArray;
} PB3NavRed__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = PB3NavRed_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3NavRed__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "subNavArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3SubNavRed),
        .number = PB3NavRed_FieldNumber_SubNavArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3NavRed__storage_, subNavArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3NavRed class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3NavRed__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3SubNavRed

@implementation PB3SubNavRed

@dynamic id_p;
@dynamic redNum;

typedef struct PB3SubNavRed__storage_ {
  uint32_t _has_storage_[1];
  int32_t id_p;
  int32_t redNum;
} PB3SubNavRed__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = PB3SubNavRed_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3SubNavRed__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "redNum",
        .dataTypeSpecific.className = NULL,
        .number = PB3SubNavRed_FieldNumber_RedNum,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3SubNavRed__storage_, redNum),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3SubNavRed class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3SubNavRed__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3ClearNavRedReq

@implementation PB3ClearNavRedReq

@dynamic navId;
@dynamic subNavId;

typedef struct PB3ClearNavRedReq__storage_ {
  uint32_t _has_storage_[1];
  int32_t navId;
  int32_t subNavId;
} PB3ClearNavRedReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "navId",
        .dataTypeSpecific.className = NULL,
        .number = PB3ClearNavRedReq_FieldNumber_NavId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3ClearNavRedReq__storage_, navId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "subNavId",
        .dataTypeSpecific.className = NULL,
        .number = PB3ClearNavRedReq_FieldNumber_SubNavId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3ClearNavRedReq__storage_, subNavId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3ClearNavRedReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3ClearNavRedReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3ClearNavRedRes

@implementation PB3ClearNavRedRes


typedef struct PB3ClearNavRedRes__storage_ {
  uint32_t _has_storage_[1];
} PB3ClearNavRedRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3ClearNavRedRes class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(PB3ClearNavRedRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3PHomeRoomProgramShow

@implementation PB3PHomeRoomProgramShow

@dynamic id_p;
@dynamic subject;
@dynamic intro;
@dynamic startTime;
@dynamic endTime;
@dynamic startTimeSeconds;
@dynamic endTimeSeconds;
@dynamic dayType;
@dynamic cover;
@dynamic roomId;
@dynamic playerName;

typedef struct PB3PHomeRoomProgramShow__storage_ {
  uint32_t _has_storage_[1];
  int32_t startTimeSeconds;
  int32_t endTimeSeconds;
  PB3PhomeRoomProgramShowDayType dayType;
  NSString *subject;
  NSString *intro;
  NSString *cover;
  NSString *playerName;
  int64_t id_p;
  int64_t startTime;
  int64_t endTime;
  int64_t roomId;
} PB3PHomeRoomProgramShow__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRoomProgramShow_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3PHomeRoomProgramShow__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "subject",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRoomProgramShow_FieldNumber_Subject,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3PHomeRoomProgramShow__storage_, subject),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "intro",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRoomProgramShow_FieldNumber_Intro,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3PHomeRoomProgramShow__storage_, intro),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "startTime",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRoomProgramShow_FieldNumber_StartTime,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3PHomeRoomProgramShow__storage_, startTime),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt64,
      },
      {
        .name = "endTime",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRoomProgramShow_FieldNumber_EndTime,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3PHomeRoomProgramShow__storage_, endTime),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt64,
      },
      {
        .name = "startTimeSeconds",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRoomProgramShow_FieldNumber_StartTimeSeconds,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PB3PHomeRoomProgramShow__storage_, startTimeSeconds),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "endTimeSeconds",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRoomProgramShow_FieldNumber_EndTimeSeconds,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PB3PHomeRoomProgramShow__storage_, endTimeSeconds),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "dayType",
        .dataTypeSpecific.enumDescFunc = PB3PhomeRoomProgramShowDayType_EnumDescriptor,
        .number = PB3PHomeRoomProgramShow_FieldNumber_DayType,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PB3PHomeRoomProgramShow__storage_, dayType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "cover",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRoomProgramShow_FieldNumber_Cover,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(PB3PHomeRoomProgramShow__storage_, cover),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "roomId",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRoomProgramShow_FieldNumber_RoomId,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(PB3PHomeRoomProgramShow__storage_, roomId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "playerName",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeRoomProgramShow_FieldNumber_PlayerName,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(PB3PHomeRoomProgramShow__storage_, playerName),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PHomeRoomProgramShow class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PHomeRoomProgramShow__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3PHomeRoomProgramShow_DayType_RawValue(PB3PHomeRoomProgramShow *message) {
  GPBDescriptor *descriptor = [PB3PHomeRoomProgramShow descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeRoomProgramShow_FieldNumber_DayType];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3PHomeRoomProgramShow_DayType_RawValue(PB3PHomeRoomProgramShow *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3PHomeRoomProgramShow descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3PHomeRoomProgramShow_FieldNumber_DayType];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3PHomeRoomProgramShowList

@implementation PB3PHomeRoomProgramShowList

@dynamic listArray, listArray_Count;

typedef struct PB3PHomeRoomProgramShowList__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *listArray;
} PB3PHomeRoomProgramShowList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "listArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3PHomeRoomProgramShow),
        .number = PB3PHomeRoomProgramShowList_FieldNumber_ListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeRoomProgramShowList__storage_, listArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PHomeRoomProgramShowList class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PHomeRoomProgramShowList__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3PHomeEntryHotPointList

@implementation PB3PHomeEntryHotPointList

@dynamic listArray, listArray_Count;

typedef struct PB3PHomeEntryHotPointList__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *listArray;
} PB3PHomeEntryHotPointList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "listArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3PHomeEntryHotPoint),
        .number = PB3PHomeEntryHotPointList_FieldNumber_ListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeEntryHotPointList__storage_, listArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PHomeEntryHotPointList class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PHomeEntryHotPointList__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3UpdatePHomeEntryHotPoint

@implementation PB3UpdatePHomeEntryHotPoint

@dynamic optType;
@dynamic hasHotPoint, hotPoint;

typedef struct PB3UpdatePHomeEntryHotPoint__storage_ {
  uint32_t _has_storage_[1];
  PB3UpdateHotPointType optType;
  PB3PHomeEntryHotPoint *hotPoint;
} PB3UpdatePHomeEntryHotPoint__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "optType",
        .dataTypeSpecific.enumDescFunc = PB3UpdateHotPointType_EnumDescriptor,
        .number = PB3UpdatePHomeEntryHotPoint_FieldNumber_OptType,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3UpdatePHomeEntryHotPoint__storage_, optType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "hotPoint",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3PHomeEntryHotPoint),
        .number = PB3UpdatePHomeEntryHotPoint_FieldNumber_HotPoint,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3UpdatePHomeEntryHotPoint__storage_, hotPoint),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3UpdatePHomeEntryHotPoint class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3UpdatePHomeEntryHotPoint__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3UpdatePHomeEntryHotPoint_OptType_RawValue(PB3UpdatePHomeEntryHotPoint *message) {
  GPBDescriptor *descriptor = [PB3UpdatePHomeEntryHotPoint descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3UpdatePHomeEntryHotPoint_FieldNumber_OptType];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3UpdatePHomeEntryHotPoint_OptType_RawValue(PB3UpdatePHomeEntryHotPoint *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3UpdatePHomeEntryHotPoint descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3UpdatePHomeEntryHotPoint_FieldNumber_OptType];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3GetPHomeEntryHotPointListReq

@implementation PB3GetPHomeEntryHotPointListReq

@dynamic index;
@dynamic ownerId;
@dynamic type;
@dynamic playerId;

typedef struct PB3GetPHomeEntryHotPointListReq__storage_ {
  uint32_t _has_storage_[1];
  int32_t index;
  PB3GetPHomeEntryHotPointType type;
  int64_t ownerId;
  int64_t playerId;
} PB3GetPHomeEntryHotPointListReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "index",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetPHomeEntryHotPointListReq_FieldNumber_Index,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3GetPHomeEntryHotPointListReq__storage_, index),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "ownerId",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetPHomeEntryHotPointListReq_FieldNumber_OwnerId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3GetPHomeEntryHotPointListReq__storage_, ownerId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "type",
        .dataTypeSpecific.enumDescFunc = PB3GetPHomeEntryHotPointType_EnumDescriptor,
        .number = PB3GetPHomeEntryHotPointListReq_FieldNumber_Type,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3GetPHomeEntryHotPointListReq__storage_, type),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "playerId",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetPHomeEntryHotPointListReq_FieldNumber_PlayerId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3GetPHomeEntryHotPointListReq__storage_, playerId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3GetPHomeEntryHotPointListReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3GetPHomeEntryHotPointListReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3GetPHomeEntryHotPointListReq_Type_RawValue(PB3GetPHomeEntryHotPointListReq *message) {
  GPBDescriptor *descriptor = [PB3GetPHomeEntryHotPointListReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3GetPHomeEntryHotPointListReq_FieldNumber_Type];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3GetPHomeEntryHotPointListReq_Type_RawValue(PB3GetPHomeEntryHotPointListReq *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3GetPHomeEntryHotPointListReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3GetPHomeEntryHotPointListReq_FieldNumber_Type];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3GetPHomeEntryHotPointListRes

@implementation PB3GetPHomeEntryHotPointListRes

@dynamic listArray, listArray_Count;
@dynamic nextIndex;
@dynamic total;
@dynamic type;
@dynamic topNum;

typedef struct PB3GetPHomeEntryHotPointListRes__storage_ {
  uint32_t _has_storage_[1];
  int32_t nextIndex;
  int32_t total;
  PB3GetPHomeEntryHotPointType type;
  NSMutableArray *listArray;
  int64_t topNum;
} PB3GetPHomeEntryHotPointListRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "listArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3PHomeEntryHotPoint),
        .number = PB3GetPHomeEntryHotPointListRes_FieldNumber_ListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3GetPHomeEntryHotPointListRes__storage_, listArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "nextIndex",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetPHomeEntryHotPointListRes_FieldNumber_NextIndex,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3GetPHomeEntryHotPointListRes__storage_, nextIndex),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "total",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetPHomeEntryHotPointListRes_FieldNumber_Total,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3GetPHomeEntryHotPointListRes__storage_, total),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "type",
        .dataTypeSpecific.enumDescFunc = PB3GetPHomeEntryHotPointType_EnumDescriptor,
        .number = PB3GetPHomeEntryHotPointListRes_FieldNumber_Type,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3GetPHomeEntryHotPointListRes__storage_, type),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "topNum",
        .dataTypeSpecific.className = NULL,
        .number = PB3GetPHomeEntryHotPointListRes_FieldNumber_TopNum,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3GetPHomeEntryHotPointListRes__storage_, topNum),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3GetPHomeEntryHotPointListRes class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3GetPHomeEntryHotPointListRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3GetPHomeEntryHotPointListRes_Type_RawValue(PB3GetPHomeEntryHotPointListRes *message) {
  GPBDescriptor *descriptor = [PB3GetPHomeEntryHotPointListRes descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3GetPHomeEntryHotPointListRes_FieldNumber_Type];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3GetPHomeEntryHotPointListRes_Type_RawValue(PB3GetPHomeEntryHotPointListRes *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3GetPHomeEntryHotPointListRes descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3GetPHomeEntryHotPointListRes_FieldNumber_Type];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3DelPHomeEntryHotPointReq

@implementation PB3DelPHomeEntryHotPointReq

@dynamic hotPointId;
@dynamic type;

typedef struct PB3DelPHomeEntryHotPointReq__storage_ {
  uint32_t _has_storage_[1];
  PB3HotHideType type;
  int64_t hotPointId;
} PB3DelPHomeEntryHotPointReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "hotPointId",
        .dataTypeSpecific.className = NULL,
        .number = PB3DelPHomeEntryHotPointReq_FieldNumber_HotPointId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3DelPHomeEntryHotPointReq__storage_, hotPointId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "type",
        .dataTypeSpecific.enumDescFunc = PB3HotHideType_EnumDescriptor,
        .number = PB3DelPHomeEntryHotPointReq_FieldNumber_Type,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3DelPHomeEntryHotPointReq__storage_, type),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3DelPHomeEntryHotPointReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3DelPHomeEntryHotPointReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3DelPHomeEntryHotPointReq_Type_RawValue(PB3DelPHomeEntryHotPointReq *message) {
  GPBDescriptor *descriptor = [PB3DelPHomeEntryHotPointReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3DelPHomeEntryHotPointReq_FieldNumber_Type];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3DelPHomeEntryHotPointReq_Type_RawValue(PB3DelPHomeEntryHotPointReq *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3DelPHomeEntryHotPointReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3DelPHomeEntryHotPointReq_FieldNumber_Type];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3DelPHomeEntryHotPointRes

@implementation PB3DelPHomeEntryHotPointRes


typedef struct PB3DelPHomeEntryHotPointRes__storage_ {
  uint32_t _has_storage_[1];
} PB3DelPHomeEntryHotPointRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3DelPHomeEntryHotPointRes class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(PB3DelPHomeEntryHotPointRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3FirepowerRankReq

@implementation PB3FirepowerRankReq

@dynamic hotPointId;
@dynamic page;
@dynamic pageSize;

typedef struct PB3FirepowerRankReq__storage_ {
  uint32_t _has_storage_[1];
  int32_t page;
  int32_t pageSize;
  int64_t hotPointId;
} PB3FirepowerRankReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "hotPointId",
        .dataTypeSpecific.className = NULL,
        .number = PB3FirepowerRankReq_FieldNumber_HotPointId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3FirepowerRankReq__storage_, hotPointId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "page",
        .dataTypeSpecific.className = NULL,
        .number = PB3FirepowerRankReq_FieldNumber_Page,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3FirepowerRankReq__storage_, page),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "pageSize",
        .dataTypeSpecific.className = NULL,
        .number = PB3FirepowerRankReq_FieldNumber_PageSize,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3FirepowerRankReq__storage_, pageSize),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3FirepowerRankReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3FirepowerRankReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3FirepowerRankRes

@implementation PB3FirepowerRankRes

@dynamic listArray, listArray_Count;
@dynamic count;

typedef struct PB3FirepowerRankRes__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *listArray;
  int64_t count;
} PB3FirepowerRankRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "listArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3FirepowerRank),
        .number = PB3FirepowerRankRes_FieldNumber_ListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3FirepowerRankRes__storage_, listArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "count",
        .dataTypeSpecific.className = NULL,
        .number = PB3FirepowerRankRes_FieldNumber_Count,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3FirepowerRankRes__storage_, count),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3FirepowerRankRes class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3FirepowerRankRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3AddFirepowerReq

@implementation PB3AddFirepowerReq

@dynamic hotPointId;
@dynamic gold;

typedef struct PB3AddFirepowerReq__storage_ {
  uint32_t _has_storage_[1];
  int32_t gold;
  int64_t hotPointId;
} PB3AddFirepowerReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "hotPointId",
        .dataTypeSpecific.className = NULL,
        .number = PB3AddFirepowerReq_FieldNumber_HotPointId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3AddFirepowerReq__storage_, hotPointId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "gold",
        .dataTypeSpecific.className = NULL,
        .number = PB3AddFirepowerReq_FieldNumber_Gold,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3AddFirepowerReq__storage_, gold),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3AddFirepowerReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3AddFirepowerReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3AddFirepowerRes

@implementation PB3AddFirepowerRes


typedef struct PB3AddFirepowerRes__storage_ {
  uint32_t _has_storage_[1];
} PB3AddFirepowerRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3AddFirepowerRes class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(PB3AddFirepowerRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3UnShelveReq

@implementation PB3UnShelveReq

@dynamic hotPointId;
@dynamic gold;

typedef struct PB3UnShelveReq__storage_ {
  uint32_t _has_storage_[1];
  int32_t gold;
  int64_t hotPointId;
} PB3UnShelveReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "hotPointId",
        .dataTypeSpecific.className = NULL,
        .number = PB3UnShelveReq_FieldNumber_HotPointId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3UnShelveReq__storage_, hotPointId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "gold",
        .dataTypeSpecific.className = NULL,
        .number = PB3UnShelveReq_FieldNumber_Gold,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3UnShelveReq__storage_, gold),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3UnShelveReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3UnShelveReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3UnShelveRes

@implementation PB3UnShelveRes

@dynamic unShelveGold;

typedef struct PB3UnShelveRes__storage_ {
  uint32_t _has_storage_[1];
  int32_t unShelveGold;
} PB3UnShelveRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "unShelveGold",
        .dataTypeSpecific.className = NULL,
        .number = PB3UnShelveRes_FieldNumber_UnShelveGold,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3UnShelveRes__storage_, unShelveGold),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3UnShelveRes class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3UnShelveRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3HotReplyReq

@implementation PB3HotReplyReq

@dynamic hotPointId;
@dynamic content;
@dynamic mediaUrlsArray, mediaUrlsArray_Count;
@dynamic atPlayerArray, atPlayerArray_Count;

typedef struct PB3HotReplyReq__storage_ {
  uint32_t _has_storage_[1];
  NSString *content;
  NSMutableArray *mediaUrlsArray;
  NSMutableArray *atPlayerArray;
  int64_t hotPointId;
} PB3HotReplyReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "hotPointId",
        .dataTypeSpecific.className = NULL,
        .number = PB3HotReplyReq_FieldNumber_HotPointId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3HotReplyReq__storage_, hotPointId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "content",
        .dataTypeSpecific.className = NULL,
        .number = PB3HotReplyReq_FieldNumber_Content,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3HotReplyReq__storage_, content),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "mediaUrlsArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3MediaResource),
        .number = PB3HotReplyReq_FieldNumber_MediaUrlsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3HotReplyReq__storage_, mediaUrlsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "atPlayerArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3AtPlayer),
        .number = PB3HotReplyReq_FieldNumber_AtPlayerArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3HotReplyReq__storage_, atPlayerArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3HotReplyReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3HotReplyReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3HotReplyRes

@implementation PB3HotReplyRes


typedef struct PB3HotReplyRes__storage_ {
  uint32_t _has_storage_[1];
} PB3HotReplyRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3HotReplyRes class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(PB3HotReplyRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3UnShelveGoldReq

@implementation PB3UnShelveGoldReq

@dynamic hotPointId;

typedef struct PB3UnShelveGoldReq__storage_ {
  uint32_t _has_storage_[1];
  int64_t hotPointId;
} PB3UnShelveGoldReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "hotPointId",
        .dataTypeSpecific.className = NULL,
        .number = PB3UnShelveGoldReq_FieldNumber_HotPointId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3UnShelveGoldReq__storage_, hotPointId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3UnShelveGoldReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3UnShelveGoldReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3UnShelveGoldRes

@implementation PB3UnShelveGoldRes

@dynamic unShelveGold;

typedef struct PB3UnShelveGoldRes__storage_ {
  uint32_t _has_storage_[1];
  int32_t unShelveGold;
} PB3UnShelveGoldRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "unShelveGold",
        .dataTypeSpecific.className = NULL,
        .number = PB3UnShelveGoldRes_FieldNumber_UnShelveGold,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3UnShelveGoldRes__storage_, unShelveGold),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3UnShelveGoldRes class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3UnShelveGoldRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3PHomeCPPlayer

@implementation PB3PHomeCPPlayer

@dynamic picURL;
@dynamic voiceURL;
@dynamic voiceTime;
@dynamic labelsArray, labelsArray_Count;

typedef struct PB3PHomeCPPlayer__storage_ {
  uint32_t _has_storage_[1];
  int32_t voiceTime;
  NSString *picURL;
  NSString *voiceURL;
  NSMutableArray *labelsArray;
} PB3PHomeCPPlayer__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "picURL",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeCPPlayer_FieldNumber_PicURL,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3PHomeCPPlayer__storage_, picURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "voiceURL",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeCPPlayer_FieldNumber_VoiceURL,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3PHomeCPPlayer__storage_, voiceURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "voiceTime",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeCPPlayer_FieldNumber_VoiceTime,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3PHomeCPPlayer__storage_, voiceTime),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "labelsArray",
        .dataTypeSpecific.className = NULL,
        .number = PB3PHomeCPPlayer_FieldNumber_LabelsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PHomeCPPlayer__storage_, labelsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PHomeCPPlayer class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PHomeCPPlayer__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\003\241!!\000\002\005\241!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3HotShareReq

@implementation PB3HotShareReq

@dynamic shareId;

typedef struct PB3HotShareReq__storage_ {
  uint32_t _has_storage_[1];
  int64_t shareId;
} PB3HotShareReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "shareId",
        .dataTypeSpecific.className = NULL,
        .number = PB3HotShareReq_FieldNumber_ShareId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3HotShareReq__storage_, shareId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3HotShareReq class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3HotShareReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3HotShareRes

@implementation PB3HotShareRes

@dynamic hasDetailRes, detailRes;
@dynamic hasCommentRes, commentRes;

typedef struct PB3HotShareRes__storage_ {
  uint32_t _has_storage_[1];
  PB3CommunityTrendsDetailRes *detailRes;
  PB3CommunityTrendsCommentsRes *commentRes;
} PB3HotShareRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "detailRes",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3CommunityTrendsDetailRes),
        .number = PB3HotShareRes_FieldNumber_DetailRes,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3HotShareRes__storage_, detailRes),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "commentRes",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3CommunityTrendsCommentsRes),
        .number = PB3HotShareRes_FieldNumber_CommentRes,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3HotShareRes__storage_, commentRes),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3HotShareRes class]
                                     rootClass:[PB3PhomeExtRoot class]
                                          file:PB3PhomeExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3HotShareRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
