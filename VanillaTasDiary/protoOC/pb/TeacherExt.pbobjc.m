// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pb/teacher.ext.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import <stdatomic.h>

#import "pb/TeacherExt.pbobjc.h"
#import "pb/CommonExt.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - PB3TeacherExtRoot

@implementation PB3TeacherExtRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - PB3TeacherExtRoot_FileDescriptor

static GPBFileDescriptor *PB3TeacherExtRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"pb"
                                                 objcPrefix:@"PB3"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - Enum PB3TeacherRelationshipType

GPBEnumDescriptor *PB3TeacherRelationshipType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "TrtNull\000TrtTeacher\000TrtStudent\000";
    static const int32_t values[] = {
        PB3TeacherRelationshipType_TrtNull,
        PB3TeacherRelationshipType_TrtTeacher,
        PB3TeacherRelationshipType_TrtStudent,
    };
    static const char *extraTextFormatInfo = "\002\001c\207\000\002c\207\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3TeacherRelationshipType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3TeacherRelationshipType_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3TeacherRelationshipType_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3TeacherRelationshipType_TrtNull:
    case PB3TeacherRelationshipType_TrtTeacher:
    case PB3TeacherRelationshipType_TrtStudent:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - PB3TeacherStudentUserItem

@implementation PB3TeacherStudentUserItem

@dynamic playerId;
@dynamic playerSid;
@dynamic name;
@dynamic sex;
@dynamic icon;

typedef struct PB3TeacherStudentUserItem__storage_ {
  uint32_t _has_storage_[1];
  PB3SexType sex;
  NSString *name;
  NSString *icon;
  int64_t playerId;
  int64_t playerSid;
} PB3TeacherStudentUserItem__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "playerId",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentUserItem_FieldNumber_PlayerId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3TeacherStudentUserItem__storage_, playerId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "playerSid",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentUserItem_FieldNumber_PlayerSid,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3TeacherStudentUserItem__storage_, playerSid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentUserItem_FieldNumber_Name,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3TeacherStudentUserItem__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sex",
        .dataTypeSpecific.enumDescFunc = PB3SexType_EnumDescriptor,
        .number = PB3TeacherStudentUserItem_FieldNumber_Sex,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3TeacherStudentUserItem__storage_, sex),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "icon",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentUserItem_FieldNumber_Icon,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3TeacherStudentUserItem__storage_, icon),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3TeacherStudentUserItem class]
                                     rootClass:[PB3TeacherExtRoot class]
                                          file:PB3TeacherExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3TeacherStudentUserItem__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3TeacherStudentUserItem_Sex_RawValue(PB3TeacherStudentUserItem *message) {
  GPBDescriptor *descriptor = [PB3TeacherStudentUserItem descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3TeacherStudentUserItem_FieldNumber_Sex];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3TeacherStudentUserItem_Sex_RawValue(PB3TeacherStudentUserItem *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3TeacherStudentUserItem descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3TeacherStudentUserItem_FieldNumber_Sex];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3GraduateListReq

@implementation PB3GraduateListReq

@dynamic playerId;

typedef struct PB3GraduateListReq__storage_ {
  uint32_t _has_storage_[1];
  int64_t playerId;
} PB3GraduateListReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "playerId",
        .dataTypeSpecific.className = NULL,
        .number = PB3GraduateListReq_FieldNumber_PlayerId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3GraduateListReq__storage_, playerId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3GraduateListReq class]
                                     rootClass:[PB3TeacherExtRoot class]
                                          file:PB3TeacherExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3GraduateListReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3GraduateListRes

@implementation PB3GraduateListRes

@dynamic graduateListArray, graduateListArray_Count;

typedef struct PB3GraduateListRes__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *graduateListArray;
} PB3GraduateListRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "graduateListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3TeacherStudentUserItem),
        .number = PB3GraduateListRes_FieldNumber_GraduateListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3GraduateListRes__storage_, graduateListArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3GraduateListRes class]
                                     rootClass:[PB3TeacherExtRoot class]
                                          file:PB3TeacherExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3GraduateListRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3TeacherSignReq

@implementation PB3TeacherSignReq

@dynamic relationshipId;

typedef struct PB3TeacherSignReq__storage_ {
  uint32_t _has_storage_[1];
  int64_t relationshipId;
} PB3TeacherSignReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "relationshipId",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherSignReq_FieldNumber_RelationshipId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3TeacherSignReq__storage_, relationshipId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3TeacherSignReq class]
                                     rootClass:[PB3TeacherExtRoot class]
                                          file:PB3TeacherExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3TeacherSignReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3TeacherSignRes

@implementation PB3TeacherSignRes

@dynamic relationshipId;
@dynamic exp;
@dynamic levelId;
@dynamic signIdsArray, signIdsArray_Count;
@dynamic signExp;

typedef struct PB3TeacherSignRes__storage_ {
  uint32_t _has_storage_[1];
  int32_t levelId;
  GPBInt64Array *signIdsArray;
  int64_t relationshipId;
  int64_t exp;
  int64_t signExp;
} PB3TeacherSignRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "relationshipId",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherSignRes_FieldNumber_RelationshipId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3TeacherSignRes__storage_, relationshipId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "exp",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherSignRes_FieldNumber_Exp,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3TeacherSignRes__storage_, exp),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "levelId",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherSignRes_FieldNumber_LevelId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3TeacherSignRes__storage_, levelId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "signIdsArray",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherSignRes_FieldNumber_SignIdsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3TeacherSignRes__storage_, signIdsArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldPacked),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "signExp",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherSignRes_FieldNumber_SignExp,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3TeacherSignRes__storage_, signExp),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3TeacherSignRes class]
                                     rootClass:[PB3TeacherExtRoot class]
                                          file:PB3TeacherExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3TeacherSignRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3TeacherStudentListItem

@implementation PB3TeacherStudentListItem

@dynamic hasUser, user;
@dynamic signIdsArray, signIdsArray_Count;
@dynamic levelId;
@dynamic exp;
@dynamic signExp;
@dynamic createdAt;
@dynamic relationshipId;

typedef struct PB3TeacherStudentListItem__storage_ {
  uint32_t _has_storage_[1];
  int32_t levelId;
  PB3TeacherStudentUserItem *user;
  GPBInt64Array *signIdsArray;
  int64_t exp;
  int64_t signExp;
  int64_t createdAt;
  int64_t relationshipId;
} PB3TeacherStudentListItem__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "user",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3TeacherStudentUserItem),
        .number = PB3TeacherStudentListItem_FieldNumber_User,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3TeacherStudentListItem__storage_, user),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "signIdsArray",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentListItem_FieldNumber_SignIdsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3TeacherStudentListItem__storage_, signIdsArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldPacked),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "levelId",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentListItem_FieldNumber_LevelId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3TeacherStudentListItem__storage_, levelId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "exp",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentListItem_FieldNumber_Exp,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3TeacherStudentListItem__storage_, exp),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "signExp",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentListItem_FieldNumber_SignExp,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3TeacherStudentListItem__storage_, signExp),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "createdAt",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentListItem_FieldNumber_CreatedAt,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3TeacherStudentListItem__storage_, createdAt),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "relationshipId",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentListItem_FieldNumber_RelationshipId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PB3TeacherStudentListItem__storage_, relationshipId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3TeacherStudentListItem class]
                                     rootClass:[PB3TeacherExtRoot class]
                                          file:PB3TeacherExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3TeacherStudentListItem__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3TeacherStudentListReq

@implementation PB3TeacherStudentListReq

@dynamic playerId;

typedef struct PB3TeacherStudentListReq__storage_ {
  uint32_t _has_storage_[1];
  int64_t playerId;
} PB3TeacherStudentListReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "playerId",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentListReq_FieldNumber_PlayerId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3TeacherStudentListReq__storage_, playerId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3TeacherStudentListReq class]
                                     rootClass:[PB3TeacherExtRoot class]
                                          file:PB3TeacherExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3TeacherStudentListReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3TeacherStudentListRes

@implementation PB3TeacherStudentListRes

@dynamic isHaveEver;
@dynamic teachersArray, teachersArray_Count;
@dynamic studentsArray, studentsArray_Count;

typedef struct PB3TeacherStudentListRes__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *teachersArray;
  NSMutableArray *studentsArray;
} PB3TeacherStudentListRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "isHaveEver",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentListRes_FieldNumber_IsHaveEver,
        .hasIndex = 0,
        .offset = 1,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "teachersArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3TeacherStudentListItem),
        .number = PB3TeacherStudentListRes_FieldNumber_TeachersArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3TeacherStudentListRes__storage_, teachersArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "studentsArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3TeacherStudentListItem),
        .number = PB3TeacherStudentListRes_FieldNumber_StudentsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3TeacherStudentListRes__storage_, studentsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3TeacherStudentListRes class]
                                     rootClass:[PB3TeacherExtRoot class]
                                          file:PB3TeacherExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3TeacherStudentListRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3TeacherStudentEverListItem

@implementation PB3TeacherStudentEverListItem

@dynamic hasUser, user;
@dynamic establishedRelationTime;
@dynamic splitRelationTime;
@dynamic establishedRelation;
@dynamic splitRelation;
@dynamic totalExp;
@dynamic relationshipId;
@dynamic levelId;
@dynamic tid;
@dynamic sid;

typedef struct PB3TeacherStudentEverListItem__storage_ {
  uint32_t _has_storage_[1];
  int32_t levelId;
  PB3TeacherStudentUserItem *user;
  NSString *establishedRelation;
  NSString *splitRelation;
  int64_t establishedRelationTime;
  int64_t splitRelationTime;
  int64_t totalExp;
  int64_t relationshipId;
  int64_t tid;
  int64_t sid;
} PB3TeacherStudentEverListItem__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "user",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3TeacherStudentUserItem),
        .number = PB3TeacherStudentEverListItem_FieldNumber_User,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3TeacherStudentEverListItem__storage_, user),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "establishedRelationTime",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentEverListItem_FieldNumber_EstablishedRelationTime,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3TeacherStudentEverListItem__storage_, establishedRelationTime),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "splitRelationTime",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentEverListItem_FieldNumber_SplitRelationTime,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3TeacherStudentEverListItem__storage_, splitRelationTime),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "establishedRelation",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentEverListItem_FieldNumber_EstablishedRelation,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3TeacherStudentEverListItem__storage_, establishedRelation),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "splitRelation",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentEverListItem_FieldNumber_SplitRelation,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3TeacherStudentEverListItem__storage_, splitRelation),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "totalExp",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentEverListItem_FieldNumber_TotalExp,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PB3TeacherStudentEverListItem__storage_, totalExp),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "relationshipId",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentEverListItem_FieldNumber_RelationshipId,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PB3TeacherStudentEverListItem__storage_, relationshipId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "levelId",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentEverListItem_FieldNumber_LevelId,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PB3TeacherStudentEverListItem__storage_, levelId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "tid",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentEverListItem_FieldNumber_Tid,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(PB3TeacherStudentEverListItem__storage_, tid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "sid",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentEverListItem_FieldNumber_Sid,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(PB3TeacherStudentEverListItem__storage_, sid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3TeacherStudentEverListItem class]
                                     rootClass:[PB3TeacherExtRoot class]
                                          file:PB3TeacherExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3TeacherStudentEverListItem__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3TeacherStudentEverListReq

@implementation PB3TeacherStudentEverListReq

@dynamic page;

typedef struct PB3TeacherStudentEverListReq__storage_ {
  uint32_t _has_storage_[1];
  int32_t page;
} PB3TeacherStudentEverListReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "page",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentEverListReq_FieldNumber_Page,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3TeacherStudentEverListReq__storage_, page),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3TeacherStudentEverListReq class]
                                     rootClass:[PB3TeacherExtRoot class]
                                          file:PB3TeacherExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3TeacherStudentEverListReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3TeacherStudentEverListRes

@implementation PB3TeacherStudentEverListRes

@dynamic listArray, listArray_Count;
@dynamic total;

typedef struct PB3TeacherStudentEverListRes__storage_ {
  uint32_t _has_storage_[1];
  int32_t total;
  NSMutableArray *listArray;
} PB3TeacherStudentEverListRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "listArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3TeacherStudentEverListItem),
        .number = PB3TeacherStudentEverListRes_FieldNumber_ListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3TeacherStudentEverListRes__storage_, listArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "total",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentEverListRes_FieldNumber_Total,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3TeacherStudentEverListRes__storage_, total),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3TeacherStudentEverListRes class]
                                     rootClass:[PB3TeacherExtRoot class]
                                          file:PB3TeacherExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3TeacherStudentEverListRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3TeacherStudentLevCfg

@implementation PB3TeacherStudentLevCfg

@dynamic levelId;
@dynamic level;
@dynamic teacherTitle;
@dynamic studentTitle;
@dynamic upgradeExp;
@dynamic onChairBackImageURL;
@dynamic onChairBackImageURLPc;
@dynamic onChairContentColor;
@dynamic onChairNameColor;
@dynamic animationSourceURL;
@dynamic animationSourceURLPc;
@dynamic enterRoomEffect;
@dynamic enterRoomEffectPc;
@dynamic effectNameColor;
@dynamic effectTextColor;
@dynamic effectText;
@dynamic giftId;

typedef struct PB3TeacherStudentLevCfg__storage_ {
  uint32_t _has_storage_[1];
  int32_t levelId;
  int32_t level;
  int32_t giftId;
  NSString *teacherTitle;
  NSString *studentTitle;
  NSString *onChairBackImageURL;
  NSString *onChairBackImageURLPc;
  NSString *onChairContentColor;
  NSString *onChairNameColor;
  NSString *animationSourceURL;
  NSString *animationSourceURLPc;
  NSString *enterRoomEffect;
  NSString *enterRoomEffectPc;
  NSString *effectNameColor;
  NSString *effectTextColor;
  NSString *effectText;
  int64_t upgradeExp;
} PB3TeacherStudentLevCfg__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "levelId",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentLevCfg_FieldNumber_LevelId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3TeacherStudentLevCfg__storage_, levelId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "level",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentLevCfg_FieldNumber_Level,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3TeacherStudentLevCfg__storage_, level),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "teacherTitle",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentLevCfg_FieldNumber_TeacherTitle,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3TeacherStudentLevCfg__storage_, teacherTitle),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "studentTitle",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentLevCfg_FieldNumber_StudentTitle,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3TeacherStudentLevCfg__storage_, studentTitle),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "upgradeExp",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentLevCfg_FieldNumber_UpgradeExp,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3TeacherStudentLevCfg__storage_, upgradeExp),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "onChairBackImageURL",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentLevCfg_FieldNumber_OnChairBackImageURL,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PB3TeacherStudentLevCfg__storage_, onChairBackImageURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "onChairBackImageURLPc",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentLevCfg_FieldNumber_OnChairBackImageURLPc,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PB3TeacherStudentLevCfg__storage_, onChairBackImageURLPc),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "onChairContentColor",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentLevCfg_FieldNumber_OnChairContentColor,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PB3TeacherStudentLevCfg__storage_, onChairContentColor),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "onChairNameColor",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentLevCfg_FieldNumber_OnChairNameColor,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(PB3TeacherStudentLevCfg__storage_, onChairNameColor),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "animationSourceURL",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentLevCfg_FieldNumber_AnimationSourceURL,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(PB3TeacherStudentLevCfg__storage_, animationSourceURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "animationSourceURLPc",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentLevCfg_FieldNumber_AnimationSourceURLPc,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(PB3TeacherStudentLevCfg__storage_, animationSourceURLPc),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "enterRoomEffect",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentLevCfg_FieldNumber_EnterRoomEffect,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(PB3TeacherStudentLevCfg__storage_, enterRoomEffect),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "enterRoomEffectPc",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentLevCfg_FieldNumber_EnterRoomEffectPc,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(PB3TeacherStudentLevCfg__storage_, enterRoomEffectPc),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "effectNameColor",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentLevCfg_FieldNumber_EffectNameColor,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(PB3TeacherStudentLevCfg__storage_, effectNameColor),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "effectTextColor",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentLevCfg_FieldNumber_EffectTextColor,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(PB3TeacherStudentLevCfg__storage_, effectTextColor),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "effectText",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentLevCfg_FieldNumber_EffectText,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(PB3TeacherStudentLevCfg__storage_, effectText),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "giftId",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentLevCfg_FieldNumber_GiftId,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(PB3TeacherStudentLevCfg__storage_, giftId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3TeacherStudentLevCfg class]
                                     rootClass:[PB3TeacherExtRoot class]
                                          file:PB3TeacherExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3TeacherStudentLevCfg__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\006\002\245\244\245\241!!\000\007\002\245\244\245\241!!\242\000\n\t\246\241!!\000\013\t\246\241!!\242\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3TeacherStudentLevCfgReq

@implementation PB3TeacherStudentLevCfgReq


typedef struct PB3TeacherStudentLevCfgReq__storage_ {
  uint32_t _has_storage_[1];
} PB3TeacherStudentLevCfgReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3TeacherStudentLevCfgReq class]
                                     rootClass:[PB3TeacherExtRoot class]
                                          file:PB3TeacherExtRoot_FileDescriptor()
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(PB3TeacherStudentLevCfgReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3TeacherStudentLevCfgRes

@implementation PB3TeacherStudentLevCfgRes

@dynamic cfgListArray, cfgListArray_Count;

typedef struct PB3TeacherStudentLevCfgRes__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *cfgListArray;
} PB3TeacherStudentLevCfgRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "cfgListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3TeacherStudentLevCfg),
        .number = PB3TeacherStudentLevCfgRes_FieldNumber_CfgListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3TeacherStudentLevCfgRes__storage_, cfgListArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3TeacherStudentLevCfgRes class]
                                     rootClass:[PB3TeacherExtRoot class]
                                          file:PB3TeacherExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3TeacherStudentLevCfgRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3TeacherLevelUpPush

@implementation PB3TeacherLevelUpPush

@dynamic hasTargetInfo, targetInfo;
@dynamic isTeacher;
@dynamic msg;

typedef struct PB3TeacherLevelUpPush__storage_ {
  uint32_t _has_storage_[1];
  PB3TeacherStudentUserItem *targetInfo;
  NSString *msg;
} PB3TeacherLevelUpPush__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "targetInfo",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3TeacherStudentUserItem),
        .number = PB3TeacherLevelUpPush_FieldNumber_TargetInfo,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3TeacherLevelUpPush__storage_, targetInfo),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "isTeacher",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherLevelUpPush_FieldNumber_IsTeacher,
        .hasIndex = 1,
        .offset = 2,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "msg",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherLevelUpPush_FieldNumber_Msg,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3TeacherLevelUpPush__storage_, msg),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3TeacherLevelUpPush class]
                                     rootClass:[PB3TeacherExtRoot class]
                                          file:PB3TeacherExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3TeacherLevelUpPush__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3GraduateApprenticePush

@implementation PB3GraduateApprenticePush

@dynamic hasTargetInfo, targetInfo;
@dynamic msg;

typedef struct PB3GraduateApprenticePush__storage_ {
  uint32_t _has_storage_[1];
  PB3TeacherStudentUserItem *targetInfo;
  NSString *msg;
} PB3GraduateApprenticePush__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "targetInfo",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3TeacherStudentUserItem),
        .number = PB3GraduateApprenticePush_FieldNumber_TargetInfo,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3GraduateApprenticePush__storage_, targetInfo),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "msg",
        .dataTypeSpecific.className = NULL,
        .number = PB3GraduateApprenticePush_FieldNumber_Msg,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3GraduateApprenticePush__storage_, msg),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3GraduateApprenticePush class]
                                     rootClass:[PB3TeacherExtRoot class]
                                          file:PB3TeacherExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3GraduateApprenticePush__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3TeacherStudentDetailReq

@implementation PB3TeacherStudentDetailReq

@dynamic relationshipId;

typedef struct PB3TeacherStudentDetailReq__storage_ {
  uint32_t _has_storage_[1];
  int64_t relationshipId;
} PB3TeacherStudentDetailReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "relationshipId",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentDetailReq_FieldNumber_RelationshipId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3TeacherStudentDetailReq__storage_, relationshipId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3TeacherStudentDetailReq class]
                                     rootClass:[PB3TeacherExtRoot class]
                                          file:PB3TeacherExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3TeacherStudentDetailReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3TeacherStudentDetailRes

@implementation PB3TeacherStudentDetailRes

@dynamic hasTargetInfo, targetInfo;
@dynamic isTeacher;
@dynamic exp;
@dynamic levelId;
@dynamic signIdsArray, signIdsArray_Count;
@dynamic createdAt;
@dynamic signExp;

typedef struct PB3TeacherStudentDetailRes__storage_ {
  uint32_t _has_storage_[1];
  int32_t levelId;
  PB3TeacherStudentUserItem *targetInfo;
  GPBInt64Array *signIdsArray;
  int64_t exp;
  int64_t createdAt;
  int64_t signExp;
} PB3TeacherStudentDetailRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "targetInfo",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3TeacherStudentUserItem),
        .number = PB3TeacherStudentDetailRes_FieldNumber_TargetInfo,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3TeacherStudentDetailRes__storage_, targetInfo),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "isTeacher",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentDetailRes_FieldNumber_IsTeacher,
        .hasIndex = 1,
        .offset = 2,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "exp",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentDetailRes_FieldNumber_Exp,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3TeacherStudentDetailRes__storage_, exp),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "levelId",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentDetailRes_FieldNumber_LevelId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3TeacherStudentDetailRes__storage_, levelId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "signIdsArray",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentDetailRes_FieldNumber_SignIdsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3TeacherStudentDetailRes__storage_, signIdsArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldPacked),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "createdAt",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentDetailRes_FieldNumber_CreatedAt,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PB3TeacherStudentDetailRes__storage_, createdAt),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "signExp",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentDetailRes_FieldNumber_SignExp,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PB3TeacherStudentDetailRes__storage_, signExp),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3TeacherStudentDetailRes class]
                                     rootClass:[PB3TeacherExtRoot class]
                                          file:PB3TeacherExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3TeacherStudentDetailRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3TeacherStudentGenealogyItem

@implementation PB3TeacherStudentGenealogyItem

@dynamic hasUser, user;
@dynamic levelId;
@dynamic levelName;
@dynamic exp;
@dynamic createdAt;
@dynamic relationshipId;

typedef struct PB3TeacherStudentGenealogyItem__storage_ {
  uint32_t _has_storage_[1];
  int32_t levelId;
  PB3TeacherStudentUserItem *user;
  NSString *levelName;
  int64_t exp;
  int64_t createdAt;
  int64_t relationshipId;
} PB3TeacherStudentGenealogyItem__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "user",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3TeacherStudentUserItem),
        .number = PB3TeacherStudentGenealogyItem_FieldNumber_User,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3TeacherStudentGenealogyItem__storage_, user),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "levelId",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentGenealogyItem_FieldNumber_LevelId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3TeacherStudentGenealogyItem__storage_, levelId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "levelName",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentGenealogyItem_FieldNumber_LevelName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3TeacherStudentGenealogyItem__storage_, levelName),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "exp",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentGenealogyItem_FieldNumber_Exp,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3TeacherStudentGenealogyItem__storage_, exp),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "createdAt",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentGenealogyItem_FieldNumber_CreatedAt,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3TeacherStudentGenealogyItem__storage_, createdAt),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "relationshipId",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentGenealogyItem_FieldNumber_RelationshipId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PB3TeacherStudentGenealogyItem__storage_, relationshipId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3TeacherStudentGenealogyItem class]
                                     rootClass:[PB3TeacherExtRoot class]
                                          file:PB3TeacherExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3TeacherStudentGenealogyItem__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3TeacherStudentGenealogyReq

@implementation PB3TeacherStudentGenealogyReq

@dynamic playerId;

typedef struct PB3TeacherStudentGenealogyReq__storage_ {
  uint32_t _has_storage_[1];
  int64_t playerId;
} PB3TeacherStudentGenealogyReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "playerId",
        .dataTypeSpecific.className = NULL,
        .number = PB3TeacherStudentGenealogyReq_FieldNumber_PlayerId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3TeacherStudentGenealogyReq__storage_, playerId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3TeacherStudentGenealogyReq class]
                                     rootClass:[PB3TeacherExtRoot class]
                                          file:PB3TeacherExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3TeacherStudentGenealogyReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3TeacherStudentGenealogyRes

@implementation PB3TeacherStudentGenealogyRes

@dynamic hasTagetUser, tagetUser;
@dynamic teachersArray, teachersArray_Count;
@dynamic studentsArray, studentsArray_Count;

typedef struct PB3TeacherStudentGenealogyRes__storage_ {
  uint32_t _has_storage_[1];
  PB3TeacherStudentGenealogyItem *tagetUser;
  NSMutableArray *teachersArray;
  NSMutableArray *studentsArray;
} PB3TeacherStudentGenealogyRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "tagetUser",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3TeacherStudentGenealogyItem),
        .number = PB3TeacherStudentGenealogyRes_FieldNumber_TagetUser,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3TeacherStudentGenealogyRes__storage_, tagetUser),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "teachersArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3TeacherStudentGenealogyItem),
        .number = PB3TeacherStudentGenealogyRes_FieldNumber_TeachersArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3TeacherStudentGenealogyRes__storage_, teachersArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "studentsArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3TeacherStudentGenealogyItem),
        .number = PB3TeacherStudentGenealogyRes_FieldNumber_StudentsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3TeacherStudentGenealogyRes__storage_, studentsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3TeacherStudentGenealogyRes class]
                                     rootClass:[PB3TeacherExtRoot class]
                                          file:PB3TeacherExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3TeacherStudentGenealogyRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
