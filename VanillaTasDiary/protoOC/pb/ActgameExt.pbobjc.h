// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pb/actgame.ext.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class PB3ActGameConf;
@class PB3CfgUserId2RandomScheme;
@class PB3ClanInfo;
@class PB3ConfActPage;
@class PB3FindRedEnvelopeSelfStatusRes;
@class PB3FindRedEnvelopeStatusRes;
@class PB3LuckAwardInfo;
@class PB3Player;
@class PB3RedEnvelopeAwardInfo;
@class PB3RedEnvelopeAwardPlayerInfo;
@class PB3RedEnvelopeBestPlayerInfo;
@class PB3RedEnvelopePlayerFlagInfo;
@class PB3RedEnvelopePlayerInfo;
@class PB3RedEnvelopePlayerLogInfo;
@class PB3ServerTimestamp;
@class PB3SolitaireTips;
GPB_ENUM_FWD_DECLARE(PB3ActGameCfgType);
GPB_ENUM_FWD_DECLARE(PB3RedEnvelopeStatus);
GPB_ENUM_FWD_DECLARE(PB3SubInfoActivityType);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum PB3PushRedEnvelopeType

typedef GPB_ENUM(PB3PushRedEnvelopeType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3PushRedEnvelopeType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3PushRedEnvelopeType_PretNull = 0,

  /** 普通状态推送 */
  PB3PushRedEnvelopeType_PretNormal = 1,

  /** 开奖推送 */
  PB3PushRedEnvelopeType_PretAward = 2,

  /** 自身状态推送 */
  PB3PushRedEnvelopeType_PretSelfStatus = 3,
};

GPBEnumDescriptor *PB3PushRedEnvelopeType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3PushRedEnvelopeType_IsValidValue(int32_t value);

#pragma mark - Enum PB3Id2RandomType

/** 靓号随机类型 */
typedef GPB_ENUM(PB3Id2RandomType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3Id2RandomType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3Id2RandomType_Id2RandomTypeNone = 0,

  /** 普通 */
  PB3Id2RandomType_Id2RandomTypeNormal = 1,

  /** 中级 */
  PB3Id2RandomType_Id2RandomTypeMiddle = 2,

  /** 高级 */
  PB3Id2RandomType_Id2RandomTypeHigh = 3,

  /** 特级 */
  PB3Id2RandomType_Id2RandomTypeSuper = 4,
};

GPBEnumDescriptor *PB3Id2RandomType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3Id2RandomType_IsValidValue(int32_t value);

#pragma mark - PB3ActgameExtRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface PB3ActgameExtRoot : GPBRootObject
@end

#pragma mark - PB3FindActGameConfReq

typedef GPB_ENUM(PB3FindActGameConfReq_FieldNumber) {
  PB3FindActGameConfReq_FieldNumber_ConfType = 1,
};

/**
 * 获取春节红包接龙配置
 **/
@interface PB3FindActGameConfReq : GPBMessage

/** 配置类型 */
@property(nonatomic, readwrite) enum PB3ActGameCfgType confType;

@end

/**
 * Fetches the raw value of a @c PB3FindActGameConfReq's @c confType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3FindActGameConfReq_ConfType_RawValue(PB3FindActGameConfReq *message);
/**
 * Sets the raw value of an @c PB3FindActGameConfReq's @c confType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3FindActGameConfReq_ConfType_RawValue(PB3FindActGameConfReq *message, int32_t value);

#pragma mark - PB3ActGameConf

typedef GPB_ENUM(PB3ActGameConf_FieldNumber) {
  PB3ActGameConf_FieldNumber_ActPage = 1,
  PB3ActGameConf_FieldNumber_ActType = 2,
  PB3ActGameConf_FieldNumber_TipsArray = 3,
  PB3ActGameConf_FieldNumber_StoreId = 4,
  PB3ActGameConf_FieldNumber_IncStoreId = 5,
  PB3ActGameConf_FieldNumber_ExchangeId = 6,
  PB3ActGameConf_FieldNumber_EffectId = 7,
  PB3ActGameConf_FieldNumber_EffectRewardTimeLong = 8,
  PB3ActGameConf_FieldNumber_StartUnix = 9,
  PB3ActGameConf_FieldNumber_EndUnix = 10,
  PB3ActGameConf_FieldNumber_IsOpen = 11,
  PB3ActGameConf_FieldNumber_WaitTime = 12,
};

/**
 * 红包配置数据
 **/
@interface PB3ActGameConf : GPBMessage

/** 页面内容 */
@property(nonatomic, readwrite, strong, null_resettable) PB3ConfActPage *actPage;
/** Test to see if @c actPage has been set. */
@property(nonatomic, readwrite) BOOL hasActPage;

/** 活动类型 */
@property(nonatomic, readwrite) enum PB3SubInfoActivityType actType;

/** 飘屏默认文案 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SolitaireTips*> *tipsArray;
/** The number of items in @c tipsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger tipsArray_Count;

/** 投注物品ID */
@property(nonatomic, readwrite) int64_t storeId;

/**  投注物品挚友商城商城ID */
@property(nonatomic, readwrite) int32_t incStoreId;

/** 兑换礼物ID */
@property(nonatomic, readwrite) int32_t exchangeId;

/** 奖励特效ID，可以是空 */
@property(nonatomic, readwrite) int32_t effectId;

/** 特效奖励时长 */
@property(nonatomic, readwrite) int64_t effectRewardTimeLong;

/** 开始时间戳 */
@property(nonatomic, readwrite) int64_t startUnix;

/** 结束时间戳 */
@property(nonatomic, readwrite) int64_t endUnix;

/** 是否开启 */
@property(nonatomic, readwrite) BOOL isOpen;

/** 开奖时间 */
@property(nonatomic, readwrite) int64_t waitTime;

@end

/**
 * Fetches the raw value of a @c PB3ActGameConf's @c actType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ActGameConf_ActType_RawValue(PB3ActGameConf *message);
/**
 * Sets the raw value of an @c PB3ActGameConf's @c actType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ActGameConf_ActType_RawValue(PB3ActGameConf *message, int32_t value);

#pragma mark - PB3FindActGameConfRes

typedef GPB_ENUM(PB3FindActGameConfRes_FieldNumber) {
  PB3FindActGameConfRes_FieldNumber_RedEnvelopeConfListArray = 1,
  PB3FindActGameConfRes_FieldNumber_Player = 2,
  PB3FindActGameConfRes_FieldNumber_ServerTimestamp = 3,
  PB3FindActGameConfRes_FieldNumber_Clan = 4,
  PB3FindActGameConfRes_FieldNumber_UserId2ConfArray = 5,
  PB3FindActGameConfRes_FieldNumber_ActPage = 6,
};

/**
 * 获取春节红包接龙配置
 **/
@interface PB3FindActGameConfRes : GPBMessage

/** 春节红包接龙配置 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ActGameConf*> *redEnvelopeConfListArray;
/** The number of items in @c redEnvelopeConfListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger redEnvelopeConfListArray_Count;

/** 用户信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3Player *player;
/** Test to see if @c player has been set. */
@property(nonatomic, readwrite) BOOL hasPlayer;

/** 服务器时间 */
@property(nonatomic, readwrite, strong, null_resettable) PB3ServerTimestamp *serverTimestamp;
/** Test to see if @c serverTimestamp has been set. */
@property(nonatomic, readwrite) BOOL hasServerTimestamp;

/** 公会信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3ClanInfo *clan;
/** Test to see if @c clan has been set. */
@property(nonatomic, readwrite) BOOL hasClan;

/** 靓号机配置 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3CfgUserId2RandomScheme*> *userId2ConfArray;
/** The number of items in @c userId2ConfArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger userId2ConfArray_Count;

/** 页面内容 */
@property(nonatomic, readwrite, strong, null_resettable) PB3ConfActPage *actPage;
/** Test to see if @c actPage has been set. */
@property(nonatomic, readwrite) BOOL hasActPage;

@end

#pragma mark - PB3RedEnvelopePlayerInfo

typedef GPB_ENUM(PB3RedEnvelopePlayerInfo_FieldNumber) {
  PB3RedEnvelopePlayerInfo_FieldNumber_PlayerId = 1,
  PB3RedEnvelopePlayerInfo_FieldNumber_PlayerId2 = 2,
  PB3RedEnvelopePlayerInfo_FieldNumber_PlayerName = 3,
  PB3RedEnvelopePlayerInfo_FieldNumber_PlayerIcon = 4,
};

/**
 * 红包接龙玩法状态协议
 **/
@interface PB3RedEnvelopePlayerInfo : GPBMessage

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId2;

/** 用户名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerName;

/** 用户头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerIcon;

@end

#pragma mark - PB3FindRedEnvelopeStatusReq

typedef GPB_ENUM(PB3FindRedEnvelopeStatusReq_FieldNumber) {
  PB3FindRedEnvelopeStatusReq_FieldNumber_TypeId = 1,
};

/**
 * 红包接龙玩法状态请求
 **/
@interface PB3FindRedEnvelopeStatusReq : GPBMessage

/** 请求配置类型ID */
@property(nonatomic, readwrite) enum PB3SubInfoActivityType typeId;

@end

/**
 * Fetches the raw value of a @c PB3FindRedEnvelopeStatusReq's @c typeId property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3FindRedEnvelopeStatusReq_TypeId_RawValue(PB3FindRedEnvelopeStatusReq *message);
/**
 * Sets the raw value of an @c PB3FindRedEnvelopeStatusReq's @c typeId property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3FindRedEnvelopeStatusReq_TypeId_RawValue(PB3FindRedEnvelopeStatusReq *message, int32_t value);

#pragma mark - PB3FindRedEnvelopeStatusRes

typedef GPB_ENUM(PB3FindRedEnvelopeStatusRes_FieldNumber) {
  PB3FindRedEnvelopeStatusRes_FieldNumber_RemainTime = 1,
  PB3FindRedEnvelopeStatusRes_FieldNumber_JoinUserListArray = 2,
  PB3FindRedEnvelopeStatusRes_FieldNumber_CurTotalUserNum = 3,
  PB3FindRedEnvelopeStatusRes_FieldNumber_CurTotalPoint = 4,
  PB3FindRedEnvelopeStatusRes_FieldNumber_CurStatus = 5,
  PB3FindRedEnvelopeStatusRes_FieldNumber_IsNewTurn = 6,
};

/**
 * 红包接龙玩法状态返回
 **/
@interface PB3FindRedEnvelopeStatusRes : GPBMessage

/** 开奖或等待开奖结束时间戳 */
@property(nonatomic, readwrite) int64_t remainTime;

/** 最新的15个用户 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3RedEnvelopePlayerInfo*> *joinUserListArray;
/** The number of items in @c joinUserListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger joinUserListArray_Count;

/** 当前参与人数 */
@property(nonatomic, readwrite) int64_t curTotalUserNum;

/** 当前福气值 */
@property(nonatomic, readwrite) int64_t curTotalPoint;

/** 当前状态 */
@property(nonatomic, readwrite) enum PB3RedEnvelopeStatus curStatus;

/** 是否是新的一轮 */
@property(nonatomic, readwrite) BOOL isNewTurn;

@end

/**
 * Fetches the raw value of a @c PB3FindRedEnvelopeStatusRes's @c curStatus property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3FindRedEnvelopeStatusRes_CurStatus_RawValue(PB3FindRedEnvelopeStatusRes *message);
/**
 * Sets the raw value of an @c PB3FindRedEnvelopeStatusRes's @c curStatus property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3FindRedEnvelopeStatusRes_CurStatus_RawValue(PB3FindRedEnvelopeStatusRes *message, int32_t value);

#pragma mark - PB3RedEnvelopeBestPlayerInfo

typedef GPB_ENUM(PB3RedEnvelopeBestPlayerInfo_FieldNumber) {
  PB3RedEnvelopeBestPlayerInfo_FieldNumber_CycleNum = 1,
  PB3RedEnvelopeBestPlayerInfo_FieldNumber_PlayerId = 2,
  PB3RedEnvelopeBestPlayerInfo_FieldNumber_PlayerId2 = 3,
  PB3RedEnvelopeBestPlayerInfo_FieldNumber_PlayerName = 4,
  PB3RedEnvelopeBestPlayerInfo_FieldNumber_PlayerIcon = 5,
  PB3RedEnvelopeBestPlayerInfo_FieldNumber_BestNum = 6,
};

/**
 * 往期手气最佳用户数据
 **/
@interface PB3RedEnvelopeBestPlayerInfo : GPBMessage

/** 期号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *cycleNum;

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId2;

/** 用户名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerName;

/** 用户头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerIcon;

/** 手气最佳值 */
@property(nonatomic, readwrite) int64_t bestNum;

@end

#pragma mark - PB3ListBeforeRedEnvelopeLogReq

typedef GPB_ENUM(PB3ListBeforeRedEnvelopeLogReq_FieldNumber) {
  PB3ListBeforeRedEnvelopeLogReq_FieldNumber_Page = 1,
  PB3ListBeforeRedEnvelopeLogReq_FieldNumber_PageSize = 2,
  PB3ListBeforeRedEnvelopeLogReq_FieldNumber_TypeId = 3,
};

/**
 * 获取往期记录请求
 **/
@interface PB3ListBeforeRedEnvelopeLogReq : GPBMessage

@property(nonatomic, readwrite) int32_t page;

@property(nonatomic, readwrite) int32_t pageSize;

/** 请求配置类型ID */
@property(nonatomic, readwrite) enum PB3SubInfoActivityType typeId;

@end

/**
 * Fetches the raw value of a @c PB3ListBeforeRedEnvelopeLogReq's @c typeId property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ListBeforeRedEnvelopeLogReq_TypeId_RawValue(PB3ListBeforeRedEnvelopeLogReq *message);
/**
 * Sets the raw value of an @c PB3ListBeforeRedEnvelopeLogReq's @c typeId property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ListBeforeRedEnvelopeLogReq_TypeId_RawValue(PB3ListBeforeRedEnvelopeLogReq *message, int32_t value);

#pragma mark - PB3ListBeforeRedEnvelopeLogRes

typedef GPB_ENUM(PB3ListBeforeRedEnvelopeLogRes_FieldNumber) {
  PB3ListBeforeRedEnvelopeLogRes_FieldNumber_ListInfoArray = 1,
};

/**
 * 获取往期记录返回
 **/
@interface PB3ListBeforeRedEnvelopeLogRes : GPBMessage

/** 日志记录 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3RedEnvelopeBestPlayerInfo*> *listInfoArray;
/** The number of items in @c listInfoArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listInfoArray_Count;

@end

#pragma mark - PB3RedEnvelopePlayerLogInfo

typedef GPB_ENUM(PB3RedEnvelopePlayerLogInfo_FieldNumber) {
  PB3RedEnvelopePlayerLogInfo_FieldNumber_CycleNum = 1,
  PB3RedEnvelopePlayerLogInfo_FieldNumber_AwardName = 2,
  PB3RedEnvelopePlayerLogInfo_FieldNumber_AwardTime = 3,
  PB3RedEnvelopePlayerLogInfo_FieldNumber_AwardNum = 4,
  PB3RedEnvelopePlayerLogInfo_FieldNumber_AwardType = 5,
  PB3RedEnvelopePlayerLogInfo_FieldNumber_AwardIcon = 6,
};

/**
 * 往期手气最佳用户数据
 **/
@interface PB3RedEnvelopePlayerLogInfo : GPBMessage

/** 期号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *cycleNum;

/** 奖励名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *awardName;

/** 记录时间,时间戳 */
@property(nonatomic, readwrite) int64_t awardTime;

/** 奖励数 */
@property(nonatomic, readwrite) int64_t awardNum;

/** 奖励类型1礼物 2特效 */
@property(nonatomic, readwrite) int32_t awardType;

/** 奖励图标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *awardIcon;

@end

#pragma mark - PB3ListPlayerRedEnvelopeLogReq

typedef GPB_ENUM(PB3ListPlayerRedEnvelopeLogReq_FieldNumber) {
  PB3ListPlayerRedEnvelopeLogReq_FieldNumber_Page = 1,
  PB3ListPlayerRedEnvelopeLogReq_FieldNumber_PageSize = 2,
  PB3ListPlayerRedEnvelopeLogReq_FieldNumber_TypeId = 3,
};

/**
 * 获取个人记录请求
 **/
@interface PB3ListPlayerRedEnvelopeLogReq : GPBMessage

@property(nonatomic, readwrite) int32_t page;

@property(nonatomic, readwrite) int32_t pageSize;

/** 请求配置类型ID */
@property(nonatomic, readwrite) enum PB3SubInfoActivityType typeId;

@end

/**
 * Fetches the raw value of a @c PB3ListPlayerRedEnvelopeLogReq's @c typeId property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ListPlayerRedEnvelopeLogReq_TypeId_RawValue(PB3ListPlayerRedEnvelopeLogReq *message);
/**
 * Sets the raw value of an @c PB3ListPlayerRedEnvelopeLogReq's @c typeId property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ListPlayerRedEnvelopeLogReq_TypeId_RawValue(PB3ListPlayerRedEnvelopeLogReq *message, int32_t value);

#pragma mark - PB3ListPlayerRedEnvelopeLogRes

typedef GPB_ENUM(PB3ListPlayerRedEnvelopeLogRes_FieldNumber) {
  PB3ListPlayerRedEnvelopeLogRes_FieldNumber_ListInfoArray = 1,
};

/**
 * 获取个人记录返回
 **/
@interface PB3ListPlayerRedEnvelopeLogRes : GPBMessage

/** 日志记录 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3RedEnvelopePlayerLogInfo*> *listInfoArray;
/** The number of items in @c listInfoArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listInfoArray_Count;

@end

#pragma mark - PB3RedEnvelopeAwardPlayerInfo

typedef GPB_ENUM(PB3RedEnvelopeAwardPlayerInfo_FieldNumber) {
  PB3RedEnvelopeAwardPlayerInfo_FieldNumber_PlayerId = 1,
  PB3RedEnvelopeAwardPlayerInfo_FieldNumber_PlayerId2 = 2,
  PB3RedEnvelopeAwardPlayerInfo_FieldNumber_PlayerName = 3,
  PB3RedEnvelopeAwardPlayerInfo_FieldNumber_PlayerIcon = 4,
  PB3RedEnvelopeAwardPlayerInfo_FieldNumber_AwardNum = 5,
};

/**
 * 推送开奖信息
 **/
@interface PB3RedEnvelopeAwardPlayerInfo : GPBMessage

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId2;

/** 用户名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerName;

/** 用户头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerIcon;

/** 获得福气值 */
@property(nonatomic, readwrite) int64_t awardNum;

@end

#pragma mark - PB3LuckAwardInfo

typedef GPB_ENUM(PB3LuckAwardInfo_FieldNumber) {
  PB3LuckAwardInfo_FieldNumber_Type = 1,
  PB3LuckAwardInfo_FieldNumber_LuckAwardId = 2,
  PB3LuckAwardInfo_FieldNumber_LuckAwardNum = 3,
  PB3LuckAwardInfo_FieldNumber_LuckAwardName = 4,
  PB3LuckAwardInfo_FieldNumber_LuckAwardIcon = 5,
};

@interface PB3LuckAwardInfo : GPBMessage

/** 1礼物；2特效 */
@property(nonatomic, readwrite) int32_t type;

/** 幸运奖励ID */
@property(nonatomic, readwrite) int64_t luckAwardId;

/** 幸运奖励数 */
@property(nonatomic, readwrite) int64_t luckAwardNum;

/** 幸运礼物名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *luckAwardName;

/** 幸运礼物图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *luckAwardIcon;

@end

#pragma mark - PB3RedEnvelopeAwardInfo

typedef GPB_ENUM(PB3RedEnvelopeAwardInfo_FieldNumber) {
  PB3RedEnvelopeAwardInfo_FieldNumber_LuckPlayerId = 1,
  PB3RedEnvelopeAwardInfo_FieldNumber_LuckAwardListArray = 2,
  PB3RedEnvelopeAwardInfo_FieldNumber_ListPlayerArray = 3,
  PB3RedEnvelopeAwardInfo_FieldNumber_TotalPlayerNum = 4,
  PB3RedEnvelopeAwardInfo_FieldNumber_TotalEatScore = 5,
};

/**
 * 推送开奖信息
 **/
@interface PB3RedEnvelopeAwardInfo : GPBMessage

/** 手气最佳用户ID */
@property(nonatomic, readwrite) int64_t luckPlayerId;

/** 幸运奖励 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3LuckAwardInfo*> *luckAwardListArray;
/** The number of items in @c luckAwardListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger luckAwardListArray_Count;

/** 前10获奖用户 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3RedEnvelopeAwardPlayerInfo*> *listPlayerArray;
/** The number of items in @c listPlayerArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listPlayerArray_Count;

/** 参与用户人数 */
@property(nonatomic, readwrite) int64_t totalPlayerNum;

/** 用户瓜分总数 */
@property(nonatomic, readwrite) int64_t totalEatScore;

@end

#pragma mark - PB3RedEnvelopeJoinReq

typedef GPB_ENUM(PB3RedEnvelopeJoinReq_FieldNumber) {
  PB3RedEnvelopeJoinReq_FieldNumber_TypeId = 1,
};

/**
 * 请求投注
 **/
@interface PB3RedEnvelopeJoinReq : GPBMessage

/** 请求配置类型ID */
@property(nonatomic, readwrite) enum PB3SubInfoActivityType typeId;

@end

/**
 * Fetches the raw value of a @c PB3RedEnvelopeJoinReq's @c typeId property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3RedEnvelopeJoinReq_TypeId_RawValue(PB3RedEnvelopeJoinReq *message);
/**
 * Sets the raw value of an @c PB3RedEnvelopeJoinReq's @c typeId property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3RedEnvelopeJoinReq_TypeId_RawValue(PB3RedEnvelopeJoinReq *message, int32_t value);

#pragma mark - PB3RedEnvelopeJoinRes

/**
 * 请求投注返回
 **/
@interface PB3RedEnvelopeJoinRes : GPBMessage

@end

#pragma mark - PB3RedEnvelopeSwitchAutoJoinReq

typedef GPB_ENUM(PB3RedEnvelopeSwitchAutoJoinReq_FieldNumber) {
  PB3RedEnvelopeSwitchAutoJoinReq_FieldNumber_TypeId = 1,
  PB3RedEnvelopeSwitchAutoJoinReq_FieldNumber_IsAuto = 2,
};

/**
 * 请求开始或关闭自动投注
 **/
@interface PB3RedEnvelopeSwitchAutoJoinReq : GPBMessage

/** 请求配置类型ID */
@property(nonatomic, readwrite) enum PB3SubInfoActivityType typeId;

/** 开启或关闭 */
@property(nonatomic, readwrite) BOOL isAuto;

@end

/**
 * Fetches the raw value of a @c PB3RedEnvelopeSwitchAutoJoinReq's @c typeId property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3RedEnvelopeSwitchAutoJoinReq_TypeId_RawValue(PB3RedEnvelopeSwitchAutoJoinReq *message);
/**
 * Sets the raw value of an @c PB3RedEnvelopeSwitchAutoJoinReq's @c typeId property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3RedEnvelopeSwitchAutoJoinReq_TypeId_RawValue(PB3RedEnvelopeSwitchAutoJoinReq *message, int32_t value);

#pragma mark - PB3RedEnvelopeSwitchAutoJoinRes

/**
 * 请求开始或关闭自动投注返回
 **/
@interface PB3RedEnvelopeSwitchAutoJoinRes : GPBMessage

@end

#pragma mark - PB3SetRedEnvelopeFlagReq

typedef GPB_ENUM(PB3SetRedEnvelopeFlagReq_FieldNumber) {
  PB3SetRedEnvelopeFlagReq_FieldNumber_TypeId = 1,
  PB3SetRedEnvelopeFlagReq_FieldNumber_FlagId = 2,
};

/**
 * 设置最新的flag
 **/
@interface PB3SetRedEnvelopeFlagReq : GPBMessage

/** 请求配置类型ID */
@property(nonatomic, readwrite) enum PB3SubInfoActivityType typeId;

/** 购买的flagId */
@property(nonatomic, readwrite) int32_t flagId;

@end

/**
 * Fetches the raw value of a @c PB3SetRedEnvelopeFlagReq's @c typeId property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SetRedEnvelopeFlagReq_TypeId_RawValue(PB3SetRedEnvelopeFlagReq *message);
/**
 * Sets the raw value of an @c PB3SetRedEnvelopeFlagReq's @c typeId property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SetRedEnvelopeFlagReq_TypeId_RawValue(PB3SetRedEnvelopeFlagReq *message, int32_t value);

#pragma mark - PB3SetRedEnvelopeFlagRes

/**
 * 设置最新的flag返回
 **/
@interface PB3SetRedEnvelopeFlagRes : GPBMessage

@end

#pragma mark - PB3FindRedEnvelopeSelfStatusReq

typedef GPB_ENUM(PB3FindRedEnvelopeSelfStatusReq_FieldNumber) {
  PB3FindRedEnvelopeSelfStatusReq_FieldNumber_TypeId = 1,
};

/**
 * 获取用户自身状态
 **/
@interface PB3FindRedEnvelopeSelfStatusReq : GPBMessage

/** 请求配置类型ID */
@property(nonatomic, readwrite) enum PB3SubInfoActivityType typeId;

@end

/**
 * Fetches the raw value of a @c PB3FindRedEnvelopeSelfStatusReq's @c typeId property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3FindRedEnvelopeSelfStatusReq_TypeId_RawValue(PB3FindRedEnvelopeSelfStatusReq *message);
/**
 * Sets the raw value of an @c PB3FindRedEnvelopeSelfStatusReq's @c typeId property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3FindRedEnvelopeSelfStatusReq_TypeId_RawValue(PB3FindRedEnvelopeSelfStatusReq *message, int32_t value);

#pragma mark - PB3FindRedEnvelopeSelfStatusRes

typedef GPB_ENUM(PB3FindRedEnvelopeSelfStatusRes_FieldNumber) {
  PB3FindRedEnvelopeSelfStatusRes_FieldNumber_IsAuto = 1,
  PB3FindRedEnvelopeSelfStatusRes_FieldNumber_IsJoin = 2,
};

/**
 * 获取用户自身状态返回
 **/
@interface PB3FindRedEnvelopeSelfStatusRes : GPBMessage

/** 是否自动 */
@property(nonatomic, readwrite) BOOL isAuto;

/** 是否参与 */
@property(nonatomic, readwrite) BOOL isJoin;

@end

#pragma mark - PB3RedEnvelopePlayerFlagInfo

typedef GPB_ENUM(PB3RedEnvelopePlayerFlagInfo_FieldNumber) {
  PB3RedEnvelopePlayerFlagInfo_FieldNumber_PlayerId = 1,
  PB3RedEnvelopePlayerFlagInfo_FieldNumber_PlayerId2 = 2,
  PB3RedEnvelopePlayerFlagInfo_FieldNumber_PlayerName = 3,
  PB3RedEnvelopePlayerFlagInfo_FieldNumber_PlayerIcon = 4,
  PB3RedEnvelopePlayerFlagInfo_FieldNumber_FlagId = 5,
};

/**
 * 用户flag信息
 **/
@interface PB3RedEnvelopePlayerFlagInfo : GPBMessage

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId2;

/** 用户名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerName;

/** 用户头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerIcon;

/** 用户flagId */
@property(nonatomic, readwrite) int32_t flagId;

@end

#pragma mark - PB3FindRedEnvelopeFlagInfoReq

typedef GPB_ENUM(PB3FindRedEnvelopeFlagInfoReq_FieldNumber) {
  PB3FindRedEnvelopeFlagInfoReq_FieldNumber_TypeId = 1,
  PB3FindRedEnvelopeFlagInfoReq_FieldNumber_Page = 2,
  PB3FindRedEnvelopeFlagInfoReq_FieldNumber_PageSize = 3,
};

/**
 * 获取当前flag
 **/
@interface PB3FindRedEnvelopeFlagInfoReq : GPBMessage

/** 请求配置类型ID */
@property(nonatomic, readwrite) enum PB3SubInfoActivityType typeId;

/** 页 */
@property(nonatomic, readwrite) int32_t page;

/** 页数 */
@property(nonatomic, readwrite) int32_t pageSize;

@end

/**
 * Fetches the raw value of a @c PB3FindRedEnvelopeFlagInfoReq's @c typeId property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3FindRedEnvelopeFlagInfoReq_TypeId_RawValue(PB3FindRedEnvelopeFlagInfoReq *message);
/**
 * Sets the raw value of an @c PB3FindRedEnvelopeFlagInfoReq's @c typeId property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3FindRedEnvelopeFlagInfoReq_TypeId_RawValue(PB3FindRedEnvelopeFlagInfoReq *message, int32_t value);

#pragma mark - PB3FindRedEnvelopeFlagInfoRes

typedef GPB_ENUM(PB3FindRedEnvelopeFlagInfoRes_FieldNumber) {
  PB3FindRedEnvelopeFlagInfoRes_FieldNumber_FlagListArray = 1,
};

/**
 * 获取当前flag
 **/
@interface PB3FindRedEnvelopeFlagInfoRes : GPBMessage

/** 请求的flag信息 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3RedEnvelopePlayerFlagInfo*> *flagListArray;
/** The number of items in @c flagListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger flagListArray_Count;

@end

#pragma mark - PB3PushRedEnvelopeStatus

typedef GPB_ENUM(PB3PushRedEnvelopeStatus_FieldNumber) {
  PB3PushRedEnvelopeStatus_FieldNumber_PushType = 1,
  PB3PushRedEnvelopeStatus_FieldNumber_NormalStatus = 2,
  PB3PushRedEnvelopeStatus_FieldNumber_PeriodNum = 3,
  PB3PushRedEnvelopeStatus_FieldNumber_SelfStatus = 4,
};

@interface PB3PushRedEnvelopeStatus : GPBMessage

/** 推送类型 */
@property(nonatomic, readwrite) PB3PushRedEnvelopeType pushType;

/** 普通状态 */
@property(nonatomic, readwrite, strong, null_resettable) PB3FindRedEnvelopeStatusRes *normalStatus;
/** Test to see if @c normalStatus has been set. */
@property(nonatomic, readwrite) BOOL hasNormalStatus;

/** 期号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *periodNum;

/** 自身状态推送 */
@property(nonatomic, readwrite, strong, null_resettable) PB3FindRedEnvelopeSelfStatusRes *selfStatus;
/** Test to see if @c selfStatus has been set. */
@property(nonatomic, readwrite) BOOL hasSelfStatus;

@end

/**
 * Fetches the raw value of a @c PB3PushRedEnvelopeStatus's @c pushType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3PushRedEnvelopeStatus_PushType_RawValue(PB3PushRedEnvelopeStatus *message);
/**
 * Sets the raw value of an @c PB3PushRedEnvelopeStatus's @c pushType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3PushRedEnvelopeStatus_PushType_RawValue(PB3PushRedEnvelopeStatus *message, int32_t value);

#pragma mark - PB3FindRedEnvelopeAwardInfoReq

typedef GPB_ENUM(PB3FindRedEnvelopeAwardInfoReq_FieldNumber) {
  PB3FindRedEnvelopeAwardInfoReq_FieldNumber_TypeId = 1,
  PB3FindRedEnvelopeAwardInfoReq_FieldNumber_PeriodNum = 2,
};

@interface PB3FindRedEnvelopeAwardInfoReq : GPBMessage

/** 请求配置类型ID */
@property(nonatomic, readwrite) enum PB3SubInfoActivityType typeId;

/** 期号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *periodNum;

@end

/**
 * Fetches the raw value of a @c PB3FindRedEnvelopeAwardInfoReq's @c typeId property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3FindRedEnvelopeAwardInfoReq_TypeId_RawValue(PB3FindRedEnvelopeAwardInfoReq *message);
/**
 * Sets the raw value of an @c PB3FindRedEnvelopeAwardInfoReq's @c typeId property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3FindRedEnvelopeAwardInfoReq_TypeId_RawValue(PB3FindRedEnvelopeAwardInfoReq *message, int32_t value);

#pragma mark - PB3FindRedEnvelopeAwardInfoRes

typedef GPB_ENUM(PB3FindRedEnvelopeAwardInfoRes_FieldNumber) {
  PB3FindRedEnvelopeAwardInfoRes_FieldNumber_SelfAwardNum = 1,
  PB3FindRedEnvelopeAwardInfoRes_FieldNumber_AwardInfo = 2,
};

@interface PB3FindRedEnvelopeAwardInfoRes : GPBMessage

/** 自身中奖数 */
@property(nonatomic, readwrite) int64_t selfAwardNum;

/** 开奖信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3RedEnvelopeAwardInfo *awardInfo;
/** Test to see if @c awardInfo has been set. */
@property(nonatomic, readwrite) BOOL hasAwardInfo;

@end

#pragma mark - PB3RandomUserId2Req

typedef GPB_ENUM(PB3RandomUserId2Req_FieldNumber) {
  PB3RandomUserId2Req_FieldNumber_RandomType = 1,
  PB3RandomUserId2Req_FieldNumber_ExcludeNum = 2,
};

/**
 * 靓号机随机靓号
 **/
@interface PB3RandomUserId2Req : GPBMessage

/** 靓号随机类型；1普通 2中级 3高级 4特级 */
@property(nonatomic, readwrite) PB3Id2RandomType randomType;

/** 排除号码 */
@property(nonatomic, readwrite) int32_t excludeNum;

@end

/**
 * Fetches the raw value of a @c PB3RandomUserId2Req's @c randomType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3RandomUserId2Req_RandomType_RawValue(PB3RandomUserId2Req *message);
/**
 * Sets the raw value of an @c PB3RandomUserId2Req's @c randomType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3RandomUserId2Req_RandomType_RawValue(PB3RandomUserId2Req *message, int32_t value);

#pragma mark - PB3FindRandomUserId2StatusReq

/**
 * 获取靓号机状态
 **/
@interface PB3FindRandomUserId2StatusReq : GPBMessage

@end

#pragma mark - PB3BindUserId2Req

typedef GPB_ENUM(PB3BindUserId2Req_FieldNumber) {
  PB3BindUserId2Req_FieldNumber_PlayerId = 1,
};

/**
 * 绑定靓号
 **/
@interface PB3BindUserId2Req : GPBMessage

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId;

@end

#pragma mark - PB3RandomUserId2Res

typedef GPB_ENUM(PB3RandomUserId2Res_FieldNumber) {
  PB3RandomUserId2Res_FieldNumber_Id2Num = 1,
  PB3RandomUserId2Res_FieldNumber_ChangeRemainTime = 2,
  PB3RandomUserId2Res_FieldNumber_RemainChangeTimes = 3,
  PB3RandomUserId2Res_FieldNumber_RandType = 4,
  PB3RandomUserId2Res_FieldNumber_IsCovered = 5,
  PB3RandomUserId2Res_FieldNumber_ExcludeNum = 6,
};

/**
 * 靓号机状态
 **/
@interface PB3RandomUserId2Res : GPBMessage

/** 用户当前随机到的靓号 */
@property(nonatomic, readwrite) int32_t id2Num;

/** 剩余更换时间 */
@property(nonatomic, readwrite) int32_t changeRemainTime;

/** 剩余更换次数 */
@property(nonatomic, readwrite) int32_t remainChangeTimes;

/** 靓号随机类型；1普通 2中级 3高级 4特级 */
@property(nonatomic, readwrite) PB3Id2RandomType randType;

/** 是否已覆盖 */
@property(nonatomic, readwrite) BOOL isCovered;

/** 排除号码 */
@property(nonatomic, readwrite) int32_t excludeNum;

@end

/**
 * Fetches the raw value of a @c PB3RandomUserId2Res's @c randType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3RandomUserId2Res_RandType_RawValue(PB3RandomUserId2Res *message);
/**
 * Sets the raw value of an @c PB3RandomUserId2Res's @c randType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3RandomUserId2Res_RandType_RawValue(PB3RandomUserId2Res *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
