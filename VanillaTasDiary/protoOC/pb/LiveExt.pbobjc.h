// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pb/live.ext.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class PB3GetVoiceIdentifyConfRes_Prompt;
@class PB3LiveChannelPush;
@class PB3LiveCharacter;
@class PB3LiveIMPush;
@class PB3LiveMatchRes_LiveRecommend;
@class PB3LiveModel;
@class PB3LiveSnapshot;
@class PB3LiveSticker;
@class PB3PlayerInfo;
@class PB3VoiceFeature;
GPB_ENUM_FWD_DECLARE(PB3SexType);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum PB3LiveCmdId

typedef GPB_ENUM(PB3LiveCmdId) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3LiveCmdId_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3LiveCmdId_LcNone = 0,

  /** 连麦channel信息 */
  PB3LiveCmdId_LcLiveChannel = 702001,

  /** 连麦IM呼叫 */
  PB3LiveCmdId_LcLiveImCall = 702002,

  /** 连麦通话同步 */
  PB3LiveCmdId_LcLiveTalk = 702003,

  /** 用户连麦相关数据更新 */
  PB3LiveCmdId_LcPlayerLiveDataUpdate = 702004,

  /** 用户匹配心电感应 */
  PB3LiveCmdId_LcPlayerMatchTelepathy = 702005,
};

GPBEnumDescriptor *PB3LiveCmdId_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3LiveCmdId_IsValidValue(int32_t value);

#pragma mark - Enum PB3LiveStickerType

typedef GPB_ENUM(PB3LiveStickerType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3LiveStickerType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3LiveStickerType_LstNone = 0,

  /** 衣服 */
  PB3LiveStickerType_LstCloth = 1,
  PB3LiveStickerType_LstAll = 1000,
};

GPBEnumDescriptor *PB3LiveStickerType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3LiveStickerType_IsValidValue(int32_t value);

#pragma mark - Enum PB3LiveSnapshotLayer

typedef GPB_ENUM(PB3LiveSnapshotLayer) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3LiveSnapshotLayer_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3LiveSnapshotLayer_LslNone = 0,

  /** 裸模前发 */
  PB3LiveSnapshotLayer_LslFrontHair = 1,

  /** 裸模后发 */
  PB3LiveSnapshotLayer_LslNakedModel = 2,

  /** 裸模 */
  PB3LiveSnapshotLayer_LslBackHair = 3,

  /** 衣服 */
  PB3LiveSnapshotLayer_LslCloth = 4,
};

GPBEnumDescriptor *PB3LiveSnapshotLayer_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3LiveSnapshotLayer_IsValidValue(int32_t value);

#pragma mark - Enum PB3LiveChannelScene

typedef GPB_ENUM(PB3LiveChannelScene) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3LiveChannelScene_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3LiveChannelScene_ScNone = 0,

  /** 由IM呼叫进入的连麦 */
  PB3LiveChannelScene_ScImCall = 1,

  /** 由匹配进入的连麦 */
  PB3LiveChannelScene_ScMatch = 2,
};

GPBEnumDescriptor *PB3LiveChannelScene_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3LiveChannelScene_IsValidValue(int32_t value);

#pragma mark - Enum PB3PlayerLiveDataPush_PushType

typedef GPB_ENUM(PB3PlayerLiveDataPush_PushType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3PlayerLiveDataPush_PushType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3PlayerLiveDataPush_PushType_None = 0,
  PB3PlayerLiveDataPush_PushType_Hearts = 1,
  PB3PlayerLiveDataPush_PushType_FreeMatchTimes = 2,
};

GPBEnumDescriptor *PB3PlayerLiveDataPush_PushType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3PlayerLiveDataPush_PushType_IsValidValue(int32_t value);

#pragma mark - Enum PB3LiveMatchReq_MatchOper

typedef GPB_ENUM(PB3LiveMatchReq_MatchOper) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3LiveMatchReq_MatchOper_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3LiveMatchReq_MatchOper_None = 0,

  /** 申请匹配 */
  PB3LiveMatchReq_MatchOper_Apply = 1,
  PB3LiveMatchReq_MatchOper_Cancel = 2,
};

GPBEnumDescriptor *PB3LiveMatchReq_MatchOper_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3LiveMatchReq_MatchOper_IsValidValue(int32_t value);

#pragma mark - Enum PB3LiveCallInviteReq_InviteOper

typedef GPB_ENUM(PB3LiveCallInviteReq_InviteOper) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3LiveCallInviteReq_InviteOper_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3LiveCallInviteReq_InviteOper_None = 0,

  /** 呼叫 */
  PB3LiveCallInviteReq_InviteOper_Apply = 1,
  PB3LiveCallInviteReq_InviteOper_Cancel = 2,
};

GPBEnumDescriptor *PB3LiveCallInviteReq_InviteOper_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3LiveCallInviteReq_InviteOper_IsValidValue(int32_t value);

#pragma mark - Enum PB3LiveCallReplyReq_ReplyOper

typedef GPB_ENUM(PB3LiveCallReplyReq_ReplyOper) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3LiveCallReplyReq_ReplyOper_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3LiveCallReplyReq_ReplyOper_None = 0,
  PB3LiveCallReplyReq_ReplyOper_Receive = 1,
  PB3LiveCallReplyReq_ReplyOper_Deny = 2,
  PB3LiveCallReplyReq_ReplyOper_Ignore = 3,
};

GPBEnumDescriptor *PB3LiveCallReplyReq_ReplyOper_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3LiveCallReplyReq_ReplyOper_IsValidValue(int32_t value);

#pragma mark - Enum PB3LiveTalkSyncReq_SyncOper

typedef GPB_ENUM(PB3LiveTalkSyncReq_SyncOper) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3LiveTalkSyncReq_SyncOper_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3LiveTalkSyncReq_SyncOper_None = 0,

  /** 点赞 */
  PB3LiveTalkSyncReq_SyncOper_Like = 1,

  /** 邀请对方公开 */
  PB3LiveTalkSyncReq_SyncOper_InviteShow = 2,

  /** 自己公开 */
  PB3LiveTalkSyncReq_SyncOper_ShowSelf = 3,

  /** 挂断 */
  PB3LiveTalkSyncReq_SyncOper_Hangup = 4,

  /** 摸自己的头 */
  PB3LiveTalkSyncReq_SyncOper_TouchSelfHead = 5,
  PB3LiveTalkSyncReq_SyncOper_TouchTargetHead = 6,

  /** 摸对方的头 */
  PB3LiveTalkSyncReq_SyncOper_TouchSelfBody = 7,
  PB3LiveTalkSyncReq_SyncOper_TouchTargetBody = 8,
};

GPBEnumDescriptor *PB3LiveTalkSyncReq_SyncOper_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3LiveTalkSyncReq_SyncOper_IsValidValue(int32_t value);

#pragma mark - Enum PB3ReportFeedbackReq_Feedback

typedef GPB_ENUM(PB3ReportFeedbackReq_Feedback) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ReportFeedbackReq_Feedback_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3ReportFeedbackReq_Feedback_None = 0,
  PB3ReportFeedbackReq_Feedback_Satisfy = 1,
  PB3ReportFeedbackReq_Feedback_UnSatisfy = 2,
};

GPBEnumDescriptor *PB3ReportFeedbackReq_Feedback_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ReportFeedbackReq_Feedback_IsValidValue(int32_t value);

#pragma mark - Enum PB3LiveIMPush_PushType

typedef GPB_ENUM(PB3LiveIMPush_PushType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3LiveIMPush_PushType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3LiveIMPush_PushType_None = 0,

  /** 有人call我 */
  PB3LiveIMPush_PushType_SomeoneCallMe = 1,

  /** 被call时,对方取消了 */
  PB3LiveIMPush_PushType_TargetCancel = 2,

  /** call别人,对方同意了 */
  PB3LiveIMPush_PushType_TargetReceive = 3,

  /** call比人,对方拒绝了 */
  PB3LiveIMPush_PushType_TargetDeny = 4,
};

GPBEnumDescriptor *PB3LiveIMPush_PushType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3LiveIMPush_PushType_IsValidValue(int32_t value);

#pragma mark - Enum PB3LiveTalkPush_PushType

typedef GPB_ENUM(PB3LiveTalkPush_PushType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3LiveTalkPush_PushType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3LiveTalkPush_PushType_None = 0,

  /** 对方连接成功 */
  PB3LiveTalkPush_PushType_TargetConnSucc = 1,

  /** 对方连接失败 */
  PB3LiveTalkPush_PushType_TargetConnFail = 2,

  /** 对方身份公开 */
  PB3LiveTalkPush_PushType_TargetExposed = 3,

  /** 对方给你点赞 */
  PB3LiveTalkPush_PushType_TargetLikeYou = 4,

  /** 对方挂断 */
  PB3LiveTalkPush_PushType_TargetHangup = 5,

  /** 通话时间到了 */
  PB3LiveTalkPush_PushType_Timeout = 6,

  /** 对方摸了他自己的头 */
  PB3LiveTalkPush_PushType_TargetHeadTouched = 7,
  PB3LiveTalkPush_PushType_TargetBodyTouched = 8,

  /** 对方摸了你的头 */
  PB3LiveTalkPush_PushType_SelfHeadTouched = 9,
  PB3LiveTalkPush_PushType_SelfBodyTouched = 10,

  /** 双方身份公开 */
  PB3LiveTalkPush_PushType_DualExposed = 11,

  /** 对方邀请你公开 */
  PB3LiveTalkPush_PushType_TargetInviteShow = 12,

  /** 通话时间延长了 */
  PB3LiveTalkPush_PushType_TimeoutDelayed = 13,
};

GPBEnumDescriptor *PB3LiveTalkPush_PushType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3LiveTalkPush_PushType_IsValidValue(int32_t value);

#pragma mark - PB3LiveExtRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface PB3LiveExtRoot : GPBRootObject
@end

#pragma mark - PB3PlayerLiveDataPush

typedef GPB_ENUM(PB3PlayerLiveDataPush_FieldNumber) {
  PB3PlayerLiveDataPush_FieldNumber_Type = 1,
  PB3PlayerLiveDataPush_FieldNumber_Hearts = 2,
  PB3PlayerLiveDataPush_FieldNumber_FreeMatchTimes = 3,
};

/**
 * 两个数据不会同时更新
 **/
@interface PB3PlayerLiveDataPush : GPBMessage

@property(nonatomic, readwrite) PB3PlayerLiveDataPush_PushType type;

/** 自己的爱心数量 */
@property(nonatomic, readwrite) int64_t hearts;

/** 今日剩余免费匹配次数 */
@property(nonatomic, readwrite) int64_t freeMatchTimes;

@end

/**
 * Fetches the raw value of a @c PB3PlayerLiveDataPush's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3PlayerLiveDataPush_Type_RawValue(PB3PlayerLiveDataPush *message);
/**
 * Sets the raw value of an @c PB3PlayerLiveDataPush's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3PlayerLiveDataPush_Type_RawValue(PB3PlayerLiveDataPush *message, int32_t value);

#pragma mark - PB3LiveSnapshot

typedef GPB_ENUM(PB3LiveSnapshot_FieldNumber) {
  PB3LiveSnapshot_FieldNumber_URL = 1,
  PB3LiveSnapshot_FieldNumber_Layer = 2,
};

@interface PB3LiveSnapshot : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

@property(nonatomic, readwrite) PB3LiveSnapshotLayer layer;

@end

/**
 * Fetches the raw value of a @c PB3LiveSnapshot's @c layer property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3LiveSnapshot_Layer_RawValue(PB3LiveSnapshot *message);
/**
 * Sets the raw value of an @c PB3LiveSnapshot's @c layer property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3LiveSnapshot_Layer_RawValue(PB3LiveSnapshot *message, int32_t value);

#pragma mark - PB3LiveModel

typedef GPB_ENUM(PB3LiveModel_FieldNumber) {
  PB3LiveModel_FieldNumber_ModelId = 1,
  PB3LiveModel_FieldNumber_ModelName = 2,
  PB3LiveModel_FieldNumber_ZipName = 3,
  PB3LiveModel_FieldNumber_ResURL = 4,
  PB3LiveModel_FieldNumber_Md5Sum = 6,
  PB3LiveModel_FieldNumber_SnapshotsArray = 7,
};

/**
 * live2d 裸模
 **/
@interface PB3LiveModel : GPBMessage

@property(nonatomic, readwrite) int64_t modelId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *modelName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *zipName;

/** 资源oss链接 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *resURL;

/** 资源md5校验 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *md5Sum;

/** 裸模三张静态图 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3LiveSnapshot*> *snapshotsArray;
/** The number of items in @c snapshotsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger snapshotsArray_Count;

@end

#pragma mark - PB3LiveSticker

typedef GPB_ENUM(PB3LiveSticker_FieldNumber) {
  PB3LiveSticker_FieldNumber_StickerId = 1,
  PB3LiveSticker_FieldNumber_Name = 2,
  PB3LiveSticker_FieldNumber_StickerType = 3,
  PB3LiveSticker_FieldNumber_ResURL = 4,
  PB3LiveSticker_FieldNumber_Snapshot = 5,
};

/**
 * 虚拟形象资产
 **/
@interface PB3LiveSticker : GPBMessage

@property(nonatomic, readwrite) int64_t stickerId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite) PB3LiveStickerType stickerType;

/** 切图资源 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *resURL;

/** 名片卡静态图 */
@property(nonatomic, readwrite, strong, null_resettable) PB3LiveSnapshot *snapshot;
/** Test to see if @c snapshot has been set. */
@property(nonatomic, readwrite) BOOL hasSnapshot;

@end

/**
 * Fetches the raw value of a @c PB3LiveSticker's @c stickerType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3LiveSticker_StickerType_RawValue(PB3LiveSticker *message);
/**
 * Sets the raw value of an @c PB3LiveSticker's @c stickerType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3LiveSticker_StickerType_RawValue(PB3LiveSticker *message, int32_t value);

#pragma mark - PB3LiveTalkReq

typedef GPB_ENUM(PB3LiveTalkReq_FieldNumber) {
  PB3LiveTalkReq_FieldNumber_ChannelId = 1,
};

/**
 * 0. 连麦
 **/
@interface PB3LiveTalkReq : GPBMessage

@property(nonatomic, readwrite) int64_t channelId;

@end

#pragma mark - PB3LiveTalkRes

typedef GPB_ENUM(PB3LiveTalkRes_FieldNumber) {
  PB3LiveTalkRes_FieldNumber_TargetPlayer = 1,
  PB3LiveTalkRes_FieldNumber_SelfShowCodeName = 2,
  PB3LiveTalkRes_FieldNumber_TargetShowCodeName = 3,
  PB3LiveTalkRes_FieldNumber_TimeOut = 4,
  PB3LiveTalkRes_FieldNumber_Scene = 5,
  PB3LiveTalkRes_FieldNumber_MatchTipsArray = 6,
  PB3LiveTalkRes_FieldNumber_LikeTarget = 9,
  PB3LiveTalkRes_FieldNumber_TalkTime = 10,
};

@interface PB3LiveTalkRes : GPBMessage

/** 对方信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3PlayerInfo *targetPlayer;
/** Test to see if @c targetPlayer has been set. */
@property(nonatomic, readwrite) BOOL hasTargetPlayer;

/** 自己是否显示代号 */
@property(nonatomic, readwrite) BOOL selfShowCodeName;

/** 对方是否显示代号 */
@property(nonatomic, readwrite) BOOL targetShowCodeName;

/** -1代表无限时间 */
@property(nonatomic, readwrite) int64_t timeOut;

@property(nonatomic, readwrite) PB3LiveChannelScene scene;

/** 连麦场景下显示双方共同点的tips */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *matchTipsArray;
/** The number of items in @c matchTipsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger matchTipsArray_Count;

/**
 *    int64 delay_cost_gold = 7; // 匹配连麦延时消耗金币
 *    int64 delay_timeout = 8; // 延长时间
 **/
@property(nonatomic, readwrite) BOOL likeTarget;

/** 重连时,该字段返回已通话时间 */
@property(nonatomic, readwrite) int64_t talkTime;

@end

/**
 * Fetches the raw value of a @c PB3LiveTalkRes's @c scene property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3LiveTalkRes_Scene_RawValue(PB3LiveTalkRes *message);
/**
 * Sets the raw value of an @c PB3LiveTalkRes's @c scene property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3LiveTalkRes_Scene_RawValue(PB3LiveTalkRes *message, int32_t value);

#pragma mark - PB3GetVoiceIdentifyConfReq

/**
 * 1. 获取声鉴配置
 **/
@interface PB3GetVoiceIdentifyConfReq : GPBMessage

@end

#pragma mark - PB3GetVoiceIdentifyConfRes

typedef GPB_ENUM(PB3GetVoiceIdentifyConfRes_FieldNumber) {
  PB3GetVoiceIdentifyConfRes_FieldNumber_CostGold = 1,
  PB3GetVoiceIdentifyConfRes_FieldNumber_DescURL = 2,
  PB3GetVoiceIdentifyConfRes_FieldNumber_FreeTimes = 3,
  PB3GetVoiceIdentifyConfRes_FieldNumber_PromptsArray = 4,
  PB3GetVoiceIdentifyConfRes_FieldNumber_QrCodeURL = 5,
};

@interface PB3GetVoiceIdentifyConfRes : GPBMessage

/** 鉴定花费金币 */
@property(nonatomic, readwrite) int64_t costGold;

/** 玩法描述url */
@property(nonatomic, readwrite, copy, null_resettable) NSString *descURL;

/** 剩余免费次数 */
@property(nonatomic, readwrite) int64_t freeTimes;

/** 录音朗读文案 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3GetVoiceIdentifyConfRes_Prompt*> *promptsArray;
/** The number of items in @c promptsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger promptsArray_Count;

/** 鉴定成功后分享二维码的链接 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *qrCodeURL;

@end

#pragma mark - PB3GetVoiceIdentifyConfRes_Prompt

typedef GPB_ENUM(PB3GetVoiceIdentifyConfRes_Prompt_FieldNumber) {
  PB3GetVoiceIdentifyConfRes_Prompt_FieldNumber_Title = 1,
  PB3GetVoiceIdentifyConfRes_Prompt_FieldNumber_Text = 2,
};

@interface PB3GetVoiceIdentifyConfRes_Prompt : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

@property(nonatomic, readwrite, copy, null_resettable) NSString *text;

@end

#pragma mark - PB3VoiceIdentifyReq

typedef GPB_ENUM(PB3VoiceIdentifyReq_FieldNumber) {
  PB3VoiceIdentifyReq_FieldNumber_Gender = 1,
  PB3VoiceIdentifyReq_FieldNumber_VoiceURL = 2,
};

/**
 * 2. 鉴定声音
 **/
@interface PB3VoiceIdentifyReq : GPBMessage

/** 性别 */
@property(nonatomic, readwrite) enum PB3SexType gender;

/** 声音 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *voiceURL;

@end

/**
 * Fetches the raw value of a @c PB3VoiceIdentifyReq's @c gender property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3VoiceIdentifyReq_Gender_RawValue(PB3VoiceIdentifyReq *message);
/**
 * Sets the raw value of an @c PB3VoiceIdentifyReq's @c gender property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3VoiceIdentifyReq_Gender_RawValue(PB3VoiceIdentifyReq *message, int32_t value);

#pragma mark - PB3VoiceIdentifyRes

typedef GPB_ENUM(PB3VoiceIdentifyRes_FieldNumber) {
  PB3VoiceIdentifyRes_FieldNumber_VoiceFeature = 1,
  PB3VoiceIdentifyRes_FieldNumber_Character = 2,
  PB3VoiceIdentifyRes_FieldNumber_FreeTimes = 3,
  PB3VoiceIdentifyRes_FieldNumber_CostGold = 4,
};

@interface PB3VoiceIdentifyRes : GPBMessage

/** 声音特征 */
@property(nonatomic, readwrite, strong, null_resettable) PB3VoiceFeature *voiceFeature;
/** Test to see if @c voiceFeature has been set. */
@property(nonatomic, readwrite) BOOL hasVoiceFeature;

/** 虚拟形象 */
@property(nonatomic, readwrite, strong, null_resettable) PB3LiveCharacter *character;
/** Test to see if @c character has been set. */
@property(nonatomic, readwrite) BOOL hasCharacter;

/** 剩余免费鉴定次数 */
@property(nonatomic, readwrite) int64_t freeTimes;

/** 再次鉴定花费 */
@property(nonatomic, readwrite) int64_t costGold;

@end

#pragma mark - PB3GetLiveMatchConfReq

/**
 * 3. 获取匹配配置
 **/
@interface PB3GetLiveMatchConfReq : GPBMessage

@end

#pragma mark - PB3GetLiveMatchConfRes

typedef GPB_ENUM(PB3GetLiveMatchConfRes_FieldNumber) {
  PB3GetLiveMatchConfRes_FieldNumber_FreeTimes = 2,
  PB3GetLiveMatchConfRes_FieldNumber_MatchCostGold = 3,
  PB3GetLiveMatchConfRes_FieldNumber_DelayCostGold = 4,
  PB3GetLiveMatchConfRes_FieldNumber_TimeOut = 5,
  PB3GetLiveMatchConfRes_FieldNumber_DelayCostGift = 6,
  PB3GetLiveMatchConfRes_FieldNumber_GoldDelayTime = 7,
  PB3GetLiveMatchConfRes_FieldNumber_GiftDelayTime = 8,
};

@interface PB3GetLiveMatchConfRes : GPBMessage

/**    VoiceFeature voice_feature = 1; */
@property(nonatomic, readwrite) int64_t freeTimes;

/** 匹配花费金币 */
@property(nonatomic, readwrite) int64_t matchCostGold;

/** 延时花费金币 */
@property(nonatomic, readwrite) int64_t delayCostGold;

/** 最长匹配时间 */
@property(nonatomic, readwrite) int64_t timeOut;

/** 延时花费礼物价值(后台配置的是 xxx价值的礼物延迟xxx秒) */
@property(nonatomic, readwrite) int64_t delayCostGift;

/** 金币延迟时间 */
@property(nonatomic, readwrite) int64_t goldDelayTime;

/** 礼物延迟时间 */
@property(nonatomic, readwrite) int64_t giftDelayTime;

@end

#pragma mark - PB3LiveMatchReq

typedef GPB_ENUM(PB3LiveMatchReq_FieldNumber) {
  PB3LiveMatchReq_FieldNumber_Oper = 2,
};

/**
 * 4. 随机匹配
 **/
@interface PB3LiveMatchReq : GPBMessage

/**    string code_name = 1; // 昵称 */
@property(nonatomic, readwrite) PB3LiveMatchReq_MatchOper oper;

@end

/**
 * Fetches the raw value of a @c PB3LiveMatchReq's @c oper property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3LiveMatchReq_Oper_RawValue(PB3LiveMatchReq *message);
/**
 * Sets the raw value of an @c PB3LiveMatchReq's @c oper property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3LiveMatchReq_Oper_RawValue(PB3LiveMatchReq *message, int32_t value);

#pragma mark - PB3LiveMatchRes

typedef GPB_ENUM(PB3LiveMatchRes_FieldNumber) {
  PB3LiveMatchRes_FieldNumber_FeedbackTipsArray = 1,
  PB3LiveMatchRes_FieldNumber_RecommendArray = 9,
};

/**
 * 匹配结果异步返回
 **/
@interface PB3LiveMatchRes : GPBMessage

/** 反馈标签 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *feedbackTipsArray;
/** The number of items in @c feedbackTipsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger feedbackTipsArray_Count;

/** 如果匹配失败,客户端轮换显示推荐用户 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3LiveMatchRes_LiveRecommend*> *recommendArray;
/** The number of items in @c recommendArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger recommendArray_Count;

@end

#pragma mark - PB3LiveMatchRes_LiveRecommend

typedef GPB_ENUM(PB3LiveMatchRes_LiveRecommend_FieldNumber) {
  PB3LiveMatchRes_LiveRecommend_FieldNumber_PlayerId = 1,
  PB3LiveMatchRes_LiveRecommend_FieldNumber_Icon = 2,
  PB3LiveMatchRes_LiveRecommend_FieldNumber_Router = 3,
};

@interface PB3LiveMatchRes_LiveRecommend : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

@property(nonatomic, readwrite, copy, null_resettable) NSString *router;

@end

#pragma mark - PB3LiveCallInviteReq

typedef GPB_ENUM(PB3LiveCallInviteReq_FieldNumber) {
  PB3LiveCallInviteReq_FieldNumber_TargetPlayerId = 1,
  PB3LiveCallInviteReq_FieldNumber_Oper = 2,
};

/**
 * 5. IM主叫
 **/
@interface PB3LiveCallInviteReq : GPBMessage

@property(nonatomic, readwrite) int64_t targetPlayerId;

@property(nonatomic, readwrite) PB3LiveCallInviteReq_InviteOper oper;

@end

/**
 * Fetches the raw value of a @c PB3LiveCallInviteReq's @c oper property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3LiveCallInviteReq_Oper_RawValue(PB3LiveCallInviteReq *message);
/**
 * Sets the raw value of an @c PB3LiveCallInviteReq's @c oper property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3LiveCallInviteReq_Oper_RawValue(PB3LiveCallInviteReq *message, int32_t value);

#pragma mark - PB3LiveCallInviteRes

typedef GPB_ENUM(PB3LiveCallInviteRes_FieldNumber) {
  PB3LiveCallInviteRes_FieldNumber_TargetPlayerInfo = 1,
};

@interface PB3LiveCallInviteRes : GPBMessage

/** 对方信息(包含live2d形象) */
@property(nonatomic, readwrite, strong, null_resettable) PB3PlayerInfo *targetPlayerInfo;
/** Test to see if @c targetPlayerInfo has been set. */
@property(nonatomic, readwrite) BOOL hasTargetPlayerInfo;

@end

#pragma mark - PB3LiveCallReplyReq

typedef GPB_ENUM(PB3LiveCallReplyReq_FieldNumber) {
  PB3LiveCallReplyReq_FieldNumber_Oper = 1,
  PB3LiveCallReplyReq_FieldNumber_TargetPlayerId = 2,
};

/**
 * 6. IM被叫
 **/
@interface PB3LiveCallReplyReq : GPBMessage

@property(nonatomic, readwrite) PB3LiveCallReplyReq_ReplyOper oper;

@property(nonatomic, readwrite) int64_t targetPlayerId;

@end

/**
 * Fetches the raw value of a @c PB3LiveCallReplyReq's @c oper property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3LiveCallReplyReq_Oper_RawValue(PB3LiveCallReplyReq *message);
/**
 * Sets the raw value of an @c PB3LiveCallReplyReq's @c oper property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3LiveCallReplyReq_Oper_RawValue(PB3LiveCallReplyReq *message, int32_t value);

#pragma mark - PB3LiveCallReplyRes

@interface PB3LiveCallReplyRes : GPBMessage

@end

#pragma mark - PB3LiveTalkSyncReq

typedef GPB_ENUM(PB3LiveTalkSyncReq_FieldNumber) {
  PB3LiveTalkSyncReq_FieldNumber_Oper = 1,
  PB3LiveTalkSyncReq_FieldNumber_ActionIdx = 2,
};

/**
 * 7. 连麦操作(同步状态相关)
 **/
@interface PB3LiveTalkSyncReq : GPBMessage

@property(nonatomic, readwrite) PB3LiveTalkSyncReq_SyncOper oper;

/** 模型中动作组的下标,用以双方同步动作 */
@property(nonatomic, readwrite) int64_t actionIdx;

@end

/**
 * Fetches the raw value of a @c PB3LiveTalkSyncReq's @c oper property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3LiveTalkSyncReq_Oper_RawValue(PB3LiveTalkSyncReq *message);
/**
 * Sets the raw value of an @c PB3LiveTalkSyncReq's @c oper property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3LiveTalkSyncReq_Oper_RawValue(PB3LiveTalkSyncReq *message, int32_t value);

#pragma mark - PB3LiveTalkSyncRes

typedef GPB_ENUM(PB3LiveTalkSyncRes_FieldNumber) {
  PB3LiveTalkSyncRes_FieldNumber_TalkTime = 1,
};

@interface PB3LiveTalkSyncRes : GPBMessage

/** 通话了多久 */
@property(nonatomic, readwrite) int64_t talkTime;

@end

#pragma mark - PB3LiveTalkDelayReq

/**
 * 8. 花费金币延长时间
 **/
@interface PB3LiveTalkDelayReq : GPBMessage

@end

#pragma mark - PB3LiveTalkDelayRes

typedef GPB_ENUM(PB3LiveTalkDelayRes_FieldNumber) {
  PB3LiveTalkDelayRes_FieldNumber_TimeOut = 1,
  PB3LiveTalkDelayRes_FieldNumber_CostGold = 2,
};

@interface PB3LiveTalkDelayRes : GPBMessage

@property(nonatomic, readwrite) int64_t timeOut;

/** 延长花费金币,如果中途配置有变更,该字段为最新的值 */
@property(nonatomic, readwrite) int64_t costGold;

@end

#pragma mark - PB3ReportFeedbackReq

typedef GPB_ENUM(PB3ReportFeedbackReq_FieldNumber) {
  PB3ReportFeedbackReq_FieldNumber_Content = 1,
  PB3ReportFeedbackReq_FieldNumber_TipsArray = 2,
  PB3ReportFeedbackReq_FieldNumber_TargetId = 3,
  PB3ReportFeedbackReq_FieldNumber_FeedBack = 4,
};

/**
 * 9. 匹配连麦反馈
 **/
@interface PB3ReportFeedbackReq : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

/** 反馈标签 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *tipsArray;
/** The number of items in @c tipsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger tipsArray_Count;

/** 对方id */
@property(nonatomic, readwrite) int64_t targetId;

/** 满意、不满意 */
@property(nonatomic, readwrite) PB3ReportFeedbackReq_Feedback feedBack;

@end

/**
 * Fetches the raw value of a @c PB3ReportFeedbackReq's @c feedBack property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ReportFeedbackReq_FeedBack_RawValue(PB3ReportFeedbackReq *message);
/**
 * Sets the raw value of an @c PB3ReportFeedbackReq's @c feedBack property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ReportFeedbackReq_FeedBack_RawValue(PB3ReportFeedbackReq *message, int32_t value);

#pragma mark - PB3ReportFeedbackRes

@interface PB3ReportFeedbackRes : GPBMessage

@end

#pragma mark - PB3ClearCharacterReq

/**
 * 10. 清除形象(清除后可重新鉴定)
 **/
@interface PB3ClearCharacterReq : GPBMessage

@end

#pragma mark - PB3ClearCharacterRes

@interface PB3ClearCharacterRes : GPBMessage

@end

#pragma mark - PB3ResetCodenameReq

/**
 * 11. 换一个代号
 **/
@interface PB3ResetCodenameReq : GPBMessage

@end

#pragma mark - PB3ResetCodenameRes

typedef GPB_ENUM(PB3ResetCodenameRes_FieldNumber) {
  PB3ResetCodenameRes_FieldNumber_CodeName = 1,
};

@interface PB3ResetCodenameRes : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *codeName;

@end

#pragma mark - PB3GetVoiceFeatureReq

/**
 * 12. 获取声音特征
 **/
@interface PB3GetVoiceFeatureReq : GPBMessage

@end

#pragma mark - PB3GetVoiceFeatureRes

typedef GPB_ENUM(PB3GetVoiceFeatureRes_FieldNumber) {
  PB3GetVoiceFeatureRes_FieldNumber_Feature = 1,
  PB3GetVoiceFeatureRes_FieldNumber_FreeClearTimes = 2,
  PB3GetVoiceFeatureRes_FieldNumber_ClearCostGold = 3,
  PB3GetVoiceFeatureRes_FieldNumber_QrCodeURL = 5,
};

@interface PB3GetVoiceFeatureRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3VoiceFeature *feature;
/** Test to see if @c feature has been set. */
@property(nonatomic, readwrite) BOOL hasFeature;

/** 剩余免费清除形象的次数 */
@property(nonatomic, readwrite) int64_t freeClearTimes;

/** 清除形象需要的金币 */
@property(nonatomic, readwrite) int64_t clearCostGold;

/** 分享二维码的链接 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *qrCodeURL;

@end

#pragma mark - PB3CanLiveCallInviteReq

typedef GPB_ENUM(PB3CanLiveCallInviteReq_FieldNumber) {
  PB3CanLiveCallInviteReq_FieldNumber_TargetId = 1,
};

/**
 * 13. 预判能否call对方
 **/
@interface PB3CanLiveCallInviteReq : GPBMessage

/** 对方用户id */
@property(nonatomic, readwrite) int64_t targetId;

@end

#pragma mark - PB3CanLiveCallInviteRes

/**
 * 该接口没有返回,看err是否空
 **/
@interface PB3CanLiveCallInviteRes : GPBMessage

@end

#pragma mark - PB3LiveChannelPush

typedef GPB_ENUM(PB3LiveChannelPush_FieldNumber) {
  PB3LiveChannelPush_FieldNumber_ChannelId = 1,
  PB3LiveChannelPush_FieldNumber_Token = 2,
  PB3LiveChannelPush_FieldNumber_Scene = 3,
  PB3LiveChannelPush_FieldNumber_Caller = 4,
};

/**
 * ------------推送相关------------
 * 0. 建立连接前，推送channelID
 **/
@interface PB3LiveChannelPush : GPBMessage

@property(nonatomic, readwrite) int64_t channelId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

@property(nonatomic, readwrite) PB3LiveChannelScene scene;

/** 主叫方(im场景下有值) */
@property(nonatomic, readwrite) int64_t caller;

@end

/**
 * Fetches the raw value of a @c PB3LiveChannelPush's @c scene property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3LiveChannelPush_Scene_RawValue(PB3LiveChannelPush *message);
/**
 * Sets the raw value of an @c PB3LiveChannelPush's @c scene property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3LiveChannelPush_Scene_RawValue(PB3LiveChannelPush *message, int32_t value);

#pragma mark - PB3LiveIMPush

typedef GPB_ENUM(PB3LiveIMPush_FieldNumber) {
  PB3LiveIMPush_FieldNumber_Type = 1,
  PB3LiveIMPush_FieldNumber_TargetPlayerInfo = 2,
  PB3LiveIMPush_FieldNumber_Caller = 4,
};

/**
 * 1. IM拨号相关推送
 **/
@interface PB3LiveIMPush : GPBMessage

@property(nonatomic, readwrite) PB3LiveIMPush_PushType type;

/** 如果是SOMEONE_CALL_ME，则该字段返回对方信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3PlayerInfo *targetPlayerInfo;
/** Test to see if @c targetPlayerInfo has been set. */
@property(nonatomic, readwrite) BOOL hasTargetPlayerInfo;

/** 主叫方 */
@property(nonatomic, readwrite) int64_t caller;

@end

/**
 * Fetches the raw value of a @c PB3LiveIMPush's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3LiveIMPush_Type_RawValue(PB3LiveIMPush *message);
/**
 * Sets the raw value of an @c PB3LiveIMPush's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3LiveIMPush_Type_RawValue(PB3LiveIMPush *message, int32_t value);

#pragma mark - PB3LiveTalkPush

typedef GPB_ENUM(PB3LiveTalkPush_FieldNumber) {
  PB3LiveTalkPush_FieldNumber_Type = 1,
  PB3LiveTalkPush_FieldNumber_TimeOut = 2,
  PB3LiveTalkPush_FieldNumber_ActionIdx = 3,
  PB3LiveTalkPush_FieldNumber_TalkTime = 4,
  PB3LiveTalkPush_FieldNumber_TargetPlayer = 5,
};

/**
 * 2. 连麦相关推送
 **/
@interface PB3LiveTalkPush : GPBMessage

@property(nonatomic, readwrite) PB3LiveTalkPush_PushType type;

/** 剩余时间; 通话时间延长时,该字段返回最新的时间 */
@property(nonatomic, readwrite) int64_t timeOut;

/** 同步动作时,该字段为模型动作组的下标 */
@property(nonatomic, readwrite) int64_t actionIdx;

/** 通话的多久 */
@property(nonatomic, readwrite) int64_t talkTime;

/** 当收到TARGET_CONN_SUCC时，该字段返回对方信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3PlayerInfo *targetPlayer;
/** Test to see if @c targetPlayer has been set. */
@property(nonatomic, readwrite) BOOL hasTargetPlayer;

@end

/**
 * Fetches the raw value of a @c PB3LiveTalkPush's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3LiveTalkPush_Type_RawValue(PB3LiveTalkPush *message);
/**
 * Sets the raw value of an @c PB3LiveTalkPush's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3LiveTalkPush_Type_RawValue(PB3LiveTalkPush *message, int32_t value);

#pragma mark - PB3GetLiveAssetsConfReq

/**
 * ------------------------------------------------------- 获取资源 -------------------------------------------------------
 **/
@interface PB3GetLiveAssetsConfReq : GPBMessage

@end

#pragma mark - PB3GetLiveAssetsConfRes

typedef GPB_ENUM(PB3GetLiveAssetsConfRes_FieldNumber) {
  PB3GetLiveAssetsConfRes_FieldNumber_Models = 1,
  PB3GetLiveAssetsConfRes_FieldNumber_Stickers = 2,
};

@interface PB3GetLiveAssetsConfRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBInt64ObjectDictionary<PB3LiveModel*> *models;
/** The number of items in @c models without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger models_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt64ObjectDictionary<PB3LiveSticker*> *stickers;
/** The number of items in @c stickers without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger stickers_Count;

@end

#pragma mark - PB3RestoreLiveStatusReq

@interface PB3RestoreLiveStatusReq : GPBMessage

@end

#pragma mark - PB3RestoreLiveStatusRes

typedef GPB_ENUM(PB3RestoreLiveStatusRes_FieldNumber) {
  PB3RestoreLiveStatusRes_FieldNumber_Talk = 1,
  PB3RestoreLiveStatusRes_FieldNumber_Im = 2,
};

@interface PB3RestoreLiveStatusRes : GPBMessage

/** 连麦中状态 */
@property(nonatomic, readwrite, strong, null_resettable) PB3LiveChannelPush *talk;
/** Test to see if @c talk has been set. */
@property(nonatomic, readwrite) BOOL hasTalk;

/** 被叫状态 */
@property(nonatomic, readwrite, strong, null_resettable) PB3LiveIMPush *im;
/** Test to see if @c im has been set. */
@property(nonatomic, readwrite) BOOL hasIm;

@end

#pragma mark - PB3SwitchTelepathyReq

typedef GPB_ENUM(PB3SwitchTelepathyReq_FieldNumber) {
  PB3SwitchTelepathyReq_FieldNumber_Telepathic = 1,
};

/**
 * -----------心电感应相关-----------
 * 打开和关闭心电感应
 **/
@interface PB3SwitchTelepathyReq : GPBMessage

/** true:打开  false:关闭 */
@property(nonatomic, readwrite) BOOL telepathic;

@end

#pragma mark - PB3SwitchTelepathyRes

@interface PB3SwitchTelepathyRes : GPBMessage

@end

#pragma mark - PB3ReportClickChatTelepathyReq

typedef GPB_ENUM(PB3ReportClickChatTelepathyReq_FieldNumber) {
  PB3ReportClickChatTelepathyReq_FieldNumber_TelepathyId = 1,
};

/**
 * 点击私聊上报
 **/
@interface PB3ReportClickChatTelepathyReq : GPBMessage

/** 推送ID */
@property(nonatomic, readwrite) int64_t telepathyId;

@end

#pragma mark - PB3ReportClickChatTelepathyRes

@interface PB3ReportClickChatTelepathyRes : GPBMessage

@end

#pragma mark - PB3PushTelepathyPopupData

typedef GPB_ENUM(PB3PushTelepathyPopupData_FieldNumber) {
  PB3PushTelepathyPopupData_FieldNumber_PlayerId = 1,
  PB3PushTelepathyPopupData_FieldNumber_Icon = 2,
  PB3PushTelepathyPopupData_FieldNumber_Nickname = 3,
  PB3PushTelepathyPopupData_FieldNumber_Constellation = 4,
  PB3PushTelepathyPopupData_FieldNumber_MatchingDegree = 5,
  PB3PushTelepathyPopupData_FieldNumber_TelepathyId = 6,
  PB3PushTelepathyPopupData_FieldNumber_Gender = 7,
  PB3PushTelepathyPopupData_FieldNumber_Switch_p = 8,
  PB3PushTelepathyPopupData_FieldNumber_GreetingsId = 9,
  PB3PushTelepathyPopupData_FieldNumber_Greetings = 10,
  PB3PushTelepathyPopupData_FieldNumber_LabelArray = 11,
};

@interface PB3PushTelepathyPopupData : GPBMessage

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nickname;

/** 星座 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *constellation;

/** 匹配度 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *matchingDegree;

/** 推送ID */
@property(nonatomic, readwrite) int64_t telepathyId;

/** 性别 */
@property(nonatomic, readwrite) enum PB3SexType gender;

/** 功能样式开关 */
@property(nonatomic, readwrite) BOOL switch_p;

/** 问候语ID */
@property(nonatomic, readwrite) int64_t greetingsId;

/** 问候语 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *greetings;

/** 个性标签 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *labelArray;
/** The number of items in @c labelArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger labelArray_Count;

@end

/**
 * Fetches the raw value of a @c PB3PushTelepathyPopupData's @c gender property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3PushTelepathyPopupData_Gender_RawValue(PB3PushTelepathyPopupData *message);
/**
 * Sets the raw value of an @c PB3PushTelepathyPopupData's @c gender property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3PushTelepathyPopupData_Gender_RawValue(PB3PushTelepathyPopupData *message, int32_t value);

#pragma mark - PB3ReportGreetingsUsedReq

typedef GPB_ENUM(PB3ReportGreetingsUsedReq_FieldNumber) {
  PB3ReportGreetingsUsedReq_FieldNumber_GreetingsId = 1,
};

/**
 * 上报问候语使用次数
 **/
@interface PB3ReportGreetingsUsedReq : GPBMessage

/** 问候语ID */
@property(nonatomic, readwrite) int64_t greetingsId;

@end

#pragma mark - PB3ReportGreetingsUsedRes

@interface PB3ReportGreetingsUsedRes : GPBMessage

@end

#pragma mark - PB3GetPlayerLiveCharacterReq

typedef GPB_ENUM(PB3GetPlayerLiveCharacterReq_FieldNumber) {
  PB3GetPlayerLiveCharacterReq_FieldNumber_PlayerId = 1,
};

@interface PB3GetPlayerLiveCharacterReq : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

@end

#pragma mark - PB3GetPlayerLiveCharacterRes

typedef GPB_ENUM(PB3GetPlayerLiveCharacterRes_FieldNumber) {
  PB3GetPlayerLiveCharacterRes_FieldNumber_Character = 1,
};

@interface PB3GetPlayerLiveCharacterRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3LiveCharacter *character;
/** Test to see if @c character has been set. */
@property(nonatomic, readwrite) BOOL hasCharacter;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
