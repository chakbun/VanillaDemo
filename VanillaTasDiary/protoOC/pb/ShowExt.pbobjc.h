// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pb/show.ext.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class PB3BossItem;
@class PB3InteractionConfig;
@class PB3InteractionPrice;
@class PB3PlayTaskInfo;
@class PB3RequestingSong;
@class PB3ShowConfig;
@class PB3ShowInteractionConfig;
@class PB3ShowInteractionRes;
@class PB3ShowParseSongList;
@class PB3ShowSearchSongUrl;
@class PB3ShowSongInfo;
@class PB3ShowSongListInfo;
@class PB3ShowTask;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum PB3ShowType

/** 表演模式节目类型 */
typedef GPB_ENUM(PB3ShowType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ShowType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 无 */
  PB3ShowType_ShowTypeNone = 0,

  /** 歌曲 */
  PB3ShowType_ShowTypeSinger = 1,

  /** 互动 */
  PB3ShowType_ShowTypeInteraction = 2,
};

GPBEnumDescriptor *PB3ShowType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ShowType_IsValidValue(int32_t value);

#pragma mark - Enum PB3ShowSongStatus

/** 歌词展示状态 */
typedef GPB_ENUM(PB3ShowSongStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ShowSongStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 结束状态 */
  PB3ShowSongStatus_SssEnd = 0,

  /** 播放状态 */
  PB3ShowSongStatus_SssPlay = 1,

  /** 暂停状态 */
  PB3ShowSongStatus_SssPause = 2,
};

GPBEnumDescriptor *PB3ShowSongStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ShowSongStatus_IsValidValue(int32_t value);

#pragma mark - Enum PB3ShowLyricActType

/** 表演模式歌词操作类型 */
typedef GPB_ENUM(PB3ShowLyricActType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ShowLyricActType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 停止 */
  PB3ShowLyricActType_ShowStop = 0,

  /** 播放 */
  PB3ShowLyricActType_ShowPlay = 1,

  /** 暂停 */
  PB3ShowLyricActType_ShowPause = 2,

  /** 上一句 */
  PB3ShowLyricActType_ShowPrev = 3,

  /** 下一句 */
  PB3ShowLyricActType_ShowNext = 4,
};

GPBEnumDescriptor *PB3ShowLyricActType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ShowLyricActType_IsValidValue(int32_t value);

#pragma mark - Enum PB3ShowDoubleTarget

typedef GPB_ENUM(PB3ShowDoubleTarget) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ShowDoubleTarget_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 默认双费房主主持 */
  PB3ShowDoubleTarget_SdtRoomPlayer = 0,

  /** 双费房主 */
  PB3ShowDoubleTarget_SdtRoom = 1,

  /** 双费主持 */
  PB3ShowDoubleTarget_SdtPlayer = 2,
};

GPBEnumDescriptor *PB3ShowDoubleTarget_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ShowDoubleTarget_IsValidValue(int32_t value);

#pragma mark - Enum PB3ShowOrderType

typedef GPB_ENUM(PB3ShowOrderType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ShowOrderType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3ShowOrderType_SotNone = 0,

  /** 炸档 */
  PB3ShowOrderType_SotBomb = 1,

  /** 爆音 */
  PB3ShowOrderType_SotSpeak = 2,

  /** 点歌 */
  PB3ShowOrderType_SotSong = 3,

  /** 合唱 */
  PB3ShowOrderType_SotChorus = 4,

  /** 表白 */
  PB3ShowOrderType_SotConfession = 5,

  /** 互动 */
  PB3ShowOrderType_SotInteraction = 6,

  /** 撒娇 */
  PB3ShowOrderType_SotCoquetry = 7,
};

GPBEnumDescriptor *PB3ShowOrderType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ShowOrderType_IsValidValue(int32_t value);

#pragma mark - Enum PB3OptBossTaskType

typedef GPB_ENUM(PB3OptBossTaskType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3OptBossTaskType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3OptBossTaskType_ObttNone = 0,

  /** 删除 */
  PB3OptBossTaskType_ObttDelete = 1,

  /** 上移 */
  PB3OptBossTaskType_ObttUpper = 2,

  /** 置顶 */
  PB3OptBossTaskType_ObttTop = 3,
};

GPBEnumDescriptor *PB3OptBossTaskType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3OptBossTaskType_IsValidValue(int32_t value);

#pragma mark - PB3ShowExtRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface PB3ShowExtRoot : GPBRootObject
@end

#pragma mark - PB3ShowInfoReq

/**
 * 获取表演模式节目信息
 **/
@interface PB3ShowInfoReq : GPBMessage

@end

#pragma mark - PB3ShowInfoRes

typedef GPB_ENUM(PB3ShowInfoRes_FieldNumber) {
  PB3ShowInfoRes_FieldNumber_ShowType = 1,
  PB3ShowInfoRes_FieldNumber_SongInfo = 2,
  PB3ShowInfoRes_FieldNumber_InteractionInfo = 3,
};

@interface PB3ShowInfoRes : GPBMessage

/** 节目类型 */
@property(nonatomic, readwrite) PB3ShowType showType;

/** 歌曲信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3ShowSongInfo *songInfo;
/** Test to see if @c songInfo has been set. */
@property(nonatomic, readwrite) BOOL hasSongInfo;

/** 互动信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3ShowInteractionRes *interactionInfo;
/** Test to see if @c interactionInfo has been set. */
@property(nonatomic, readwrite) BOOL hasInteractionInfo;

@end

/**
 * Fetches the raw value of a @c PB3ShowInfoRes's @c showType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ShowInfoRes_ShowType_RawValue(PB3ShowInfoRes *message);
/**
 * Sets the raw value of an @c PB3ShowInfoRes's @c showType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ShowInfoRes_ShowType_RawValue(PB3ShowInfoRes *message, int32_t value);

#pragma mark - PB3ShowSongInfo

typedef GPB_ENUM(PB3ShowSongInfo_FieldNumber) {
  PB3ShowSongInfo_FieldNumber_Song = 1,
  PB3ShowSongInfo_FieldNumber_Singer = 2,
  PB3ShowSongInfo_FieldNumber_Lyric = 3,
  PB3ShowSongInfo_FieldNumber_PlayTime = 4,
  PB3ShowSongInfo_FieldNumber_Status = 5,
  PB3ShowSongInfo_FieldNumber_SongTime = 6,
};

/**
 * 获取表演模式歌曲信息
 **/
@interface PB3ShowSongInfo : GPBMessage

/** 歌曲名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *song;

/** 歌手名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *singer;

/** 歌词 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *lyric;

/** 歌曲开始播放的时间戳(unix timestamp)(秒) */
@property(nonatomic, readwrite) int64_t playTime;

/** 播放状态 */
@property(nonatomic, readwrite) PB3ShowSongStatus status;

/** 歌曲时间 */
@property(nonatomic, readwrite) int64_t songTime;

@end

/**
 * Fetches the raw value of a @c PB3ShowSongInfo's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ShowSongInfo_Status_RawValue(PB3ShowSongInfo *message);
/**
 * Sets the raw value of an @c PB3ShowSongInfo's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ShowSongInfo_Status_RawValue(PB3ShowSongInfo *message, int32_t value);

#pragma mark - PB3ShowInteractionReq

typedef GPB_ENUM(PB3ShowInteractionReq_FieldNumber) {
  PB3ShowInteractionReq_FieldNumber_Title = 1,
  PB3ShowInteractionReq_FieldNumber_Desc = 2,
};

/**
 * 设定表演模式互动信息
 **/
@interface PB3ShowInteractionReq : GPBMessage

/** 标题 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** 简介 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *desc;

@end

#pragma mark - PB3ShowInteractionRes

typedef GPB_ENUM(PB3ShowInteractionRes_FieldNumber) {
  PB3ShowInteractionRes_FieldNumber_Title = 1,
  PB3ShowInteractionRes_FieldNumber_Desc = 2,
};

/**
 * 获取表演模式互动信息
 **/
@interface PB3ShowInteractionRes : GPBMessage

/** 标题 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** 简介 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *desc;

@end

#pragma mark - PB3ShowSearchSongUrl

typedef GPB_ENUM(PB3ShowSearchSongUrl_FieldNumber) {
  PB3ShowSearchSongUrl_FieldNumber_Method = 1,
  PB3ShowSearchSongUrl_FieldNumber_URL = 2,
  PB3ShowSearchSongUrl_FieldNumber_ArgsKv = 3,
  PB3ShowSearchSongUrl_FieldNumber_HeaderKv = 4,
  PB3ShowSearchSongUrl_FieldNumber_Platform = 5,
};

/**
 * 搜索歌曲
 **/
@interface PB3ShowSearchSongUrl : GPBMessage

/** HTTP 请求方法 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *method;

/** 歌曲列表URL */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

/** HTTP 请求参数 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *argsKv;
/** The number of items in @c argsKv without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger argsKv_Count;

/** HTTP Header(如:"referer":"xxx.xxx.com", "user-agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_2)") */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *headerKv;
/** The number of items in @c headerKv without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger headerKv_Count;

/** 歌词平台标识 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *platform;

@end

#pragma mark - PB3ShowSearchSongReq

typedef GPB_ENUM(PB3ShowSearchSongReq_FieldNumber) {
  PB3ShowSearchSongReq_FieldNumber_Song = 1,
  PB3ShowSearchSongReq_FieldNumber_Singer = 2,
};

@interface PB3ShowSearchSongReq : GPBMessage

/** 歌曲名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *song;

/** 歌手名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *singer;

@end

#pragma mark - PB3ShowSearchSongRes

typedef GPB_ENUM(PB3ShowSearchSongRes_FieldNumber) {
  PB3ShowSearchSongRes_FieldNumber_SongsURLArray = 1,
};

@interface PB3ShowSearchSongRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ShowSearchSongUrl*> *songsURLArray;
/** The number of items in @c songsURLArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger songsURLArray_Count;

@end

#pragma mark - PB3ShowSongListInfo

typedef GPB_ENUM(PB3ShowSongListInfo_FieldNumber) {
  PB3ShowSongListInfo_FieldNumber_SongId = 1,
  PB3ShowSongListInfo_FieldNumber_SongMid = 2,
  PB3ShowSongListInfo_FieldNumber_Song = 3,
  PB3ShowSongListInfo_FieldNumber_Singer = 4,
  PB3ShowSongListInfo_FieldNumber_Platform = 5,
  PB3ShowSongListInfo_FieldNumber_SongTime = 6,
};

/**
 * 歌曲列表信息
 **/
@interface PB3ShowSongListInfo : GPBMessage

/** 歌曲ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *songId;

/** 歌曲Mid */
@property(nonatomic, readwrite, copy, null_resettable) NSString *songMid;

/** 歌曲名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *song;

/** 歌手 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *singer;

/** 平台 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *platform;

/** 歌曲时间 */
@property(nonatomic, readwrite) int32_t songTime;

@end

#pragma mark - PB3ShowParseSongList

typedef GPB_ENUM(PB3ShowParseSongList_FieldNumber) {
  PB3ShowParseSongList_FieldNumber_Platform = 1,
  PB3ShowParseSongList_FieldNumber_SongListHTTPBody = 2,
};

/**
 * 将搜歌返回的HTTP Body返回给服务端解析
 **/
@interface PB3ShowParseSongList : GPBMessage

/** 歌词平台标识 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *platform;

/** 歌曲列表的HTTP Body */
@property(nonatomic, readwrite, copy, null_resettable) NSString *songListHTTPBody;

@end

#pragma mark - PB3ShowParseSongListReq

typedef GPB_ENUM(PB3ShowParseSongListReq_FieldNumber) {
  PB3ShowParseSongListReq_FieldNumber_SongBodyListArray = 1,
};

@interface PB3ShowParseSongListReq : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ShowParseSongList*> *songBodyListArray;
/** The number of items in @c songBodyListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger songBodyListArray_Count;

@end

#pragma mark - PB3ShowParseSongListRes

typedef GPB_ENUM(PB3ShowParseSongListRes_FieldNumber) {
  PB3ShowParseSongListRes_FieldNumber_SongListArray = 1,
};

@interface PB3ShowParseSongListRes : GPBMessage

/** 歌曲信息列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ShowSongListInfo*> *songListArray;
/** The number of items in @c songListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger songListArray_Count;

@end

#pragma mark - PB3ShowGetLyricUrlReq

typedef GPB_ENUM(PB3ShowGetLyricUrlReq_FieldNumber) {
  PB3ShowGetLyricUrlReq_FieldNumber_SongId = 1,
  PB3ShowGetLyricUrlReq_FieldNumber_SongMid = 2,
  PB3ShowGetLyricUrlReq_FieldNumber_Platform = 3,
};

/**
 * 获取歌词Url
 **/
@interface PB3ShowGetLyricUrlReq : GPBMessage

/** 歌曲ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *songId;

/** 歌曲Mid */
@property(nonatomic, readwrite, copy, null_resettable) NSString *songMid;

/** 歌词平台标识 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *platform;

@end

#pragma mark - PB3ShowGetLyricUrlRes

typedef GPB_ENUM(PB3ShowGetLyricUrlRes_FieldNumber) {
  PB3ShowGetLyricUrlRes_FieldNumber_LyricURL = 1,
};

@interface PB3ShowGetLyricUrlRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3ShowSearchSongUrl *lyricURL;
/** Test to see if @c lyricURL has been set. */
@property(nonatomic, readwrite) BOOL hasLyricURL;

@end

#pragma mark - PB3ShowParseLyricReq

typedef GPB_ENUM(PB3ShowParseLyricReq_FieldNumber) {
  PB3ShowParseLyricReq_FieldNumber_Platform = 1,
  PB3ShowParseLyricReq_FieldNumber_LyricHTTPBody = 2,
};

/**
 * 将获取歌词返回的HTTP Body返回给服务端解析
 **/
@interface PB3ShowParseLyricReq : GPBMessage

/** 歌词平台标识 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *platform;

/** 歌词的HTTP Body */
@property(nonatomic, readwrite, copy, null_resettable) NSString *lyricHTTPBody;

@end

#pragma mark - PB3ShowParseLyricRes

typedef GPB_ENUM(PB3ShowParseLyricRes_FieldNumber) {
  PB3ShowParseLyricRes_FieldNumber_Lyric = 1,
  PB3ShowParseLyricRes_FieldNumber_SongTime = 2,
};

@interface PB3ShowParseLyricRes : GPBMessage

/** 返回解析后的歌词 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *lyric;

/** 歌曲时长 */
@property(nonatomic, readwrite) int32_t songTime;

@end

#pragma mark - PB3ShowPlayLyricReq

typedef GPB_ENUM(PB3ShowPlayLyricReq_FieldNumber) {
  PB3ShowPlayLyricReq_FieldNumber_SongTime = 1,
  PB3ShowPlayLyricReq_FieldNumber_Lyric = 2,
  PB3ShowPlayLyricReq_FieldNumber_Song = 3,
  PB3ShowPlayLyricReq_FieldNumber_Singer = 4,
};

/**
 * 第一次播放歌词操作
 **/
@interface PB3ShowPlayLyricReq : GPBMessage

/** 歌曲总时长 */
@property(nonatomic, readwrite) int32_t songTime;

/** 歌词内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *lyric;

/** 歌曲名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *song;

/** 歌手 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *singer;

@end

#pragma mark - PB3ShowPlayLyricRes

@interface PB3ShowPlayLyricRes : GPBMessage

@end

#pragma mark - PB3ShowLyricCtrlReq

typedef GPB_ENUM(PB3ShowLyricCtrlReq_FieldNumber) {
  PB3ShowLyricCtrlReq_FieldNumber_Act = 1,
  PB3ShowLyricCtrlReq_FieldNumber_SongPlayTime = 2,
};

/**
 * 表演模式歌词操作
 **/
@interface PB3ShowLyricCtrlReq : GPBMessage

/** 操作类型 */
@property(nonatomic, readwrite) PB3ShowLyricActType act;

/** 上/下一句歌词的播放时间 */
@property(nonatomic, readwrite) int32_t songPlayTime;

@end

/**
 * Fetches the raw value of a @c PB3ShowLyricCtrlReq's @c act property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ShowLyricCtrlReq_Act_RawValue(PB3ShowLyricCtrlReq *message);
/**
 * Sets the raw value of an @c PB3ShowLyricCtrlReq's @c act property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ShowLyricCtrlReq_Act_RawValue(PB3ShowLyricCtrlReq *message, int32_t value);

#pragma mark - PB3ShowLyricCtrlRes

typedef GPB_ENUM(PB3ShowLyricCtrlRes_FieldNumber) {
  PB3ShowLyricCtrlRes_FieldNumber_Act = 1,
  PB3ShowLyricCtrlRes_FieldNumber_PlayTime = 2,
  PB3ShowLyricCtrlRes_FieldNumber_Status = 3,
};

@interface PB3ShowLyricCtrlRes : GPBMessage

/** 操作类型 */
@property(nonatomic, readwrite) PB3ShowLyricActType act;

/** 歌曲开始播放的时间戳(unix timestamp)(秒) */
@property(nonatomic, readwrite) int64_t playTime;

/** 播放状态 */
@property(nonatomic, readwrite) PB3ShowSongStatus status;

@end

/**
 * Fetches the raw value of a @c PB3ShowLyricCtrlRes's @c act property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ShowLyricCtrlRes_Act_RawValue(PB3ShowLyricCtrlRes *message);
/**
 * Sets the raw value of an @c PB3ShowLyricCtrlRes's @c act property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ShowLyricCtrlRes_Act_RawValue(PB3ShowLyricCtrlRes *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3ShowLyricCtrlRes's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ShowLyricCtrlRes_Status_RawValue(PB3ShowLyricCtrlRes *message);
/**
 * Sets the raw value of an @c PB3ShowLyricCtrlRes's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ShowLyricCtrlRes_Status_RawValue(PB3ShowLyricCtrlRes *message, int32_t value);

#pragma mark - PB3ShowConfig

typedef GPB_ENUM(PB3ShowConfig_FieldNumber) {
  PB3ShowConfig_FieldNumber_DefaultSpeak = 1,
  PB3ShowConfig_FieldNumber_DefaultSong = 2,
  PB3ShowConfig_FieldNumber_DefaultSongDouble = 3,
  PB3ShowConfig_FieldNumber_DefaultBomb = 4,
  PB3ShowConfig_FieldNumber_DefaultBombDouble = 5,
  PB3ShowConfig_FieldNumber_SpeakGiftIdsArray = 6,
  PB3ShowConfig_FieldNumber_SongGiftIdsArray = 7,
  PB3ShowConfig_FieldNumber_SongDoubleGiftIdsArray = 8,
  PB3ShowConfig_FieldNumber_BombGiftIdsArray = 9,
  PB3ShowConfig_FieldNumber_BombDoubleGiftIdsArray = 10,
  PB3ShowConfig_FieldNumber_BombAnimationURL = 11,
  PB3ShowConfig_FieldNumber_CanCancel = 12,
  PB3ShowConfig_FieldNumber_BombAnimationTime = 13,
  PB3ShowConfig_FieldNumber_DefaultAllChair = 14,
  PB3ShowConfig_FieldNumber_AllChairGiftIdsArray = 15,
  PB3ShowConfig_FieldNumber_DefaultChorus = 16,
  PB3ShowConfig_FieldNumber_DefaultChorusDouble = 17,
  PB3ShowConfig_FieldNumber_ChorusGiftIdsArray = 18,
  PB3ShowConfig_FieldNumber_ChorusDoubleGiftIdsArray = 19,
};

/**
 * 表演模式配置
 **/
@interface PB3ShowConfig : GPBMessage

/** 默认爆音 */
@property(nonatomic, readwrite) int32_t defaultSpeak;

/** 默认点歌 */
@property(nonatomic, readwrite) int32_t defaultSong;

/** 默认点歌双费 */
@property(nonatomic, readwrite) int32_t defaultSongDouble;

/** 默认炸弹 */
@property(nonatomic, readwrite) int32_t defaultBomb;

/** 默认炸档双费 */
@property(nonatomic, readwrite) int32_t defaultBombDouble;

/** 爆音 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *speakGiftIdsArray;
/** The number of items in @c speakGiftIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger speakGiftIdsArray_Count;

/** 点歌 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *songGiftIdsArray;
/** The number of items in @c songGiftIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger songGiftIdsArray_Count;

/** 点歌双费 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *songDoubleGiftIdsArray;
/** The number of items in @c songDoubleGiftIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger songDoubleGiftIdsArray_Count;

/** 炸档 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *bombGiftIdsArray;
/** The number of items in @c bombGiftIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger bombGiftIdsArray_Count;

/** 炸档双费 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *bombDoubleGiftIdsArray;
/** The number of items in @c bombDoubleGiftIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger bombDoubleGiftIdsArray_Count;

/** 炸档动画资源 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bombAnimationURL;

/** 允许取消排档，开启后主播才可以在排档后取消 */
@property(nonatomic, readwrite) BOOL canCancel;

/** 炸档动画时间，毫秒 */
@property(nonatomic, readwrite) int32_t bombAnimationTime;

/** 默认全麦双费 */
@property(nonatomic, readwrite) int32_t defaultAllChair;

/** 全麦双费 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *allChairGiftIdsArray;
/** The number of items in @c allChairGiftIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger allChairGiftIdsArray_Count;

/** 默认合唱 */
@property(nonatomic, readwrite) int32_t defaultChorus;

/** 默认合唱双费 */
@property(nonatomic, readwrite) int32_t defaultChorusDouble;

/** 合唱 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *chorusGiftIdsArray;
/** The number of items in @c chorusGiftIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger chorusGiftIdsArray_Count;

/** 合唱双费 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *chorusDoubleGiftIdsArray;
/** The number of items in @c chorusDoubleGiftIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger chorusDoubleGiftIdsArray_Count;

@end

#pragma mark - PB3ShowInteractionConfig

typedef GPB_ENUM(PB3ShowInteractionConfig_FieldNumber) {
  PB3ShowInteractionConfig_FieldNumber_DefaultSpeak = 1,
  PB3ShowInteractionConfig_FieldNumber_DefaultBomb = 2,
  PB3ShowInteractionConfig_FieldNumber_DefaultBombDouble = 3,
  PB3ShowInteractionConfig_FieldNumber_SpeakGiftIdsArray = 4,
  PB3ShowInteractionConfig_FieldNumber_SingleGiftIdsArray = 5,
  PB3ShowInteractionConfig_FieldNumber_SingleDoubleGiftIdsArray = 6,
  PB3ShowInteractionConfig_FieldNumber_SingleAllChairGiftIdsArray = 7,
  PB3ShowInteractionConfig_FieldNumber_MoreGiftIdsArray = 8,
  PB3ShowInteractionConfig_FieldNumber_MoreDoubleGiftIdsArray = 9,
  PB3ShowInteractionConfig_FieldNumber_BombGiftIdsArray = 10,
  PB3ShowInteractionConfig_FieldNumber_BombDoubleGiftIdsArray = 11,
  PB3ShowInteractionConfig_FieldNumber_BombAnimationURL = 12,
  PB3ShowInteractionConfig_FieldNumber_BombAnimationTime = 13,
};

/**
 * 表演模式配置
 **/
@interface PB3ShowInteractionConfig : GPBMessage

/** 默认爆音 */
@property(nonatomic, readwrite) int32_t defaultSpeak;

/** 默认炸弹 */
@property(nonatomic, readwrite) int32_t defaultBomb;

/** 默认炸档双费 */
@property(nonatomic, readwrite) int32_t defaultBombDouble;

/** 爆音 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *speakGiftIdsArray;
/** The number of items in @c speakGiftIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger speakGiftIdsArray_Count;

/** 单人互动单价 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *singleGiftIdsArray;
/** The number of items in @c singleGiftIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger singleGiftIdsArray_Count;

/** 单人互动双费 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *singleDoubleGiftIdsArray;
/** The number of items in @c singleDoubleGiftIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger singleDoubleGiftIdsArray_Count;

/** 单人互动全麦赞助 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *singleAllChairGiftIdsArray;
/** The number of items in @c singleAllChairGiftIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger singleAllChairGiftIdsArray_Count;

/** 多人互动单价 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *moreGiftIdsArray;
/** The number of items in @c moreGiftIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger moreGiftIdsArray_Count;

/** 多人互动双费 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *moreDoubleGiftIdsArray;
/** The number of items in @c moreDoubleGiftIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger moreDoubleGiftIdsArray_Count;

/** 炸档 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *bombGiftIdsArray;
/** The number of items in @c bombGiftIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger bombGiftIdsArray_Count;

/** 炸档双费 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *bombDoubleGiftIdsArray;
/** The number of items in @c bombDoubleGiftIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger bombDoubleGiftIdsArray_Count;

/** 炸档动画资源 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bombAnimationURL;

/** 炸档动画时间，毫秒 */
@property(nonatomic, readwrite) int32_t bombAnimationTime;

@end

#pragma mark - PB3ShowConfigReq

@interface PB3ShowConfigReq : GPBMessage

@end

#pragma mark - PB3ShowConfigRes

typedef GPB_ENUM(PB3ShowConfigRes_FieldNumber) {
  PB3ShowConfigRes_FieldNumber_Configs = 1,
  PB3ShowConfigRes_FieldNumber_InteractionConfig = 2,
};

@interface PB3ShowConfigRes : GPBMessage

/** 旧的配置，新的点歌配置 */
@property(nonatomic, readwrite, strong, null_resettable) PB3ShowConfig *configs;
/** Test to see if @c configs has been set. */
@property(nonatomic, readwrite) BOOL hasConfigs;

/** 新的互动配置 */
@property(nonatomic, readwrite, strong, null_resettable) PB3ShowInteractionConfig *interactionConfig;
/** Test to see if @c interactionConfig has been set. */
@property(nonatomic, readwrite) BOOL hasInteractionConfig;

@end

#pragma mark - PB3RequestingSong

typedef GPB_ENUM(PB3RequestingSong_FieldNumber) {
  PB3RequestingSong_FieldNumber_ShowType = 1,
  PB3RequestingSong_FieldNumber_SpeakGiftId = 2,
  PB3RequestingSong_FieldNumber_SongGiftId = 3,
  PB3RequestingSong_FieldNumber_SongDoubleGiftId = 4,
  PB3RequestingSong_FieldNumber_BombGiftId = 5,
  PB3RequestingSong_FieldNumber_BombDoubleGiftId = 6,
  PB3RequestingSong_FieldNumber_BombClearChair = 7,
  PB3RequestingSong_FieldNumber_BombTaskNum = 8,
  PB3RequestingSong_FieldNumber_DoubleTarget = 9,
  PB3RequestingSong_FieldNumber_AllDoubleGiftId = 10,
  PB3RequestingSong_FieldNumber_PriceList = 11,
  PB3RequestingSong_FieldNumber_ChorusGiftId = 12,
  PB3RequestingSong_FieldNumber_ChorusDoubleGiftId = 13,
};

@interface PB3RequestingSong : GPBMessage

@property(nonatomic, readwrite) PB3ShowType showType;

/** 爆音 */
@property(nonatomic, readwrite) int32_t speakGiftId;

/** 点歌｜互动 */
@property(nonatomic, readwrite) int32_t songGiftId;

/** 点歌｜互动双费 */
@property(nonatomic, readwrite) int32_t songDoubleGiftId;

/** 炸档 */
@property(nonatomic, readwrite) int32_t bombGiftId;

/** 炸档双费 */
@property(nonatomic, readwrite) int32_t bombDoubleGiftId;

/** 1 炸档时全麦清空麦序, 2 炸档时全麦减去特定数量 */
@property(nonatomic, readwrite) int32_t bombClearChair;

/** bomb_clear_chair=2时填写的数量 */
@property(nonatomic, readwrite) int32_t bombTaskNum;

/** 双费对象 */
@property(nonatomic, readwrite) PB3ShowDoubleTarget doubleTarget;

/** 全麦点歌｜互动双费 */
@property(nonatomic, readwrite) int32_t allDoubleGiftId;

/** 互动费用 */
@property(nonatomic, readwrite, strong, null_resettable) PB3InteractionConfig *priceList;
/** Test to see if @c priceList has been set. */
@property(nonatomic, readwrite) BOOL hasPriceList;

/** 合唱 */
@property(nonatomic, readwrite) int32_t chorusGiftId;

/** 合唱双费 */
@property(nonatomic, readwrite) int32_t chorusDoubleGiftId;

@end

/**
 * Fetches the raw value of a @c PB3RequestingSong's @c showType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3RequestingSong_ShowType_RawValue(PB3RequestingSong *message);
/**
 * Sets the raw value of an @c PB3RequestingSong's @c showType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3RequestingSong_ShowType_RawValue(PB3RequestingSong *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3RequestingSong's @c doubleTarget property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3RequestingSong_DoubleTarget_RawValue(PB3RequestingSong *message);
/**
 * Sets the raw value of an @c PB3RequestingSong's @c doubleTarget property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3RequestingSong_DoubleTarget_RawValue(PB3RequestingSong *message, int32_t value);

#pragma mark - PB3InteractionConfig

typedef GPB_ENUM(PB3InteractionConfig_FieldNumber) {
  PB3InteractionConfig_FieldNumber_SingleListArray = 1,
  PB3InteractionConfig_FieldNumber_AllChairListArray = 2,
};

@interface PB3InteractionConfig : GPBMessage

/** 单人互动 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3InteractionPrice*> *singleListArray;
/** The number of items in @c singleListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger singleListArray_Count;

/** 全麦互动 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3InteractionPrice*> *allChairListArray;
/** The number of items in @c allChairListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger allChairListArray_Count;

@end

#pragma mark - PB3InteractionPrice

typedef GPB_ENUM(PB3InteractionPrice_FieldNumber) {
  PB3InteractionPrice_FieldNumber_TimeMin = 1,
  PB3InteractionPrice_FieldNumber_SingleGift = 2,
  PB3InteractionPrice_FieldNumber_DoubleGift = 3,
  PB3InteractionPrice_FieldNumber_AllChair = 4,
  PB3InteractionPrice_FieldNumber_IsAllChair = 5,
};

@interface PB3InteractionPrice : GPBMessage

/** 时长 */
@property(nonatomic, readwrite) int32_t timeMin;

/** 单价 */
@property(nonatomic, readwrite) int32_t singleGift;

/** 双费 */
@property(nonatomic, readwrite) int32_t doubleGift;

/** 全麦|赞助全麦 */
@property(nonatomic, readwrite) int32_t allChair;

/** 是否全麦互动 */
@property(nonatomic, readwrite) BOOL isAllChair;

@end

#pragma mark - PB3SetRequestingSongReq

typedef GPB_ENUM(PB3SetRequestingSongReq_FieldNumber) {
  PB3SetRequestingSongReq_FieldNumber_Data_p = 1,
};

/**
 * 点歌费用设置
 **/
@interface PB3SetRequestingSongReq : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3RequestingSong *data_p;
/** Test to see if @c data_p has been set. */
@property(nonatomic, readwrite) BOOL hasData_p;

@end

#pragma mark - PB3SetRequestingSongRes

@interface PB3SetRequestingSongRes : GPBMessage

@end

#pragma mark - PB3RequestingSongReq

/**
 * 获取房间点歌费用设置
 **/
@interface PB3RequestingSongReq : GPBMessage

@end

#pragma mark - PB3RequestingSongRes

typedef GPB_ENUM(PB3RequestingSongRes_FieldNumber) {
  PB3RequestingSongRes_FieldNumber_Song = 1,
  PB3RequestingSongRes_FieldNumber_Interaction = 2,
};

@interface PB3RequestingSongRes : GPBMessage

/** 点歌 */
@property(nonatomic, readwrite, strong, null_resettable) PB3RequestingSong *song;
/** Test to see if @c song has been set. */
@property(nonatomic, readwrite) BOOL hasSong;

/** 互动 */
@property(nonatomic, readwrite, strong, null_resettable) PB3RequestingSong *interaction;
/** Test to see if @c interaction has been set. */
@property(nonatomic, readwrite) BOOL hasInteraction;

@end

#pragma mark - PB3ShowOrderReq

typedef GPB_ENUM(PB3ShowOrderReq_FieldNumber) {
  PB3ShowOrderReq_FieldNumber_OrderType = 1,
  PB3ShowOrderReq_FieldNumber_IdsArray = 2,
  PB3ShowOrderReq_FieldNumber_SingleId = 3,
  PB3ShowOrderReq_FieldNumber_DoubleId = 4,
  PB3ShowOrderReq_FieldNumber_IsAllChair = 5,
  PB3ShowOrderReq_FieldNumber_SupportId = 6,
};

@interface PB3ShowOrderReq : GPBMessage

/** 下单类型 */
@property(nonatomic, readwrite) PB3ShowOrderType orderType;

/** 主播ID列表 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *idsArray;
/** The number of items in @c idsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger idsArray_Count;

/** 单价ID */
@property(nonatomic, readwrite) int32_t singleId;

/** 双费ID */
@property(nonatomic, readwrite) int32_t doubleId;

/** 是否全麦 */
@property(nonatomic, readwrite) BOOL isAllChair;

/** 赞助全麦 */
@property(nonatomic, readwrite) int32_t supportId;

@end

/**
 * Fetches the raw value of a @c PB3ShowOrderReq's @c orderType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ShowOrderReq_OrderType_RawValue(PB3ShowOrderReq *message);
/**
 * Sets the raw value of an @c PB3ShowOrderReq's @c orderType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ShowOrderReq_OrderType_RawValue(PB3ShowOrderReq *message, int32_t value);

#pragma mark - PB3ShowOrderRes

@interface PB3ShowOrderRes : GPBMessage

@end

#pragma mark - PB3BossItem

typedef GPB_ENUM(PB3BossItem_FieldNumber) {
  PB3BossItem_FieldNumber_Id_p = 1,
  PB3BossItem_FieldNumber_Name = 2,
  PB3BossItem_FieldNumber_Icon = 3,
  PB3BossItem_FieldNumber_CreateTime = 4,
  PB3BossItem_FieldNumber_TasksArray = 5,
};

/**
 * 老板任务
 **/
@interface PB3BossItem : GPBMessage

@property(nonatomic, readwrite) int64_t id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** unix时间戳, 单位：秒 */
@property(nonatomic, readwrite) int64_t createTime;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ShowTask*> *tasksArray;
/** The number of items in @c tasksArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger tasksArray_Count;

@end

#pragma mark - PB3ShowTask

typedef GPB_ENUM(PB3ShowTask_FieldNumber) {
  PB3ShowTask_FieldNumber_Id_p = 1,
  PB3ShowTask_FieldNumber_ShowType = 2,
  PB3ShowTask_FieldNumber_OrderType = 3,
  PB3ShowTask_FieldNumber_PlayerId = 4,
  PB3ShowTask_FieldNumber_Name = 5,
  PB3ShowTask_FieldNumber_IsAllChair = 6,
  PB3ShowTask_FieldNumber_TimeMin = 7,
  PB3ShowTask_FieldNumber_GiftId = 8,
  PB3ShowTask_FieldNumber_OrderTypeIcon = 9,
  PB3ShowTask_FieldNumber_OrderTypeName = 10,
};

@interface PB3ShowTask : GPBMessage

/** 任务ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** 表演类型 点歌|互动 */
@property(nonatomic, readwrite) PB3ShowType showType;

/** 下单类型 爆音，点歌|互动，炸档 */
@property(nonatomic, readwrite) PB3ShowOrderType orderType;

/** 主播ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 主播名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 是否全麦 */
@property(nonatomic, readwrite) BOOL isAllChair;

/** 时长 */
@property(nonatomic, readwrite) int32_t timeMin;

/** 礼物ID */
@property(nonatomic, readwrite) int32_t giftId;

/** 下单类型图标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *orderTypeIcon;

/** 下单类型名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *orderTypeName;

@end

/**
 * Fetches the raw value of a @c PB3ShowTask's @c showType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ShowTask_ShowType_RawValue(PB3ShowTask *message);
/**
 * Sets the raw value of an @c PB3ShowTask's @c showType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ShowTask_ShowType_RawValue(PB3ShowTask *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3ShowTask's @c orderType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ShowTask_OrderType_RawValue(PB3ShowTask *message);
/**
 * Sets the raw value of an @c PB3ShowTask's @c orderType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ShowTask_OrderType_RawValue(PB3ShowTask *message, int32_t value);

#pragma mark - PB3ShowBossListReq

typedef GPB_ENUM(PB3ShowBossListReq_FieldNumber) {
  PB3ShowBossListReq_FieldNumber_Index = 1,
};

/**
 * 老板任务列表
 **/
@interface PB3ShowBossListReq : GPBMessage

@property(nonatomic, readwrite) int32_t index;

@end

#pragma mark - PB3ShowBossListRes

typedef GPB_ENUM(PB3ShowBossListRes_FieldNumber) {
  PB3ShowBossListRes_FieldNumber_ListArray = 1,
  PB3ShowBossListRes_FieldNumber_NextIndex = 2,
};

@interface PB3ShowBossListRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3BossItem*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

/** 下一页索引 */
@property(nonatomic, readwrite) int32_t nextIndex;

@end

#pragma mark - PB3AdminAddShowBossReq

typedef GPB_ENUM(PB3AdminAddShowBossReq_FieldNumber) {
  PB3AdminAddShowBossReq_FieldNumber_BossId = 1,
  PB3AdminAddShowBossReq_FieldNumber_OrderType = 2,
  PB3AdminAddShowBossReq_FieldNumber_Num = 3,
  PB3AdminAddShowBossReq_FieldNumber_IdsArray = 4,
};

/**
 * 管理员添加老板
 **/
@interface PB3AdminAddShowBossReq : GPBMessage

/** 老板ID */
@property(nonatomic, readwrite) int64_t bossId;

/** 类型 */
@property(nonatomic, readwrite) PB3ShowOrderType orderType;

/** 数量 */
@property(nonatomic, readwrite) int32_t num;

/** 主播列表 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *idsArray;
/** The number of items in @c idsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger idsArray_Count;

@end

/**
 * Fetches the raw value of a @c PB3AdminAddShowBossReq's @c orderType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3AdminAddShowBossReq_OrderType_RawValue(PB3AdminAddShowBossReq *message);
/**
 * Sets the raw value of an @c PB3AdminAddShowBossReq's @c orderType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3AdminAddShowBossReq_OrderType_RawValue(PB3AdminAddShowBossReq *message, int32_t value);

#pragma mark - PB3AdminAddShowBossRes

@interface PB3AdminAddShowBossRes : GPBMessage

@end

#pragma mark - PB3OptBossTaskReq

typedef GPB_ENUM(PB3OptBossTaskReq_FieldNumber) {
  PB3OptBossTaskReq_FieldNumber_TaskId = 1,
  PB3OptBossTaskReq_FieldNumber_OptType = 2,
  PB3OptBossTaskReq_FieldNumber_BossId = 3,
};

@interface PB3OptBossTaskReq : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *taskId;

@property(nonatomic, readwrite) PB3OptBossTaskType optType;

/** 老板ID */
@property(nonatomic, readwrite) int64_t bossId;

@end

/**
 * Fetches the raw value of a @c PB3OptBossTaskReq's @c optType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3OptBossTaskReq_OptType_RawValue(PB3OptBossTaskReq *message);
/**
 * Sets the raw value of an @c PB3OptBossTaskReq's @c optType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3OptBossTaskReq_OptType_RawValue(PB3OptBossTaskReq *message, int32_t value);

#pragma mark - PB3OptBossTaskRes

@interface PB3OptBossTaskRes : GPBMessage

@end

#pragma mark - PB3BombNotice

typedef GPB_ENUM(PB3BombNotice_FieldNumber) {
  PB3BombNotice_FieldNumber_ShowType = 1,
};

@interface PB3BombNotice : GPBMessage

@property(nonatomic, readwrite) PB3ShowType showType;

@end

/**
 * Fetches the raw value of a @c PB3BombNotice's @c showType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BombNotice_ShowType_RawValue(PB3BombNotice *message);
/**
 * Sets the raw value of an @c PB3BombNotice's @c showType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BombNotice_ShowType_RawValue(PB3BombNotice *message, int32_t value);

#pragma mark - PB3PlanTaskInfoReq

/**
 * 获取排档设置
 **/
@interface PB3PlanTaskInfoReq : GPBMessage

@end

#pragma mark - PB3PlanTaskInfoRes

typedef GPB_ENUM(PB3PlanTaskInfoRes_FieldNumber) {
  PB3PlanTaskInfoRes_FieldNumber_StartTime = 1,
  PB3PlanTaskInfoRes_FieldNumber_EndTime = 2,
  PB3PlanTaskInfoRes_FieldNumber_ArtistNum = 3,
  PB3PlanTaskInfoRes_FieldNumber_MinTaskNum = 4,
  PB3PlanTaskInfoRes_FieldNumber_TopNum = 5,
  PB3PlanTaskInfoRes_FieldNumber_ManualNum = 6,
};

@interface PB3PlanTaskInfoRes : GPBMessage

/** 排档设置开始时间 */
@property(nonatomic, readwrite) int32_t startTime;

/** 排档设置结束时间 */
@property(nonatomic, readwrite) int32_t endTime;

/** 排档数量 */
@property(nonatomic, readwrite) int32_t artistNum;

/** 最低任务数 */
@property(nonatomic, readwrite) int32_t minTaskNum;

/** 置顶档数量 */
@property(nonatomic, readwrite) int32_t topNum;

/** 手动档数量 */
@property(nonatomic, readwrite) int32_t manualNum;

@end

#pragma mark - PB3SavePlanTaskReq

typedef GPB_ENUM(PB3SavePlanTaskReq_FieldNumber) {
  PB3SavePlanTaskReq_FieldNumber_RoomId = 1,
  PB3SavePlanTaskReq_FieldNumber_StartTime = 2,
  PB3SavePlanTaskReq_FieldNumber_EndTime = 3,
  PB3SavePlanTaskReq_FieldNumber_ArtistNum = 4,
  PB3SavePlanTaskReq_FieldNumber_MinTaskNum = 5,
  PB3SavePlanTaskReq_FieldNumber_TopNum = 6,
  PB3SavePlanTaskReq_FieldNumber_ManualNum = 7,
};

/**
 * 保存排档设置
 **/
@interface PB3SavePlanTaskReq : GPBMessage

/** 房间Id */
@property(nonatomic, readwrite) int64_t roomId;

/** 排档设置开始时间 */
@property(nonatomic, readwrite) int32_t startTime;

/** 排档设置结束时间 */
@property(nonatomic, readwrite) int32_t endTime;

/** 排档数量 */
@property(nonatomic, readwrite) int32_t artistNum;

/** 最低任务数 */
@property(nonatomic, readwrite) int32_t minTaskNum;

/** 置顶档数量 */
@property(nonatomic, readwrite) int32_t topNum;

/** 手动档数量 */
@property(nonatomic, readwrite) int32_t manualNum;

@end

#pragma mark - PB3SavePlanTaskRes

@interface PB3SavePlanTaskRes : GPBMessage

@end

#pragma mark - PB3ShowOrderInfoReq

/**
 * 获取排档麦序
 **/
@interface PB3ShowOrderInfoReq : GPBMessage

@end

#pragma mark - PB3ShowOrderInfoRes

typedef GPB_ENUM(PB3ShowOrderInfoRes_FieldNumber) {
  PB3ShowOrderInfoRes_FieldNumber_StartTime = 1,
  PB3ShowOrderInfoRes_FieldNumber_EndTime = 2,
  PB3ShowOrderInfoRes_FieldNumber_InfoArray = 3,
  PB3ShowOrderInfoRes_FieldNumber_MinTaskNum = 4,
  PB3ShowOrderInfoRes_FieldNumber_TopNum = 5,
  PB3ShowOrderInfoRes_FieldNumber_IsCancel = 6,
};

@interface PB3ShowOrderInfoRes : GPBMessage

/** 排档开始时间 */
@property(nonatomic, readwrite) int64_t startTime;

/** 排档结束时间 */
@property(nonatomic, readwrite) int64_t endTime;

/** 排档信息 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3PlayTaskInfo*> *infoArray;
/** The number of items in @c infoArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger infoArray_Count;

/** 最少任务数量 */
@property(nonatomic, readwrite) int32_t minTaskNum;

/** 置顶任务配置数量 */
@property(nonatomic, readwrite) int32_t topNum;

/** 是否可取消 */
@property(nonatomic, readwrite) BOOL isCancel;

@end

#pragma mark - PB3PlayTaskInfo

typedef GPB_ENUM(PB3PlayTaskInfo_FieldNumber) {
  PB3PlayTaskInfo_FieldNumber_Order = 1,
  PB3PlayTaskInfo_FieldNumber_PlayerId = 2,
  PB3PlayTaskInfo_FieldNumber_Name = 3,
  PB3PlayTaskInfo_FieldNumber_IconURL = 4,
  PB3PlayTaskInfo_FieldNumber_TaskNum = 5,
  PB3PlayTaskInfo_FieldNumber_IsPrevOrder = 6,
  PB3PlayTaskInfo_FieldNumber_DoneTaskNum = 7,
  PB3PlayTaskInfo_FieldNumber_IsTop = 8,
  PB3PlayTaskInfo_FieldNumber_IsManual = 9,
};

@interface PB3PlayTaskInfo : GPBMessage

/** 排序 */
@property(nonatomic, readwrite) int32_t order;

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 用户名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 头像URL */
@property(nonatomic, readwrite, copy, null_resettable) NSString *iconURL;

/** 剩余任务数量 */
@property(nonatomic, readwrite) int32_t taskNum;

/** 是否是前档 */
@property(nonatomic, readwrite) BOOL isPrevOrder;

/** 已完成任务数量 */
@property(nonatomic, readwrite) int32_t doneTaskNum;

/** 是否置顶 */
@property(nonatomic, readwrite) BOOL isTop;

/** 是否手速 */
@property(nonatomic, readwrite) BOOL isManual;

@end

#pragma mark - PB3PlayOrderReq

/**
 * 获取当前麦序
 **/
@interface PB3PlayOrderReq : GPBMessage

@end

#pragma mark - PB3PlayOrderRes

typedef GPB_ENUM(PB3PlayOrderRes_FieldNumber) {
  PB3PlayOrderRes_FieldNumber_TaskListArray = 1,
  PB3PlayOrderRes_FieldNumber_DoneListArray = 2,
};

@interface PB3PlayOrderRes : GPBMessage

/** 未完成列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3PlayTaskInfo*> *taskListArray;
/** The number of items in @c taskListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger taskListArray_Count;

/** 已完成列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3PlayTaskInfo*> *doneListArray;
/** The number of items in @c doneListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger doneListArray_Count;

@end

#pragma mark - PB3SubTaskReq

typedef GPB_ENUM(PB3SubTaskReq_FieldNumber) {
  PB3SubTaskReq_FieldNumber_PlayerId = 1,
};

/**
 * 手动减少麦序任务数量
 **/
@interface PB3SubTaskReq : GPBMessage

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId;

@end

#pragma mark - PB3SubTaskRes

@interface PB3SubTaskRes : GPBMessage

@end

#pragma mark - PB3PlanOrderReq

/**
 * 获取排档麦序
 **/
@interface PB3PlanOrderReq : GPBMessage

@end

#pragma mark - PB3PlanOrderRes

typedef GPB_ENUM(PB3PlanOrderRes_FieldNumber) {
  PB3PlanOrderRes_FieldNumber_TaskListArray = 1,
  PB3PlanOrderRes_FieldNumber_MinTaskNum = 2,
  PB3PlanOrderRes_FieldNumber_IsCancel = 3,
};

@interface PB3PlanOrderRes : GPBMessage

/** 排序列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3PlayTaskInfo*> *taskListArray;
/** The number of items in @c taskListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger taskListArray_Count;

/** 最少任务数量 */
@property(nonatomic, readwrite) int32_t minTaskNum;

/** 是否可取消 */
@property(nonatomic, readwrite) BOOL isCancel;

@end

#pragma mark - PB3ArrangeOrderReq

typedef GPB_ENUM(PB3ArrangeOrderReq_FieldNumber) {
  PB3ArrangeOrderReq_FieldNumber_TaskNum = 1,
};

/**
 * 排档
 **/
@interface PB3ArrangeOrderReq : GPBMessage

/** 任务数量 */
@property(nonatomic, readwrite) int32_t taskNum;

@end

#pragma mark - PB3ArrangeOrderRes

@interface PB3ArrangeOrderRes : GPBMessage

@end

#pragma mark - PB3ArrangeTopOrderReq

typedef GPB_ENUM(PB3ArrangeTopOrderReq_FieldNumber) {
  PB3ArrangeTopOrderReq_FieldNumber_PlayerId = 1,
};

/**
 * 添加置顶
 **/
@interface PB3ArrangeTopOrderReq : GPBMessage

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId;

@end

#pragma mark - PB3ArrangeTopOrderRes

@interface PB3ArrangeTopOrderRes : GPBMessage

@end

#pragma mark - PB3CancelPlanOrderReq

/**
 * 取消任务
 **/
@interface PB3CancelPlanOrderReq : GPBMessage

@end

#pragma mark - PB3CancelPlanOrderRes

@interface PB3CancelPlanOrderRes : GPBMessage

@end

#pragma mark - PB3RoomSpeakReq

/**
 * 发送麦序公屏
 **/
@interface PB3RoomSpeakReq : GPBMessage

@end

#pragma mark - PB3RoomSpeakRes

@interface PB3RoomSpeakRes : GPBMessage

@end

#pragma mark - PB3ShowNewBoss

typedef GPB_ENUM(PB3ShowNewBoss_FieldNumber) {
  PB3ShowNewBoss_FieldNumber_NewBossTask = 1,
  PB3ShowNewBoss_FieldNumber_NewIndex = 2,
};

/**
 * 推送老板变更
 **/
@interface PB3ShowNewBoss : GPBMessage

/** new_index=-1时使用，新的老板任务顺序，任务列表为0清除老板 */
@property(nonatomic, readwrite, strong, null_resettable) PB3BossItem *newBossTask NS_RETURNS_NOT_RETAINED;
/** Test to see if @c newBossTask has been set. */
@property(nonatomic, readwrite) BOOL hasNewBossTask;

/** -1 更新对应的老板任务顺序，如果停留在老板列表页>=0 为接口ShowBossList新的index, 清除这个位置后面的数据，从这个位置拉新的数据 */
@property(nonatomic, readwrite) int32_t newIndex;

@end

#pragma mark - PB3RoomShowBossListReq

typedef GPB_ENUM(PB3RoomShowBossListReq_FieldNumber) {
  PB3RoomShowBossListReq_FieldNumber_RoomId = 1,
};

/**
 * 获取房间表演老板
 **/
@interface PB3RoomShowBossListReq : GPBMessage

@property(nonatomic, readwrite) int64_t roomId;

@end

#pragma mark - PB3RoomShowBossListRes

typedef GPB_ENUM(PB3RoomShowBossListRes_FieldNumber) {
  PB3RoomShowBossListRes_FieldNumber_BossListArray = 1,
};

@interface PB3RoomShowBossListRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3BossItem*> *bossListArray;
/** The number of items in @c bossListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger bossListArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
