// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pb/nobility.ext.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class PB3CouponUsedData;
@class PB3HallOfFame;
@class PB3MaskInfo;
@class PB3MaskName;
@class PB3MaskPhoto;
@class PB3MaskRoomInfo;
@class PB3NobilityConf;
@class PB3NobilityDynamic;
@class PB3NobilityLog;
@class PB3NobilityPrice;
@class PB3NobilityPrivilege;
@class PB3NobilityPrivilegeConf;
@class PB3OpenNobilityPopItem;
@class PB3PlayerNobilityInfo;
@class PB3RoomRewardItem;
GPB_ENUM_FWD_DECLARE(PB3CommonOperType);
GPB_ENUM_FWD_DECLARE(PB3SexType);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum PB3NobilityCmdId

typedef GPB_ENUM(PB3NobilityCmdId) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3NobilityCmdId_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3NobilityCmdId_NcmdIdNull = 0,

  /** 推送开通动画 NobilityDynamic */
  PB3NobilityCmdId_NcmdIdPlayDynamic = 508001,

  /** 更新特权 UpdatePrivilege */
  PB3NobilityCmdId_NcmdIdUpdatePrivilege = 508002,

  /** 更新马甲 NoticeUpdateMask */
  PB3NobilityCmdId_NcmdIdUpdateMask = 508003,

  /** 更新爵位状态 NoticeNobility */
  PB3NobilityCmdId_NcmdIdUpdateNobility = 508004,
};

GPBEnumDescriptor *PB3NobilityCmdId_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3NobilityCmdId_IsValidValue(int32_t value);

#pragma mark - Enum PB3NobilityPriceType

typedef GPB_ENUM(PB3NobilityPriceType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3NobilityPriceType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3NobilityPriceType_NobilityPriceTypeNull = 0,

  /** 正常价格 */
  PB3NobilityPriceType_NobilityPriceTypeNormal = 1,

  /** 正常续费价格 */
  PB3NobilityPriceType_NobilityPriceTypeNormalRenew = 2,

  /** ios价格 */
  PB3NobilityPriceType_NobilityPriceTypeIosNormal = 3,

  /** ios续费价格 */
  PB3NobilityPriceType_NobilityPriceTypeIosNormalRenew = 4,
};

GPBEnumDescriptor *PB3NobilityPriceType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3NobilityPriceType_IsValidValue(int32_t value);

#pragma mark - Enum PB3PrivilegeType

/**
 * 1xxx 用户显示类
 * 2xxx 房间显示类
 * 3xxx 福利类
 * 4xxx 专享类
 * 5xxx 特权类
 * 6xxx 加成类
 **/
typedef GPB_ENUM(PB3PrivilegeType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3PrivilegeType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3PrivilegeType_PtNull = 0,

  /** 特权设置，有马甲设置项返回 */
  PB3PrivilegeType_PtMask = 1,

  /** 用户显示类 占位不用 */
  PB3PrivilegeType_PtShow = 1000,

  /** 开通特效(开通，续费，升级) */
  PB3PrivilegeType_PtShowPay = 1001,

  /** 尊贵身份 */
  PB3PrivilegeType_PtShowHonourableIdentity = 1002,

  /** 名人堂 */
  PB3PrivilegeType_PtShowHallOfFame = 1003,

  /** 稀有名片框 */
  PB3PrivilegeType_PtShowCardFrame = 1004,

  /** 房间显示类 占位不用 */
  PB3PrivilegeType_PtRoomShow = 2000,

  /** 入场特效，横幅欢迎 */
  PB3PrivilegeType_PtRoomShowWelcome = 2001,

  /** 上麦特效 */
  PB3PrivilegeType_PtRoomShowSitChar = 2002,

  /** 麦上气泡 */
  PB3PrivilegeType_PtRoomShowCharBubble = 2003,

  /** 发言特效 */
  PB3PrivilegeType_PtRoomShowSpeak = 2004,

  /** 福利类 占位不用 */
  PB3PrivilegeType_PtWelfare = 3000,

  /** 尊贵座驾 */
  PB3PrivilegeType_PtWelfareHonourableVehicle = 3001,

  /** 专享类 占位不用 */
  PB3PrivilegeType_PtSpecial = 4000,

  /** 招行大额充值 */
  PB3PrivilegeType_PtSpecialCmbPay = 4001,

  /** 专属礼物 */
  PB3PrivilegeType_PtSpecialGift = 4002,

  /** 专属客服 */
  PB3PrivilegeType_PtSpecialService = 4003,

  /** 魔法技能 */
  PB3PrivilegeType_PtPrivilegeMagicSkill = 4007,

  /** 特权类 占位不用 */
  PB3PrivilegeType_PtPrivilege = 5000,

  /** 榜单隐身 */
  PB3PrivilegeType_PtPrivilegeMaskRank = 5001,

  /** 进场隐身 */
  PB3PrivilegeType_PtPrivilegeMaskEnter = 5002,

  /** 匿名上麦 */
  PB3PrivilegeType_PtPrivilegeMaskSitChar = 5003,

  /** 防禁言 */
  PB3PrivilegeType_PtPrivilegePreventBanSpeak = 5004,

  /** 好友行踪 */
  PB3PrivilegeType_PtPrivilegeFriendTrack = 5005,

  /** 防踢出 */
  PB3PrivilegeType_PtPrivilegePreventKickOut = 5006,

  /** 访客隐身 */
  PB3PrivilegeType_PtPrivilegeHideTrack = 5007,

  /** 更多挚友 */
  PB3PrivilegeType_PtPrivilegeMoreDealFriend = 5008,

  /** 消息免打扰 */
  PB3PrivilegeType_PtPrivilegeNoDisturbing = 5009,

  /** 防跟踪踩房 */
  PB3PrivilegeType_PtPrivilegePreventTrack = 5010,

  /** 加成类 占位不用 */
  PB3PrivilegeType_PtExtra = 6000,

  /** 热度加成 */
  PB3PrivilegeType_PtExtraAddHot = 6001,
};

GPBEnumDescriptor *PB3PrivilegeType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3PrivilegeType_IsValidValue(int32_t value);

#pragma mark - Enum PB3BuyNobilityType

typedef GPB_ENUM(PB3BuyNobilityType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3BuyNobilityType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 不可开通 */
  PB3BuyNobilityType_BntNull = 0,

  /** 开通 */
  PB3BuyNobilityType_BntOpen = 1,

  /** 续费 */
  PB3BuyNobilityType_BntRenew = 2,

  /** 升级 */
  PB3BuyNobilityType_BntUpgrade = 3,
};

GPBEnumDescriptor *PB3BuyNobilityType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3BuyNobilityType_IsValidValue(int32_t value);

#pragma mark - Enum PB3PayNobilityType

typedef GPB_ENUM(PB3PayNobilityType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3PayNobilityType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3PayNobilityType_PntNull = 0,

  /** 金币 */
  PB3PayNobilityType_PntGold = 1,

  /** 微信支付 */
  PB3PayNobilityType_PntWpay = 2,

  /** 支付宝支付 */
  PB3PayNobilityType_PntApay = 3,

  /** iap支付 */
  PB3PayNobilityType_PntIap = 4,

  /** 招行大额支付 */
  PB3PayNobilityType_PntCmb = 5,
};

GPBEnumDescriptor *PB3PayNobilityType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3PayNobilityType_IsValidValue(int32_t value);

#pragma mark - Enum PB3BuyNobilityGoldType

typedef GPB_ENUM(PB3BuyNobilityGoldType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3BuyNobilityGoldType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** ios金币购买 */
  PB3BuyNobilityGoldType_BngtIos = 0,

  /** 站外购买 */
  PB3BuyNobilityGoldType_BngtH5 = 2,
};

GPBEnumDescriptor *PB3BuyNobilityGoldType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3BuyNobilityGoldType_IsValidValue(int32_t value);

#pragma mark - Enum PB3PlayerNobilityStatus

typedef GPB_ENUM(PB3PlayerNobilityStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3PlayerNobilityStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3PlayerNobilityStatus_PnsNull = 0,

  /** 正在使用中的爵位 */
  PB3PlayerNobilityStatus_PnsUsing = 1,

  /** 购买的低等级爵位未使用 */
  PB3PlayerNobilityStatus_PnsOwned = 2,

  /** 保护期 */
  PB3PlayerNobilityStatus_PnsProtected = 3,

  /** 过期的 */
  PB3PlayerNobilityStatus_PnsOverdue = 4,
};

GPBEnumDescriptor *PB3PlayerNobilityStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3PlayerNobilityStatus_IsValidValue(int32_t value);

#pragma mark - Enum PB3PrivilegeSetType

typedef GPB_ENUM(PB3PrivilegeSetType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3PrivilegeSetType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3PrivilegeSetType_PstNull = 0,

  /** bool类型, 当前页设置，除防跟踪进房，其余bool类型调用这个接口 UpdateBoolPrivilege */
  PB3PrivilegeSetType_PstBool = 1,

  /** 挑转到其它的设置页面，根据id挑转 */
  PB3PrivilegeSetType_PstOtherPageSet = 2,

  /** 防跟踪进房设置调用这个接口 SetFollowToRoom */
  PB3PrivilegeSetType_PstProtectEnterRoom = 3,
};

GPBEnumDescriptor *PB3PrivilegeSetType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3PrivilegeSetType_IsValidValue(int32_t value);

#pragma mark - Enum PB3PrivilegeSetDataType

typedef GPB_ENUM(PB3PrivilegeSetDataType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3PrivilegeSetDataType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3PrivilegeSetDataType_PsdtNull = 0,

  /** 数据为bool类型，直接用 status */
  PB3PrivilegeSetDataType_PsdtBool = 1,

  /** 数据为string 图片地址, 直接用img */
  PB3PrivilegeSetDataType_PsdtStringImg = 2,

  /** 防跟踪进房 FollowToRoomRes */
  PB3PrivilegeSetDataType_PsdtProtectEnterRoom = 3,

  /** (服务端内部用)更多挚友 PrivilegeMoreDealFriendExtra */
  PB3PrivilegeSetDataType_PsdtMoreDealFriendInt = 4,
};

GPBEnumDescriptor *PB3PrivilegeSetDataType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3PrivilegeSetDataType_IsValidValue(int32_t value);

#pragma mark - PB3NobilityExtRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface PB3NobilityExtRoot : GPBRootObject
@end

#pragma mark - PB3NobilityConf

typedef GPB_ENUM(PB3NobilityConf_FieldNumber) {
  PB3NobilityConf_FieldNumber_NobilityId = 1,
  PB3NobilityConf_FieldNumber_Name = 2,
  PB3NobilityConf_FieldNumber_Icon = 3,
  PB3NobilityConf_FieldNumber_TimeoutIcon = 4,
  PB3NobilityConf_FieldNumber_Description_p = 5,
  PB3NobilityConf_FieldNumber_DynamicImg = 6,
  PB3NobilityConf_FieldNumber_NobilityLevel = 7,
  PB3NobilityConf_FieldNumber_PrivilegeIdsArray = 8,
  PB3NobilityConf_FieldNumber_FrameImg = 9,
  PB3NobilityConf_FieldNumber_Price = 10,
  PB3NobilityConf_FieldNumber_PcMinIcon = 11,
  PB3NobilityConf_FieldNumber_IconFrame = 12,
  PB3NobilityConf_FieldNumber_ServerNum = 13,
  PB3NobilityConf_FieldNumber_DynamicImgBottom = 14,
  PB3NobilityConf_FieldNumber_PcDynamicImg = 15,
  PB3NobilityConf_FieldNumber_PcBigIcon = 16,
  PB3NobilityConf_FieldNumber_NameColor = 17,
  PB3NobilityConf_FieldNumber_IsVipBuy = 18,
  PB3NobilityConf_FieldNumber_EnterRoomEffect = 19,
  PB3NobilityConf_FieldNumber_EnterRoomEffectIcon = 20,
  PB3NobilityConf_FieldNumber_EnterRoomScreen = 21,
  PB3NobilityConf_FieldNumber_EnterRoomEffectPc = 22,
  PB3NobilityConf_FieldNumber_EnterRoomEffectIconPc = 23,
  PB3NobilityConf_FieldNumber_EnterRoomScreenPc = 24,
};

@interface PB3NobilityConf : GPBMessage

/** 爵位id */
@property(nonatomic, readwrite) int32_t nobilityId;

/** 爵位名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 爵位图标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 过期爵位图标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *timeoutIcon;

/** 爵位描述 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

/** 开通爵位动画 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *dynamicImg;

/** 爵位等级 子爵<侯爵<公爵<国王<皇帝 */
@property(nonatomic, readwrite) int32_t nobilityLevel;

/** 爵位特权id */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *privilegeIdsArray;
/** The number of items in @c privilegeIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger privilegeIdsArray_Count;

/** 边框 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *frameImg;

/** key 对应NobilityPriceType value价格 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32ObjectDictionary<PB3NobilityPrice*> *price;
/** The number of items in @c price without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger price_Count;

/** pc小图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcMinIcon;

/** 头像框 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *iconFrame;

/** 客服 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *serverNum;

/** 动画底部横幅 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *dynamicImgBottom;

/** pc动画 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcDynamicImg;

/** pc大图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcBigIcon;

/** 贵宾列表，名字颜色 #666666 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nameColor;

/** 是否支持大额购买 */
@property(nonatomic, readwrite) BOOL isVipBuy;

/** 爵位进房横幅特效无头像app */
@property(nonatomic, readwrite, copy, null_resettable) NSString *enterRoomEffect;

/** 爵位进房横幅特效名字颜色app */
@property(nonatomic, readwrite, copy, null_resettable) NSString *enterRoomEffectIcon;

/** 爵位进房横幅公屏app */
@property(nonatomic, readwrite, copy, null_resettable) NSString *enterRoomScreen;

/** 爵位进房横幅特效无头像pc */
@property(nonatomic, readwrite, copy, null_resettable) NSString *enterRoomEffectPc;

/** 爵位进房横幅特效带头像pc */
@property(nonatomic, readwrite, copy, null_resettable) NSString *enterRoomEffectIconPc;

/** 爵位进房横幅公屏pc */
@property(nonatomic, readwrite, copy, null_resettable) NSString *enterRoomScreenPc;

@end

#pragma mark - PB3NobilityPrice

typedef GPB_ENUM(PB3NobilityPrice_FieldNumber) {
  PB3NobilityPrice_FieldNumber_Id_p = 1,
  PB3NobilityPrice_FieldNumber_Price = 2,
  PB3NobilityPrice_FieldNumber_Amount = 3,
  PB3NobilityPrice_FieldNumber_PresentGold = 4,
  PB3NobilityPrice_FieldNumber_ValidDays = 5,
  PB3NobilityPrice_FieldNumber_ShowPrice = 6,
  PB3NobilityPrice_FieldNumber_ShowUnitName = 7,
  PB3NobilityPrice_FieldNumber_ShowGold = 8,
  PB3NobilityPrice_FieldNumber_ShowGoldUnitName = 9,
  PB3NobilityPrice_FieldNumber_ShowPresentGold = 10,
  PB3NobilityPrice_FieldNumber_ShowPresentUnitName = 11,
  PB3NobilityPrice_FieldNumber_PriceType = 12,
};

@interface PB3NobilityPrice : GPBMessage

/** 价格ID */
@property(nonatomic, readwrite) int32_t id_p;

/** 价格，金币 */
@property(nonatomic, readwrite) int32_t price;

/** 价格，人民币（分） */
@property(nonatomic, readwrite) int32_t amount;

/** 赠送金币 */
@property(nonatomic, readwrite) int32_t presentGold;

/** 实际的天数 */
@property(nonatomic, readwrite) int32_t validDays;

/** 展示价格（人民币） 如 3.8 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *showPrice;

/** 展示的单位（人民币） 万元/月 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *showUnitName;

/** 展示价格（金币） */
@property(nonatomic, readwrite, copy, null_resettable) NSString *showGold;

/** 展示的单位（金币） 万元/月 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *showGoldUnitName;

/** 展示赠送的金币 2 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *showPresentGold;

/** 展示的单位 万金币 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *showPresentUnitName;

/** 价格类型 */
@property(nonatomic, readwrite) PB3NobilityPriceType priceType;

@end

/**
 * Fetches the raw value of a @c PB3NobilityPrice's @c priceType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3NobilityPrice_PriceType_RawValue(PB3NobilityPrice *message);
/**
 * Sets the raw value of an @c PB3NobilityPrice's @c priceType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3NobilityPrice_PriceType_RawValue(PB3NobilityPrice *message, int32_t value);

#pragma mark - PB3NobilityPrivilegeConf

typedef GPB_ENUM(PB3NobilityPrivilegeConf_FieldNumber) {
  PB3NobilityPrivilegeConf_FieldNumber_PrivilegeId = 1,
  PB3NobilityPrivilegeConf_FieldNumber_Name = 2,
  PB3NobilityPrivilegeConf_FieldNumber_Icon = 3,
  PB3NobilityPrivilegeConf_FieldNumber_Route = 4,
  PB3NobilityPrivilegeConf_FieldNumber_Description_p = 5,
  PB3NobilityPrivilegeConf_FieldNumber_SetIcon = 6,
  PB3NobilityPrivilegeConf_FieldNumber_GrayIcon = 7,
};

@interface PB3NobilityPrivilegeConf : GPBMessage

/** 爵位特权ID，与上面的PrivilegeType对应 */
@property(nonatomic, readwrite) int32_t privilegeId;

/** 爵位特权名称PrivilegeType 对应 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

@property(nonatomic, readwrite, copy, null_resettable) NSString *route;

/** 简介 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

/** 特权设置里的icon */
@property(nonatomic, readwrite, copy, null_resettable) NSString *setIcon;

/** 购买页爵位没有的特权icon */
@property(nonatomic, readwrite, copy, null_resettable) NSString *grayIcon;

@end

#pragma mark - PB3GetNobilityConfReq

typedef GPB_ENUM(PB3GetNobilityConfReq_FieldNumber) {
  PB3GetNobilityConfReq_FieldNumber_Md5 = 1,
};

/**
 * 获取爵位基础配置
 **/
@interface PB3GetNobilityConfReq : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *md5;

@end

#pragma mark - PB3GetNobilityConfRes

typedef GPB_ENUM(PB3GetNobilityConfRes_FieldNumber) {
  PB3GetNobilityConfRes_FieldNumber_NobilityConfArray = 1,
  PB3GetNobilityConfRes_FieldNumber_PrivilegeConfListArray = 2,
  PB3GetNobilityConfRes_FieldNumber_Md5 = 3,
  PB3GetNobilityConfRes_FieldNumber_NameListArray = 4,
  PB3GetNobilityConfRes_FieldNumber_PhotoListArray = 5,
  PB3GetNobilityConfRes_FieldNumber_MinorsSwitch = 6,
};

@interface PB3GetNobilityConfRes : GPBMessage

/** 爵位配置 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3NobilityConf*> *nobilityConfArray;
/** The number of items in @c nobilityConfArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger nobilityConfArray_Count;

/** 特权配置 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3NobilityPrivilegeConf*> *privilegeConfListArray;
/** The number of items in @c privilegeConfListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger privilegeConfListArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *md5;

/** 马甲名称配置 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3MaskName*> *nameListArray;
/** The number of items in @c nameListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger nameListArray_Count;

/** 马甲头像配置 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3MaskPhoto*> *photoListArray;
/** The number of items in @c photoListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger photoListArray_Count;

/** 未成年开关 */
@property(nonatomic, readwrite) BOOL minorsSwitch;

@end

#pragma mark - PB3BuyNobilityReq

typedef GPB_ENUM(PB3BuyNobilityReq_FieldNumber) {
  PB3BuyNobilityReq_FieldNumber_NobilityId = 1,
  PB3BuyNobilityReq_FieldNumber_BuyType = 2,
  PB3BuyNobilityReq_FieldNumber_PayType = 3,
  PB3BuyNobilityReq_FieldNumber_Price = 4,
  PB3BuyNobilityReq_FieldNumber_RoomId = 5,
  PB3BuyNobilityReq_FieldNumber_BenefitId = 6,
  PB3BuyNobilityReq_FieldNumber_BuyGoldType = 7,
  PB3BuyNobilityReq_FieldNumber_Coupon = 8,
};

/**
 * 购买爵位
 **/
@interface PB3BuyNobilityReq : GPBMessage

/** 爵位ID */
@property(nonatomic, readwrite) int32_t nobilityId;

/** 购买类型 */
@property(nonatomic, readwrite) PB3BuyNobilityType buyType;

/** 支付类型 */
@property(nonatomic, readwrite) PB3PayNobilityType payType;

/** 购买价格 */
@property(nonatomic, readwrite, strong, null_resettable) PB3NobilityPrice *price;
/** Test to see if @c price has been set. */
@property(nonatomic, readwrite) BOOL hasPrice;

/** 房间ID */
@property(nonatomic, readwrite) int64_t roomId;

/** 受益人ID */
@property(nonatomic, readwrite) int64_t benefitId;

/** 金币购买是传 */
@property(nonatomic, readwrite) PB3BuyNobilityGoldType buyGoldType;

/** 优惠券 */
@property(nonatomic, readwrite, strong, null_resettable) PB3CouponUsedData *coupon;
/** Test to see if @c coupon has been set. */
@property(nonatomic, readwrite) BOOL hasCoupon;

@end

/**
 * Fetches the raw value of a @c PB3BuyNobilityReq's @c buyType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BuyNobilityReq_BuyType_RawValue(PB3BuyNobilityReq *message);
/**
 * Sets the raw value of an @c PB3BuyNobilityReq's @c buyType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BuyNobilityReq_BuyType_RawValue(PB3BuyNobilityReq *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3BuyNobilityReq's @c payType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BuyNobilityReq_PayType_RawValue(PB3BuyNobilityReq *message);
/**
 * Sets the raw value of an @c PB3BuyNobilityReq's @c payType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BuyNobilityReq_PayType_RawValue(PB3BuyNobilityReq *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3BuyNobilityReq's @c buyGoldType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BuyNobilityReq_BuyGoldType_RawValue(PB3BuyNobilityReq *message);
/**
 * Sets the raw value of an @c PB3BuyNobilityReq's @c buyGoldType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BuyNobilityReq_BuyGoldType_RawValue(PB3BuyNobilityReq *message, int32_t value);

#pragma mark - PB3BuyNobilityRes

typedef GPB_ENUM(PB3BuyNobilityRes_FieldNumber) {
  PB3BuyNobilityRes_FieldNumber_NobilityDynamic = 1,
};

@interface PB3BuyNobilityRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3NobilityDynamic *nobilityDynamic;
/** Test to see if @c nobilityDynamic has been set. */
@property(nonatomic, readwrite) BOOL hasNobilityDynamic;

@end

#pragma mark - PB3PlayerNobilityInfo

typedef GPB_ENUM(PB3PlayerNobilityInfo_FieldNumber) {
  PB3PlayerNobilityInfo_FieldNumber_NobilityId = 1,
  PB3PlayerNobilityInfo_FieldNumber_CreateAt = 2,
  PB3PlayerNobilityInfo_FieldNumber_Status = 3,
  PB3PlayerNobilityInfo_FieldNumber_EndAt = 4,
  PB3PlayerNobilityInfo_FieldNumber_ProtectAt = 5,
  PB3PlayerNobilityInfo_FieldNumber_OpenDays = 6,
  PB3PlayerNobilityInfo_FieldNumber_ShowEndAt = 7,
  PB3PlayerNobilityInfo_FieldNumber_ProtectDays = 8,
  PB3PlayerNobilityInfo_FieldNumber_Level = 9,
};

@interface PB3PlayerNobilityInfo : GPBMessage

/** 爵位ID */
@property(nonatomic, readwrite) int32_t nobilityId;

/** 开通时间: 单位秒 */
@property(nonatomic, readwrite) int64_t createAt;

/** 爵位状态 */
@property(nonatomic, readwrite) PB3PlayerNobilityStatus status;

/** 到期时间：单位秒 */
@property(nonatomic, readwrite) int64_t endAt;

/** 保护期到期时间：单位秒 */
@property(nonatomic, readwrite) int64_t protectAt;

/** 开通天数 */
@property(nonatomic, readwrite) int32_t openDays;

/** 显示给用户看的到期时间 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *showEndAt;

/** 剩余保护天数 */
@property(nonatomic, readwrite) int32_t protectDays;

/** 爵位等级 */
@property(nonatomic, readwrite) int32_t level;

@end

/**
 * Fetches the raw value of a @c PB3PlayerNobilityInfo's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3PlayerNobilityInfo_Status_RawValue(PB3PlayerNobilityInfo *message);
/**
 * Sets the raw value of an @c PB3PlayerNobilityInfo's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3PlayerNobilityInfo_Status_RawValue(PB3PlayerNobilityInfo *message, int32_t value);

#pragma mark - PB3PlayerNobilityInfoReq

typedef GPB_ENUM(PB3PlayerNobilityInfoReq_FieldNumber) {
  PB3PlayerNobilityInfoReq_FieldNumber_PlayerId = 1,
};

/**
 * 获取玩家正在使用的爵位信息
 **/
@interface PB3PlayerNobilityInfoReq : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

@end

#pragma mark - PB3PlayerNobilityInfoRes

typedef GPB_ENUM(PB3PlayerNobilityInfoRes_FieldNumber) {
  PB3PlayerNobilityInfoRes_FieldNumber_NobilityInfo = 1,
  PB3PlayerNobilityInfoRes_FieldNumber_MaskInfo = 2,
};

@interface PB3PlayerNobilityInfoRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3PlayerNobilityInfo *nobilityInfo;
/** Test to see if @c nobilityInfo has been set. */
@property(nonatomic, readwrite) BOOL hasNobilityInfo;

/** 马甲信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3MaskInfo *maskInfo;
/** Test to see if @c maskInfo has been set. */
@property(nonatomic, readwrite) BOOL hasMaskInfo;

@end

#pragma mark - PB3PlayerNobilityInfoListReq

/**
 * 获取所有拥有的爵位信息
 **/
@interface PB3PlayerNobilityInfoListReq : GPBMessage

@end

#pragma mark - PB3PlayerNobilityInfoListRes

typedef GPB_ENUM(PB3PlayerNobilityInfoListRes_FieldNumber) {
  PB3PlayerNobilityInfoListRes_FieldNumber_ListArray = 1,
};

@interface PB3PlayerNobilityInfoListRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3PlayerNobilityInfo*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3NobilityPrivilege

typedef GPB_ENUM(PB3NobilityPrivilege_FieldNumber) {
  PB3NobilityPrivilege_FieldNumber_Privilege = 1,
  PB3NobilityPrivilege_FieldNumber_IsCustomSet = 2,
  PB3NobilityPrivilege_FieldNumber_SetType = 3,
  PB3NobilityPrivilege_FieldNumber_Status = 4,
  PB3NobilityPrivilege_FieldNumber_Tips = 5,
  PB3NobilityPrivilege_FieldNumber_DataType = 6,
  PB3NobilityPrivilege_FieldNumber_ExtraData = 7,
  PB3NobilityPrivilege_FieldNumber_ShowArrow = 8,
  PB3NobilityPrivilege_FieldNumber_Img = 9,
};

@interface PB3NobilityPrivilege : GPBMessage

/** 特权 */
@property(nonatomic, readwrite, strong, null_resettable) PB3NobilityPrivilegeConf *privilege;
/** Test to see if @c privilege has been set. */
@property(nonatomic, readwrite) BOOL hasPrivilege;

/** 是否支持自定义设置 */
@property(nonatomic, readwrite) BOOL isCustomSet;

/** 设置类型 */
@property(nonatomic, readwrite) PB3PrivilegeSetType setType;

/** bool类型的值 */
@property(nonatomic, readwrite) BOOL status;

/** 下面的小字介绍说明 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tips;

/** 数据类型 */
@property(nonatomic, readwrite) PB3PrivilegeSetDataType dataType;

/** 额外定义的数据，和客户端或服务端内部约定 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *extraData;

/** 是否显示右侧小箭头 */
@property(nonatomic, readwrite) BOOL showArrow;

/** 显示的图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *img;

@end

/**
 * Fetches the raw value of a @c PB3NobilityPrivilege's @c setType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3NobilityPrivilege_SetType_RawValue(PB3NobilityPrivilege *message);
/**
 * Sets the raw value of an @c PB3NobilityPrivilege's @c setType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3NobilityPrivilege_SetType_RawValue(PB3NobilityPrivilege *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3NobilityPrivilege's @c dataType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3NobilityPrivilege_DataType_RawValue(PB3NobilityPrivilege *message);
/**
 * Sets the raw value of an @c PB3NobilityPrivilege's @c dataType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3NobilityPrivilege_DataType_RawValue(PB3NobilityPrivilege *message, int32_t value);

#pragma mark - PB3NobilityPrivilegeReq

/**
 * 我的特权设置项
 **/
@interface PB3NobilityPrivilegeReq : GPBMessage

@end

#pragma mark - PB3NobilityPrivilegeRes

typedef GPB_ENUM(PB3NobilityPrivilegeRes_FieldNumber) {
  PB3NobilityPrivilegeRes_FieldNumber_ListArray = 1,
};

@interface PB3NobilityPrivilegeRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3NobilityPrivilege*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3UpdateMaskInfoReq

typedef GPB_ENUM(PB3UpdateMaskInfoReq_FieldNumber) {
  PB3UpdateMaskInfoReq_FieldNumber_MaskNameId = 1,
  PB3UpdateMaskInfoReq_FieldNumber_MaskIconId = 2,
};

/**
 * 更新马甲信息
 **/
@interface PB3UpdateMaskInfoReq : GPBMessage

/** 马甲名称ID */
@property(nonatomic, readwrite) int32_t maskNameId;

/** 马甲头像ID */
@property(nonatomic, readwrite) int32_t maskIconId;

@end

#pragma mark - PB3UpdateMaskInfoRes

@interface PB3UpdateMaskInfoRes : GPBMessage

@end

#pragma mark - PB3UpdateBoolPrivilegeReq

typedef GPB_ENUM(PB3UpdateBoolPrivilegeReq_FieldNumber) {
  PB3UpdateBoolPrivilegeReq_FieldNumber_PrivilegeId = 1,
  PB3UpdateBoolPrivilegeReq_FieldNumber_Status = 2,
};

/**
 * 修改特权(bool类型的设置)
 **/
@interface PB3UpdateBoolPrivilegeReq : GPBMessage

@property(nonatomic, readwrite) int32_t privilegeId;

@property(nonatomic, readwrite) BOOL status;

@end

#pragma mark - PB3UpdateBoolPrivilegeRes

@interface PB3UpdateBoolPrivilegeRes : GPBMessage

@end

#pragma mark - PB3NobilityDynamic

typedef GPB_ENUM(PB3NobilityDynamic_FieldNumber) {
  PB3NobilityDynamic_FieldNumber_NobilityId = 1,
  PB3NobilityDynamic_FieldNumber_PlayerId = 2,
  PB3NobilityDynamic_FieldNumber_Id2 = 3,
  PB3NobilityDynamic_FieldNumber_Name = 4,
  PB3NobilityDynamic_FieldNumber_Icon = 5,
  PB3NobilityDynamic_FieldNumber_BuyType = 6,
  PB3NobilityDynamic_FieldNumber_Msg = 7,
  PB3NobilityDynamic_FieldNumber_RoomId = 8,
  PB3NobilityDynamic_FieldNumber_OrderId = 9,
};

@interface PB3NobilityDynamic : GPBMessage

/** 爵位ID */
@property(nonatomic, readwrite) int32_t nobilityId;

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 靓号 */
@property(nonatomic, readwrite) int64_t id2;

/** 昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 1 开通，2 续费，3 升级 */
@property(nonatomic, readwrite) PB3BuyNobilityType buyType;

/** 公屏内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;

/** 玩家房间ID */
@property(nonatomic, readwrite) int64_t roomId;

/** 购买爵位的唯一订单ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *orderId;

@end

/**
 * Fetches the raw value of a @c PB3NobilityDynamic's @c buyType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3NobilityDynamic_BuyType_RawValue(PB3NobilityDynamic *message);
/**
 * Sets the raw value of an @c PB3NobilityDynamic's @c buyType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3NobilityDynamic_BuyType_RawValue(PB3NobilityDynamic *message, int32_t value);

#pragma mark - PB3UpdatePrivilege

typedef GPB_ENUM(PB3UpdatePrivilege_FieldNumber) {
  PB3UpdatePrivilege_FieldNumber_PrivilegeId = 1,
  PB3UpdatePrivilege_FieldNumber_Status = 2,
  PB3UpdatePrivilege_FieldNumber_PlayerId = 3,
};

@interface PB3UpdatePrivilege : GPBMessage

@property(nonatomic, readwrite) int32_t privilegeId;

@property(nonatomic, readwrite) BOOL status;

@property(nonatomic, readwrite) int64_t playerId;

@end

#pragma mark - PB3NoticeUpdateMask

typedef GPB_ENUM(PB3NoticeUpdateMask_FieldNumber) {
  PB3NoticeUpdateMask_FieldNumber_MaskInfo = 1,
};

@interface PB3NoticeUpdateMask : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3MaskInfo *maskInfo;
/** Test to see if @c maskInfo has been set. */
@property(nonatomic, readwrite) BOOL hasMaskInfo;

@end

#pragma mark - PB3NoticeNobility

typedef GPB_ENUM(PB3NoticeNobility_FieldNumber) {
  PB3NoticeNobility_FieldNumber_NobilityInfo = 1,
  PB3NoticeNobility_FieldNumber_MaskInfo = 2,
  PB3NoticeNobility_FieldNumber_PlayerId = 3,
};

@interface PB3NoticeNobility : GPBMessage

/** 新的爵位信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3PlayerNobilityInfo *nobilityInfo;
/** Test to see if @c nobilityInfo has been set. */
@property(nonatomic, readwrite) BOOL hasNobilityInfo;

/** 马甲信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3MaskInfo *maskInfo;
/** Test to see if @c maskInfo has been set. */
@property(nonatomic, readwrite) BOOL hasMaskInfo;

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId;

@end

#pragma mark - PB3RoomNobilityInfo

typedef GPB_ENUM(PB3RoomNobilityInfo_FieldNumber) {
  PB3RoomNobilityInfo_FieldNumber_MaskInfo = 1,
  PB3RoomNobilityInfo_FieldNumber_OpenNobilityAt = 2,
  PB3RoomNobilityInfo_FieldNumber_IsStealthEnter = 3,
  PB3RoomNobilityInfo_FieldNumber_IsStealthSit = 4,
  PB3RoomNobilityInfo_FieldNumber_NobilityId = 5,
  PB3RoomNobilityInfo_FieldNumber_Level = 6,
  PB3RoomNobilityInfo_FieldNumber_ChairId = 7,
};

@interface PB3RoomNobilityInfo : GPBMessage

/** 马甲信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3MaskInfo *maskInfo;
/** Test to see if @c maskInfo has been set. */
@property(nonatomic, readwrite) BOOL hasMaskInfo;

/** 爵位开通时间 */
@property(nonatomic, readwrite) int64_t openNobilityAt;

/** 是否隐身进房 */
@property(nonatomic, readwrite) BOOL isStealthEnter;

/** 是否匿名上麦 */
@property(nonatomic, readwrite) BOOL isStealthSit;

/** 爵位ID */
@property(nonatomic, readwrite) int32_t nobilityId;

/** 爵位等级 */
@property(nonatomic, readwrite) int32_t level;

/** 所在麦位id */
@property(nonatomic, readwrite) int32_t chairId;

@end

#pragma mark - PB3HallOfFame

typedef GPB_ENUM(PB3HallOfFame_FieldNumber) {
  PB3HallOfFame_FieldNumber_PlayerId = 1,
  PB3HallOfFame_FieldNumber_Name = 2,
  PB3HallOfFame_FieldNumber_Icon = 3,
  PB3HallOfFame_FieldNumber_JoinTimestamp = 4,
  PB3HallOfFame_FieldNumber_JoinDays = 5,
  PB3HallOfFame_FieldNumber_NobilityId = 6,
};

@interface PB3HallOfFame : GPBMessage

/** 玩家id */
@property(nonatomic, readwrite) int64_t playerId;

/** 玩家昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 玩家头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 加入名人堂时间 */
@property(nonatomic, readwrite) int64_t joinTimestamp;

/** 已经加入了多少天，累计的 */
@property(nonatomic, readwrite) int32_t joinDays;

/** 爵位id */
@property(nonatomic, readwrite) int32_t nobilityId;

@end

#pragma mark - PB3HallOfFameReq

typedef GPB_ENUM(PB3HallOfFameReq_FieldNumber) {
  PB3HallOfFameReq_FieldNumber_Page = 1,
};

@interface PB3HallOfFameReq : GPBMessage

/** 分页，每页50个 */
@property(nonatomic, readwrite) int32_t page;

@end

#pragma mark - PB3HallOfFameRes

typedef GPB_ENUM(PB3HallOfFameRes_FieldNumber) {
  PB3HallOfFameRes_FieldNumber_FamousArray = 1,
  PB3HallOfFameRes_FieldNumber_MyNobility = 2,
  PB3HallOfFameRes_FieldNumber_SumFamous = 3,
};

@interface PB3HallOfFameRes : GPBMessage

/** 名人堂列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3HallOfFame*> *famousArray;
/** The number of items in @c famousArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger famousArray_Count;

/** 我的名人堂信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3HallOfFame *myNobility;
/** Test to see if @c myNobility has been set. */
@property(nonatomic, readwrite) BOOL hasMyNobility;

/** 名人堂总数 */
@property(nonatomic, readwrite) int32_t sumFamous;

@end

#pragma mark - PB3RoomRankMaskSetReq

typedef GPB_ENUM(PB3RoomRankMaskSetReq_FieldNumber) {
  PB3RoomRankMaskSetReq_FieldNumber_Oper = 1,
  PB3RoomRankMaskSetReq_FieldNumber_RoomIdsArray = 2,
};

@interface PB3RoomRankMaskSetReq : GPBMessage

@property(nonatomic, readwrite) enum PB3CommonOperType oper;

/** 房间榜单隐身的房间列表 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *roomIdsArray;
/** The number of items in @c roomIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger roomIdsArray_Count;

@end

/**
 * Fetches the raw value of a @c PB3RoomRankMaskSetReq's @c oper property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3RoomRankMaskSetReq_Oper_RawValue(PB3RoomRankMaskSetReq *message);
/**
 * Sets the raw value of an @c PB3RoomRankMaskSetReq's @c oper property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3RoomRankMaskSetReq_Oper_RawValue(PB3RoomRankMaskSetReq *message, int32_t value);

#pragma mark - PB3RoomRankMaskSetRes

@interface PB3RoomRankMaskSetRes : GPBMessage

@end

#pragma mark - PB3RoomRankMaskListReq

@interface PB3RoomRankMaskListReq : GPBMessage

@end

#pragma mark - PB3RoomRankMaskListRes

typedef GPB_ENUM(PB3RoomRankMaskListRes_FieldNumber) {
  PB3RoomRankMaskListRes_FieldNumber_RoomsArray = 1,
};

@interface PB3RoomRankMaskListRes : GPBMessage

/** 房间榜单隐身的房间列表UpdateBoolPrivilege */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3MaskRoomInfo*> *roomsArray;
/** The number of items in @c roomsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger roomsArray_Count;

@end

#pragma mark - PB3MaskRoomInfo

typedef GPB_ENUM(PB3MaskRoomInfo_FieldNumber) {
  PB3MaskRoomInfo_FieldNumber_Id_p = 1,
  PB3MaskRoomInfo_FieldNumber_Icon = 2,
  PB3MaskRoomInfo_FieldNumber_Name = 3,
  PB3MaskRoomInfo_FieldNumber_Greeting = 4,
};

@interface PB3MaskRoomInfo : GPBMessage

/** 房间id */
@property(nonatomic, readwrite) int64_t id_p;

/** 头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 房间名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 简介 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *greeting;

@end

#pragma mark - PB3MaskName

typedef GPB_ENUM(PB3MaskName_FieldNumber) {
  PB3MaskName_FieldNumber_Id_p = 1,
  PB3MaskName_FieldNumber_Name = 2,
  PB3MaskName_FieldNumber_IsDefault = 3,
};

@interface PB3MaskName : GPBMessage

@property(nonatomic, readwrite) int32_t id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 是否默认 */
@property(nonatomic, readwrite) BOOL isDefault;

@end

#pragma mark - PB3MaskPhoto

typedef GPB_ENUM(PB3MaskPhoto_FieldNumber) {
  PB3MaskPhoto_FieldNumber_Id_p = 1,
  PB3MaskPhoto_FieldNumber_Icon = 2,
  PB3MaskPhoto_FieldNumber_DynamicImg = 3,
  PB3MaskPhoto_FieldNumber_Name = 4,
  PB3MaskPhoto_FieldNumber_IsDefault = 5,
};

@interface PB3MaskPhoto : GPBMessage

@property(nonatomic, readwrite) int32_t id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

@property(nonatomic, readwrite, copy, null_resettable) NSString *dynamicImg;

/** 头像的名字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 是否默认 */
@property(nonatomic, readwrite) BOOL isDefault;

@end

#pragma mark - PB3BuyNobilityLogReq

typedef GPB_ENUM(PB3BuyNobilityLogReq_FieldNumber) {
  PB3BuyNobilityLogReq_FieldNumber_Index = 1,
};

@interface PB3BuyNobilityLogReq : GPBMessage

@property(nonatomic, readwrite) int32_t index;

@end

#pragma mark - PB3BuyNobilityLogRes

typedef GPB_ENUM(PB3BuyNobilityLogRes_FieldNumber) {
  PB3BuyNobilityLogRes_FieldNumber_ListArray = 1,
  PB3BuyNobilityLogRes_FieldNumber_NextIndex = 2,
};

@interface PB3BuyNobilityLogRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3NobilityLog*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@property(nonatomic, readwrite) int32_t nextIndex;

@end

#pragma mark - PB3NobilityLog

typedef GPB_ENUM(PB3NobilityLog_FieldNumber) {
  PB3NobilityLog_FieldNumber_NobilityId = 1,
  PB3NobilityLog_FieldNumber_BuyType = 2,
  PB3NobilityLog_FieldNumber_Num = 3,
  PB3NobilityLog_FieldNumber_PayType = 4,
  PB3NobilityLog_FieldNumber_BuyGold = 5,
  PB3NobilityLog_FieldNumber_RefundGold = 6,
  PB3NobilityLog_FieldNumber_BuyTime = 7,
  PB3NobilityLog_FieldNumber_EndTime = 8,
  PB3NobilityLog_FieldNumber_Status = 9,
  PB3NobilityLog_FieldNumber_BuyRmb = 10,
};

@interface PB3NobilityLog : GPBMessage

/** 爵位ID */
@property(nonatomic, readwrite) int32_t nobilityId;

/** 购买类型 */
@property(nonatomic, readwrite) PB3BuyNobilityType buyType;

/** 数量 */
@property(nonatomic, readwrite) int32_t num;

/** 支付类型 */
@property(nonatomic, readwrite) PB3PayNobilityType payType;

/** 购买花费的人金币 */
@property(nonatomic, readwrite) int64_t buyGold;

/** 返回的金币 */
@property(nonatomic, readwrite) int64_t refundGold;

/** 购买的时间 */
@property(nonatomic, readwrite) int64_t buyTime;

/** 到期时间 */
@property(nonatomic, readwrite) int64_t endTime;

/** 状态 */
@property(nonatomic, readwrite) PB3PlayerNobilityStatus status;

/** 购买花费的人民币 */
@property(nonatomic, readwrite) int64_t buyRmb;

@end

/**
 * Fetches the raw value of a @c PB3NobilityLog's @c buyType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3NobilityLog_BuyType_RawValue(PB3NobilityLog *message);
/**
 * Sets the raw value of an @c PB3NobilityLog's @c buyType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3NobilityLog_BuyType_RawValue(PB3NobilityLog *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3NobilityLog's @c payType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3NobilityLog_PayType_RawValue(PB3NobilityLog *message);
/**
 * Sets the raw value of an @c PB3NobilityLog's @c payType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3NobilityLog_PayType_RawValue(PB3NobilityLog *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3NobilityLog's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3NobilityLog_Status_RawValue(PB3NobilityLog *message);
/**
 * Sets the raw value of an @c PB3NobilityLog's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3NobilityLog_Status_RawValue(PB3NobilityLog *message, int32_t value);

#pragma mark - PB3MinNobilityReq

typedef GPB_ENUM(PB3MinNobilityReq_FieldNumber) {
  PB3MinNobilityReq_FieldNumber_PrivilegeId = 2,
};

@interface PB3MinNobilityReq : GPBMessage

@property(nonatomic, readwrite) int32_t privilegeId;

@end

#pragma mark - PB3MinNobilityRes

typedef GPB_ENUM(PB3MinNobilityRes_FieldNumber) {
  PB3MinNobilityRes_FieldNumber_NobilityId = 1,
};

@interface PB3MinNobilityRes : GPBMessage

@property(nonatomic, readwrite) int32_t nobilityId;

@end

#pragma mark - PB3FollowToRoomReq

/**
 * 请求防跟踪进房设置
 **/
@interface PB3FollowToRoomReq : GPBMessage

@end

#pragma mark - PB3FollowToRoomRes

typedef GPB_ENUM(PB3FollowToRoomRes_FieldNumber) {
  PB3FollowToRoomRes_FieldNumber_BanFollowMe = 1,
  PB3FollowToRoomRes_FieldNumber_FriendFollow = 2,
};

@interface PB3FollowToRoomRes : GPBMessage

/** true 则开启防跟踪踩房 */
@property(nonatomic, readwrite) BOOL banFollowMe;

/** true 则我的好友可以跟踪踩房 */
@property(nonatomic, readwrite) BOOL friendFollow;

@end

#pragma mark - PB3SetFollowToRoomReq

typedef GPB_ENUM(PB3SetFollowToRoomReq_FieldNumber) {
  PB3SetFollowToRoomReq_FieldNumber_BanFollowMe = 1,
  PB3SetFollowToRoomReq_FieldNumber_FriendFollow = 2,
};

/**
 * 防跟踪进房设置
 **/
@interface PB3SetFollowToRoomReq : GPBMessage

/** true 则开启防跟踪踩房 */
@property(nonatomic, readwrite) BOOL banFollowMe;

/** true 则我的好友可以跟踪踩房 */
@property(nonatomic, readwrite) BOOL friendFollow;

@end

#pragma mark - PB3SetFollowToRoomRes

@interface PB3SetFollowToRoomRes : GPBMessage

@end

#pragma mark - PB3CustomerServiceReq

@interface PB3CustomerServiceReq : GPBMessage

@end

#pragma mark - PB3CustomerServiceRes

typedef GPB_ENUM(PB3CustomerServiceRes_FieldNumber) {
  PB3CustomerServiceRes_FieldNumber_Name = 1,
  PB3CustomerServiceRes_FieldNumber_Icon = 2,
  PB3CustomerServiceRes_FieldNumber_Description_p = 3,
  PB3CustomerServiceRes_FieldNumber_Route = 4,
};

@interface PB3CustomerServiceRes : GPBMessage

/** 客服名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 客服头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 描述 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

/** 连接 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *route;

@end

#pragma mark - PB3OpenNobilityPopItem

typedef GPB_ENUM(PB3OpenNobilityPopItem_FieldNumber) {
  PB3OpenNobilityPopItem_FieldNumber_Title = 1,
  PB3OpenNobilityPopItem_FieldNumber_Msg = 2,
  PB3OpenNobilityPopItem_FieldNumber_Background = 3,
  PB3OpenNobilityPopItem_FieldNumber_Image = 4,
};

@interface PB3OpenNobilityPopItem : GPBMessage

/** 标题 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** 描述 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;

/** 背景图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *background;

/** 图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *image;

@end

#pragma mark - PB3AfterOpenNobilityPopReq

typedef GPB_ENUM(PB3AfterOpenNobilityPopReq_FieldNumber) {
  PB3AfterOpenNobilityPopReq_FieldNumber_OrderId = 1,
};

@interface PB3AfterOpenNobilityPopReq : GPBMessage

/** 爵位动画推送 NobilityDynamic里的order_id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *orderId;

@end

#pragma mark - PB3AfterOpenNobilityPopRes

typedef GPB_ENUM(PB3AfterOpenNobilityPopRes_FieldNumber) {
  PB3AfterOpenNobilityPopRes_FieldNumber_ListArray = 1,
};

@interface PB3AfterOpenNobilityPopRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3OpenNobilityPopItem*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3NobilityRoomRewardReq

typedef GPB_ENUM(PB3NobilityRoomRewardReq_FieldNumber) {
  PB3NobilityRoomRewardReq_FieldNumber_Index = 1,
};

@interface PB3NobilityRoomRewardReq : GPBMessage

/** 开始传0，之后用后台返回的next_index */
@property(nonatomic, readwrite) int32_t index;

@end

#pragma mark - PB3NobilityRoomRewardRes

typedef GPB_ENUM(PB3NobilityRoomRewardRes_FieldNumber) {
  PB3NobilityRoomRewardRes_FieldNumber_NextIndex = 1,
  PB3NobilityRoomRewardRes_FieldNumber_ListArray = 2,
};

@interface PB3NobilityRoomRewardRes : GPBMessage

/** 下一页的索引 */
@property(nonatomic, readwrite) int32_t nextIndex;

/** 总收益 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3RoomRewardItem*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3RoomRewardItem

typedef GPB_ENUM(PB3RoomRewardItem_FieldNumber) {
  PB3RoomRewardItem_FieldNumber_PlayerId = 1,
  PB3RoomRewardItem_FieldNumber_PlayerId2 = 2,
  PB3RoomRewardItem_FieldNumber_Name = 3,
  PB3RoomRewardItem_FieldNumber_Icon = 4,
  PB3RoomRewardItem_FieldNumber_Sex = 5,
  PB3RoomRewardItem_FieldNumber_CreateAt = 6,
  PB3RoomRewardItem_FieldNumber_Tick = 7,
  PB3RoomRewardItem_FieldNumber_BuyType = 8,
  PB3RoomRewardItem_FieldNumber_NobilityName = 9,
  PB3RoomRewardItem_FieldNumber_Day = 10,
  PB3RoomRewardItem_FieldNumber_BenefitId = 11,
  PB3RoomRewardItem_FieldNumber_BenefitId2 = 12,
  PB3RoomRewardItem_FieldNumber_BenefitName = 13,
};

@interface PB3RoomRewardItem : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

@property(nonatomic, readwrite) int64_t playerId2;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

@property(nonatomic, readwrite) enum PB3SexType sex;

/** 开通日期 */
@property(nonatomic, readwrite) int64_t createAt;

/** 返还钻石 */
@property(nonatomic, readwrite) int64_t tick;

/** 购买类型 */
@property(nonatomic, readwrite) PB3BuyNobilityType buyType;

/** 爵位名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nobilityName;

/** 开通天数 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *day;

/** 推荐人ID */
@property(nonatomic, readwrite) int64_t benefitId;

/** 推荐人ID2 */
@property(nonatomic, readwrite) int64_t benefitId2;

/** 推荐人名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *benefitName;

@end

/**
 * Fetches the raw value of a @c PB3RoomRewardItem's @c sex property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3RoomRewardItem_Sex_RawValue(PB3RoomRewardItem *message);
/**
 * Sets the raw value of an @c PB3RoomRewardItem's @c sex property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3RoomRewardItem_Sex_RawValue(PB3RoomRewardItem *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3RoomRewardItem's @c buyType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3RoomRewardItem_BuyType_RawValue(PB3RoomRewardItem *message);
/**
 * Sets the raw value of an @c PB3RoomRewardItem's @c buyType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3RoomRewardItem_BuyType_RawValue(PB3RoomRewardItem *message, int32_t value);

#pragma mark - PB3NobilityGainReq

@interface PB3NobilityGainReq : GPBMessage

@end

#pragma mark - PB3NobilityGainRes

typedef GPB_ENUM(PB3NobilityGainRes_FieldNumber) {
  PB3NobilityGainRes_FieldNumber_NobilityGain = 1,
  PB3NobilityGainRes_FieldNumber_IsShow = 2,
};

@interface PB3NobilityGainRes : GPBMessage

/** 爵位总收益 */
@property(nonatomic, readwrite) int64_t nobilityGain;

/** 是否显示 */
@property(nonatomic, readwrite) BOOL isShow;

@end

#pragma mark - PB3GetNobilityConfCDNReq

@interface PB3GetNobilityConfCDNReq : GPBMessage

@end

#pragma mark - PB3GetNobilityConfCDNRes

typedef GPB_ENUM(PB3GetNobilityConfCDNRes_FieldNumber) {
  PB3GetNobilityConfCDNRes_FieldNumber_OssURL = 1,
};

@interface PB3GetNobilityConfCDNRes : GPBMessage

/** 用 GetNobilityConfRes 解析数据 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *ossURL;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
