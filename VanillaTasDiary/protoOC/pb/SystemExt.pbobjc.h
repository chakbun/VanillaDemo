// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pb/system.ext.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class PB3ActNewAwardInfo;
@class PB3ClientVer;
@class PB3CommonNoticeButton;
@class PB3CultivateAwardInfo;
@class PB3DialogButton;
@class PB3HitTicket;
@class PB3MagicCubismPush;
@class PB3NoticeStyleUrl;
@class PB3RoomAnimation;
@class PB3RoomBannerContentData;
@class PB3RoomBannerWelfareContent;
@class PB3RoomContributor;
@class PB3RoomRankMemberInfo;
@class PB3SimplePlayer;
@class PB3SystemNoticeEvent;
@class PB3SystemNoticeNeedCheckConf;
@class PB3TriggerPlayerInfo;
@class PB3WeekStarPlayer;
GPB_ENUM_FWD_DECLARE(PB3CpPublicNoticeStatus);
GPB_ENUM_FWD_DECLARE(PB3NoticeStyleType);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum PB3SystemCmdId

/** 系统cmdid */
typedef GPB_ENUM(PB3SystemCmdId) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3SystemCmdId_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3SystemCmdId_None101 = 0,

  /** SystemMsgNotice  系统消息, （后台短消息） SSC000011 */
  PB3SystemCmdId_SystemMsgCmdId = 101001,

  /** SystemMsgNotice  系统公告，显示在聊天频道 */
  PB3SystemCmdId_SystemNoticeCmdId = 101002,

  /** SystemMsgNotice  管理后台主动提交客户端日志   SSC000271 */
  PB3SystemCmdId_SystemPushLogCmdId = 101003,

  /** MaintenanceMsgNotice  系统维护信息    SSC000080 */
  PB3SystemCmdId_SystemMaintenanceCmdId = 101004,

  /** 广播收到新邮件 */
  PB3SystemCmdId_SystemMail = 101005,

  /** 暂定 */
  PB3SystemCmdId_SystemAuthNameCmdId = 101006,

  /** 广播视频直播房间 0x000099(待优化) */
  PB3SystemCmdId_SystemRoomVideoURLCmdId = 101008,

  /** UpdateTabs 更新标签词条 SSC000034 */
  PB3SystemCmdId_SystemUpdateTabsCmdId = 101009,

  /** WeekStar 周星贺报 SSC000070 */
  PB3SystemCmdId_SystemWeekStar = 101010,

  /** TimerInfo 倒计时 SSC000361 */
  PB3SystemCmdId_SystemTimer = 101011,

  /** WeekStar通知：eg: [周星]新一轮周星活动开始报名啦，有意参加的主持、歌手、陪陪可以联系厅主，厅主再将名单提交给官方运营哦（限周一17:00前） */
  PB3SystemCmdId_SystemWeekStarNotice = 101012,

  /** SysConfUpdate */
  PB3SystemCmdId_SystemConfUpdate = 101013,

  /** 吐司内容SysToastMsg */
  PB3SystemCmdId_SystemToastCmdId = 101015,

  /** 公会变更通知 UpdateClanNotice */
  PB3SystemCmdId_ClanUpdate = 101020,

  /** 实名认证弹窗，通知客户端弹窗 */
  PB3SystemCmdId_NoticeCmdId = 101021,

  /** 通知审核结果 bill.ext.BroadcastBillCheckStatus */
  PB3SystemCmdId_BillCheckStatus = 101022,

  /** 通用弹窗通知 */
  PB3SystemCmdId_DialogPopupCmdId = 101023,

  /** PrivateChatMsg 通知用给另一个用户发私聊 */
  PB3SystemCmdId_PrivateChatCmdId = 101024,

  /** 砸蛋系统消息 */
  PB3SystemCmdId_CrackEggSystemMsgCmdId = 101025,

  /** 过期系统消息Id列表 */
  PB3SystemCmdId_OverdueSystemMsgCmdId = 101026,

  /** 客户端通用弹窗协议 */
  PB3SystemCmdId_CommonNoticeCmdId = 101027,

  /** 新系统公屏信息 */
  PB3SystemCmdId_NewSystemNoticeCmdId = 101028,

  /** 动态配置更新 */
  PB3SystemCmdId_DynConfUpdateCmdId = 101029,

  /** 推送删除广播交友信息 DelBFRecords */
  PB3SystemCmdId_NoticeDelBf = 101030,

  /** 新系统公屏信息，跑马灯 NewSystemNoticeMarquee */
  PB3SystemCmdId_NewSystemNoticeMarqueeCmdId = 101031,

  /** 活动数据 */
  PB3SystemCmdId_ActivityDataCmdId = 101032,

  /** 活动弹窗 */
  PB3SystemCmdId_ActivityPopCmdId = 101033,

  /** 活动榜单数据 */
  PB3SystemCmdId_ActivitySortCmdId = 101034,

  /** 横幅数据 */
  PB3SystemCmdId_RoomBannerDataCmdId = 101035,

  /** 横幅消息数据 */
  PB3SystemCmdId_RoomBannerMsgCmdId = 101036,

  /** 横幅宝箱数据 */
  PB3SystemCmdId_RoomBannerBoxCmdId = 101037,

  /** 事件宝箱推送 */
  PB3SystemCmdId_RoomEventRewardBoxCmdId = 101038,

  /** 友盟上报推送 */
  PB3SystemCmdId_UmengReportCmdId = 101039,

  /** 活动许愿夺宝结构 */
  PB3SystemCmdId_ActivityTreasureCmdId = 101040,

  /** 系统公屏信息，客户端需要根据个人检查是否显示（是否满足条件）SystemNoticeNeedCheck */
  PB3SystemCmdId_SystemNoticeNeedCheckCmdId = 101041,

  /** 活动额外奖励 */
  PB3SystemCmdId_ActivityPremiumsCmdId = 101042,

  /** 活动抽奖积分 */
  PB3SystemCmdId_ActivityLotteryPointCmdId = 101043,

  /** 限时福利 */
  PB3SystemCmdId_ActivityLimitedTimeWelfareCmdId = 101044,

  /** 定时在线福利开启 */
  PB3SystemCmdId_ActivityOnTimeWelfareCmdId = 101045,

  /** 事件宝箱开奖推送 */
  PB3SystemCmdId_RoomEventRewardBoxAwardCmdId = 101046,

  /** 赠送或索要物品推送 */
  PB3SystemCmdId_ActivityOnAskOrSendGiftCmdId = 101048,

  /** 盲盒状态更新推送 */
  PB3SystemCmdId_ActivityBlindLotteryUpdateCmdId = 101049,

  /** 同步操作 SyncOpt */
  PB3SystemCmdId_SystemSyncOpt = 101050,

  /** 活动排行榜更新推送 */
  PB3SystemCmdId_ActivityRankUpdateCmdId = 101051,

  /** 活动节目预告推送 */
  PB3SystemCmdId_RoomProgramNoticeCmdId = 101052,

  /** 横幅浪漫飘屏 */
  PB3SystemCmdId_RoomBannerWelfareCmdId = 101053,

  /** 告白位状态更新推送 */
  PB3SystemCmdId_ActivityCpPublicNoticeCmdId = 101054,

  /** 红包接龙活动游戏状态推送 PushRedEnvelopeStatus */
  PB3SystemCmdId_ActGameRedEnvelopeStatusCmdId = 101056,

  /** 抽奖幸运值中奖通知 */
  PB3SystemCmdId_ActivityLotteryPointRewardCmdId = 101057,

  /** 挖宝高爆模式切换推送 */
  PB3SystemCmdId_ActivityDigTreasureHighModelCmdId = 101058,

  /** 挖宝格子信息更新推送 */
  PB3SystemCmdId_ActivityDigTreasureGridDataUpdateCmdId = 101059,

  /** 推广员系统数据更新 */
  PB3SystemCmdId_PromoterRecallUpdateCmdId = 101060,

  /** 活动排行榜总分更新推送 */
  PB3SystemCmdId_ActivityRankScoreUpdateCmdId = 101061,

  /** 活动榜单阵营pk结果推送 */
  PB3SystemCmdId_ActivityRankPkResultCmdId = 101062,

  /** 代理调用服务器内部接口 */
  PB3SystemCmdId_SystemProxyInvokeIntServer = 101063,

  /** 排行榜分级展示 */
  PB3SystemCmdId_RankShowCmdId = 101064,

  /** 活动奖池升级 */
  PB3SystemCmdId_ActivityLotteryLevelUp = 101066,

  /** 信用分推送 CreditScoreInfoRes */
  PB3SystemCmdId_CreditScoreInfo = 101067,

  /** 挚友养成升降级推送 */
  PB3SystemCmdId_IntimateCultivateLevelUpdate = 101070,

  /** 有奖抢占推送 */
  PB3SystemCmdId_ActivityLotteryRaceCmdId = 101071,

  /** 长时间未短信验证 */
  PB3SystemCmdId_LongTimeNoConfirm = 101073,

  /** 福利更新推送 */
  PB3SystemCmdId_ActivityWelfareUpdateCmdId = 101074,

  /** 星象全服投注数据推送 */
  PB3SystemCmdId_ActivityConstellationStarSlotCmdId = 101078,

  /** 星象开奖结果推送 */
  PB3SystemCmdId_ActivityConstellationAwardNoticeCmdId = 101079,

  /** vip接入企微客服金额达标推送 VipWeixinCustomService */
  PB3SystemCmdId_WeixinVipCustomerServiceCmdId = 101087,

  /** 礼物拼图数据 */
  PB3SystemCmdId_JigsawDataCmdId = 101088,

  /** 奖券池开奖推送 */
  PB3SystemCmdId_ActivityPileUpDrawCmdId = 101089,

  /** 完成福利后，下发的奖券推送 */
  PB3SystemCmdId_ActivityPileUpIssueCmdId = 101090,
};

GPBEnumDescriptor *PB3SystemCmdId_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3SystemCmdId_IsValidValue(int32_t value);

#pragma mark - Enum PB3ReportEventType

/** 上报事件类型 */
typedef GPB_ENUM(PB3ReportEventType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ReportEventType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3ReportEventType_EventDefault = 0,

  /** "moodEffect_use_success" 心情触发动效成功事件 */
  PB3ReportEventType_MoodEffectUseSuccess = 1,

  /** "moodEffect_use_fail" 心情触发动效失败事件 */
  PB3ReportEventType_MoodEffectUseFail = 2,
};

GPBEnumDescriptor *PB3ReportEventType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ReportEventType_IsValidValue(int32_t value);

#pragma mark - Enum PB3SysToastType

typedef GPB_ENUM(PB3SysToastType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3SysToastType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 普通 */
  PB3SysToastType_SysToastNormal = 0,

  /** 成功 */
  PB3SysToastType_SysToastSucc = 1,

  /** 警告 */
  PB3SysToastType_SysToastWarn = 2,

  /** 错误 */
  PB3SysToastType_SysToastError = 3,
};

GPBEnumDescriptor *PB3SysToastType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3SysToastType_IsValidValue(int32_t value);

#pragma mark - Enum PB3SysConfType

typedef GPB_ENUM(PB3SysConfType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3SysConfType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3SysConfType_SysConfTypeNone = 0,

  /** 礼物配置更新 */
  PB3SysConfType_TypeGift = 1,

  /** 特效配置更新 */
  PB3SysConfType_TypeEffect = 2,

  /** 更新房间礼物 */
  PB3SysConfType_TypeGiftRoom = 3,

  /** 资产配置 */
  PB3SysConfType_TypeAssetsConf = 4,

  /** 推送更新相亲卡片 */
  PB3SysConfType_TypeConfBlind = 5,

  /** 挚友心跳配置 */
  PB3SysConfType_FriendHeartbeat = 6,

  /** 推送更新活动配置 */
  PB3SysConfType_TypeConfActivity = 7,

  /** 推送更新商城配置 */
  PB3SysConfType_TypeConfStores = 8,

  /** 推送绑定手机号配置 */
  PB3SysConfType_TypeConfBindPhoneReward = 9,

  /** 点单配置 */
  PB3SysConfType_TypeConfBillConf = 10,

  /** 更新房间角标 */
  PB3SysConfType_TypeConfSubConf = 11,

  /** 更新砸蛋文案 */
  PB3SysConfType_TypeCrackWriting = 12,

  /** 挚友配置 */
  PB3SysConfType_TypeIntimateConf = 13,

  /** pc导航配置 */
  PB3SysConfType_TypePcindexNavConf = 14,

  /** 砸蛋新主题配置 */
  PB3SysConfType_TypeCrackTheme = 15,

  /** 房间装饰配置 */
  PB3SysConfType_TypeRoomDecorateConf = 16,

  /** 房间装饰商城配置 */
  PB3SysConfType_TypeRoomDecorateShopConf = 17,

  /** 新版房间装饰配置 */
  PB3SysConfType_TypeRoomDecorateConfV2 = 18,

  /** 爵位配置 */
  PB3SysConfType_TypeNobilityConfig = 19,

  /** 房间技能配置 */
  PB3SysConfType_TypeRoomSkillConfig = 20,

  /** 爵位特效配置 */
  PB3SysConfType_TypeNobilityEffectConfig = 21,

  /** 爵位专属客服配置 */
  PB3SysConfType_TypeNobilityCustomerService = 22,

  /** 挚友背景配置更新 */
  PB3SysConfType_TypeFriendBackgroundConfig = 23,

  /** 未成年保护弹窗 */
  PB3SysConfType_TypeProtectionOfMinorsWindow = 24,

  /** 礼物banner配置更新 */
  PB3SysConfType_TypeGiftBanner = 25,

  /** 表情包配置更新 */
  PB3SysConfType_TypeEmojiConf = 26,

  /** 特效banner配置更新 */
  PB3SysConfType_TypeEffectBanner = 27,

  /** 房间气泡关注配置更新弹窗 */
  PB3SysConfType_TypeFocusRoomPop = 28,

  /** 表演模式配置 */
  PB3SysConfType_TypeShowConfig = 29,

  /** 商城分类栏配置更新 */
  PB3SysConfType_TypeStoreClassifyConfig = 30,

  /** 声鉴卡配置 */
  PB3SysConfType_TypeVoiceTag = 31,

  /** 更新房间财富日榜 */
  PB3SysConfType_TypeUpdateRoomWealthDayRank = 32,

  /** 更新IM发送图片限制配置 */
  PB3SysConfType_TypeFriendImImgLimit = 33,

  /** 更新活动房间列表配置 */
  PB3SysConfType_TypeActivityRoomList = 34,

  /** 更新新年倒计时配置 */
  PB3SysConfType_TypeCountDown = 35,

  /** 礼物分栏配置更新 */
  PB3SysConfType_TypeGiftClassify = 36,

  /** 亲密粉丝等级配置 */
  PB3SysConfType_TypeIntimateFansLevConf = 37,

  /** 一级分栏配置更新 */
  PB3SysConfType_TypeFirstClassify = 38,

  /** 礼物数量对应文本配置更新 */
  PB3SysConfType_TypeGiftNumTextConf = 39,

  /** 特效背包一级分栏配置更新 */
  PB3SysConfType_TypeEffectBagClassify = 40,

  /** 定时触发福利配置更新 */
  PB3SysConfType_TypeOnTimeWelfare = 41,

  /** 更新gme key */
  PB3SysConfType_TypeKupdateGmeKey = 42,

  /** 师徒等级配置 TeacherStudentLevCfgReq */
  PB3SysConfType_TypeTeacherStudentLevCfg = 44,

  /** 组队开黑游戏配置 MobaTeamGameCfgCDNReq */
  PB3SysConfType_TypeMobaTeamGameCfg = 46,

  /** 首充礼包配置 FirstPayGiftBaseCfgReq */
  PB3SysConfType_TypeFirstPayGiftBaseCfg = 47,

  /** 获取优惠券配置 CouponCfgUrlRes */
  PB3SysConfType_TypeCouponCfg = 48,

  /** 个播2.0任务配置 IntimateFansMiddionCliCfg */
  PB3SysConfType_TypeIntimateFansMissionConf = 49,

  /** 房间踢人时间配置 XcmKickOutRoomCfg */
  PB3SysConfType_TypeXcmKickOutRoomCfg = 50,

  /** 礼物皮肤配置 直接返回URL */
  PB3SysConfType_TypeGiftSkinCfg = 51,

  /** 交友2.0 推送更新相亲卡片 */
  PB3SysConfType_TypeConfBlind2 = 52,

  /** 富文本配置 直接返回URL */
  PB3SysConfType_TypeTextContentCfg = 53,

  /** 挚友特殊背景配置 XcmIntimateBackgroundCfgData */
  PB3SysConfType_TypeIntimateBackgroundCfgData = 54,

  /** 氧气车载 礼物ID发生变化 XcmOxygenCarGiftCfgData */
  PB3SysConfType_TypeOxygenCarCfg = 55,

  /** 更新房间活动角标 */
  PB3SysConfType_TypeConfActSubConf = 56,

  /** 虚拟形象背景推送 */
  PB3SysConfType_TypeCubismBgConf = 57,

  /** 虚拟形象模型推送 */
  PB3SysConfType_TypeCubismModelConf = 58,
};

GPBEnumDescriptor *PB3SysConfType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3SysConfType_IsValidValue(int32_t value);

#pragma mark - Enum PB3NoticeType

typedef GPB_ENUM(PB3NoticeType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3NoticeType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 不用 */
  PB3NoticeType_NtZero = 0,

  /** 实名认证 */
  PB3NoticeType_NtCertify = 1,

  /** toast */
  PB3NoticeType_NtToast = 2,

  /** 强制退出 */
  PB3NoticeType_NtForceLogout = 3,
};

GPBEnumDescriptor *PB3NoticeType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3NoticeType_IsValidValue(int32_t value);

#pragma mark - Enum PB3ButtonType

typedef GPB_ENUM(PB3ButtonType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ButtonType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3ButtonType_BtypeZero = 0,
  PB3ButtonType_BtypeConfirm = 1,
  PB3ButtonType_BtypeCancel = 2,
};

GPBEnumDescriptor *PB3ButtonType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ButtonType_IsValidValue(int32_t value);

#pragma mark - Enum PB3ReceiverType

typedef GPB_ENUM(PB3ReceiverType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ReceiverType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3ReceiverType_RtNone = 0,

  /** 接收者为大神 */
  PB3ReceiverType_RtOkami = 1,

  /** 接收者为签约者 */
  PB3ReceiverType_RtSignatory = 2,
};

GPBEnumDescriptor *PB3ReceiverType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ReceiverType_IsValidValue(int32_t value);

#pragma mark - Enum PB3SubMsgType

typedef GPB_ENUM(PB3SubMsgType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3SubMsgType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 2:官方消息（旧版本官方消息和活动公告放在一起） */
  PB3SubMsgType_SmtSelf = 0,

  /** 活动公告 */
  PB3SubMsgType_SmtActivity = 1,
};

GPBEnumDescriptor *PB3SubMsgType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3SubMsgType_IsValidValue(int32_t value);

#pragma mark - Enum PB3SystemMessageCheckResult

typedef GPB_ENUM(PB3SystemMessageCheckResult) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3SystemMessageCheckResult_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 没审批过的 */
  PB3SystemMessageCheckResult_SmcrNone = 0,

  /** 机审通过，即审核中 */
  PB3SystemMessageCheckResult_SmcrMachinePass = 1,

  /** 审核拒绝 */
  PB3SystemMessageCheckResult_SmsrHumanRefuse = 2,

  /** 审核通过 */
  PB3SystemMessageCheckResult_SmsrHumanPass = 3,
};

GPBEnumDescriptor *PB3SystemMessageCheckResult_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3SystemMessageCheckResult_IsValidValue(int32_t value);

#pragma mark - Enum PB3DialogNoticePrivacyUpdateType

/** 隐私协议更新类型 */
typedef GPB_ENUM(PB3DialogNoticePrivacyUpdateType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3DialogNoticePrivacyUpdateType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3DialogNoticePrivacyUpdateType_DnputNone = 0,

  /** 用户协议政策 */
  PB3DialogNoticePrivacyUpdateType_DnputUser = 1,

  /** 用户隐私协议政策 */
  PB3DialogNoticePrivacyUpdateType_DnputUserPrivacy = 2,

  /** 用户隐私协议政策摘要 */
  PB3DialogNoticePrivacyUpdateType_DnputUserPrivacySummary = 3,
};

GPBEnumDescriptor *PB3DialogNoticePrivacyUpdateType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3DialogNoticePrivacyUpdateType_IsValidValue(int32_t value);

#pragma mark - Enum PB3GenerationDataType

typedef GPB_ENUM(PB3GenerationDataType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3GenerationDataType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3GenerationDataType_GdtZero = 0,
};

GPBEnumDescriptor *PB3GenerationDataType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3GenerationDataType_IsValidValue(int32_t value);

#pragma mark - Enum PB3DialogStyle

typedef GPB_ENUM(PB3DialogStyle) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3DialogStyle_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不使用 */
  PB3DialogStyle_DsZero = 0,

  /** 青少年模式 */
  PB3DialogStyle_DsYoung = 1,

  /** 隐私模式 */
  PB3DialogStyle_DsPrivate = 2,

  /** 隐私协议更新 */
  PB3DialogStyle_DsPrivacyUpdate = 3,
};

GPBEnumDescriptor *PB3DialogStyle_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3DialogStyle_IsValidValue(int32_t value);

#pragma mark - Enum PB3DialogButtonStyle

typedef GPB_ENUM(PB3DialogButtonStyle) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3DialogButtonStyle_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不使用 */
  PB3DialogButtonStyle_DbsZero = 0,

  /** 普通按钮 */
  PB3DialogButtonStyle_DbsNormal = 1,

  /** 文本中的按钮 */
  PB3DialogButtonStyle_DbsContent = 2,
};

GPBEnumDescriptor *PB3DialogButtonStyle_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3DialogButtonStyle_IsValidValue(int32_t value);

#pragma mark - Enum PB3DialogButtonType

typedef GPB_ENUM(PB3DialogButtonType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3DialogButtonType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不使用 */
  PB3DialogButtonType_DbtZero = 0,

  /** 取消按钮 */
  PB3DialogButtonType_DbtCancel = 1,

  /** 确认按钮 */
  PB3DialogButtonType_DbtConfirm = 2,

  /** 回调按钮 */
  PB3DialogButtonType_DbtCallback = 3,

  /** 路由按钮 */
  PB3DialogButtonType_DbtRoute = 4,

  /** 退出登录 */
  PB3DialogButtonType_DbtExit = 5,
};

GPBEnumDescriptor *PB3DialogButtonType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3DialogButtonType_IsValidValue(int32_t value);

#pragma mark - Enum PB3CallbackDataType

typedef GPB_ENUM(PB3CallbackDataType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3CallbackDataType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3CallbackDataType_CdtZero = 0,
  PB3CallbackDataType_CdtCallbackOperation = 1,
};

GPBEnumDescriptor *PB3CallbackDataType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3CallbackDataType_IsValidValue(int32_t value);

#pragma mark - Enum PB3CallbackOpt

typedef GPB_ENUM(PB3CallbackOpt) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3CallbackOpt_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 不使用 */
  PB3CallbackOpt_CboZero = 0,

  /** 下次再弹起 */
  PB3CallbackOpt_CboNext = 1,

  /** 不再弹起 */
  PB3CallbackOpt_CboPopEnd = 2,
};

GPBEnumDescriptor *PB3CallbackOpt_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3CallbackOpt_IsValidValue(int32_t value);

#pragma mark - Enum PB3CommonNoticeType

typedef GPB_ENUM(PB3CommonNoticeType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3CommonNoticeType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3CommonNoticeType_CntNull = 0,

  /** 普通的 */
  PB3CommonNoticeType_CntCommon = 1,
};

GPBEnumDescriptor *PB3CommonNoticeType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3CommonNoticeType_IsValidValue(int32_t value);

#pragma mark - Enum PB3ActivityPopPos

/** 活动弹窗枚举 cmdId=101033 */
typedef GPB_ENUM(PB3ActivityPopPos) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ActivityPopPos_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3ActivityPopPos_PosBottom = 0,
  PB3ActivityPopPos_PosTop = 1,
  PB3ActivityPopPos_PosLeft = 2,
  PB3ActivityPopPos_PosRight = 3,
  PB3ActivityPopPos_PosMid = 4,
};

GPBEnumDescriptor *PB3ActivityPopPos_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ActivityPopPos_IsValidValue(int32_t value);

#pragma mark - Enum PB3RoomAnimationType

/** 房间动画类型 */
typedef GPB_ENUM(PB3RoomAnimationType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3RoomAnimationType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3RoomAnimationType_RNull = 0,

  /** 横幅动画 */
  PB3RoomAnimationType_RBanner = 1,

  /** 侧边栏动画 */
  PB3RoomAnimationType_RSite = 2,
};

GPBEnumDescriptor *PB3RoomAnimationType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3RoomAnimationType_IsValidValue(int32_t value);

#pragma mark - Enum PB3ActBoxGameType

typedef GPB_ENUM(PB3ActBoxGameType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ActBoxGameType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 宝箱 */
  PB3ActBoxGameType_GameNormal = 0,

  /** 金蟾游戏 */
  PB3ActBoxGameType_GameGoldenToad = 1,
};

GPBEnumDescriptor *PB3ActBoxGameType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ActBoxGameType_IsValidValue(int32_t value);

#pragma mark - Enum PB3ClientType

typedef GPB_ENUM(PB3ClientType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ClientType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3ClientType_CtZero = 0,
  PB3ClientType_CtIos = 2,
  PB3ClientType_CtPc = 3,
};

GPBEnumDescriptor *PB3ClientType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ClientType_IsValidValue(int32_t value);

#pragma mark - Enum PB3NoShowRoomType

typedef GPB_ENUM(PB3NoShowRoomType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3NoShowRoomType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3NoShowRoomType_NsrtZero = 0,

  /** 普通房 */
  PB3NoShowRoomType_NsrtNormal = 1,

  /** 返利厅 */
  PB3NoShowRoomType_NsrtReward = 2,

  /** 公会 */
  PB3NoShowRoomType_NsrtGuild = 3,

  /** 活动房 */
  PB3NoShowRoomType_NsrtActivity = 4,
};

GPBEnumDescriptor *PB3NoShowRoomType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3NoShowRoomType_IsValidValue(int32_t value);

#pragma mark - Enum PB3RoomBannerContentDataType

typedef GPB_ENUM(PB3RoomBannerContentDataType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3RoomBannerContentDataType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3RoomBannerContentDataType_RbcdtNone = 0,

  /** 用户 */
  PB3RoomBannerContentDataType_RbcdtPlayer = 1,
};

GPBEnumDescriptor *PB3RoomBannerContentDataType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3RoomBannerContentDataType_IsValidValue(int32_t value);

#pragma mark - Enum PB3TextContentType

/** 富文本配置类型 */
typedef GPB_ENUM(PB3TextContentType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3TextContentType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3TextContentType_StctNone = 0,

  /** 广场热点榜规则 */
  PB3TextContentType_StctHotPointRankRule = 1,

  /** 上热点规则 */
  PB3TextContentType_StctHotPointRule = 2,

  /** 热点秒榜规则 */
  PB3TextContentType_StctHotPointSeckillRule = 3,

  /** 热点火力值规则 */
  PB3TextContentType_StctHotPointHeatRule = 4,
};

GPBEnumDescriptor *PB3TextContentType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3TextContentType_IsValidValue(int32_t value);

#pragma mark - PB3SystemExtRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface PB3SystemExtRoot : GPBRootObject
@end

#pragma mark - PB3UmengReport

typedef GPB_ENUM(PB3UmengReport_FieldNumber) {
  PB3UmengReport_FieldNumber_EventName = 1,
  PB3UmengReport_FieldNumber_List = 2,
};

/**
 * 友盟上报 cmdId==101039
 **/
@interface PB3UmengReport : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *eventName;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *list;
/** The number of items in @c list without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger list_Count;

@end

#pragma mark - PB3NoConfirm

typedef GPB_ENUM(PB3NoConfirm_FieldNumber) {
  PB3NoConfirm_FieldNumber_Phone = 1,
};

@interface PB3NoConfirm : GPBMessage

/** 手机号码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *phone;

@end

#pragma mark - PB3certifyNotice

typedef GPB_ENUM(PB3certifyNotice_FieldNumber) {
  PB3certifyNotice_FieldNumber_NoticeType = 1,
  PB3certifyNotice_FieldNumber_Msg = 2,
  PB3certifyNotice_FieldNumber_ButtonStyleArray = 3,
};

/**
 * 实名认证弹窗推送 CmdId=101021
 **/
@interface PB3certifyNotice : GPBMessage

@property(nonatomic, readwrite) PB3NoticeType noticeType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;

// |buttonStyleArray| contains |PB3ButtonType|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *buttonStyleArray;
/** The number of items in @c buttonStyleArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger buttonStyleArray_Count;

@end

/**
 * Fetches the raw value of a @c PB3certifyNotice's @c noticeType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3certifyNotice_NoticeType_RawValue(PB3certifyNotice *message);
/**
 * Sets the raw value of an @c PB3certifyNotice's @c noticeType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3certifyNotice_NoticeType_RawValue(PB3certifyNotice *message, int32_t value);

#pragma mark - PB3SystemMsgNotice

typedef GPB_ENUM(PB3SystemMsgNotice_FieldNumber) {
  PB3SystemMsgNotice_FieldNumber_Msg = 1,
  PB3SystemMsgNotice_FieldNumber_SendTime = 2,
  PB3SystemMsgNotice_FieldNumber_Language = 3,
  PB3SystemMsgNotice_FieldNumber_RouterURL = 4,
  PB3SystemMsgNotice_FieldNumber_Picture = 5,
  PB3SystemMsgNotice_FieldNumber_PictureRouter = 6,
  PB3SystemMsgNotice_FieldNumber_MaskText = 7,
  PB3SystemMsgNotice_FieldNumber_BottomText = 8,
  PB3SystemMsgNotice_FieldNumber_BottomRouter = 9,
  PB3SystemMsgNotice_FieldNumber_MsgTitle = 10,
  PB3SystemMsgNotice_FieldNumber_RoomId = 11,
  PB3SystemMsgNotice_FieldNumber_Status = 12,
  PB3SystemMsgNotice_FieldNumber_OverdueTime = 13,
  PB3SystemMsgNotice_FieldNumber_Hyperlink = 14,
  PB3SystemMsgNotice_FieldNumber_MsgType = 15,
  PB3SystemMsgNotice_FieldNumber_PcSystemSwitch = 16,
  PB3SystemMsgNotice_FieldNumber_WealthLevel = 17,
  PB3SystemMsgNotice_FieldNumber_ReceiverType = 18,
  PB3SystemMsgNotice_FieldNumber_RegisterDayLimit = 19,
  PB3SystemMsgNotice_FieldNumber_RegisterJudgeType = 20,
  PB3SystemMsgNotice_FieldNumber_WealthJudgeType = 21,
  PB3SystemMsgNotice_FieldNumber_AndOr = 22,
  PB3SystemMsgNotice_FieldNumber_CharmJudgeType = 23,
  PB3SystemMsgNotice_FieldNumber_CharmLevel = 24,
  PB3SystemMsgNotice_FieldNumber_StartTs = 25,
  PB3SystemMsgNotice_FieldNumber_EndTs = 26,
  PB3SystemMsgNotice_FieldNumber_OperatorId = 27,
  PB3SystemMsgNotice_FieldNumber_OperatorName = 28,
  PB3SystemMsgNotice_FieldNumber_Reason = 29,
  PB3SystemMsgNotice_FieldNumber_SubMsgType = 30,
  PB3SystemMsgNotice_FieldNumber_DeviceType = 31,
  PB3SystemMsgNotice_FieldNumber_SendFrom = 32,
  PB3SystemMsgNotice_FieldNumber_CheckId = 33,
  PB3SystemMsgNotice_FieldNumber_ApplicationArray = 34,
};

/**
 * 系统消息通知 CmdId=101001  CmdId=101002  CmdId=101003 CmdId=101012 CmdId=101023
 **/
@interface PB3SystemMsgNotice : GPBMessage

/** 发送内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;

/** 发送时间 */
@property(nonatomic, readwrite) uint32_t sendTime;

/** 语言类型 */
@property(nonatomic, readwrite) uint32_t language;

@property(nonatomic, readwrite, copy, null_resettable) NSString *routerURL;

/** 图片路径 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *picture;

/** 图片跳转路由 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pictureRouter;

/** 遮罩文字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *maskText;

/** 底部文字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bottomText;

/** 底部跳转路由 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bottomRouter;

/** 信息标题 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msgTitle;

/** 房间id */
@property(nonatomic, readwrite, copy, null_resettable) NSData *roomId;

/** 消息状态 1.未发送 2.已发送 3.未发送已过期 4.已发送已过期 */
@property(nonatomic, readwrite) uint32_t status;

/** 过期时间 */
@property(nonatomic, readwrite) int64_t overdueTime;

/** 超链接文本 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *hyperlink;

/** 消息类型 1:系统通知;2:官方消息; */
@property(nonatomic, readwrite) uint32_t msgType;

/** 人工消息是否PC公屏显示0:不显示，1:显示 */
@property(nonatomic, readwrite) uint32_t pcSystemSwitch;

/** 财富等级限制,大于等于该值才能查看消息 */
@property(nonatomic, readwrite) uint32_t wealthLevel;

/** 接收者类型 */
@property(nonatomic, readwrite) PB3ReceiverType receiverType;

/** 用户注册天数限制，为0时不做限制 */
@property(nonatomic, readwrite) int32_t registerDayLimit;

/** 用户注册天数限制判断类型，1为小于等于、2为大于等于 */
@property(nonatomic, readwrite) int32_t registerJudgeType;

/** 用户财富等级限制判断类型，1为小于等于、2为大于等于 */
@property(nonatomic, readwrite) int32_t wealthJudgeType;

/** 用户财富和魅力等级判断关系，1为且、2为或 */
@property(nonatomic, readwrite) int32_t andOr;

/** 用户魅力等级限制判断类型，1为小于等于、2为大于等于 */
@property(nonatomic, readwrite) int32_t charmJudgeType;

/** 用户魅力等级，为0时不做限制 */
@property(nonatomic, readwrite) int32_t charmLevel;

/** 日志拉取开始时间戳 */
@property(nonatomic, readwrite) int64_t startTs;

/** 日志拉取结束时间戳 */
@property(nonatomic, readwrite) int64_t endTs;

/** 日志拉取操作人 id */
@property(nonatomic, readwrite) int64_t operatorId;

/** 日志拉取操作人姓名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *operatorName;

/** 日志拉取原因 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *reason;

/** 消息类型子类型 */
@property(nonatomic, readwrite) PB3SubMsgType subMsgType;

/** 日志拉取指定设备，20: Android，40: iOS，90: PC */
@property(nonatomic, readwrite) int32_t deviceType;

/** 发送类型 0 默认；1 管理后台发送 */
@property(nonatomic, readwrite) int32_t sendFrom;

/** 审核ID */
@property(nonatomic, readwrite) int64_t checkId;

/** 应用包名 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *applicationArray;
/** The number of items in @c applicationArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger applicationArray_Count;

@end

/**
 * Fetches the raw value of a @c PB3SystemMsgNotice's @c receiverType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SystemMsgNotice_ReceiverType_RawValue(PB3SystemMsgNotice *message);
/**
 * Sets the raw value of an @c PB3SystemMsgNotice's @c receiverType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SystemMsgNotice_ReceiverType_RawValue(PB3SystemMsgNotice *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3SystemMsgNotice's @c subMsgType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SystemMsgNotice_SubMsgType_RawValue(PB3SystemMsgNotice *message);
/**
 * Sets the raw value of an @c PB3SystemMsgNotice's @c subMsgType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SystemMsgNotice_SubMsgType_RawValue(PB3SystemMsgNotice *message, int32_t value);

#pragma mark - PB3NewSystemNotice

typedef GPB_ENUM(PB3NewSystemNotice_FieldNumber) {
  PB3NewSystemNotice_FieldNumber_Msg = 1,
  PB3NewSystemNotice_FieldNumber_IsPushAll = 2,
  PB3NewSystemNotice_FieldNumber_PcMsg = 3,
  PB3NewSystemNotice_FieldNumber_MsgIsCenter = 4,
  PB3NewSystemNotice_FieldNumber_Cubism = 5,
};

/**
 * 公屏信息 cmdId = 101028
 **/
@interface PB3NewSystemNotice : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;

/** 全服推送 */
@property(nonatomic, readwrite) BOOL isPushAll;

/** pc公屏优先展示消息 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcMsg;

/** msg消息是否居中显示 */
@property(nonatomic, readwrite) BOOL msgIsCenter;

/** 虚拟形象消息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3MagicCubismPush *cubism;
/** Test to see if @c cubism has been set. */
@property(nonatomic, readwrite) BOOL hasCubism;

@end

#pragma mark - PB3NewSystemNoticeMarquee

typedef GPB_ENUM(PB3NewSystemNoticeMarquee_FieldNumber) {
  PB3NewSystemNoticeMarquee_FieldNumber_WealthLv = 1,
  PB3NewSystemNoticeMarquee_FieldNumber_CharmLv = 2,
  PB3NewSystemNoticeMarquee_FieldNumber_OrAnd = 3,
  PB3NewSystemNoticeMarquee_FieldNumber_Content = 4,
  PB3NewSystemNoticeMarquee_FieldNumber_Router = 5,
};

/**
 * 跑马灯推送 cmdId = 101031
 **/
@interface PB3NewSystemNoticeMarquee : GPBMessage

/** 财富等级，大于等于该等级才显示 */
@property(nonatomic, readwrite) int32_t wealthLv;

/** 魅力等级，大于等于该等级才显示 */
@property(nonatomic, readwrite) int32_t charmLv;

/** 两个等级，1或 2且 */
@property(nonatomic, readwrite) int32_t orAnd;

/** 富文本跳转 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

/** 路由跳转 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *router;

@end

#pragma mark - PB3OverdueMsgNotice

typedef GPB_ENUM(PB3OverdueMsgNotice_FieldNumber) {
  PB3OverdueMsgNotice_FieldNumber_MsgIdArray = 1,
};

@interface PB3OverdueMsgNotice : GPBMessage

/** 过期消息id */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *msgIdArray;
/** The number of items in @c msgIdArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger msgIdArray_Count;

@end

#pragma mark - PB3MaintenanceMsgNotice

typedef GPB_ENUM(PB3MaintenanceMsgNotice_FieldNumber) {
  PB3MaintenanceMsgNotice_FieldNumber_Device = 1,
  PB3MaintenanceMsgNotice_FieldNumber_Content = 2,
};

/**
 * 系统维护升级信息 CmdId=101004
 **/
@interface PB3MaintenanceMsgNotice : GPBMessage

/** ios|android */
@property(nonatomic, readwrite, copy, null_resettable) NSString *device;

/** 提示内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

@end

#pragma mark - PB3UpdateTabs

typedef GPB_ENUM(PB3UpdateTabs_FieldNumber) {
  PB3UpdateTabs_FieldNumber_TabsArray = 1,
};

/**
 * 更新标签词条 CmdId=101009
 **/
@interface PB3UpdateTabs : GPBMessage

/** 新首页词条 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *tabsArray;
/** The number of items in @c tabsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger tabsArray_Count;

@end

#pragma mark - PB3WeekStar

typedef GPB_ENUM(PB3WeekStar_FieldNumber) {
  PB3WeekStar_FieldNumber_Type = 1,
  PB3WeekStar_FieldNumber_NamesArray = 2,
  PB3WeekStar_FieldNumber_Content = 3,
};

/**
 * 周星贺报 CmdId=101010
 **/
@interface PB3WeekStar : GPBMessage

@property(nonatomic, readwrite) int32_t type;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3WeekStarPlayer*> *namesArray;
/** The number of items in @c namesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger namesArray_Count;

/** "[周星贺报] xxx、xxx、xxx在上轮周星活动中，强势摘得明星前三名，老司机从不翻车！"; */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

@end

#pragma mark - PB3WeekStarPlayer

typedef GPB_ENUM(PB3WeekStarPlayer_FieldNumber) {
  PB3WeekStarPlayer_FieldNumber_Id_p = 1,
  PB3WeekStarPlayer_FieldNumber_Name = 2,
};

@interface PB3WeekStarPlayer : GPBMessage

@property(nonatomic, readwrite) int64_t id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@end

#pragma mark - PB3TimerInfo

typedef GPB_ENUM(PB3TimerInfo_FieldNumber) {
  PB3TimerInfo_FieldNumber_Seconds = 1,
};

@interface PB3TimerInfo : GPBMessage

/** 倒计时剩余秒数 */
@property(nonatomic, readwrite) int64_t seconds;

@end

#pragma mark - PB3SysConfUpdate

typedef GPB_ENUM(PB3SysConfUpdate_FieldNumber) {
  PB3SysConfUpdate_FieldNumber_Type = 1,
  PB3SysConfUpdate_FieldNumber_Data_p = 2,
};

@interface PB3SysConfUpdate : GPBMessage

/** 类型 */
@property(nonatomic, readwrite) PB3SysConfType type;

/** 类型TypeGiftBanner时，解析成GiftBannerConf; TypeEffectBanner解析EffectBanner 特效配置，emoji配置的oss链接 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *data_p;

@end

/**
 * Fetches the raw value of a @c PB3SysConfUpdate's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SysConfUpdate_Type_RawValue(PB3SysConfUpdate *message);
/**
 * Sets the raw value of an @c PB3SysConfUpdate's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SysConfUpdate_Type_RawValue(PB3SysConfUpdate *message, int32_t value);

#pragma mark - PB3SysToastMsg

typedef GPB_ENUM(PB3SysToastMsg_FieldNumber) {
  PB3SysToastMsg_FieldNumber_Type = 1,
  PB3SysToastMsg_FieldNumber_Msg = 2,
};

@interface PB3SysToastMsg : GPBMessage

/** 类型 */
@property(nonatomic, readwrite) PB3SysToastType type;

/** 文字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;

@end

/**
 * Fetches the raw value of a @c PB3SysToastMsg's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SysToastMsg_Type_RawValue(PB3SysToastMsg *message);
/**
 * Sets the raw value of an @c PB3SysToastMsg's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SysToastMsg_Type_RawValue(PB3SysToastMsg *message, int32_t value);

#pragma mark - PB3UpdateClanNotice

typedef GPB_ENUM(PB3UpdateClanNotice_FieldNumber) {
  PB3UpdateClanNotice_FieldNumber_PlayerId = 1,
  PB3UpdateClanNotice_FieldNumber_ClanId = 2,
};

/**
 * 公会变更通知，加入/退出都会收到
 **/
@interface PB3UpdateClanNotice : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

/** 公会id */
@property(nonatomic, readwrite) int64_t clanId;

@end

#pragma mark - PB3DialogNotice

typedef GPB_ENUM(PB3DialogNotice_FieldNumber) {
  PB3DialogNotice_FieldNumber_Title = 1,
  PB3DialogNotice_FieldNumber_Content = 2,
  PB3DialogNotice_FieldNumber_DialogStyle = 3,
  PB3DialogNotice_FieldNumber_ButtonsArray = 4,
  PB3DialogNotice_FieldNumber_DataType = 5,
  PB3DialogNotice_FieldNumber_GenerationData = 6,
  PB3DialogNotice_FieldNumber_URL = 7,
  PB3DialogNotice_FieldNumber_CallbackData = 8,
  PB3DialogNotice_FieldNumber_UpdateType = 9,
};

/**
 * 通用弹窗通知 cmdId = 101023
 **/
@interface PB3DialogNotice : GPBMessage

/** 标题 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** 内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

/** 样式 */
@property(nonatomic, readwrite) PB3DialogStyle dialogStyle;

/** 按钮 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3DialogButton*> *buttonsArray;
/** The number of items in @c buttonsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger buttonsArray_Count;

/** 数据类型 */
@property(nonatomic, readwrite) PB3GenerationDataType dataType;

/** proto数据 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *generationData;

/** 隐私协议 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

/** 回调数据 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *callbackData;

/** 隐私协议更新类型 */
@property(nonatomic, readwrite) PB3DialogNoticePrivacyUpdateType updateType;

@end

/**
 * Fetches the raw value of a @c PB3DialogNotice's @c dialogStyle property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3DialogNotice_DialogStyle_RawValue(PB3DialogNotice *message);
/**
 * Sets the raw value of an @c PB3DialogNotice's @c dialogStyle property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3DialogNotice_DialogStyle_RawValue(PB3DialogNotice *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3DialogNotice's @c dataType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3DialogNotice_DataType_RawValue(PB3DialogNotice *message);
/**
 * Sets the raw value of an @c PB3DialogNotice's @c dataType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3DialogNotice_DataType_RawValue(PB3DialogNotice *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3DialogNotice's @c updateType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3DialogNotice_UpdateType_RawValue(PB3DialogNotice *message);
/**
 * Sets the raw value of an @c PB3DialogNotice's @c updateType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3DialogNotice_UpdateType_RawValue(PB3DialogNotice *message, int32_t value);

#pragma mark - PB3DialogButton

typedef GPB_ENUM(PB3DialogButton_FieldNumber) {
  PB3DialogButton_FieldNumber_Text = 1,
  PB3DialogButton_FieldNumber_TextColor = 2,
  PB3DialogButton_FieldNumber_BackgroundColor = 3,
  PB3DialogButton_FieldNumber_ButtonStyle = 4,
  PB3DialogButton_FieldNumber_ButtonType = 5,
  PB3DialogButton_FieldNumber_CanPress = 6,
  PB3DialogButton_FieldNumber_CallbackData = 7,
  PB3DialogButton_FieldNumber_Route = 8,
};

@interface PB3DialogButton : GPBMessage

/** 按钮文字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *text;

/** 文字颜色 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *textColor;

/** 按钮背景色 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *backgroundColor;

/** 按钮样式 */
@property(nonatomic, readwrite) PB3DialogButtonStyle buttonStyle;

/** 按钮类型 */
@property(nonatomic, readwrite) PB3DialogButtonType buttonType;

/** 是否可按 */
@property(nonatomic, readwrite) BOOL canPress;

/** 回调数据 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *callbackData;

/** 路由 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *route;

@end

/**
 * Fetches the raw value of a @c PB3DialogButton's @c buttonStyle property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3DialogButton_ButtonStyle_RawValue(PB3DialogButton *message);
/**
 * Sets the raw value of an @c PB3DialogButton's @c buttonStyle property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3DialogButton_ButtonStyle_RawValue(PB3DialogButton *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3DialogButton's @c buttonType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3DialogButton_ButtonType_RawValue(PB3DialogButton *message);
/**
 * Sets the raw value of an @c PB3DialogButton's @c buttonType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3DialogButton_ButtonType_RawValue(PB3DialogButton *message, int32_t value);

#pragma mark - PB3CallbackData

typedef GPB_ENUM(PB3CallbackData_FieldNumber) {
  PB3CallbackData_FieldNumber_CallbackType = 1,
  PB3CallbackData_FieldNumber_CallbackData = 2,
};

@interface PB3CallbackData : GPBMessage

@property(nonatomic, readwrite) PB3CallbackDataType callbackType;

@property(nonatomic, readwrite, copy, null_resettable) NSData *callbackData;

@end

/**
 * Fetches the raw value of a @c PB3CallbackData's @c callbackType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3CallbackData_CallbackType_RawValue(PB3CallbackData *message);
/**
 * Sets the raw value of an @c PB3CallbackData's @c callbackType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3CallbackData_CallbackType_RawValue(PB3CallbackData *message, int32_t value);

#pragma mark - PB3CallbackOperation

typedef GPB_ENUM(PB3CallbackOperation_FieldNumber) {
  PB3CallbackOperation_FieldNumber_Opt = 1,
  PB3CallbackOperation_FieldNumber_DialogId = 2,
};

@interface PB3CallbackOperation : GPBMessage

@property(nonatomic, readwrite) PB3CallbackOpt opt;

@property(nonatomic, readwrite) int32_t dialogId;

@end

/**
 * Fetches the raw value of a @c PB3CallbackOperation's @c opt property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3CallbackOperation_Opt_RawValue(PB3CallbackOperation *message);
/**
 * Sets the raw value of an @c PB3CallbackOperation's @c opt property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3CallbackOperation_Opt_RawValue(PB3CallbackOperation *message, int32_t value);

#pragma mark - PB3PrivateChatMsg

typedef GPB_ENUM(PB3PrivateChatMsg_FieldNumber) {
  PB3PrivateChatMsg_FieldNumber_ToId = 1,
  PB3PrivateChatMsg_FieldNumber_Msg = 2,
};

/**
 * PRIVATE_CHAT_CMD_ID = 101024
 **/
@interface PB3PrivateChatMsg : GPBMessage

/** 发私聊的ID */
@property(nonatomic, readwrite) int64_t toId;

/** 内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;

@end

#pragma mark - PB3CommonNotice

typedef GPB_ENUM(PB3CommonNotice_FieldNumber) {
  PB3CommonNotice_FieldNumber_Type = 1,
  PB3CommonNotice_FieldNumber_Title = 2,
  PB3CommonNotice_FieldNumber_Content = 3,
  PB3CommonNotice_FieldNumber_ButtonsArray = 4,
  PB3CommonNotice_FieldNumber_OutCanPress = 5,
};

/**
 * COMMON_NOTICE_CMD_ID = 101027
 **/
@interface PB3CommonNotice : GPBMessage

/** 不存在的类型过滤不弹窗 */
@property(nonatomic, readwrite) PB3CommonNoticeType type;

/** 标题 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** 内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3CommonNoticeButton*> *buttonsArray;
/** The number of items in @c buttonsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger buttonsArray_Count;

/** 弹窗外部是否可点击 true可以点击取消，false不能点击消失 */
@property(nonatomic, readwrite) BOOL outCanPress;

@end

/**
 * Fetches the raw value of a @c PB3CommonNotice's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3CommonNotice_Type_RawValue(PB3CommonNotice *message);
/**
 * Sets the raw value of an @c PB3CommonNotice's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3CommonNotice_Type_RawValue(PB3CommonNotice *message, int32_t value);

#pragma mark - PB3CommonNoticeButton

typedef GPB_ENUM(PB3CommonNoticeButton_FieldNumber) {
  PB3CommonNoticeButton_FieldNumber_Type = 1,
  PB3CommonNoticeButton_FieldNumber_Text = 2,
  PB3CommonNoticeButton_FieldNumber_Route = 3,
};

@interface PB3CommonNoticeButton : GPBMessage

@property(nonatomic, readwrite) PB3ButtonType type;

@property(nonatomic, readwrite, copy, null_resettable) NSString *text;

/** 路由 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *route;

@end

/**
 * Fetches the raw value of a @c PB3CommonNoticeButton's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3CommonNoticeButton_Type_RawValue(PB3CommonNoticeButton *message);
/**
 * Sets the raw value of an @c PB3CommonNoticeButton's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3CommonNoticeButton_Type_RawValue(PB3CommonNoticeButton *message, int32_t value);

#pragma mark - PB3DelBFRecords

typedef GPB_ENUM(PB3DelBFRecords_FieldNumber) {
  PB3DelBFRecords_FieldNumber_IdsArray = 1,
};

/**
 *  推送删除广播交友信息 NOTICE_DEL_BF = 101030;
 **/
@interface PB3DelBFRecords : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *idsArray;
/** The number of items in @c idsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger idsArray_Count;

@end

#pragma mark - PB3ContentSensitiveChkErr

typedef GPB_ENUM(PB3ContentSensitiveChkErr_FieldNumber) {
  PB3ContentSensitiveChkErr_FieldNumber_ToastText = 1,
  PB3ContentSensitiveChkErr_FieldNumber_CheckedContent = 2,
};

/**
 * 敏感词检查, 如果有敏感词, 在error中返回给客户端的结构  error code : 101000040
 **/
@interface PB3ContentSensitiveChkErr : GPBMessage

/** toast 提示文案 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *toastText;

/** 屏蔽敏感词后的内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *checkedContent;

@end

#pragma mark - PB3PushActivityData

typedef GPB_ENUM(PB3PushActivityData_FieldNumber) {
  PB3PushActivityData_FieldNumber_ActivityCmdId = 1,
  PB3PushActivityData_FieldNumber_Bin = 2,
};

/**
 * 活动数据推送 CMD=101032
 **/
@interface PB3PushActivityData : GPBMessage

/** 活动cmdid */
@property(nonatomic, readwrite) int32_t activityCmdId;

/** 活动数据 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *bin;

@end

#pragma mark - PB3ActivityTreasureData

typedef GPB_ENUM(PB3ActivityTreasureData_FieldNumber) {
  PB3ActivityTreasureData_FieldNumber_TreasureId = 1,
  PB3ActivityTreasureData_FieldNumber_PeriodNum = 2,
  PB3ActivityTreasureData_FieldNumber_Stock = 3,
  PB3ActivityTreasureData_FieldNumber_Status = 4,
};

/**
 * 活动许愿夺宝数据推送 cmdId = 101040
 **/
@interface PB3ActivityTreasureData : GPBMessage

/** 夺宝配置id */
@property(nonatomic, readwrite) int32_t treasureId;

/** 夺宝期号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *periodNum;

/** 当期夺宝剩余库存 */
@property(nonatomic, readwrite) int32_t stock;

/** 当前期状态 1进行中 2已开奖 3取消 */
@property(nonatomic, readwrite) int32_t status;

@end

#pragma mark - PB3ActivityPremiumsData

typedef GPB_ENUM(PB3ActivityPremiumsData_FieldNumber) {
  PB3ActivityPremiumsData_FieldNumber_ExchangeIdListArray = 1,
  PB3ActivityPremiumsData_FieldNumber_ExpireTime = 2,
  PB3ActivityPremiumsData_FieldNumber_Remark = 3,
  PB3ActivityPremiumsData_FieldNumber_PremiumsId = 4,
};

/**
 * 活动额外奖励 cmdId = 101042
 **/
@interface PB3ActivityPremiumsData : GPBMessage

/** 兑换id列表 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *exchangeIdListArray;
/** The number of items in @c exchangeIdListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger exchangeIdListArray_Count;

/** 显示时长 单位秒 */
@property(nonatomic, readwrite) int32_t expireTime;

/** 文案 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *remark;

/** 额外奖励id */
@property(nonatomic, readwrite) int32_t premiumsId;

@end

#pragma mark - PB3ActivityLotteryPointData

typedef GPB_ENUM(PB3ActivityLotteryPointData_FieldNumber) {
  PB3ActivityLotteryPointData_FieldNumber_LotteryId = 1,
  PB3ActivityLotteryPointData_FieldNumber_DataType = 2,
  PB3ActivityLotteryPointData_FieldNumber_CurServerPoint = 3,
  PB3ActivityLotteryPointData_FieldNumber_ConfLuckId = 4,
};

/**
 * 活动抽奖幸运值 cmdId = 101043
 **/
@interface PB3ActivityLotteryPointData : GPBMessage

/** 当前进行的抽奖id */
@property(nonatomic, readwrite) int32_t lotteryId;

/** 积分类型，0全服抽奖积分  1普通抽奖积分 */
@property(nonatomic, readwrite) int32_t dataType;

/** 当前全服抽奖幸运值 */
@property(nonatomic, readwrite) int32_t curServerPoint;

/** 幸运值配置ID */
@property(nonatomic, readwrite) int32_t confLuckId;

@end

#pragma mark - PB3ActivityPopData

typedef GPB_ENUM(PB3ActivityPopData_FieldNumber) {
  PB3ActivityPopData_FieldNumber_SwitchType = 1,
  PB3ActivityPopData_FieldNumber_RouteURL = 2,
  PB3ActivityPopData_FieldNumber_Pos = 3,
};

/**
 * 活动弹窗数据推送 cmdId=101033
 **/
@interface PB3ActivityPopData : GPBMessage

/** 弹窗开关 1打开弹窗 2关闭弹窗 */
@property(nonatomic, readwrite) int32_t switchType;

/** 活动路由 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *routeURL;

/** 关闭弹窗的位置 0底部 1顶部 2左边 3右边 4中间 */
@property(nonatomic, readwrite) PB3ActivityPopPos pos;

@end

/**
 * Fetches the raw value of a @c PB3ActivityPopData's @c pos property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ActivityPopData_Pos_RawValue(PB3ActivityPopData *message);
/**
 * Sets the raw value of an @c PB3ActivityPopData's @c pos property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ActivityPopData_Pos_RawValue(PB3ActivityPopData *message, int32_t value);

#pragma mark - PB3ActivitySortList

typedef GPB_ENUM(PB3ActivitySortList_FieldNumber) {
  PB3ActivitySortList_FieldNumber_ActId = 1,
  PB3ActivitySortList_FieldNumber_RelActId = 2,
};

/**
 * 排行榜列表 cmdId=101034
 **/
@interface PB3ActivitySortList : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int64_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int64_t relActId;

@end

#pragma mark - PB3RoomAnimation

typedef GPB_ENUM(PB3RoomAnimation_FieldNumber) {
  PB3RoomAnimation_FieldNumber_Type = 1,
  PB3RoomAnimation_FieldNumber_IsShow = 2,
  PB3RoomAnimation_FieldNumber_EndTime = 3,
};

/**
 * 房间动画
 **/
@interface PB3RoomAnimation : GPBMessage

/** 房间动画类型 */
@property(nonatomic, readwrite) PB3RoomAnimationType type;

/** 是否显示 true显示 false隐藏 */
@property(nonatomic, readwrite) BOOL isShow;

/** 动画的结束时间 时间戳 */
@property(nonatomic, readwrite) int64_t endTime;

@end

/**
 * Fetches the raw value of a @c PB3RoomAnimation's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3RoomAnimation_Type_RawValue(PB3RoomAnimation *message);
/**
 * Sets the raw value of an @c PB3RoomAnimation's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3RoomAnimation_Type_RawValue(PB3RoomAnimation *message, int32_t value);

#pragma mark - PB3RoomContributor

typedef GPB_ENUM(PB3RoomContributor_FieldNumber) {
  PB3RoomContributor_FieldNumber_PlayerId = 1,
  PB3RoomContributor_FieldNumber_PlayerIcon = 2,
  PB3RoomContributor_FieldNumber_Point = 3,
  PB3RoomContributor_FieldNumber_Sort = 4,
};

/**
 * 房间贡献者信息 收礼人
 **/
@interface PB3RoomContributor : GPBMessage

/** 玩家id_box */
@property(nonatomic, readwrite) int64_t playerId;

/** 玩家头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerIcon;

/** 贡献积分数 */
@property(nonatomic, readwrite) int64_t point;

/** 贡献排名 */
@property(nonatomic, readwrite) int32_t sort;

@end

#pragma mark - PB3RoomRankMemberInfo

typedef GPB_ENUM(PB3RoomRankMemberInfo_FieldNumber) {
  PB3RoomRankMemberInfo_FieldNumber_RoomCurPoint = 1,
  PB3RoomRankMemberInfo_FieldNumber_BoxCurPoint = 2,
  PB3RoomRankMemberInfo_FieldNumber_BoxMaxPoint = 3,
  PB3RoomRankMemberInfo_FieldNumber_Sort = 4,
  PB3RoomRankMemberInfo_FieldNumber_PlayerListArray = 5,
  PB3RoomRankMemberInfo_FieldNumber_BannerAnimationArray = 6,
  PB3RoomRankMemberInfo_FieldNumber_MaxBoxNum = 7,
  PB3RoomRankMemberInfo_FieldNumber_TotalBoxNum = 8,
  PB3RoomRankMemberInfo_FieldNumber_MaxOpenBoxNum = 9,
  PB3RoomRankMemberInfo_FieldNumber_ActId = 10,
  PB3RoomRankMemberInfo_FieldNumber_RelActId = 11,
  PB3RoomRankMemberInfo_FieldNumber_ClanId = 12,
  PB3RoomRankMemberInfo_FieldNumber_ClanIcon = 13,
  PB3RoomRankMemberInfo_FieldNumber_ClanName = 14,
};

/**
 * 房间横幅排行榜数据
 **/
@interface PB3RoomRankMemberInfo : GPBMessage

/** 当前排行榜获得积分 */
@property(nonatomic, readwrite) int64_t roomCurPoint;

/** 宝箱累计积分 */
@property(nonatomic, readwrite) int64_t boxCurPoint;

/** 引爆值 */
@property(nonatomic, readwrite) int64_t boxMaxPoint;

/** 房间排名 */
@property(nonatomic, readwrite) int32_t sort;

/** 贡献人员列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3RoomContributor*> *playerListArray;
/** The number of items in @c playerListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger playerListArray_Count;

/** 横幅动画 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3RoomAnimation*> *bannerAnimationArray;
/** The number of items in @c bannerAnimationArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger bannerAnimationArray_Count;

/** 宝箱最大累计个数 */
@property(nonatomic, readwrite) int32_t maxBoxNum;

/** 当前宝箱累计总数 */
@property(nonatomic, readwrite) int32_t totalBoxNum;

/** 宝箱可开启次数 */
@property(nonatomic, readwrite) int32_t maxOpenBoxNum;

/** 活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActId;

/** 公会ID */
@property(nonatomic, readwrite) int64_t clanId;

/** 公会头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *clanIcon;

/** 公会名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *clanName;

@end

#pragma mark - PB3RoomBanner

typedef GPB_ENUM(PB3RoomBanner_FieldNumber) {
  PB3RoomBanner_FieldNumber_IsShow = 1,
  PB3RoomBanner_FieldNumber_RankMemberInfo = 2,
  PB3RoomBanner_FieldNumber_IsShowPopupWin = 3,
};

/**
 * 房间横幅 cmdId=101035
 **/
@interface PB3RoomBanner : GPBMessage

/** 是否显示横幅 true显示 false不显示，当前房间为非参与活动的房间时为false */
@property(nonatomic, readwrite) BOOL isShow;

/** 横幅数据 */
@property(nonatomic, readwrite, strong, null_resettable) PB3RoomRankMemberInfo *rankMemberInfo;
/** Test to see if @c rankMemberInfo has been set. */
@property(nonatomic, readwrite) BOOL hasRankMemberInfo;

/** 是否显示弹窗 true是 false否 */
@property(nonatomic, readwrite) BOOL isShowPopupWin;

@end

#pragma mark - PB3RoomBannerMsg

typedef GPB_ENUM(PB3RoomBannerMsg_FieldNumber) {
  PB3RoomBannerMsg_FieldNumber_RoomId = 1,
  PB3RoomBannerMsg_FieldNumber_RoomIcon = 2,
  PB3RoomBannerMsg_FieldNumber_Msg = 3,
  PB3RoomBannerMsg_FieldNumber_EndTime = 4,
  PB3RoomBannerMsg_FieldNumber_BoxEndTime = 5,
  PB3RoomBannerMsg_FieldNumber_ExcludeRoomsArray = 6,
};

/**
 * 房间横幅消息 cmdId=101036
 **/
@interface PB3RoomBannerMsg : GPBMessage

/** 房间id */
@property(nonatomic, readwrite) int64_t roomId;

/** 房间头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomIcon;

/** 消息内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;

/** 过期时间 时间戳 达到过期时间隐藏窗口 */
@property(nonatomic, readwrite) int64_t endTime;

/** 宝箱过期时间 */
@property(nonatomic, readwrite) int64_t boxEndTime;

/** 排除显示的房间 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *excludeRoomsArray;
/** The number of items in @c excludeRoomsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger excludeRoomsArray_Count;

@end

#pragma mark - PB3TriggerPlayerInfo

typedef GPB_ENUM(PB3TriggerPlayerInfo_FieldNumber) {
  PB3TriggerPlayerInfo_FieldNumber_PlayerId = 1,
  PB3TriggerPlayerInfo_FieldNumber_PlayerName = 2,
  PB3TriggerPlayerInfo_FieldNumber_PlayerIcon = 3,
};

@interface PB3TriggerPlayerInfo : GPBMessage

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 用户名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerName;

/** 用户头衔 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerIcon;

@end

#pragma mark - PB3RoomBannerBoxInfo

typedef GPB_ENUM(PB3RoomBannerBoxInfo_FieldNumber) {
  PB3RoomBannerBoxInfo_FieldNumber_ActivityId = 1,
  PB3RoomBannerBoxInfo_FieldNumber_RelActId = 2,
  PB3RoomBannerBoxInfo_FieldNumber_LotteryId = 3,
  PB3RoomBannerBoxInfo_FieldNumber_AssignId = 4,
  PB3RoomBannerBoxInfo_FieldNumber_EndTime = 5,
  PB3RoomBannerBoxInfo_FieldNumber_StartTime = 6,
  PB3RoomBannerBoxInfo_FieldNumber_TriggerPlayerInfo = 7,
  PB3RoomBannerBoxInfo_FieldNumber_GameType = 8,
  PB3RoomBannerBoxInfo_FieldNumber_GameScore = 9,
};

/**
 * 房间横幅宝箱数据 cmdId=101037
 **/
@interface PB3RoomBannerBoxInfo : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int32_t activityId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActId;

/** 抽奖配置id */
@property(nonatomic, readwrite) int32_t lotteryId;

/** 指定消耗的物品id */
@property(nonatomic, readwrite) int32_t assignId;

/** 宝箱掉落的时间 时间戳 -1未到时间 0立即掉落 大于0时，当前时间戳-start_time=倒计时 */
@property(nonatomic, readwrite) int64_t startTime;

/** 宝箱的过期时间 时间戳 */
@property(nonatomic, readwrite) int64_t endTime;

/** 触发宝箱用户信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3TriggerPlayerInfo *triggerPlayerInfo;
/** Test to see if @c triggerPlayerInfo has been set. */
@property(nonatomic, readwrite) BOOL hasTriggerPlayerInfo;

/** 宝箱展示类型 */
@property(nonatomic, readwrite) PB3ActBoxGameType gameType;

/** 参与游戏分数，如：金蟾游戏次数 */
@property(nonatomic, readwrite) int32_t gameScore;

@end

/**
 * Fetches the raw value of a @c PB3RoomBannerBoxInfo's @c gameType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3RoomBannerBoxInfo_GameType_RawValue(PB3RoomBannerBoxInfo *message);
/**
 * Sets the raw value of an @c PB3RoomBannerBoxInfo's @c gameType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3RoomBannerBoxInfo_GameType_RawValue(PB3RoomBannerBoxInfo *message, int32_t value);

#pragma mark - PB3RoomEventRewardBoxInfo

typedef GPB_ENUM(PB3RoomEventRewardBoxInfo_FieldNumber) {
  PB3RoomEventRewardBoxInfo_FieldNumber_ActivityId = 1,
  PB3RoomEventRewardBoxInfo_FieldNumber_RelActId = 2,
  PB3RoomEventRewardBoxInfo_FieldNumber_RoomId = 3,
  PB3RoomEventRewardBoxInfo_FieldNumber_EndTime = 4,
};

/**
 * 事件宝箱推送 cmdId=101038
 **/
@interface PB3RoomEventRewardBoxInfo : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int32_t activityId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActId;

/** 公会房间id */
@property(nonatomic, readwrite) int64_t roomId;

/** 事件持续结束时间 */
@property(nonatomic, readwrite) int64_t endTime;

@end

#pragma mark - PB3SystemNoticeNeedCheck

typedef GPB_ENUM(PB3SystemNoticeNeedCheck_FieldNumber) {
  PB3SystemNoticeNeedCheck_FieldNumber_Msg = 1,
  PB3SystemNoticeNeedCheck_FieldNumber_Conf = 2,
  PB3SystemNoticeNeedCheck_FieldNumber_Event = 3,
  PB3SystemNoticeNeedCheck_FieldNumber_SubRouteURL = 4,
  PB3SystemNoticeNeedCheck_FieldNumber_Type = 5,
  PB3SystemNoticeNeedCheck_FieldNumber_StyleUrls = 6,
};

/**
 * 系统公屏信息，客户端需要根据个人检查是否显示（是否满足条件） cmdId = 101041
 **/
@interface PB3SystemNoticeNeedCheck : GPBMessage

/** 公屏内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;

/** 显示条件配置 */
@property(nonatomic, readwrite, strong, null_resettable) PB3SystemNoticeNeedCheckConf *conf;
/** Test to see if @c conf has been set. */
@property(nonatomic, readwrite) BOOL hasConf;

/** 公屏事件 */
@property(nonatomic, readwrite, strong, null_resettable) PB3SystemNoticeEvent *event;
/** Test to see if @c event has been set. */
@property(nonatomic, readwrite) BOOL hasEvent;

/** 二级路由 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *subRouteURL;

/** 样式类型 */
@property(nonatomic, readwrite) enum PB3NoticeStyleType type;

/** 样式 */
@property(nonatomic, readwrite, strong, null_resettable) PB3NoticeStyleUrl *styleUrls;
/** Test to see if @c styleUrls has been set. */
@property(nonatomic, readwrite) BOOL hasStyleUrls;

@end

/**
 * Fetches the raw value of a @c PB3SystemNoticeNeedCheck's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SystemNoticeNeedCheck_Type_RawValue(PB3SystemNoticeNeedCheck *message);
/**
 * Sets the raw value of an @c PB3SystemNoticeNeedCheck's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SystemNoticeNeedCheck_Type_RawValue(PB3SystemNoticeNeedCheck *message, int32_t value);

#pragma mark - PB3NoticeStyleUrl

typedef GPB_ENUM(PB3NoticeStyleUrl_FieldNumber) {
  PB3NoticeStyleUrl_FieldNumber_StyleURL = 1,
  PB3NoticeStyleUrl_FieldNumber_PcHeadURL = 2,
  PB3NoticeStyleUrl_FieldNumber_PcTailURL = 3,
  PB3NoticeStyleUrl_FieldNumber_PcURL = 4,
};

@interface PB3NoticeStyleUrl : GPBMessage

/** app公屏样式 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *styleURL;

/** pc公屏样式头图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcHeadURL;

/** pc公屏样式尾图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcTailURL;

/** pc公屏样式拉伸图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcURL;

@end

#pragma mark - PB3SystemNoticeNeedCheckConf

typedef GPB_ENUM(PB3SystemNoticeNeedCheckConf_FieldNumber) {
  PB3SystemNoticeNeedCheckConf_FieldNumber_Version = 1,
  PB3SystemNoticeNeedCheckConf_FieldNumber_OrAnd = 2,
  PB3SystemNoticeNeedCheckConf_FieldNumber_WealthLvMin = 3,
  PB3SystemNoticeNeedCheckConf_FieldNumber_WealthLvMax = 4,
  PB3SystemNoticeNeedCheckConf_FieldNumber_CharmLvMin = 5,
  PB3SystemNoticeNeedCheckConf_FieldNumber_CharmLvMax = 6,
  PB3SystemNoticeNeedCheckConf_FieldNumber_BlackRoomIdsArray = 7,
  PB3SystemNoticeNeedCheckConf_FieldNumber_NoShowRoomTypeArray = 8,
};

@interface PB3SystemNoticeNeedCheckConf : GPBMessage

/** int32 为 下面的ClientType */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32ObjectDictionary<PB3ClientVer*> *version;
/** The number of items in @c version without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger version_Count;

/** 两种等级，1或 2且 */
@property(nonatomic, readwrite) int32_t orAnd;

/** 最小财富等级 */
@property(nonatomic, readwrite) int32_t wealthLvMin;

/** 最大财富等级 */
@property(nonatomic, readwrite) int32_t wealthLvMax;

/** 最小魅力等级 */
@property(nonatomic, readwrite) int32_t charmLvMin;

/** 最大魅力等级 */
@property(nonatomic, readwrite) int32_t charmLvMax;

/** 不显示的房间id */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *blackRoomIdsArray;
/** The number of items in @c blackRoomIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger blackRoomIdsArray_Count;

/** 不显示的房间类型 NoShowRoomType */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *noShowRoomTypeArray;
/** The number of items in @c noShowRoomTypeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger noShowRoomTypeArray_Count;

@end

#pragma mark - PB3ClientVer

typedef GPB_ENUM(PB3ClientVer_FieldNumber) {
  PB3ClientVer_FieldNumber_VerMin = 1,
  PB3ClientVer_FieldNumber_VerMax = 2,
};

@interface PB3ClientVer : GPBMessage

/** -1为不限制 */
@property(nonatomic, readwrite) int64_t verMin;

/** -1为不限制 */
@property(nonatomic, readwrite) int64_t verMax;

@end

#pragma mark - PB3LimitedTimeWelfare

typedef GPB_ENUM(PB3LimitedTimeWelfare_FieldNumber) {
  PB3LimitedTimeWelfare_FieldNumber_RelActId = 1,
  PB3LimitedTimeWelfare_FieldNumber_WelfareId = 2,
  PB3LimitedTimeWelfare_FieldNumber_BeginTime = 3,
  PB3LimitedTimeWelfare_FieldNumber_EndTime = 4,
  PB3LimitedTimeWelfare_FieldNumber_NumOfReceived = 5,
  PB3LimitedTimeWelfare_FieldNumber_TotalNum = 6,
};

/**
 * 限时福利 cmdId=101044
 **/
@interface PB3LimitedTimeWelfare : GPBMessage

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActId;

/** 福利id */
@property(nonatomic, readwrite) int32_t welfareId;

/** 开始时间 */
@property(nonatomic, readwrite) int64_t beginTime;

/** 结束时间 */
@property(nonatomic, readwrite) int64_t endTime;

/** 剩余数量 */
@property(nonatomic, readwrite) int64_t numOfReceived;

/** 总数量 0不限制 */
@property(nonatomic, readwrite) int64_t totalNum;

@end

#pragma mark - PB3AskOrSendNewInfo

/**
 * 赠送或索取物品推送 cmdId=101048
 **/
@interface PB3AskOrSendNewInfo : GPBMessage

@end

#pragma mark - PB3BlindLotteryStatusUpdate

/**
 * 盲盒状态更新推送 cmdId=101049
 **/
@interface PB3BlindLotteryStatusUpdate : GPBMessage

@end

#pragma mark - PB3ActivityRankUpdate

typedef GPB_ENUM(PB3ActivityRankUpdate_FieldNumber) {
  PB3ActivityRankUpdate_FieldNumber_ActId = 1,
  PB3ActivityRankUpdate_FieldNumber_RelActId = 2,
};

/**
 * 活动排行榜更新推送 cmdId=101051
 **/
@interface PB3ActivityRankUpdate : GPBMessage

@property(nonatomic, readwrite) int32_t actId;

@property(nonatomic, readwrite) int32_t relActId;

@end

#pragma mark - PB3RoomBannerWelfareContent

typedef GPB_ENUM(PB3RoomBannerWelfareContent_FieldNumber) {
  PB3RoomBannerWelfareContent_FieldNumber_Content = 1,
  PB3RoomBannerWelfareContent_FieldNumber_ContentColor = 2,
  PB3RoomBannerWelfareContent_FieldNumber_DataArray = 3,
};

@interface PB3RoomBannerWelfareContent : GPBMessage

/** 后台配置的没被替换的原始文案 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

/** 文案的颜色 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *contentColor;

/** 提供给前端自己替换的数据 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3RoomBannerContentData*> *dataArray;
/** The number of items in @c dataArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger dataArray_Count;

@end

#pragma mark - PB3RoomBannerContentData

typedef GPB_ENUM(PB3RoomBannerContentData_FieldNumber) {
  PB3RoomBannerContentData_FieldNumber_Type = 1,
  PB3RoomBannerContentData_FieldNumber_Substitution = 2,
  PB3RoomBannerContentData_FieldNumber_Id_p = 3,
  PB3RoomBannerContentData_FieldNumber_Name = 4,
  PB3RoomBannerContentData_FieldNumber_Color = 5,
};

@interface PB3RoomBannerContentData : GPBMessage

/** 类型： 1:用户数据 */
@property(nonatomic, readwrite) PB3RoomBannerContentDataType type;

/** 替换符号，如（ %user_name ） */
@property(nonatomic, readwrite, copy, null_resettable) NSString *substitution;

/** 对应类型的Id 如用户Id */
@property(nonatomic, readwrite) int64_t id_p;

/** 对应类型的名称 如用户名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 颜色 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *color;

@end

/**
 * Fetches the raw value of a @c PB3RoomBannerContentData's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3RoomBannerContentData_Type_RawValue(PB3RoomBannerContentData *message);
/**
 * Sets the raw value of an @c PB3RoomBannerContentData's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3RoomBannerContentData_Type_RawValue(PB3RoomBannerContentData *message, int32_t value);

#pragma mark - PB3RoomBannerWelfare

typedef GPB_ENUM(PB3RoomBannerWelfare_FieldNumber) {
  PB3RoomBannerWelfare_FieldNumber_Content = 1,
  PB3RoomBannerWelfare_FieldNumber_BannerURL = 2,
  PB3RoomBannerWelfare_FieldNumber_PcBannerURL = 3,
  PB3RoomBannerWelfare_FieldNumber_BannerEffectURL = 4,
  PB3RoomBannerWelfare_FieldNumber_PcBannerEffectURL = 5,
  PB3RoomBannerWelfare_FieldNumber_RoomId = 6,
  PB3RoomBannerWelfare_FieldNumber_BannerDuration = 7,
  PB3RoomBannerWelfare_FieldNumber_ScrollDuration = 8,
  PB3RoomBannerWelfare_FieldNumber_BannerEffectCount = 9,
  PB3RoomBannerWelfare_FieldNumber_BannerEffectSpeed = 10,
  PB3RoomBannerWelfare_FieldNumber_BannerEffectAngle = 11,
  PB3RoomBannerWelfare_FieldNumber_PcBannerEffectCount = 12,
  PB3RoomBannerWelfare_FieldNumber_PcBannerEffectSpeed = 13,
  PB3RoomBannerWelfare_FieldNumber_PcBannerEffectAngle = 14,
  PB3RoomBannerWelfare_FieldNumber_ShowEffectRoomIdsArray = 15,
  PB3RoomBannerWelfare_FieldNumber_ContentRaw = 16,
};

/**
 * 横幅浪漫飘屏 cmdId=101053
 **/
@interface PB3RoomBannerWelfare : GPBMessage

/** 横幅内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

/** 横幅样式 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bannerURL;

/** PC横幅样式 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcBannerURL;

/** 浪漫飘屏资源 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bannerEffectURL;

/** PC浪漫飘屏资源 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcBannerEffectURL;

/** 房间Id，点击横幅跳转到该房间; */
@property(nonatomic, readwrite) int64_t roomId;

/** 横幅时长(毫秒) */
@property(nonatomic, readwrite) int64_t bannerDuration;

/** 飘屏动画时长（毫秒） */
@property(nonatomic, readwrite) int64_t scrollDuration;

/** 满屏数量 */
@property(nonatomic, readwrite) int32_t bannerEffectCount;

/** 下落速度 */
@property(nonatomic, readwrite) int32_t bannerEffectSpeed;

/** 旋转角度 */
@property(nonatomic, readwrite) int32_t bannerEffectAngle;

/** PC满屏数量 */
@property(nonatomic, readwrite) int32_t pcBannerEffectCount;

/** PC下落速度 */
@property(nonatomic, readwrite) int32_t pcBannerEffectSpeed;

/** PC旋转角度 */
@property(nonatomic, readwrite) int32_t pcBannerEffectAngle;

/** 如果用户所在房间在该列表里，则需要展示飘屏动画 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *showEffectRoomIdsArray;
/** The number of items in @c showEffectRoomIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger showEffectRoomIdsArray_Count;

/** 原始文案以及替换的数据 */
@property(nonatomic, readwrite, strong, null_resettable) PB3RoomBannerWelfareContent *contentRaw;
/** Test to see if @c contentRaw has been set. */
@property(nonatomic, readwrite) BOOL hasContentRaw;

@end

#pragma mark - PB3ActivityCpPublicNoticeStatus

typedef GPB_ENUM(PB3ActivityCpPublicNoticeStatus_FieldNumber) {
  PB3ActivityCpPublicNoticeStatus_FieldNumber_Status = 1,
};

/**
 * 告白位状态更新推送 cmdId=101054
 **/
@interface PB3ActivityCpPublicNoticeStatus : GPBMessage

/** 当前状态 1-有CP数据；2-虚位以待；3-活动结束不显示图标 */
@property(nonatomic, readwrite) enum PB3CpPublicNoticeStatus status;

@end

/**
 * Fetches the raw value of a @c PB3ActivityCpPublicNoticeStatus's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ActivityCpPublicNoticeStatus_Status_RawValue(PB3ActivityCpPublicNoticeStatus *message);
/**
 * Sets the raw value of an @c PB3ActivityCpPublicNoticeStatus's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ActivityCpPublicNoticeStatus_Status_RawValue(PB3ActivityCpPublicNoticeStatus *message, int32_t value);

#pragma mark - PB3PromoterRecallUpdate

typedef GPB_ENUM(PB3PromoterRecallUpdate_FieldNumber) {
  PB3PromoterRecallUpdate_FieldNumber_NewTaskNum = 1,
  PB3PromoterRecallUpdate_FieldNumber_CurrentTaskNum = 2,
};

/**
 * 推广员系统数据更新推送 cmdId=101060
 **/
@interface PB3PromoterRecallUpdate : GPBMessage

/** 新分配的任务数量 （不为0时，显示新任务数，否则显示正在进行任务数） */
@property(nonatomic, readwrite) int32_t newTaskNum;

/** 当前正在进行的任务数量 */
@property(nonatomic, readwrite) int32_t currentTaskNum;

@end

#pragma mark - PB3ActivityRankScoreUpdate

typedef GPB_ENUM(PB3ActivityRankScoreUpdate_FieldNumber) {
  PB3ActivityRankScoreUpdate_FieldNumber_RelId = 1,
  PB3ActivityRankScoreUpdate_FieldNumber_Score = 2,
  PB3ActivityRankScoreUpdate_FieldNumber_ActId = 3,
};

/**
 * 活动排行榜总分更新推送 cmdId=101061
 **/
@interface PB3ActivityRankScoreUpdate : GPBMessage

/** 子活动Id */
@property(nonatomic, readwrite) int32_t relId;

/** 总分 */
@property(nonatomic, readwrite) int64_t score;

/** 主活动id */
@property(nonatomic, readwrite) int32_t actId;

@end

#pragma mark - PB3ActivityRankPKResult

typedef GPB_ENUM(PB3ActivityRankPKResult_FieldNumber) {
  PB3ActivityRankPKResult_FieldNumber_ActId = 1,
  PB3ActivityRankPKResult_FieldNumber_WinRelActId = 2,
  PB3ActivityRankPKResult_FieldNumber_WinCampName = 3,
  PB3ActivityRankPKResult_FieldNumber_WinMvpId = 4,
  PB3ActivityRankPKResult_FieldNumber_LoseMvpId = 5,
  PB3ActivityRankPKResult_FieldNumber_AwardsArray = 6,
  PB3ActivityRankPKResult_FieldNumber_SeqNo = 7,
};

/**
 * 活动榜单阵营pk结果推送 cmdId=101062
 **/
@interface PB3ActivityRankPKResult : GPBMessage

/** 主活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 胜出的子活动榜单 */
@property(nonatomic, readwrite) int32_t winRelActId;

/** 胜利的阵营名字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *winCampName;

/** 胜利阵营的mvp */
@property(nonatomic, readwrite) int64_t winMvpId;

/** 失败阵营的mvp */
@property(nonatomic, readwrite) int64_t loseMvpId;

/** 奖励 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ActNewAwardInfo*> *awardsArray;
/** The number of items in @c awardsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger awardsArray_Count;

/** 期号 */
@property(nonatomic, readwrite) int64_t seqNo;

@end

#pragma mark - PB3ProxyInvokeIntServerFunc

typedef GPB_ENUM(PB3ProxyInvokeIntServerFunc_FieldNumber) {
  PB3ProxyInvokeIntServerFunc_FieldNumber_ObjName = 1,
  PB3ProxyInvokeIntServerFunc_FieldNumber_FuncName = 2,
  PB3ProxyInvokeIntServerFunc_FieldNumber_ReqData = 3,
};

/**
 * 代理调用服务器内部接口
 **/
@interface PB3ProxyInvokeIntServerFunc : GPBMessage

/** 服务端实例名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *objName;

/** 服务端内部接口名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *funcName;

/** func传入数据 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *reqData;

@end

#pragma mark - PB3ActivityLotteryLevelUp

typedef GPB_ENUM(PB3ActivityLotteryLevelUp_FieldNumber) {
  PB3ActivityLotteryLevelUp_FieldNumber_ActId = 1,
  PB3ActivityLotteryLevelUp_FieldNumber_Level = 2,
  PB3ActivityLotteryLevelUp_FieldNumber_PlayerId = 3,
  PB3ActivityLotteryLevelUp_FieldNumber_PlayerName = 4,
};

/**
 * 活动奖池升级 cmdId=101066
 **/
@interface PB3ActivityLotteryLevelUp : GPBMessage

@property(nonatomic, readwrite) int32_t actId;

@property(nonatomic, readwrite) int32_t level;

/** 触发这次升级的用户 （player_id与收到消息的用户不一致，说明时CP给你解锁的） */
@property(nonatomic, readwrite) int64_t playerId;

/** 触发这次升级的用户 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerName;

@end

#pragma mark - PB3CultivateAwardInfo

typedef GPB_ENUM(PB3CultivateAwardInfo_FieldNumber) {
  PB3CultivateAwardInfo_FieldNumber_AwardIcon = 1,
  PB3CultivateAwardInfo_FieldNumber_AwardName = 2,
  PB3CultivateAwardInfo_FieldNumber_AwardType = 3,
  PB3CultivateAwardInfo_FieldNumber_AwardNum = 4,
};

@interface PB3CultivateAwardInfo : GPBMessage

/** 奖励图标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *awardIcon;

/** 奖励名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *awardName;

/** 奖励类型0礼物 1特效 */
@property(nonatomic, readwrite) int32_t awardType;

/** 奖励数 */
@property(nonatomic, readwrite) int32_t awardNum;

@end

#pragma mark - PB3IntimateCultivateLevelUpdate

typedef GPB_ENUM(PB3IntimateCultivateLevelUpdate_FieldNumber) {
  PB3IntimateCultivateLevelUpdate_FieldNumber_IntimateId = 1,
  PB3IntimateCultivateLevelUpdate_FieldNumber_IntimateIcon = 2,
  PB3IntimateCultivateLevelUpdate_FieldNumber_IntimateName = 3,
  PB3IntimateCultivateLevelUpdate_FieldNumber_OldLevel = 4,
  PB3IntimateCultivateLevelUpdate_FieldNumber_NewLevel = 5,
  PB3IntimateCultivateLevelUpdate_FieldNumber_IsMax = 6,
  PB3IntimateCultivateLevelUpdate_FieldNumber_AwardInfoArray = 7,
  PB3IntimateCultivateLevelUpdate_FieldNumber_OldLevelImage = 8,
  PB3IntimateCultivateLevelUpdate_FieldNumber_NewLevelImage = 9,
};

/**
 * 挚友养成树升降级推送  cmdId=101070
 **/
@interface PB3IntimateCultivateLevelUpdate : GPBMessage

/** 挚友ID */
@property(nonatomic, readwrite) int64_t intimateId;

/** 挚友头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *intimateIcon;

/** 挚友名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *intimateName;

/** 旧等级 */
@property(nonatomic, readwrite) int32_t oldLevel;

/** 新等级 */
@property(nonatomic, readwrite) int32_t newLevel;

/** 是否已满级 */
@property(nonatomic, readwrite) BOOL isMax;

/** 奖励字符串 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3CultivateAwardInfo*> *awardInfoArray;
/** The number of items in @c awardInfoArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger awardInfoArray_Count;

/** 旧的等级树种皮肤 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *oldLevelImage;

/** 新的等级树种皮肤 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *newLevelImage NS_RETURNS_NOT_RETAINED;

@end

#pragma mark - PB3ActivityLotteryRaceUpdate

typedef GPB_ENUM(PB3ActivityLotteryRaceUpdate_FieldNumber) {
  PB3ActivityLotteryRaceUpdate_FieldNumber_Player = 1,
  PB3ActivityLotteryRaceUpdate_FieldNumber_SeizeTime = 2,
  PB3ActivityLotteryRaceUpdate_FieldNumber_ProtectDuration = 3,
  PB3ActivityLotteryRaceUpdate_FieldNumber_LotteryConfIdArray = 4,
  PB3ActivityLotteryRaceUpdate_FieldNumber_SeizeDuration = 5,
};

/**
 * 有奖抢占推送 cmdId=101071
 **/
@interface PB3ActivityLotteryRaceUpdate : GPBMessage

/** 抢占人信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3SimplePlayer *player;
/** Test to see if @c player has been set. */
@property(nonatomic, readwrite) BOOL hasPlayer;

/** 抢占时间戳（表示抢占成功的开始时间） */
@property(nonatomic, readwrite) int64_t seizeTime;

/** 保护时长（秒） */
@property(nonatomic, readwrite) int32_t protectDuration;

/** 奖池配置Id （收到推送后，需要检查本次有奖活动中的奖池id是否在推送的列表里面） */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *lotteryConfIdArray;
/** The number of items in @c lotteryConfIdArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger lotteryConfIdArray_Count;

/** 占领时长 */
@property(nonatomic, readwrite) int32_t seizeDuration;

@end

#pragma mark - PB3ActivityWelfareUpdate

typedef GPB_ENUM(PB3ActivityWelfareUpdate_FieldNumber) {
  PB3ActivityWelfareUpdate_FieldNumber_RelActId = 1,
  PB3ActivityWelfareUpdate_FieldNumber_WelfareId = 2,
  PB3ActivityWelfareUpdate_FieldNumber_NumOfReceived = 3,
};

/**
 * 福利更新推送 cmdId=101074;
 **/
@interface PB3ActivityWelfareUpdate : GPBMessage

@property(nonatomic, readwrite) int32_t relActId;

@property(nonatomic, readwrite) int32_t welfareId;

@property(nonatomic, readwrite) int64_t numOfReceived;

@end

#pragma mark - PB3VipWeixinCustomService

typedef GPB_ENUM(PB3VipWeixinCustomService_FieldNumber) {
  PB3VipWeixinCustomService_FieldNumber_VipWeixinCustomServiceURL = 1,
  PB3VipWeixinCustomService_FieldNumber_VipWeixinCustomServiceId = 2,
};

/**
 * vip接入企微客服金额达标推送 cmdId=101087
 **/
@interface PB3VipWeixinCustomService : GPBMessage

/** vip企微客服链接 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *vipWeixinCustomServiceURL;

/** vip企微企业ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *vipWeixinCustomServiceId;

@end

#pragma mark - PB3PushJigsawData

typedef GPB_ENUM(PB3PushJigsawData_FieldNumber) {
  PB3PushJigsawData_FieldNumber_GiftId = 1,
  PB3PushJigsawData_FieldNumber_Status = 2,
};

/**
 * 礼物拼图数据推送 CMD=101088
 **/
@interface PB3PushJigsawData : GPBMessage

/** 礼物ID */
@property(nonatomic, readwrite) int64_t giftId;

/** 状态，0未激活，1收集中，2已激活，3普通礼物 */
@property(nonatomic, readwrite) int32_t status;

@end

#pragma mark - PB3ActivityPileUpDrawData

typedef GPB_ENUM(PB3ActivityPileUpDrawData_FieldNumber) {
  PB3ActivityPileUpDrawData_FieldNumber_PileUpId = 1,
  PB3ActivityPileUpDrawData_FieldNumber_TimingId = 2,
  PB3ActivityPileUpDrawData_FieldNumber_HitTicketsArray = 3,
  PB3ActivityPileUpDrawData_FieldNumber_ActId = 4,
  PB3ActivityPileUpDrawData_FieldNumber_RelActId = 5,
};

/**
 * 活动抽奖幸运值 cmdId = 101089
 **/
@interface PB3ActivityPileUpDrawData : GPBMessage

/** 当前进行的抽奖id */
@property(nonatomic, readwrite) int64_t pileUpId;

/** 当前进行抽奖的时间段 */
@property(nonatomic, readwrite) int64_t timingId;

/** 中奖列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3HitTicket*> *hitTicketsArray;
/** The number of items in @c hitTicketsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger hitTicketsArray_Count;

/** 活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActId;

@end

#pragma mark - PB3HitTicket

typedef GPB_ENUM(PB3HitTicket_FieldNumber) {
  PB3HitTicket_FieldNumber_PlayerId = 1,
  PB3HitTicket_FieldNumber_PlayerIcon = 2,
  PB3HitTicket_FieldNumber_PlayerName = 3,
  PB3HitTicket_FieldNumber_TicketId = 4,
  PB3HitTicket_FieldNumber_At = 5,
};

/**
 * 奖券
 **/
@interface PB3HitTicket : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *playerIcon;

@property(nonatomic, readwrite, copy, null_resettable) NSString *playerName;

/** 奖券码 */
@property(nonatomic, readwrite) int64_t ticketId;

/** 中奖时间戳，秒 */
@property(nonatomic, readwrite) int64_t at;

@end

#pragma mark - PB3ActivityPileUpIssueData

typedef GPB_ENUM(PB3ActivityPileUpIssueData_FieldNumber) {
  PB3ActivityPileUpIssueData_FieldNumber_PileUpId = 1,
  PB3ActivityPileUpIssueData_FieldNumber_TimingId = 2,
  PB3ActivityPileUpIssueData_FieldNumber_TicketId = 3,
  PB3ActivityPileUpIssueData_FieldNumber_GiftImg = 4,
  PB3ActivityPileUpIssueData_FieldNumber_GiftName = 5,
  PB3ActivityPileUpIssueData_FieldNumber_GiftGold = 6,
  PB3ActivityPileUpIssueData_FieldNumber_ActId = 7,
  PB3ActivityPileUpIssueData_FieldNumber_RelActId = 8,
};

/**
 * 完成福利后，下发的奖券推送 cmdId = 101090
 **/
@interface PB3ActivityPileUpIssueData : GPBMessage

/** 当前进行的抽奖id */
@property(nonatomic, readwrite) int64_t pileUpId;

/** 当前进行的时间段 */
@property(nonatomic, readwrite) int64_t timingId;

/** 下发的券码 */
@property(nonatomic, readwrite) int64_t ticketId;

/** 奖品图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *giftImg;

/** 奖品名字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *giftName;

/** 奖品价值 */
@property(nonatomic, readwrite) int64_t giftGold;

/** 活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActId;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
