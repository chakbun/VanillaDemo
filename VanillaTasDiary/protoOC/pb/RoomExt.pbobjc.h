// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pb/room.ext.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class PB3AgodaKey;
@class PB3AllChatCfg;
@class PB3AuthInfo;
@class PB3BarrageGameEntryItem;
@class PB3BarrageGameEntryItem_RoomTag;
@class PB3BarrageGameInfo;
@class PB3BarrageGameMatchConfirmData;
@class PB3BarrageGameTeam;
@class PB3BaseDecorateConfItem;
@class PB3BroadcastChat;
@class PB3BroadcastEffectMood;
@class PB3BroadcastMakeFriend;
@class PB3BroadcastRoomTopRightCornerLabelChange_Act;
@class PB3CaijiPlayer;
@class PB3Chair;
@class PB3ChatEffect;
@class PB3ChatNobilityInfo;
@class PB3ChatReq;
@class PB3Chorus;
@class PB3ClanMember;
@class PB3Effect;
@class PB3EnterCubismEffect;
@class PB3FansRecallList;
@class PB3FastSpeak;
@class PB3GiftTask;
@class PB3GiveGift;
@class PB3Greeting;
@class PB3HallHourBoss;
@class PB3Headline;
@class PB3HourRankRoomInfo;
@class PB3InteractTopicEffect;
@class PB3InteractionConf;
@class PB3IntimateChair;
@class PB3IntimateEffect;
@class PB3IntimateFansInfo;
@class PB3MaskInfo;
@class PB3MateRoomMatch;
@class PB3MobaTeamGameInfo;
@class PB3NewestAllChannelChat;
@class PB3OnlineFlower;
@class PB3PkEntryItem;
@class PB3PlayerRoomSkill;
@class PB3PlayerTask;
@class PB3PrivilegeInfo;
@class PB3ProgramFeeCfg;
@class PB3ProgramFeeItem;
@class PB3PunishmentRank;
@class PB3QuickChat;
@class PB3Rank;
@class PB3Rank1;
@class PB3ReceiveChair;
@class PB3ReceiveWindow;
@class PB3RoomAllDecorateItem;
@class PB3RoomChairStatus;
@class PB3RoomIdName;
@class PB3RoomImage;
@class PB3RoomInfoExt;
@class PB3RoomNobilityInfo;
@class PB3RoomOnOffStatus;
@class PB3RoomPatternInfo;
@class PB3RoomTopRightCornerLabelChangeField;
@class PB3RoomTopRightCornerLabelInfo;
@class PB3RoomVoteLog;
@class PB3ScenePlayer;
@class PB3SettingOption;
@class PB3SimplePlayer;
@class PB3SingleLiveInfo;
@class PB3SingleLivePkEntryItem;
@class PB3SkillInfo;
@class PB3SystemNoticeEvent;
@class PB3TeacherStudentChair;
@class PB3TeacherStudentEffect;
@class PB3UserVoteLog;
@class PB3UsingDecorateList;
@class PB3Vote;
@class PB3VoteLog;
@class PB3VoteOption;
@class PB3VotePlayer;
@class PB3XcmKickOutRoomCfg;
GPB_ENUM_FWD_DECLARE(PB3AuditStatus);
GPB_ENUM_FWD_DECLARE(PB3ChannelType);
GPB_ENUM_FWD_DECLARE(PB3DecorateType);
GPB_ENUM_FWD_DECLARE(PB3DeviceType);
GPB_ENUM_FWD_DECLARE(PB3GenderPattern);
GPB_ENUM_FWD_DECLARE(PB3InteractionType);
GPB_ENUM_FWD_DECLARE(PB3NewRoomPattern);
GPB_ENUM_FWD_DECLARE(PB3OnlineStateType);
GPB_ENUM_FWD_DECLARE(PB3OwnerInRoom);
GPB_ENUM_FWD_DECLARE(PB3PkMode);
GPB_ENUM_FWD_DECLARE(PB3QuickChatUserType);
GPB_ENUM_FWD_DECLARE(PB3RoomAdminType);
GPB_ENUM_FWD_DECLARE(PB3RoomPattern);
GPB_ENUM_FWD_DECLARE(PB3RoomTopRightCornerLabelType);
GPB_ENUM_FWD_DECLARE(PB3RoomType);
GPB_ENUM_FWD_DECLARE(PB3RoomVoice);
GPB_ENUM_FWD_DECLARE(PB3SexType);
GPB_ENUM_FWD_DECLARE(PB3ShowSingleLiveTplType);
GPB_ENUM_FWD_DECLARE(PB3ShowType);
GPB_ENUM_FWD_DECLARE(PB3SingleLivePkMode);
GPB_ENUM_FWD_DECLARE(PB3SingleLiveTplType);
GPB_ENUM_FWD_DECLARE(PB3XcmKickOutRoomType);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum PB3RoomErr

/** 房间错误码 */
typedef GPB_ENUM(PB3RoomErr) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3RoomErr_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3RoomErr_ReSuccess = 0,

  /** 场景满人 */
  PB3RoomErr_ErrCodePlayerFull = 34002,

  /** 场景不存在 */
  PB3RoomErr_ErrCodeRoomNotFound = 34003,

  /** 黑名单 */
  PB3RoomErr_ErrCodeBlack = 34004,

  /** 被踢出 */
  PB3RoomErr_ErrCodeKickout = 34005,

  /** 需要密码 */
  PB3RoomErr_ErrCodeHasPassword = 34006,

  /** 房间关闭 */
  PB3RoomErr_ErrCodeRoomClose = 34007,

  /** 密码错误 */
  PB3RoomErr_ErrCodePasswordErr = 34008,

  /** 需要重新登录 */
  PB3RoomErr_ErrCodeRelogin = 34009,

  /** 你不在房间 */
  PB3RoomErr_ErrCodeNoInRoom = 34010,

  /** 目标不在房间 */
  PB3RoomErr_ErrCodeTargetNoInRoom = 34011,

  /** 没有权限 */
  PB3RoomErr_ErrCodePermission = 34012,

  /** 座上有人了 */
  PB3RoomErr_ErrCodeChairHasPlayer = 34013,

  /** 队列已满 */
  PB3RoomErr_ErrCodeChairQueueFull = 34014,

  /** 你已在坑上 */
  PB3RoomErr_ErrCodeChairAlready = 34015,

  /** 花数量不足 */
  PB3RoomErr_ErrCodeFlowerNotEnough = 34016,

  /** 请求太频繁 */
  PB3RoomErr_ErrCodeTooFrequent = 34017,

  /** 财富、在线等级不足 */
  PB3RoomErr_ErrCodeLeverLow = 34018,

  /** 不在麦上 */
  PB3RoomErr_ErrCodeMicro = 34019,

  /** 被禁言 */
  PB3RoomErr_ErrCodeBanSpeak = 34020,

  /** 禁止广播交友 */
  PB3RoomErr_ErrCodeBanBdfriend = 34021,

  /** 你没在坑上 */
  PB3RoomErr_ErrCodeNotOnChair = 34022,

  /** 无坑位可锁 */
  PB3RoomErr_ErrCodeChairCloseAlready = 34023,

  /** 当前禁止排麦 */
  PB3RoomErr_ErrCodeChairQueueBan = 34024,

  /** 该用户已在麦上或已排麦 */
  PB3RoomErr_ErrCodeChairTargetAlready = 34025,

  /** 交友房间座位号为1的坑位只能是管理员以上的玩家才能坐 */
  PB3RoomErr_ErrCodeSitOnlyAdmin = 34030,

  /** 已经开始互选 */
  PB3RoomErr_ErrCodeMateChoiceAlready = 34031,

  /** 互选没有开启 */
  PB3RoomErr_ErrCodeMateChoiceStop = 34032,

  /** 已经开始投票 */
  PB3RoomErr_ErrCodeVoteAlready = 34041,

  /** 投票未开始 */
  PB3RoomErr_ErrCodeVoteNotRun = 34042,

  /** 票数不足 */
  PB3RoomErr_ErrCodeVoteNotEnough = 34043,

  /** 房间已被封 */
  PB3RoomErr_ErrCodeRoomBan = 34044,

  /** 房间名称修改失败，包含违禁字眼，请重新输入 */
  PB3RoomErr_ErrCodeRoomNameDirty = 34045,

  /** 被人抢先了，发布头条失败 */
  PB3RoomErr_ErrCodeBfheadlineLate = 34049,

  /** 金币不足，请充值 */
  PB3RoomErr_ErrCodeBfheadlineLackGold = 34050,

  /** 头条保护时间中 */
  PB3RoomErr_ErrCodeBfheadlineTime = 34051,

  /** 发布金币不足 */
  PB3RoomErr_ErrCodeBfheadlinePubGold = 34052,

  /** 发布头条财富或魅力等级不够 */
  PB3RoomErr_ErrCodeBfheadlineLevel = 34053,

  /** 不能设置天籁模式 */
  PB3RoomErr_ErrCodeRoomPattern = 34060,

  /** 魅力等级不够 */
  PB3RoomErr_ErrCodeRoomCharmLevel = 34061,

  /** 魅力等级不够 */
  PB3RoomErr_ErrCodeNoInRoomRepeatEnter = 34062,

  /** 没有找到相应的背景 */
  PB3RoomErr_ErrCodeImageNotFound = 34065,

  /** 当前模式不可用 */
  PB3RoomErr_ErrCodePattenLimit = 34066,

  /** 当前背景不属于正在坑上的挚友 */
  PB3RoomErr_ErrCodeImageFriendLimit = 34067,

  /** 房主的挚友才能上麦哦~ */
  PB3RoomErr_ErrCodeIntimateSit = 34068,

  /** 该房间为陪伴模式，无法解锁 */
  PB3RoomErr_ErrCodeIntimateNotOpen = 34069,

  /** 当前房间已满 */
  PB3RoomErr_ErrCodeRoomFull = 34070,

  /** 打字，必须实名认证 */
  PB3RoomErr_ErrCodeCertifyWord = 34071,

  /** 上麦必须实名 */
  PB3RoomErr_ErrCodeCertifyOnChair = 34072,

  /** 广播交友实名 */
  PB3RoomErr_ErrCodeCertifyBroadFriend = 34073,

  /** 跳跳实名 */
  PB3RoomErr_ErrCodeCertifyTiaoTiao = 34074,

  /** 头条实名 */
  PB3RoomErr_ErrCodeCertifyHeadline = 34075,

  /** 旧版本房主进房间必须实名认证 */
  PB3RoomErr_ErrCodeRoomOwnerCertifyOldVersionMust = 34077,

  /** 房主进房间必须实名 */
  PB3RoomErr_ErrCodeRoomOwnerCertifyNewVersionMust = 34080,

  /** 上麦默认去排麦 */
  PB3RoomErr_ErrCodeRoomSitChairToQueue = 34086,

  /** 坑位已满 */
  PB3RoomErr_ErrCodeRoomSitChairFull = 34087,

  /** 坑位等级限制，财富等级，魅力等级，弹窗提示：需要付费使用 */
  PB3RoomErr_ErrCodeRoomSitLvLimit = 34088,

  /** 开启麦克风需要实名认证 */
  PB3RoomErr_ErrCodeCertifyOpenMic = 34132,

  /** 当前房间不支持心情特效 */
  PB3RoomErr_ErrCodeEffectMoodRoom = 34313,

  /** 佩戴成功，上麦后即可触发效果 */
  PB3RoomErr_ErrCodeEffectMoodChair = 34314,

  /** 当前有优先级更高的用户在使用心情特效 */
  PB3RoomErr_ErrCodeEffectPriority = 34315,

  /** 单播模式非粉丝不能排麦 */
  PB3RoomErr_ErrCodeRoomOptChairQueueSingle = 34267,

  /** 双播模式非粉丝不能排麦 */
  PB3RoomErr_ErrCodeRoomOptChairQueueDouble = 34268,

  /** 双播模式非粉丝不能上麦 */
  PB3RoomErr_ErrCodeRoomSetChairQueueDouble = 34269,

  /** 断线重连离开房间错误码（客户端退出房间，然后toast错误信息） */
  PB3RoomErr_ErrCodeLeaveRoomInReconnect = 34376,
};

GPBEnumDescriptor *PB3RoomErr_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3RoomErr_IsValidValue(int32_t value);

#pragma mark - Enum PB3RoomCmdId

/** 房间广播cmdId定义 // 100 */
typedef GPB_ENUM(PB3RoomCmdId) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3RoomCmdId_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3RoomCmdId_RcZero = 0,

  /** 广播有人进房间 */
  PB3RoomCmdId_RcPlayerEnter = 100001,

  /** 广播有人离开房间 */
  PB3RoomCmdId_RcPlayerLeave = 100002,

  /** 广播房间设置 */
  PB3RoomCmdId_RcRoomSet = 100028,

  /** 广播被禁言 */
  PB3RoomCmdId_RcForbidSpeak = 100041,

  /** 广播被踢出 */
  PB3RoomCmdId_RcKickout = 100042,

  /** 广播房间管理员变更 */
  PB3RoomCmdId_RcRoomAdminSet = 100046,

  /** 广播房间关闭 */
  PB3RoomCmdId_RcCloseRoom = 100050,

  /** 广播房间接待语 */
  PB3RoomCmdId_RcRoomReception = 100051,

  /** 广播嘉宾位状态变更 */
  PB3RoomCmdId_RcChairStatus = 100102,

  /** 广播开麦/禁麦变更 */
  PB3RoomCmdId_RcChairSpeak = 100104,

  /** 广播坑位发言开关 */
  PB3RoomCmdId_RcChairSpeakOnOff = 100105,

  /** 广播伴奏开关 */
  PB3RoomCmdId_RcAccompanyOnOff = 100106,

  /** 广播坑位变动 */
  PB3RoomCmdId_RcChair = 100110,

  /** 通知 上座者收到上座消息 */
  PB3RoomCmdId_RcChairSit = 100111,

  /** 广播移麦 */
  PB3RoomCmdId_RcChairMove = 100112,

  /** 通知 下座者收到下座消息 */
  PB3RoomCmdId_RcChairLeaveData = 100113,

  /** 广播加入/退出排麦队列 */
  PB3RoomCmdId_RcChairQueueOpt = 100115,

  /** 广播排麦插队 */
  PB3RoomCmdId_RcQueueJump = 100117,

  /** 广播管理员操作麦 */
  PB3RoomCmdId_RcChairAdminOpt = 100118,

  /** 广播排麦状态 */
  PB3RoomCmdId_RcChairQeueuStatus = 100114,

  /** 广播排麦队列被清空 */
  PB3RoomCmdId_RcChairQeueuClear = 100116,

  /** 你已被添加/移除排麦队伍中 */
  PB3RoomCmdId_RcChairQeueuAddOrDel = 100119,

  /** 通知鲜花变更 */
  PB3RoomCmdId_RcOnlineFlower = 100120,

  /** 广播送鲜花 */
  PB3RoomCmdId_RcPresentFlower = 100121,

  /** 广播聊天 */
  PB3RoomCmdId_RcChat = 100125,

  /** 广播举牌 */
  PB3RoomCmdId_RcPlayDice = 100126,

  /** 广播交友 SSC000118 */
  PB3RoomCmdId_RcMakeFriend = 100127,

  /** 广播挚友一起上麦通知 */
  PB3RoomCmdId_RcIntimateSitChair = 100128,

  /** 广播挚友列表更新 */
  PB3RoomCmdId_RcIntimateListChair = 100129,

  /** 广播互选开始 */
  PB3RoomCmdId_RcStartMateChoice = 100130,

  /** 广播互选确定人数 */
  PB3RoomCmdId_RcMateChoiceNum = 100131,

  /** 广播互选结果 */
  PB3RoomCmdId_RcMateChoiceResult = 100132,

  /** 广播匹配成功公告 */
  PB3RoomCmdId_RcMateMatch = 100133,

  /** 广播没有匹配 */
  PB3RoomCmdId_RcMateNotMatch = 100134,

  /** 广播累计金币 */
  PB3RoomCmdId_RcMateChairGoldStream = 100135,

  /** 龙珠广播 */
  PB3RoomCmdId_RcBroadcastDragonBall = 100136,

  /** 广播匹配成功系统消息 */
  PB3RoomCmdId_RcMateMatchMsg = 100137,

  /** 广播投票开始 */
  PB3RoomCmdId_RcBroadcastStartVote = 100138,

  /** 广播投票公布结果 */
  PB3RoomCmdId_RcBroadcastPublishVote = 100139,

  /** 广播广播交友头条信息 */
  PB3RoomCmdId_RcBfHeadline = 100140,

  /** 新广播交友类型与 RC_MakeFriend = 100127 相同 */
  PB3RoomCmdId_RcMakeFriendNew = 100141,

  /** 广播匹配成功公告与RC_MateMatch = 100133 相同 */
  PB3RoomCmdId_RcMateMatchNew = 100142,

  /** 切换到PCA推流模式, PcaChangeUser */
  PB3RoomCmdId_RcPcaChangeUser = 100150,

  /** PC助手可以开始推流, BroadcastPcaStartPush */
  PB3RoomCmdId_RcPcaStartPush = 100151,

  /** PC助手停止推流 */
  PB3RoomCmdId_RcPcaStopPush = 100152,

  /** 广播房间背景变更 */
  PB3RoomCmdId_RcRoomImageChange = 100155,

  /** 通知房主实名认 证 */
  PB3RoomCmdId_RcRoomOwnerCert = 100156,

  /** 发起报名抽奖时,通知玩家报名. */
  PB3RoomCmdId_RcLuckyDrawBroadcast = 100157,

  /** 摇号抽奖报名人数 */
  PB3RoomCmdId_RcLuckyDrawCount = 100158,

  /** 摇号抽奖被取消 */
  PB3RoomCmdId_RcLuckyDrawCancelled = 100159,

  /** 参与抽奖的玩家列表 */
  PB3RoomCmdId_RcLuckyDrawParticipator = 100160,

  /** 摇号结果 */
  PB3RoomCmdId_RcLuckyDrawResult = 100161,

  /** 摇号抽奖要公布的获奖名单 */
  PB3RoomCmdId_RcLuckyDrawWinner = 100162,

  /** 关闭通知房间热度 BroadcastRoomHeat */
  PB3RoomCmdId_RcRoomHeat = 100163,

  /** BroadcastChairButton 推送是否显示排麦按钮 */
  PB3RoomCmdId_RcChangeShowChairButton = 100164,

  /** 切换声音sdk */
  PB3RoomCmdId_RcRoomSwitchVoiceSdk = 100165,

  /** 推送派单计时 */
  PB3RoomCmdId_RcSendBillTime = 100166,

  /** BroadcastPresenter 广播主持人变更 */
  PB3RoomCmdId_RcPresenter = 100167,

  /** 广播麦序魅力值 */
  PB3RoomCmdId_RcChairCharm = 100168,

  /** 接待弹窗推送 */
  PB3RoomCmdId_RcReceiveWindow = 100169,

  /** 排队上8麦时，如果上麦条件不符合，则推送 */
  PB3RoomCmdId_RcRoomSitLvLimit = 100170,

  /** 房间类型开关更新推送 RoomOnOffStatus */
  PB3RoomCmdId_RcRoomOnOffStatus = 100172,

  /** 限制上麦状态推送 BroadcastChairLimit */
  PB3RoomCmdId_RcClanChairLimit = 100173,

  /** 广播更新房间装饰背景 */
  PB3RoomCmdId_RcRoomUpdateDecorateBg = 100174,

  /** 广播购买房间装饰背景 */
  PB3RoomCmdId_RcRoomBuyDecorateBg = 100175,

  /** 是否显示吐泡泡入口 */
  PB3RoomCmdId_RcRoomRedEnvelope = 100176,

  /** 广播房间技能结果 */
  PB3RoomCmdId_RcRoomSkillResult = 100177,

  /** 广播房间使用技能 */
  PB3RoomCmdId_RcRoomUseSkill = 100178,

  /** 新用户通过首页接引弹窗进入房间通知，房主和主持才能收到 */
  PB3RoomCmdId_RcEnterRoomByReceiveWindow = 100179,

  /** 多端登录，设备开麦通知自己 BroadcastDeviceOpenMic */
  PB3RoomCmdId_RcDeviceOpenMicNoticeMyself = 100180,

  /** 多端登录，进入房间推送给自己 BroadcastEnterToMyself */
  PB3RoomCmdId_RcBroadcastEnterToMyself = 100181,

  /** 表演模式：麦序在档 PlayOrderRes */
  PB3RoomCmdId_RcPlayOrder = 100190,

  /** 表演模式：麦序排档 PlanOrderRes */
  PB3RoomCmdId_RcPlanOrder = 100191,

  /** 表演模式：节目设置费用 */
  PB3RoomCmdId_RcProgramFee = 100192,

  /** 表演模式: 歌词操作 ShowLyricCtrlRes */
  PB3RoomCmdId_RcShowLyricCtrl = 100194,

  /** 设置表演模式推送 BroadcastSetShow */
  PB3RoomCmdId_RcRoomShow = 100195,

  /** 表演模式: 节目信息 ShowInfoRes */
  PB3RoomCmdId_RcShowInfo = 100196,

  /** 上线全服通知 */
  PB3RoomCmdId_RcOnlineNotice = 100197,

  /** 广播停止投票 Vote */
  PB3RoomCmdId_RcBroadcastStopVote = 100198,

  /** 广播心情特效 */
  PB3RoomCmdId_RcBroadcastEffectMood = 100199,

  /** 广播清空公屏 CleanPublicScreen */
  PB3RoomCmdId_RcBroadcastCleanPublicScreen = 100200,

  /** 推送房间模式 */
  PB3RoomCmdId_RcBroadcastRoomPattern = 100201,

  /** 房间禁言 RoomBanSpeakNotice */
  PB3RoomCmdId_RcBroadcastRoomBanSpeak = 100202,

  /** 广播房间开始新年倒计时 BroadcastCountDownStart */
  PB3RoomCmdId_RcBroadcastCountDownStart = 100203,

  /** 合唱推送 ChorusNotice */
  PB3RoomCmdId_RcBroadcastChorus = 100204,

  /** 新合唱推送 ChorusNotice */
  PB3RoomCmdId_RcBroadcastChorusNew = 100205,

  /**  粉丝召唤推送 BroadcastFansRecall */
  PB3RoomCmdId_RcBroadcastFansRecall = 100206,

  /** 发起粉丝召唤提示推送 BroadcastFansRecallSend */
  PB3RoomCmdId_RcBroadcastFansRecallSend = 100207,

  /** 发起粉丝召唤进房推送 BroadcastFansRecallEnterRoom */
  PB3RoomCmdId_RcBroadcastFansRecallEnterRoom = 100208,

  /** 退房推荐 BroadcastLeaveRoomRecommend */
  PB3RoomCmdId_RcBroadcastLeaveRoomRecommend = 100209,

  /** 房间加密取消粉丝召唤推送 BroadcastFansRecallCancel */
  PB3RoomCmdId_RcBroadcastFansRecallCancel = 100210,

  /** 推送AgodaKey BroadcastAgoda */
  PB3RoomCmdId_RcBroadcastAgodaList = 100211,

  /** 踢出房告知个人 */
  PB3RoomCmdId_RcPersonalKickout = 100212,

  /** 师徒上麦特效推送 BroadcastTeacherStudent */
  PB3RoomCmdId_RcBroadcastTeacherStudentSitChair = 100213,

  /** 师徒麦上特效推送 BroadcastTeacherStudentChairList */
  PB3RoomCmdId_RcBroadcastTeacherStudentChairList = 100214,

  /** 师徒进房公屏推送 BroadcastTeacherStudentEnterRoom */
  PB3RoomCmdId_RcBroadcastTeacherStudentEnterRoom = 100215,

  /** 开黑组队发车上麦推送 MobaTeamSitChairBroadcast */
  PB3RoomCmdId_RcBroadcastMobaTeamSitChair = 100216,

  /** 广播投票项投票数更改 */
  PB3RoomCmdId_RcBroadcastAddVote = 100217,

  /** 广播房间直播url */
  PB3RoomCmdId_RcBroadcastLive = 100218,

  /** 进房成功，推送pk入口 PkEntryPush */
  PB3RoomCmdId_RcPkEntry = 100219,

  /** 小时榜结算推送 */
  PB3RoomCmdId_RcClanHourRankFirst = 100220,

  /** 小时榜信息推送 */
  PB3RoomCmdId_RcClanHourRank = 100222,

  /** 进房成功，推送达人pk入口 SingleLivePkEntryPush */
  PB3RoomCmdId_RcSingleLivePkEntry = 100223,

  /** 推送客户端房间模式配置 XcmRoomPatternCliCfgData (acm_conf.ext.proto) */
  PB3RoomCmdId_RcRoomPatternCfg = 100224,

  /** 公会任务入口推送 */
  PB3RoomCmdId_RcClanTask = 100225,

  /** 公会任务完成更新推送 */
  PB3RoomCmdId_RcClanTaskDone = 100226,

  /** 心愿礼物推送 */
  PB3RoomCmdId_RcWishGift = 100227,

  /** 心愿礼物数量推送 */
  PB3RoomCmdId_RcWishGiftTaskDoneNum = 100228,

  /** 进入小窝 EnterFossaRoom */
  PB3RoomCmdId_RcEnterFossaRoom = 100235,

  /** 退出小窝 LeaveFossaRoom */
  PB3RoomCmdId_RcLeaveFossaRoom = 100236,

  /** 对方拒绝开启小窝 OtherRejectFossa */
  PB3RoomCmdId_RcOtherRejectFossa = 100237,

  /** 对方提前离开小窝 OtherLeaveFossaEarly */
  PB3RoomCmdId_RcOtherLeaveFossaEarly = 100238,

  /** 交友2.0推送 */
  PB3RoomCmdId_RcMateChoice2ChairCharm = 100241,

  /** 广播互选结果      推送内容：BroadcastMateRoomMatch */
  PB3RoomCmdId_RcMateChoice2Result = 100242,

  /** 广播帽子获得者  推送内容：BroadcastMateChoiceHatOwner */
  PB3RoomCmdId_RcMateChoiceHatOwner = 100243,

  /** 广播交友流程切换成功通知    推送内容：BroadcastMateChoiceChangeStatusSuccess */
  PB3RoomCmdId_RcMateChoiceChangeStatusSuccess = 100244,

  /** 广播心动选择阶段 选择麦位序号    推送内容：BroadcastMateChoiceSelectChairNumber */
  PB3RoomCmdId_RcMateChoiceSelectChairNumber = 100245,

  /** 广播所有匹配结果    推送内容：BroadcastMateChoice2Pairs */
  PB3RoomCmdId_RcMateChoice2Pairs = 100246,

  /** 广播交友流程切换到准备状态    推送内容：BroadcastMateChoice2ChangeStatusToReady */
  PB3RoomCmdId_RcMateChoice2ChangeStatusToReady = 100247,

  /** 相亲房流水统计 MateRoomGoldStatRes */
  PB3RoomCmdId_RcMateRoomGoldStat = 100248,

  /** 播放器入口权限推送 */
  PB3RoomCmdId_RcBgmPlayerSwitch = 100229,

  /** 广播投票信息 BroadcastVoteInfo */
  PB3RoomCmdId_RcBroadcastVoteInfo = 100230,

  /** 推送虚拟形象开关 BroadcastRoomCubism */
  PB3RoomCmdId_RcBroadcastRoomCubism = 100250,

  /** 推送房间右上角角标数据 BroadcastRoomTopRightCornerLabel */
  PB3RoomCmdId_RcRoomTopRightCornerLabel = 100251,

  /** 房间日榜贡献榜单更改（不过滤鲜花） NotifyRankPush */
  PB3RoomCmdId_RcRoomDayRankChange = 100252,

  /** 房间右上角角标数据增量数据 BroadcastRoomTopRightCornerLabelChange */
  PB3RoomCmdId_RcRoomTopRightCornerLabelChange = 100253,

  /** 房间特效推送 QueryRoomEffectConfRes */
  PB3RoomCmdId_RcRoomEffectConf = 100254,

  /** 主场进房 弹幕游戏匹配状态推送 BarrageGameMatchInfo */
  PB3RoomCmdId_RcHostEnterRoomGameMatch = 100255,

  /** 弹幕游戏配置推送,推送时机：进房或配置有变动时 BarrageGameEntryPush */
  PB3RoomCmdId_RcBarrageGameEntry = 100256,
};

GPBEnumDescriptor *PB3RoomCmdId_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3RoomCmdId_IsValidValue(int32_t value);

#pragma mark - Enum PB3HourRankRoomPushType

typedef GPB_ENUM(PB3HourRankRoomPushType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3HourRankRoomPushType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3HourRankRoomPushType_HrrpyNone = 0,

  /** 进房 */
  PB3HourRankRoomPushType_HrrpyEnterRoom = 1,

  /** 结算 */
  PB3HourRankRoomPushType_HrrpyFirst = 2,

  /** 实时排名 */
  PB3HourRankRoomPushType_HrrpyRankNum = 3,

  /** 魅力值 */
  PB3HourRankRoomPushType_HrrpyCharm = 4,
};

GPBEnumDescriptor *PB3HourRankRoomPushType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3HourRankRoomPushType_IsValidValue(int32_t value);

#pragma mark - Enum PB3NewFollowType

typedef GPB_ENUM(PB3NewFollowType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3NewFollowType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 原来跟随进来 */
  PB3NewFollowType_NftDefault = 0,

  /** 文字接待语进房 */
  PB3NewFollowType_NftText = 1,

  /** xxx在广播交友跟随xxx的脚步进入 */
  PB3NewFollowType_NftBroadcast = 2,

  /** 第三方 */
  PB3NewFollowType_NftOther = 3,

  /** 首页引导进房 */
  PB3NewFollowType_NftIndex = 4,

  /** 语音接待语进房 */
  PB3NewFollowType_NftVoice = 5,

  /** 划卡视频进房 */
  PB3NewFollowType_NftVideo = 7,

  /** 退房推荐进房 */
  PB3NewFollowType_NftLeave = 8,
};

GPBEnumDescriptor *PB3NewFollowType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3NewFollowType_IsValidValue(int32_t value);

#pragma mark - Enum PB3EnterRoomOpt

typedef GPB_ENUM(PB3EnterRoomOpt) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3EnterRoomOpt_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3EnterRoomOpt_EroZero = 0,

  /** 抢单 */
  PB3EnterRoomOpt_EroLightningOrder = 1,

  /** 快速准备游戏，1表示快速游戏，0表示忽略 */
  PB3EnterRoomOpt_RoomQuickGamePre = 2,

  /** 执行上麦 */
  PB3EnterRoomOpt_SetChairIng = 3,

  /** 开黑广播进厅 */
  PB3EnterRoomOpt_EroMobaTeam = 4,
};

GPBEnumDescriptor *PB3EnterRoomOpt_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3EnterRoomOpt_IsValidValue(int32_t value);

#pragma mark - Enum PB3EnterRoomWay

typedef GPB_ENUM(PB3EnterRoomWay) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3EnterRoomWay_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3EnterRoomWay_EroWayZero = 0,

  /** 通过首页接引弹窗进入 */
  PB3EnterRoomWay_EroWayReceiveWin = 1,

  /** 搜索进房 */
  PB3EnterRoomWay_EroWaySearch = 2,

  /** 粉丝召唤进房 */
  PB3EnterRoomWay_EroWayFansRecall = 3,

  /** 游戏开黑派单模式发车进房 */
  PB3EnterRoomWay_EroWayMobaTeamDeparture = 4,

  /** 首页列表进房 */
  PB3EnterRoomWay_EroWayHomeList = 5,

  /** 个人卡片进房 */
  PB3EnterRoomWay_EroWayPlayerCard = 6,

  /** 首页我的房间进房 */
  PB3EnterRoomWay_EroWayHomeRoom = 7,

  /** 个人主页我的房间进房 */
  PB3EnterRoomWay_EroWayPlayerPage = 8,

  /** 游戏列表进房 */
  PB3EnterRoomWay_EroWayGameList = 9,

  /** 房间雷达进房  雷达-雷达详情列表 */
  PB3EnterRoomWay_EroWayRadar = 10,

  /** 匹配进房 */
  PB3EnterRoomWay_EroWayMatch = 11,

  /** 排行榜进房 */
  PB3EnterRoomWay_EroWayRank = 12,

  /** 足迹进房 */
  PB3EnterRoomWay_EroWayFootprint = 13,

  /** IM进房 */
  PB3EnterRoomWay_EroWayIm = 14,

  /** 氧吧进房 */
  PB3EnterRoomWay_EroWayOxygenBar = 15,

  /** 顶流头条进房 */
  PB3EnterRoomWay_EroWayTopHeadline = 16,

  /** 雷达-礼物详情广播 进房 */
  PB3EnterRoomWay_EroWayRadarGift = 17,

  /** 房间-全服礼物 */
  PB3EnterRoomWay_EroWayRoomWorldGift = 18,

  /** 他人空间-进房 */
  PB3EnterRoomWay_EroWayOtherZone = 19,

  /** 通知推送 */
  PB3EnterRoomWay_EroWayNotice = 20,

  /** 名字-公会 */
  PB3EnterRoomWay_EroWayNameClan = 21,

  /** 消息-通知 */
  PB3EnterRoomWay_EroWayMessageNotice = 22,

  /** im分享-进房 */
  PB3EnterRoomWay_EroWayImShare = 23,

  /** cp结束-进房 */
  PB3EnterRoomWay_EroWayCpEnd = 24,

  /** pk进度条头像-进房 */
  PB3EnterRoomWay_EroWayPk = 25,

  /** 空间热点-进房 */
  PB3EnterRoomWay_EroWayHotpoint = 26,

  /** 头条 */
  PB3EnterRoomWay_EroWayHeadline = 27,

  /** IM对话页 */
  PB3EnterRoomWay_EroWayImPage = 28,

  /** 首页引导弹窗点击【进房玩玩】 */
  PB3EnterRoomWay_EroIndexClickEnter = 29,
};

GPBEnumDescriptor *PB3EnterRoomWay_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3EnterRoomWay_IsValidValue(int32_t value);

#pragma mark - Enum PB3BarrageGameStatus

/** 游戏状态 */
typedef GPB_ENUM(PB3BarrageGameStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3BarrageGameStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3BarrageGameStatus_BgsNone = 0,

  /** 游戏开始 */
  PB3BarrageGameStatus_BgsStart = 1,

  /** 游戏结束 */
  PB3BarrageGameStatus_BgsEnd = 2,

  /** 游戏中断 */
  PB3BarrageGameStatus_BgsAbort = 3,
};

GPBEnumDescriptor *PB3BarrageGameStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3BarrageGameStatus_IsValidValue(int32_t value);

#pragma mark - Enum PB3BarrageGameMatchConfirmStatus

typedef GPB_ENUM(PB3BarrageGameMatchConfirmStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3BarrageGameMatchConfirmStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3BarrageGameMatchConfirmStatus_BgmcsNone = 0,

  /** 同意 */
  PB3BarrageGameMatchConfirmStatus_BgmcsAgree = 1,

  /** 拒绝 */
  PB3BarrageGameMatchConfirmStatus_BgmcsRefuse = 2,
};

GPBEnumDescriptor *PB3BarrageGameMatchConfirmStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3BarrageGameMatchConfirmStatus_IsValidValue(int32_t value);

#pragma mark - Enum PB3BarrageGameMatchStatus

typedef GPB_ENUM(PB3BarrageGameMatchStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3BarrageGameMatchStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3BarrageGameMatchStatus_BgmsNone = 0,

  /** 匹配成功 */
  PB3BarrageGameMatchStatus_BgmsSuccess = 1,

  /** 匹配超时 */
  PB3BarrageGameMatchStatus_BgmsTimeOut = 2,

  /** 匹配中 */
  PB3BarrageGameMatchStatus_BgmsMatching = 3,

  /** 重新匹配 */
  PB3BarrageGameMatchStatus_BgmsRematch = 4,

  /**  匹配成功 超时未确认 */
  PB3BarrageGameMatchStatus_BgmsNotConfirm = 5,

  /** 匹配取消 */
  PB3BarrageGameMatchStatus_BgmsCancel = 6,

  /** 匹配成功，拒绝了 */
  PB3BarrageGameMatchStatus_BgmsRefuseMatch = 7,

  /** 匹配成功 等待内部回调 服务端内部用状态 */
  PB3BarrageGameMatchStatus_BgmsWaitRecall = 8,
};

GPBEnumDescriptor *PB3BarrageGameMatchStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3BarrageGameMatchStatus_IsValidValue(int32_t value);

#pragma mark - Enum PB3RoomClanType

/** 房间厅类型枚举 */
typedef GPB_ENUM(PB3RoomClanType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3RoomClanType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3RoomClanType_RctZero = 0,

  /** 歌厅 */
  PB3RoomClanType_RctSinging = 1,
};

GPBEnumDescriptor *PB3RoomClanType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3RoomClanType_IsValidValue(int32_t value);

#pragma mark - Enum PB3PrivilegePreventOpt

typedef GPB_ENUM(PB3PrivilegePreventOpt) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3PrivilegePreventOpt_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3PrivilegePreventOpt_Zero = 0,

  /** 防禁言 */
  PB3PrivilegePreventOpt_BanSpeak = 1,

  /** 防踢出 */
  PB3PrivilegePreventOpt_Kickout = 2,
};

GPBEnumDescriptor *PB3PrivilegePreventOpt_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3PrivilegePreventOpt_IsValidValue(int32_t value);

#pragma mark - Enum PB3PCRoomGreetingOperationType

/** PC问候语操作 */
typedef GPB_ENUM(PB3PCRoomGreetingOperationType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3PCRoomGreetingOperationType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 增加 */
  PB3PCRoomGreetingOperationType_PcAdd = 0,

  /** 修改 */
  PB3PCRoomGreetingOperationType_PcModify = 1,

  /** 删除 */
  PB3PCRoomGreetingOperationType_PcDel = 2,
};

GPBEnumDescriptor *PB3PCRoomGreetingOperationType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3PCRoomGreetingOperationType_IsValidValue(int32_t value);

#pragma mark - Enum PB3ChairStatus

/** 嘉宾位状态 */
typedef GPB_ENUM(PB3ChairStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ChairStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 空闲 */
  PB3ChairStatus_CsOpen = 0,

  /** 关闭 */
  PB3ChairStatus_CsClose = 1,
};

GPBEnumDescriptor *PB3ChairStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ChairStatus_IsValidValue(int32_t value);

#pragma mark - Enum PB3SitChairType

typedef GPB_ENUM(PB3SitChairType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3SitChairType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 普通上麦 */
  PB3SitChairType_SctNormalSit = 0,

  /** 匿名上麦 */
  PB3SitChairType_SctMaskSit = 1,

  /** 遵循上一次，后台用 */
  PB3SitChairType_SctFollowLast = 2,
};

GPBEnumDescriptor *PB3SitChairType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3SitChairType_IsValidValue(int32_t value);

#pragma mark - Enum PB3ClearChairType

typedef GPB_ENUM(PB3ClearChairType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ClearChairType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3ClearChairType_CctZero = 0,

  /** 清空座位 */
  PB3ClearChairType_CctClearChair = 1,
};

GPBEnumDescriptor *PB3ClearChairType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ClearChairType_IsValidValue(int32_t value);

#pragma mark - Enum PB3ChatShowSiteType

typedef GPB_ENUM(PB3ChatShowSiteType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ChatShowSiteType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 默认显示规则 */
  PB3ChatShowSiteType_CsstNone = 0,

  /** 只显示公屏 */
  PB3ChatShowSiteType_CsstOnlyPublicScreen = 1,
};

GPBEnumDescriptor *PB3ChatShowSiteType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ChatShowSiteType_IsValidValue(int32_t value);

#pragma mark - Enum PB3UserSpeakOrigin

typedef GPB_ENUM(PB3UserSpeakOrigin) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3UserSpeakOrigin_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /**  占位 */
  PB3UserSpeakOrigin_UsoNone = 0,

  /** 默认 */
  PB3UserSpeakOrigin_UsoDefault = 1,

  /** 开黑 */
  PB3UserSpeakOrigin_UsoMoba = 2,
};

GPBEnumDescriptor *PB3UserSpeakOrigin_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3UserSpeakOrigin_IsValidValue(int32_t value);

#pragma mark - Enum PB3ExtendKey

typedef GPB_ENUM(PB3ExtendKey) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ExtendKey_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3ExtendKey_EkNone = 0,

  /** 开黑广播(世界广播)背景图 */
  PB3ExtendKey_EkGameBgBro = 1,

  /** 开黑广播边框图 */
  PB3ExtendKey_EkGameFrameBro = 2,

  /** 世界广播-边框颜色 */
  PB3ExtendKey_EkGameFrameColor = 3,

  /** 车队ID */
  PB3ExtendKey_EkCarId = 4,

  /** PC开黑广播(世界广播)背景图 */
  PB3ExtendKey_EkGameBgBroPc = 5,
};

GPBEnumDescriptor *PB3ExtendKey_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ExtendKey_IsValidValue(int32_t value);

#pragma mark - Enum PB3VoteType

typedef GPB_ENUM(PB3VoteType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3VoteType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 麦上投票 */
  PB3VoteType_VoteTypeDefault = 0,

  /** 自定义投票 */
  PB3VoteType_VoteTypeDefined = 1,
};

GPBEnumDescriptor *PB3VoteType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3VoteType_IsValidValue(int32_t value);

#pragma mark - Enum PB3HeadLineStyle

typedef GPB_ENUM(PB3HeadLineStyle) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3HeadLineStyle_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 默认头条样式 */
  PB3HeadLineStyle_HlsNone = 0,

  /** 普通头条样式 */
  PB3HeadLineStyle_HlsNormal = 1,

  /** 豪华头条样式 */
  PB3HeadLineStyle_HlsLuxury = 2,

  /** 超级头条样式 */
  PB3HeadLineStyle_HlsSuper = 3,
};

GPBEnumDescriptor *PB3HeadLineStyle_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3HeadLineStyle_IsValidValue(int32_t value);

#pragma mark - Enum PB3PushHeadlineType

typedef GPB_ENUM(PB3PushHeadlineType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3PushHeadlineType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 正常头条 */
  PB3PushHeadlineType_PhtNormal = 0,

  /** 秒榜 */
  PB3PushHeadlineType_PhtSeckill = 1,

  /** 热榜 */
  PB3PushHeadlineType_PhtHot = 2,
};

GPBEnumDescriptor *PB3PushHeadlineType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3PushHeadlineType_IsValidValue(int32_t value);

#pragma mark - Enum PB3LuckyDrawType

/** 摇号抽奖：类型 */
typedef GPB_ENUM(PB3LuckyDrawType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3LuckyDrawType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不使用 */
  PB3LuckyDrawType_LdtNone = 0,

  /** 直接抽奖 */
  PB3LuckyDrawType_LdtImmediately = 1,

  /** 报名抽奖 */
  PB3LuckyDrawType_LdtSignUp = 2,
};

GPBEnumDescriptor *PB3LuckyDrawType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3LuckyDrawType_IsValidValue(int32_t value);

#pragma mark - Enum PB3SettingOptionType

/** 摇号抽奖：设置选项类型 */
typedef GPB_ENUM(PB3SettingOptionType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3SettingOptionType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不使用 */
  PB3SettingOptionType_SotNone = 0,

  /** 只抽麦上 */
  PB3SettingOptionType_SotOnChairOnly = 1,

  /** 不抽房主 */
  PB3SettingOptionType_SotExcludeOwner = 2,

  /** 财富等级不低于(..) */
  PB3SettingOptionType_SotWealthLevel = 3,
};

GPBEnumDescriptor *PB3SettingOptionType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3SettingOptionType_IsValidValue(int32_t value);

#pragma mark - Enum PB3LuckyDrawStage

/** 摇号抽奖：阶段 */
typedef GPB_ENUM(PB3LuckyDrawStage) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3LuckyDrawStage_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不使用 */
  PB3LuckyDrawStage_LdsNone = 0,

  /** 报名阶段 */
  PB3LuckyDrawStage_LdsSignUp = 1,

  /** 结果阶段 */
  PB3LuckyDrawStage_LdsResult = 2,
};

GPBEnumDescriptor *PB3LuckyDrawStage_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3LuckyDrawStage_IsValidValue(int32_t value);

#pragma mark - Enum PB3ConfirmWinnerOption

/** 摇号抽奖：公布结果选项 */
typedef GPB_ENUM(PB3ConfirmWinnerOption) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ConfirmWinnerOption_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不使用 */
  PB3ConfirmWinnerOption_CwoNone = 0,

  /** 无人中奖 */
  PB3ConfirmWinnerOption_CwoNoWinner = 1,

  /** 公布结果 */
  PB3ConfirmWinnerOption_CwoAnnounceWinner = 2,
};

GPBEnumDescriptor *PB3ConfirmWinnerOption_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ConfirmWinnerOption_IsValidValue(int32_t value);

#pragma mark - Enum PB3VoiceSdkType

/** 声音sdk类型 */
typedef GPB_ENUM(PB3VoiceSdkType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3VoiceSdkType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不使用 */
  PB3VoiceSdkType_VstNone = 0,

  /** 腾讯sdk */
  PB3VoiceSdkType_VstTencent = 1,

  /** 声网sdk */
  PB3VoiceSdkType_VstAgora = 2,

  /** 网易sdk */
  PB3VoiceSdkType_VstNetease = 4,
};

GPBEnumDescriptor *PB3VoiceSdkType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3VoiceSdkType_IsValidValue(int32_t value);

#pragma mark - Enum PB3RoomOptType

typedef GPB_ENUM(PB3RoomOptType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3RoomOptType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3RoomOptType_RotZero = 0,

  /** 抢单 */
  PB3RoomOptType_RotAcceptSendBill = 1,
};

GPBEnumDescriptor *PB3RoomOptType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3RoomOptType_IsValidValue(int32_t value);

#pragma mark - Enum PB3SetPresenterOpt

typedef GPB_ENUM(PB3SetPresenterOpt) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3SetPresenterOpt_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3SetPresenterOpt_SptZero = 0,

  /** 设置主持 */
  PB3SetPresenterOpt_SptAdd = 1,

  /** 删除主持 */
  PB3SetPresenterOpt_SptDel = 2,
};

GPBEnumDescriptor *PB3SetPresenterOpt_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3SetPresenterOpt_IsValidValue(int32_t value);

#pragma mark - Enum PB3ReceiveRoomType

typedef GPB_ENUM(PB3ReceiveRoomType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ReceiveRoomType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3ReceiveRoomType_ReceiveRoomZero = 0,

  /** 互动 */
  PB3ReceiveRoomType_ReceiveRoomInteract = 1,

  /** 点唱 */
  PB3ReceiveRoomType_ReceiveRoomSing = 2,

  /** 处对象 */
  PB3ReceiveRoomType_ReceiveRoomMakeFriend = 3,

  /** 扩列 */
  PB3ReceiveRoomType_ReceiveRoomExpansion = 4,

  /** 电台 */
  PB3ReceiveRoomType_ReceiveRoomRadio = 5,

  /** 陪伴 */
  PB3ReceiveRoomType_ReceiveRoomAccompany = 6,

  /** 派单 */
  PB3ReceiveRoomType_ReceiveRoomBill = 7,

  /** 游戏 */
  PB3ReceiveRoomType_ReceiveRoomGame = 8,

  /** 缘分 */
  PB3ReceiveRoomType_ReceiveRoomFate = 9,
};

GPBEnumDescriptor *PB3ReceiveRoomType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ReceiveRoomType_IsValidValue(int32_t value);

#pragma mark - Enum PB3CancelReceiveWindowType

/** 接引弹窗关闭方式 */
typedef GPB_ENUM(PB3CancelReceiveWindowType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3CancelReceiveWindowType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3CancelReceiveWindowType_CrwtZero = 0,

  /** 点关闭按钮 */
  PB3CancelReceiveWindowType_CrwtButton = 1,

  /** 切换顶部导航关闭 */
  PB3CancelReceiveWindowType_CrwtTopTab = 2,

  /** 点头像进空间关闭 */
  PB3CancelReceiveWindowType_CrwtIcon = 3,

  /** 点击按钮-进房关闭 */
  PB3CancelReceiveWindowType_CrwtEnterRoom = 4,

  /** 进其他房间关闭 */
  PB3CancelReceiveWindowType_CrwtRoomOther = 5,

  /** 切换底部导航关闭 */
  PB3CancelReceiveWindowType_CrwtBottomTab = 6,

  /** 其他关闭方式 */
  PB3CancelReceiveWindowType_CrwtOther = 7,
};

GPBEnumDescriptor *PB3CancelReceiveWindowType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3CancelReceiveWindowType_IsValidValue(int32_t value);

#pragma mark - Enum PB3DiscardReceiveWindowType

/** 接引弹窗丢弃类型 */
typedef GPB_ENUM(PB3DiscardReceiveWindowType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3DiscardReceiveWindowType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3DiscardReceiveWindowType_DrwtDefault = 0,

  /** 其他 */
  PB3DiscardReceiveWindowType_DrwtOther = 1,
};

GPBEnumDescriptor *PB3DiscardReceiveWindowType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3DiscardReceiveWindowType_IsValidValue(int32_t value);

#pragma mark - Enum PB3ReceiveWindowPosition

/** 显示位置 */
typedef GPB_ENUM(PB3ReceiveWindowPosition) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ReceiveWindowPosition_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3ReceiveWindowPosition_RwpZero = 0,

  /** 顶部位置 */
  PB3ReceiveWindowPosition_RwpTop = 1,

  /** 中间位置 */
  PB3ReceiveWindowPosition_RwpMiddle = 2,

  /** 底部位置 */
  PB3ReceiveWindowPosition_RwpBottom = 3,
};

GPBEnumDescriptor *PB3ReceiveWindowPosition_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ReceiveWindowPosition_IsValidValue(int32_t value);

#pragma mark - Enum PB3ReceiveWindowStyle

/** 接引弹窗样式 */
typedef GPB_ENUM(PB3ReceiveWindowStyle) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ReceiveWindowStyle_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 旧样式 */
  PB3ReceiveWindowStyle_RwsDefault = 0,

  /** 横版样式 */
  PB3ReceiveWindowStyle_RwsHorizontal = 1,

  /** 竖版样式 */
  PB3ReceiveWindowStyle_RwsVertical = 2,
};

GPBEnumDescriptor *PB3ReceiveWindowStyle_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ReceiveWindowStyle_IsValidValue(int32_t value);

#pragma mark - Enum PB3WinType

typedef GPB_ENUM(PB3WinType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3WinType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3WinType_WinZero = 0,

  /** 首页接引弹窗 */
  PB3WinType_WinReceive = 1,

  /** 新手礼包弹窗 */
  PB3WinType_WinNewGift = 2,
};

GPBEnumDescriptor *PB3WinType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3WinType_IsValidValue(int32_t value);

#pragma mark - Enum PB3RoomOnOffType

/** 房间类型的开关 */
typedef GPB_ENUM(PB3RoomOnOffType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3RoomOnOffType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不使用 */
  PB3RoomOnOffType_RootNone = 0,

  /** 麦序魅力值开关 */
  PB3RoomOnOffType_RootChairCharm = 1,

  /** 麦序序号开关 */
  PB3RoomOnOffType_RootChairSer = 2,

  /** 公会房间麦序开关 */
  PB3RoomOnOffType_RootClanChairLimit = 3,

  /** 红包开关 */
  PB3RoomOnOffType_RootRedEnvelope = 4,

  /** 房间装饰开关 */
  PB3RoomOnOffType_RootRoomDecorate = 5,

  /** 活动房间装饰屏蔽开关 */
  PB3RoomOnOffType_RootActivityRoomDecorate = 6,

  /** 房间设置里是否自主公会房间上麦限制 */
  PB3RoomOnOffType_RootAutoClanChairLimit = 7,

  /** 活动房间首充提示开关 */
  PB3RoomOnOffType_RootAcRoomChargeNotice = 8,

  /** 房间资料审核开关 */
  PB3RoomOnOffType_RootAuditRoom = 9,

  /** 鲸鱼图泡泡等级限制开关 */
  PB3RoomOnOffType_RootRedEnvelopeLevel = 10,

  /** 房间公屏文字过滤开关 （加密房） */
  PB3RoomOnOffType_TextFilterRoomScreenEncrypted = 11,

  /** 房间公屏文字过滤开关 （非加密房） */
  PB3RoomOnOffType_TextFilterRoomScreenUnencrypted = 12,

  /** 大型活动房房间进场特效开关 */
  PB3RoomOnOffType_RootEntryEffectSwitch = 13,

  /** 公会退会费开关 */
  PB3RoomOnOffType_ConsortiaQuitPunish = 14,

  /** 房间无爵位 */
  PB3RoomOnOffType_RootNoNobility = 15,

  /** 随机 鲸鱼吐泡泡等级限制开关 */
  PB3RoomOnOffType_RootRandomRedEnvelopeLevel = 16,

  /** 随机 红包开关 */
  PB3RoomOnOffType_RootRandomRedEnvelope = 17,

  /** 大型活动房特效开关 */
  PB3RoomOnOffType_RootActivityRoomEffect = 18,

  /** 游戏自动广播 */
  PB3RoomOnOffType_RootGameAutoBf = 20,

  /** 切换游戏模式按钮显示 */
  PB3RoomOnOffType_RootChangeGamePatternButton = 21,

  /** 大型活动房表情开关，开了所有人可见，关闭后不显示表情给其他人看 */
  PB3RoomOnOffType_RootActivityRoomEmoji = 22,

  /** 大型活动房礼物动效开关，开了后需设置礼物价值阈值，只有价值达到阈值后的礼物动效才全部广播显示。关闭后不显示给其他人看，仅自己可见 */
  PB3RoomOnOffType_RootActivityRoomEffectGift = 23,

  /** 大型活动房动效(scene_player里的effect)开关，开了后需设置等级阈值，只有等级达到阈值后的用户，动效才全部广播显示。开关关闭后动效所有人不可见。 */
  PB3RoomOnOffType_RootActivityRoomSceneEffect = 24,

  /** 房间心情特效面板显示开关 */
  PB3RoomOnOffType_RootEffectMood = 26,

  /** 房间活动游戏入口显示开关 */
  PB3RoomOnOffType_RootAcGameList = 27,

  /** 房间福利助手开关 */
  PB3RoomOnOffType_RoomWelfare = 28,

  /** 表演模式排挡灰度开关(控制签约成员) */
  PB3RoomOnOffType_RoomShowModePlanSign = 29,

  /** 清空房间公屏聊天记录开关 */
  PB3RoomOnOffType_RootCleanPubliCScreen = 30,

  /** 排挡隐藏开关 */
  PB3RoomOnOffType_RoomShowModePlan = 31,

  /** 自动开始开关 */
  PB3RoomOnOffType_RoomGameAutoInvite = 32,

  /** 房间禁言 */
  PB3RoomOnOffType_RoomBanSpeak = 33,

  /** 合唱开关 */
  PB3RoomOnOffType_Chorus = 35,

  /** 跨端合唱开关，打开APP和PC可以合唱，关闭只能各自端合唱 */
  PB3RoomOnOffType_ChorusClient = 36,

  /** 移动端合唱入口开关 */
  PB3RoomOnOffType_ChorusApp = 37,

  /** 公屏多频道开关 */
  PB3RoomOnOffType_RootMultiChannel = 38,

  /** 房间实时排行榜 */
  PB3RoomOnOffType_RoomRankDay = 39,

  /** PC 房间欢迎语 */
  PB3RoomOnOffType_PcRoomGreeting = 40,

  /** 房间主持欢迎语 */
  PB3RoomOnOffType_RoomPresentWelcome = 41,

  /** 频道信息过滤开关 */
  PB3RoomOnOffType_RoomChannelFilter = 43,

  /** 退房推荐显示总开关 */
  PB3RoomOnOffType_RoomLeaveRecommend = 44,

  /** 退房推荐黑名单控制开关 */
  PB3RoomOnOffType_RoomLeaveRecommendBlackList = 45,

  /** 房间用户权重新规则开关 */
  PB3RoomOnOffType_RoomUserWeightRankNew = 46,

  /** 待唱列表开关 */
  PB3RoomOnOffType_SongWaitList = 47,

  /** 加密房禁止截屏和录屏 */
  PB3RoomOnOffType_RoomBanScreenShot = 48,

  /** 聊天特效开关 */
  PB3RoomOnOffType_ChatEffect = 49,

  /** 房间投票白名单 */
  PB3RoomOnOffType_RoomVoteWhitelist = 50,

  /** 个人开黑房间打开游戏开关 */
  PB3RoomOnOffType_RoomMobaTeamOpenGame = 51,

  /** 全服告白位开关 */
  PB3RoomOnOffType_RoomCpPublicNotice = 52,

  /** 房间播放器入口开关 */
  PB3RoomOnOffType_RoomAudioPlayer = 53,

  /** 公会小时榜黑名单 */
  PB3RoomOnOffType_ClanHourRankBlacklist = 54,

  /** PK互动开关 */
  PB3RoomOnOffType_RoomPkPunishment = 55,

  /** 公会小时榜入口开关 */
  PB3RoomOnOffType_ClanHourRankInlet = 56,

  /** 个播PK互动开关 */
  PB3RoomOnOffType_RoomSingleLivePkPunishment = 57,

  /** 空坑沉底开关 */
  PB3RoomOnOffType_RoomEmptyChairSediment = 58,

  /** 云蹦迪狂欢时刻开关 */
  PB3RoomOnOffType_RoomCloudDiscoRock = 59,

  /** 云蹦迪机器人开关 */
  PB3RoomOnOffType_RoomCloudDiscoRobot = 60,

  /** 心愿礼物入口灰度开关 */
  PB3RoomOnOffType_RoomWishGiftSwitch = 62,

  /** 公会任务入口灰度开关 */
  PB3RoomOnOffType_RoomClanTaskSwitch = 63,

  /** 公会房上麦限制 */
  PB3RoomOnOffType_ClanSitChairLimit = 65,

  /** 不受同一公会上麦限制名单 */
  PB3RoomOnOffType_NotSameClanSitChairLimit = 66,

  /** 审核房间人数上限开关 */
  PB3RoomOnOffType_RoomAuditApplyLimitPeopleNumSwitch = 67,

  /** 麦上用户播放器入口开关 */
  PB3RoomOnOffType_RoomBgmPlayerSwitch = 68,

  /** 弹幕游戏入口开关 */
  PB3RoomOnOffType_RoomBarrageGameEntry = 70,
};

GPBEnumDescriptor *PB3RoomOnOffType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3RoomOnOffType_IsValidValue(int32_t value);

#pragma mark - Enum PB3BF_RECORD_KIND

/** 广播交友信息类型, 与广播交友信息里的info_type 字段对应的 */
typedef GPB_ENUM(PB3BF_RECORD_KIND) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3BF_RECORD_KIND_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 广播交友信息 */
  PB3BF_RECORD_KIND_BfrkNormal = 0,

  /** 跳跳 */
  PB3BF_RECORD_KIND_BfrkTiaoTiao = 1,

  /** 全副礼物 */
  PB3BF_RECORD_KIND_BfrkWorldGift = 2,
};

GPBEnumDescriptor *PB3BF_RECORD_KIND_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3BF_RECORD_KIND_IsValidValue(int32_t value);

#pragma mark - Enum PB3ROOM_SKILL_TYPE

/** ////房间技能 */
typedef GPB_ENUM(PB3ROOM_SKILL_TYPE) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ROOM_SKILL_TYPE_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3ROOM_SKILL_TYPE_RstNormal = 0,

  /** 水果机 */
  PB3ROOM_SKILL_TYPE_RstFruit = 1,

  /** 打雷 */
  PB3ROOM_SKILL_TYPE_RstThunder = 2,
};

GPBEnumDescriptor *PB3ROOM_SKILL_TYPE_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ROOM_SKILL_TYPE_IsValidValue(int32_t value);

#pragma mark - Enum PB3ROOM_SKILL_DATA

typedef GPB_ENUM(PB3ROOM_SKILL_DATA) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ROOM_SKILL_DATA_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3ROOM_SKILL_DATA_RsdNormal = 0,

  /** SkillPlayer */
  PB3ROOM_SKILL_DATA_RsdPlayer = 1,

  /** SkillChair */
  PB3ROOM_SKILL_DATA_RsdChair = 2,
};

GPBEnumDescriptor *PB3ROOM_SKILL_DATA_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ROOM_SKILL_DATA_IsValidValue(int32_t value);

#pragma mark - Enum PB3ChangeRoomSetType

typedef GPB_ENUM(PB3ChangeRoomSetType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ChangeRoomSetType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3ChangeRoomSetType_CrstNone = 0,

  /** 房间信息 （name，password，greeting） */
  PB3ChangeRoomSetType_CrstRoomInfo = 1,

  /** 切换房间模式 */
  PB3ChangeRoomSetType_CrstPattern = 5,

  /** 切换房间音质 */
  PB3ChangeRoomSetType_CrstVoice = 6,

  /** 麦序魅力值状态 */
  PB3ChangeRoomSetType_CrstCharm = 7,

  /** 麦序魅力值状态 */
  PB3ChangeRoomSetType_CrstChairLimit = 8,

  /** 麦序魅力值状态 */
  PB3ChangeRoomSetType_CrstPwdEnable = 9,

  /** 游戏自动广播开关 0,1 */
  PB3ChangeRoomSetType_CrstGameAutoBf = 10,

  /** 个播通知开关 */
  PB3ChangeRoomSetType_CrstSingleLiveNotify = 11,

  /** 切换个播2.0模版类型 */
  PB3ChangeRoomSetType_CrstSingleLiveTpl = 12,

  /** 云蹦迪震动开关 */
  PB3ChangeRoomSetType_CrstCloudDiscoRoomShake = 13,

  /** 虚拟形象开关 */
  PB3ChangeRoomSetType_CrstCubism = 14,
};

GPBEnumDescriptor *PB3ChangeRoomSetType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ChangeRoomSetType_IsValidValue(int32_t value);

#pragma mark - Enum PB3ChorusOptType

typedef GPB_ENUM(PB3ChorusOptType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ChorusOptType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3ChorusOptType_CotNone = 0,

  /** 发起合唱邀请 */
  PB3ChorusOptType_CotInvite = 1,

  /** 拒绝合唱 */
  PB3ChorusOptType_CotRefuse = 2,

  /** 接受合唱 */
  PB3ChorusOptType_CotAccept = 3,

  /** 结束合唱 */
  PB3ChorusOptType_CotStop = 4,

  /** 开始合唱 */
  PB3ChorusOptType_CotStart = 5,

  /** sdk连接失败 */
  PB3ChorusOptType_CotSdkError = 6,
};

GPBEnumDescriptor *PB3ChorusOptType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ChorusOptType_IsValidValue(int32_t value);

#pragma mark - Enum PB3RoomBanSpeakType

typedef GPB_ENUM(PB3RoomBanSpeakType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3RoomBanSpeakType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3RoomBanSpeakType_RbstNone = 0,

  /** 禁言 */
  PB3RoomBanSpeakType_RbstBan = 1,

  /** 解除 */
  PB3RoomBanSpeakType_RbstRelease = 2,
};

GPBEnumDescriptor *PB3RoomBanSpeakType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3RoomBanSpeakType_IsValidValue(int32_t value);

#pragma mark - Enum PB3RecallContentStatus

/** 召唤语审核状态 */
typedef GPB_ENUM(PB3RecallContentStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3RecallContentStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3RecallContentStatus_RcsNone = 0,

  /** 通过 */
  PB3RecallContentStatus_RcsPass = 1,

  /** 审核中 */
  PB3RecallContentStatus_RcsChecking = 2,

  /**  拒绝 */
  PB3RecallContentStatus_RcsRefuse = 3,
};

GPBEnumDescriptor *PB3RecallContentStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3RecallContentStatus_IsValidValue(int32_t value);

#pragma mark - Enum PB3ChatClassify

typedef GPB_ENUM(PB3ChatClassify) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ChatClassify_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3ChatClassify_ChatZero = 0,

  /** IM */
  PB3ChatClassify_ChatIm = 1,

  /** Room */
  PB3ChatClassify_ChatRoom = 2,
};

GPBEnumDescriptor *PB3ChatClassify_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ChatClassify_IsValidValue(int32_t value);

#pragma mark - Enum PB3RoomChatShowType

typedef GPB_ENUM(PB3RoomChatShowType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3RoomChatShowType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3RoomChatShowType_RcstZero = 0,

  /** 进入房间展示 */
  PB3RoomChatShowType_RcstRoom = 1,

  /** 拉起键盘后展示 */
  PB3RoomChatShowType_RcstKeyboard = 2,
};

GPBEnumDescriptor *PB3RoomChatShowType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3RoomChatShowType_IsValidValue(int32_t value);

#pragma mark - Enum PB3PkRewardType

typedef GPB_ENUM(PB3PkRewardType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3PkRewardType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3PkRewardType_PkrtZero = 0,

  /** 主持PK */
  PB3PkRewardType_PkrtHost = 1,

  /** 个播PK */
  PB3PkRewardType_PkrtSingleLive = 2,
};

GPBEnumDescriptor *PB3PkRewardType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3PkRewardType_IsValidValue(int32_t value);

#pragma mark - Enum PB3AsyncReconnectedInRoomType

/** 在房间内断线重连请求枚举 */
typedef GPB_ENUM(PB3AsyncReconnectedInRoomType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3AsyncReconnectedInRoomType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3AsyncReconnectedInRoomType_ArirtNone = 0,

  /** 云蹦迪 */
  PB3AsyncReconnectedInRoomType_ArirtCloudDisco = 1,
};

GPBEnumDescriptor *PB3AsyncReconnectedInRoomType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3AsyncReconnectedInRoomType_IsValidValue(int32_t value);

#pragma mark - Enum PB3WishGiftType

/** 请求类型-心愿礼物 */
typedef GPB_ENUM(PB3WishGiftType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3WishGiftType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3WishGiftType_WgtNone = 0,

  /** 修改 */
  PB3WishGiftType_WgtUpdate = 1,

  /** 查询 */
  PB3WishGiftType_WgtGet = 2,
};

GPBEnumDescriptor *PB3WishGiftType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3WishGiftType_IsValidValue(int32_t value);

#pragma mark - Enum PB3ClanTaskType

/** 请求类型-置顶任务 */
typedef GPB_ENUM(PB3ClanTaskType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ClanTaskType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3ClanTaskType_CttZero = 0,

  /** 生成 */
  PB3ClanTaskType_CttSave = 1,

  /** 查询 */
  PB3ClanTaskType_CttGet = 2,

  /** 任务完成数+1 */
  PB3ClanTaskType_CttTaskDone = 3,

  /** 查询返回用户视角数据 */
  PB3ClanTaskType_CttGetUser = 4,
};

GPBEnumDescriptor *PB3ClanTaskType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ClanTaskType_IsValidValue(int32_t value);

#pragma mark - Enum PB3EnumOfficialExamResult

/** 官方考核结果 */
typedef GPB_ENUM(PB3EnumOfficialExamResult) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3EnumOfficialExamResult_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3EnumOfficialExamResult_OerNone = 0,

  /** 1-考核不通过 */
  PB3EnumOfficialExamResult_OerNotPass = 1,

  /** 2-考核通过 */
  PB3EnumOfficialExamResult_OerPass = 2,

  /** 3-待考核 */
  PB3EnumOfficialExamResult_OerWaitPass = 3,
};

GPBEnumDescriptor *PB3EnumOfficialExamResult_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3EnumOfficialExamResult_IsValidValue(int32_t value);

#pragma mark - PB3RoomExtRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface PB3RoomExtRoot : GPBRootObject
@end

#pragma mark - PB3NotifyRankPush

typedef GPB_ENUM(PB3NotifyRankPush_FieldNumber) {
  PB3NotifyRankPush_FieldNumber_RoomRankListArray = 1,
};

/**
 * 房间日榜贡献榜单更改（不过滤鲜花） CmdId=100252
 **/
@interface PB3NotifyRankPush : GPBMessage

/** 排行榜 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3Rank*> *roomRankListArray;
/** The number of items in @c roomRankListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger roomRankListArray_Count;

@end

#pragma mark - PB3HourRankPush

typedef GPB_ENUM(PB3HourRankPush_FieldNumber) {
  PB3HourRankPush_FieldNumber_IsHourRankFirst = 1,
  PB3HourRankPush_FieldNumber_Expire = 2,
  PB3HourRankPush_FieldNumber_FirstImage = 3,
};

/**
 * 小时榜结算推送 CmdId=100220
 **/
@interface PB3HourRankPush : GPBMessage

/** 是否为上一小时榜第一名 */
@property(nonatomic, readwrite) BOOL isHourRankFirst;

/** 过期时间 (单位秒) */
@property(nonatomic, readwrite) int64_t expire;

/** 显示图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *firstImage;

@end

#pragma mark - PB3SendBillTime

typedef GPB_ENUM(PB3SendBillTime_FieldNumber) {
  PB3SendBillTime_FieldNumber_SendTime = 1,
};

@interface PB3SendBillTime : GPBMessage

/** 派单计时 为-1时不计时 */
@property(nonatomic, readwrite) int32_t sendTime;

@end

#pragma mark - PB3ScenePlayer

typedef GPB_ENUM(PB3ScenePlayer_FieldNumber) {
  PB3ScenePlayer_FieldNumber_Id_p = 1,
  PB3ScenePlayer_FieldNumber_Name = 2,
  PB3ScenePlayer_FieldNumber_Icon = 3,
  PB3ScenePlayer_FieldNumber_WealthLevel = 4,
  PB3ScenePlayer_FieldNumber_CharmLevel = 5,
  PB3ScenePlayer_FieldNumber_Id2 = 6,
  PB3ScenePlayer_FieldNumber_OnlineState = 7,
  PB3ScenePlayer_FieldNumber_AdminType = 8,
  PB3ScenePlayer_FieldNumber_CreateAt = 9,
  PB3ScenePlayer_FieldNumber_Flags = 10,
  PB3ScenePlayer_FieldNumber_Flags2 = 11,
  PB3ScenePlayer_FieldNumber_IsCharge = 13,
  PB3ScenePlayer_FieldNumber_ForbidSpeakTime = 14,
  PB3ScenePlayer_FieldNumber_ChairBanSpeak = 15,
  PB3ScenePlayer_FieldNumber_ChairSpeakOnoff = 16,
  PB3ScenePlayer_FieldNumber_AccompanyOnoff = 17,
  PB3ScenePlayer_FieldNumber_SoundOnoff = 18,
  PB3ScenePlayer_FieldNumber_Sex = 19,
  PB3ScenePlayer_FieldNumber_EffectArray = 20,
  PB3ScenePlayer_FieldNumber_ActivityAdchannel = 21,
  PB3ScenePlayer_FieldNumber_OnlineExp = 22,
  PB3ScenePlayer_FieldNumber_CaijiId = 30,
  PB3ScenePlayer_FieldNumber_IsPresenter = 31,
  PB3ScenePlayer_FieldNumber_NobilityInfo = 34,
  PB3ScenePlayer_FieldNumber_IntimateEffect = 35,
  PB3ScenePlayer_FieldNumber_IsShow = 36,
  PB3ScenePlayer_FieldNumber_ShowIntimateBanners = 37,
  PB3ScenePlayer_FieldNumber_IsIntimateFansAuthority = 38,
  PB3ScenePlayer_FieldNumber_HavePlaylist = 39,
  PB3ScenePlayer_FieldNumber_AuthInfoArray = 40,
  PB3ScenePlayer_FieldNumber_ChairSpeakClientType = 41,
  PB3ScenePlayer_FieldNumber_TeacherStudentEffect = 42,
  PB3ScenePlayer_FieldNumber_ShowTeacherStudentBanners = 43,
  PB3ScenePlayer_FieldNumber_FishWealthLevel = 44,
  PB3ScenePlayer_FieldNumber_FishCharmLevel = 45,
  PB3ScenePlayer_FieldNumber_IntimateEffectPrivate = 46,
  PB3ScenePlayer_FieldNumber_CubismEffect = 47,
};

/**
 * 场景玩家信息
 **/
@interface PB3ScenePlayer : GPBMessage

@property(nonatomic, readwrite) int64_t id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 资源版本号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 财富等级 */
@property(nonatomic, readwrite) int32_t wealthLevel;

/** 魅力等级 */
@property(nonatomic, readwrite) int32_t charmLevel;

/** 靓号 */
@property(nonatomic, readwrite) int64_t id2;

@property(nonatomic, readwrite) enum PB3OnlineStateType onlineState;

@property(nonatomic, readwrite) enum PB3RoomAdminType adminType;

/** 注册时间 */
@property(nonatomic, readwrite) uint32_t createAt;

/** 标志，按位存储。各位表示意思参考PlayerFlags */
@property(nonatomic, readwrite) int64_t flags;

/** 标志，按位存储。各位表示意思参考PlayerFlags2 */
@property(nonatomic, readwrite) int64_t flags2;

@property(nonatomic, readwrite) BOOL isCharge;

/** 禁言时间 */
@property(nonatomic, readwrite) int64_t forbidSpeakTime;

/** 坑位发言状态，0开麦/1禁麦 （房主/管理员设置） */
@property(nonatomic, readwrite) BOOL chairBanSpeak;

/** 玩家坑位发言开关 0关/1开 */
@property(nonatomic, readwrite) BOOL chairSpeakOnoff;

/** 伴奏开关 0关/1开 */
@property(nonatomic, readwrite) BOOL accompanyOnoff;

/** 声音开关 0关/1开 */
@property(nonatomic, readwrite) BOOL soundOnoff;

/** 性别 */
@property(nonatomic, readwrite) enum PB3SexType sex;

/** 特效 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3Effect*> *effectArray;
/** The number of items in @c effectArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger effectArray_Count;

/** (前端不用) */
@property(nonatomic, readwrite) int32_t activityAdchannel;

/** 在线经验 */
@property(nonatomic, readwrite) uint32_t onlineExp;

/** 菜鸡id */
@property(nonatomic, readwrite) int64_t caijiId;

/** 是否是主持人 */
@property(nonatomic, readwrite) BOOL isPresenter;

/** 爵位信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3RoomNobilityInfo *nobilityInfo;
/** Test to see if @c nobilityInfo has been set. */
@property(nonatomic, readwrite) BOOL hasNobilityInfo;

/** 挚友横幅信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3IntimateEffect *intimateEffect;
/** Test to see if @c intimateEffect has been set. */
@property(nonatomic, readwrite) BOOL hasIntimateEffect;

/** 是否表演 */
@property(nonatomic, readwrite) BOOL isShow;

/** 是否显示挚友进房横幅 true显示 false不显示 */
@property(nonatomic, readwrite) BOOL showIntimateBanners;

/** 是否有亲密粉丝权限 */
@property(nonatomic, readwrite) BOOL isIntimateFansAuthority;

/** 是否拥有歌单 */
@property(nonatomic, readwrite) BOOL havePlaylist;

/** 歌手、声优认证信息 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3AuthInfo*> *authInfoArray;
/** The number of items in @c authInfoArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger authInfoArray_Count;

/** 设置玩家坑位发言的客户端类型 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *chairSpeakClientType;

/** 师徒横幅信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3TeacherStudentEffect *teacherStudentEffect;
/** Test to see if @c teacherStudentEffect has been set. */
@property(nonatomic, readwrite) BOOL hasTeacherStudentEffect;

/** 是否显示师徒进房横幅 true显示 false不显示 */
@property(nonatomic, readwrite) BOOL showTeacherStudentBanners;

/** 财富等级 */
@property(nonatomic, readwrite) int32_t fishWealthLevel;

/** 魅力等级 */
@property(nonatomic, readwrite) int32_t fishCharmLevel;

/** 挚友横幅信息(私密的) 客户端根据当前玩家的id 和 ScenePlayer.id, intimate_effect.player_id, intimate_effect_private.player_id 判断如何显示挚友横幅 */
@property(nonatomic, readwrite, strong, null_resettable) PB3IntimateEffect *intimateEffectPrivate;
/** Test to see if @c intimateEffectPrivate has been set. */
@property(nonatomic, readwrite) BOOL hasIntimateEffectPrivate;

/** 虚拟形象特效 */
@property(nonatomic, readwrite, strong, null_resettable) PB3EnterCubismEffect *cubismEffect;
/** Test to see if @c cubismEffect has been set. */
@property(nonatomic, readwrite) BOOL hasCubismEffect;

@end

/**
 * Fetches the raw value of a @c PB3ScenePlayer's @c onlineState property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ScenePlayer_OnlineState_RawValue(PB3ScenePlayer *message);
/**
 * Sets the raw value of an @c PB3ScenePlayer's @c onlineState property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ScenePlayer_OnlineState_RawValue(PB3ScenePlayer *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3ScenePlayer's @c adminType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ScenePlayer_AdminType_RawValue(PB3ScenePlayer *message);
/**
 * Sets the raw value of an @c PB3ScenePlayer's @c adminType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ScenePlayer_AdminType_RawValue(PB3ScenePlayer *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3ScenePlayer's @c sex property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ScenePlayer_Sex_RawValue(PB3ScenePlayer *message);
/**
 * Sets the raw value of an @c PB3ScenePlayer's @c sex property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ScenePlayer_Sex_RawValue(PB3ScenePlayer *message, int32_t value);

#pragma mark - PB3IntimateEffect

typedef GPB_ENUM(PB3IntimateEffect_FieldNumber) {
  PB3IntimateEffect_FieldNumber_IntimateConfId = 1,
  PB3IntimateEffect_FieldNumber_PlayerId = 2,
  PB3IntimateEffect_FieldNumber_PlayerId2 = 3,
  PB3IntimateEffect_FieldNumber_Name = 4,
  PB3IntimateEffect_FieldNumber_Icon = 5,
};

@interface PB3IntimateEffect : GPBMessage

/** 挚友配置ID */
@property(nonatomic, readwrite) int32_t intimateConfId;

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 靓号 */
@property(nonatomic, readwrite) int64_t playerId2;

/** 昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

@end

#pragma mark - PB3TeacherStudentEffect

typedef GPB_ENUM(PB3TeacherStudentEffect_FieldNumber) {
  PB3TeacherStudentEffect_FieldNumber_EffectId = 1,
  PB3TeacherStudentEffect_FieldNumber_PlayerId = 2,
  PB3TeacherStudentEffect_FieldNumber_PlayerId2 = 3,
  PB3TeacherStudentEffect_FieldNumber_Name = 4,
  PB3TeacherStudentEffect_FieldNumber_Icon = 5,
  PB3TeacherStudentEffect_FieldNumber_PublicText = 6,
  PB3TeacherStudentEffect_FieldNumber_IsShowIcon = 7,
};

@interface PB3TeacherStudentEffect : GPBMessage

/** 师徒配置ID */
@property(nonatomic, readwrite) int32_t effectId;

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 靓号 */
@property(nonatomic, readwrite) int64_t playerId2;

/** 昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 师徒公屏文案 %s 替换昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *publicText;

/** 是否显示头像 */
@property(nonatomic, readwrite) BOOL isShowIcon;

@end

#pragma mark - PB3EnterRoomReq

typedef GPB_ENUM(PB3EnterRoomReq_FieldNumber) {
  PB3EnterRoomReq_FieldNumber_RoomId = 1,
  PB3EnterRoomReq_FieldNumber_Password = 2,
  PB3EnterRoomReq_FieldNumber_DeviceType = 3,
  PB3EnterRoomReq_FieldNumber_FollowId = 4,
  PB3EnterRoomReq_FieldNumber_FollowName = 5,
  PB3EnterRoomReq_FieldNumber_FollowType = 6,
  PB3EnterRoomReq_FieldNumber_FollowMsg = 7,
  PB3EnterRoomReq_FieldNumber_ModName = 8,
  PB3EnterRoomReq_FieldNumber_Caiji = 9,
  PB3EnterRoomReq_FieldNumber_EnterRoomOpt = 10,
  PB3EnterRoomReq_FieldNumber_EnterRoomWay = 11,
  PB3EnterRoomReq_FieldNumber_NewPattern = 12,
  PB3EnterRoomReq_FieldNumber_NewFollowType = 13,
  PB3EnterRoomReq_FieldNumber_Content = 14,
  PB3EnterRoomReq_FieldNumber_FansRecallId = 15,
  PB3EnterRoomReq_FieldNumber_ExtraData = 16,
  PB3EnterRoomReq_FieldNumber_RecmdSourceId = 17,
  PB3EnterRoomReq_FieldNumber_FlowSupportType = 18,
  PB3EnterRoomReq_FieldNumber_IsReconnect = 19,
};

/**
 * 进房间
 **/
@interface PB3EnterRoomReq : GPBMessage

@property(nonatomic, readwrite) int64_t roomId;

/** 密码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *password;

/** 设备类型 */
@property(nonatomic, readwrite) enum PB3DeviceType deviceType;

/** 跟随id */
@property(nonatomic, readwrite) int64_t followId;

/** 跟随昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *followName;

/** 跟随类型，默认为0=原来跟随进来，1=xxx被xxx接引进来, 2=xxx在广播交友跟随xxx的脚步进入房间 3=第三方 */
@property(nonatomic, readwrite) int32_t followType DEPRECATED_ATTRIBUTE;

/** 跟随语 %enter_name%-进入者  %follow_name%-被跟随者 %mod_name%-模块名 %enter_name%被%follow_name%接引进来, */
@property(nonatomic, readwrite, copy, null_resettable) NSString *followMsg;

@property(nonatomic, readwrite, copy, null_resettable) NSString *modName;

/** 菜鸡用户信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3CaijiPlayer *caiji;
/** Test to see if @c caiji has been set. */
@property(nonatomic, readwrite) BOOL hasCaiji;

/** 进房间后的操作 */
@property(nonatomic, readwrite) PB3EnterRoomOpt enterRoomOpt;

/** 如何进入房间 */
@property(nonatomic, readwrite) PB3EnterRoomWay enterRoomWay;

/** 房间模式 */
@property(nonatomic, readwrite) enum PB3NewRoomPattern newPattern;

/** 新跟随类型 */
@property(nonatomic, readwrite) PB3NewFollowType newFollowType;

/** 输入框内容(口令)，当来源是游戏开黑派单模式发车进房时：传入队伍id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

/** 粉丝召唤语ID */
@property(nonatomic, readwrite) int64_t fansRecallId DEPRECATED_ATTRIBUTE;

/** 通用数据 */
@property(nonatomic, readwrite) int64_t extraData;

/** 视频划卡推荐算法ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *recmdSourceId;

/** 流量扶持类型 */
@property(nonatomic, readwrite) int32_t flowSupportType;

/** 是否是断线重连 */
@property(nonatomic, readwrite) BOOL isReconnect;

@end

/**
 * Fetches the raw value of a @c PB3EnterRoomReq's @c deviceType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3EnterRoomReq_DeviceType_RawValue(PB3EnterRoomReq *message);
/**
 * Sets the raw value of an @c PB3EnterRoomReq's @c deviceType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3EnterRoomReq_DeviceType_RawValue(PB3EnterRoomReq *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3EnterRoomReq's @c enterRoomOpt property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3EnterRoomReq_EnterRoomOpt_RawValue(PB3EnterRoomReq *message);
/**
 * Sets the raw value of an @c PB3EnterRoomReq's @c enterRoomOpt property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3EnterRoomReq_EnterRoomOpt_RawValue(PB3EnterRoomReq *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3EnterRoomReq's @c enterRoomWay property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3EnterRoomReq_EnterRoomWay_RawValue(PB3EnterRoomReq *message);
/**
 * Sets the raw value of an @c PB3EnterRoomReq's @c enterRoomWay property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3EnterRoomReq_EnterRoomWay_RawValue(PB3EnterRoomReq *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3EnterRoomReq's @c newPattern property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3EnterRoomReq_NewPattern_RawValue(PB3EnterRoomReq *message);
/**
 * Sets the raw value of an @c PB3EnterRoomReq's @c newPattern property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3EnterRoomReq_NewPattern_RawValue(PB3EnterRoomReq *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3EnterRoomReq's @c newFollowType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3EnterRoomReq_NewFollowType_RawValue(PB3EnterRoomReq *message);
/**
 * Sets the raw value of an @c PB3EnterRoomReq's @c newFollowType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3EnterRoomReq_NewFollowType_RawValue(PB3EnterRoomReq *message, int32_t value);

#pragma mark - PB3EnterRoomRes

typedef GPB_ENUM(PB3EnterRoomRes_FieldNumber) {
  PB3EnterRoomRes_FieldNumber_RoomId = 2,
  PB3EnterRoomRes_FieldNumber_Name = 3,
  PB3EnterRoomRes_FieldNumber_Greeting = 4,
  PB3EnterRoomRes_FieldNumber_ViewerNum = 5,
  PB3EnterRoomRes_FieldNumber_Master = 6,
  PB3EnterRoomRes_FieldNumber_Category = 7,
  PB3EnterRoomRes_FieldNumber_Id2 = 8,
  PB3EnterRoomRes_FieldNumber_Pattern = 9,
  PB3EnterRoomRes_FieldNumber_Password = 10,
  PB3EnterRoomRes_FieldNumber_AdminType = 11,
  PB3EnterRoomRes_FieldNumber_ChairsArray = 12,
  PB3EnterRoomRes_FieldNumber_Type = 13,
  PB3EnterRoomRes_FieldNumber_AgodaKey = 14,
  PB3EnterRoomRes_FieldNumber_IntimatesArray = 15,
  PB3EnterRoomRes_FieldNumber_Reception = 16,
  PB3EnterRoomRes_FieldNumber_Notice = 17,
  PB3EnterRoomRes_FieldNumber_LabelURL = 18,
  PB3EnterRoomRes_FieldNumber_ImageId = 19,
  PB3EnterRoomRes_FieldNumber_OwnerInRoom = 20,
  PB3EnterRoomRes_FieldNumber_MaxOnlineNotice = 21,
  PB3EnterRoomRes_FieldNumber_Heat = 22,
  PB3EnterRoomRes_FieldNumber_IsMizhua = 23,
  PB3EnterRoomRes_FieldNumber_IsShowChairButton = 24,
  PB3EnterRoomRes_FieldNumber_SdkType = 25,
  PB3EnterRoomRes_FieldNumber_NewPattern = 26,
  PB3EnterRoomRes_FieldNumber_Voice = 27,
  PB3EnterRoomRes_FieldNumber_ChairCharmStatus = 28,
  PB3EnterRoomRes_FieldNumber_OwnerChairCharm = 29,
  PB3EnterRoomRes_FieldNumber_IsPresenter = 30,
  PB3EnterRoomRes_FieldNumber_OnOffStatusListArray = 34,
  PB3EnterRoomRes_FieldNumber_ClanChairLimitStatus = 35,
  PB3EnterRoomRes_FieldNumber_RoomBgURL = 36,
  PB3EnterRoomRes_FieldNumber_IsShowRedEnvelope = 37,
  PB3EnterRoomRes_FieldNumber_DecorateList = 38,
  PB3EnterRoomRes_FieldNumber_MySceneInfo = 39,
  PB3EnterRoomRes_FieldNumber_UnderChairNum = 40,
  PB3EnterRoomRes_FieldNumber_IsFirstTime = 41,
  PB3EnterRoomRes_FieldNumber_ShowType = 42,
  PB3EnterRoomRes_FieldNumber_EffectMood = 43,
  PB3EnterRoomRes_FieldNumber_IsClan = 44,
  PB3EnterRoomRes_FieldNumber_SingleLiveInfo = 45,
  PB3EnterRoomRes_FieldNumber_IntimateFansInfo = 46,
  PB3EnterRoomRes_FieldNumber_GmeAuthListArray = 47,
  PB3EnterRoomRes_FieldNumber_AgodaKeyListArray = 48,
  PB3EnterRoomRes_FieldNumber_ClanCategory = 49,
  PB3EnterRoomRes_FieldNumber_IsReferralTraffic = 50,
  PB3EnterRoomRes_FieldNumber_RoomClanType = 51,
  PB3EnterRoomRes_FieldNumber_TeacherStudentChairArray = 52,
  PB3EnterRoomRes_FieldNumber_SingleLiveTplType = 53,
  PB3EnterRoomRes_FieldNumber_PatternChairArray = 54,
  PB3EnterRoomRes_FieldNumber_HourRankRoomInfo = 55,
  PB3EnterRoomRes_FieldNumber_CubismEnable = 56,
  PB3EnterRoomRes_FieldNumber_GenderPattern = 57,
  PB3EnterRoomRes_FieldNumber_GameInfo = 61,
};

@interface PB3EnterRoomRes : GPBMessage

@property(nonatomic, readwrite) int64_t roomId;

/** 房间名字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 欢迎语 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *greeting;

/** 房间总人数 */
@property(nonatomic, readwrite) uint32_t viewerNum;

/** 房主 9.2.0更加麦位列表是否有房主信息返回，有不返回，没有返回 */
@property(nonatomic, readwrite, strong, null_resettable) PB3ScenePlayer *master;
/** Test to see if @c master has been set. */
@property(nonatomic, readwrite) BOOL hasMaster;

/** 房间标签 */
@property(nonatomic, readwrite) int32_t category;

/** 靓号 */
@property(nonatomic, readwrite) int64_t id2;

/** 房间模式 9.2.0不再返回 */
@property(nonatomic, readwrite) enum PB3RoomPattern pattern DEPRECATED_ATTRIBUTE;

@property(nonatomic, readwrite, copy, null_resettable) NSString *password;

/** 进房者数据 */
@property(nonatomic, readwrite) enum PB3RoomAdminType adminType;

/** 嘉宾位列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3Chair*> *chairsArray;
/** The number of items in @c chairsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger chairsArray_Count;

/** 麦上挚友特效 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3IntimateChair*> *intimatesArray;
/** The number of items in @c intimatesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger intimatesArray_Count;

@property(nonatomic, readwrite) enum PB3RoomType type;

/** 声网key */
@property(nonatomic, readwrite, strong, null_resettable) PB3AgodaKey *agodaKey;
/** Test to see if @c agodaKey has been set. */
@property(nonatomic, readwrite) BOOL hasAgodaKey;

/** 房间接待语 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *reception;

/** 房间公告 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *notice;

/** 房间标签url， 不为空时，显示：http://cdn+label_url */
@property(nonatomic, readwrite, copy, null_resettable) NSString *labelURL;

/** 房间背景图id eg:背景ID：200014 背景图：/upload/resources/friend/bg/200014/bg_200014.png 预览图：/upload/resources/friend/bg/200014/show_200014.png */
@property(nonatomic, readwrite) int64_t imageId;

/** 房主是否在自己的房间 1在 0不在 */
@property(nonatomic, readwrite) enum PB3OwnerInRoom ownerInRoom;

/** 最大人数限制公告 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *maxOnlineNotice;

/** 房间热度 */
@property(nonatomic, readwrite) int32_t heat;

/** 是否咪爪房间 */
@property(nonatomic, readwrite) BOOL isMizhua;

/** 是否显示排麦按钮 */
@property(nonatomic, readwrite) BOOL isShowChairButton;

/** 声音sdk类型 */
@property(nonatomic, readwrite) PB3VoiceSdkType sdkType;

/** 新房间模式 */
@property(nonatomic, readwrite) enum PB3NewRoomPattern newPattern;

/** 音质 */
@property(nonatomic, readwrite) enum PB3RoomVoice voice;

/** 麦序魅力值状态，0为关闭，1为开启 */
@property(nonatomic, readwrite) int32_t chairCharmStatus;

/** 房主麦序魅力值 */
@property(nonatomic, readwrite) int32_t ownerChairCharm;

/** 是否是主持 */
@property(nonatomic, readwrite) BOOL isPresenter;

/** 房间类型开关的状态 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3RoomOnOffStatus*> *onOffStatusListArray;
/** The number of items in @c onOffStatusListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger onOffStatusListArray_Count;

/** 麦位限制状态 */
@property(nonatomic, readwrite) BOOL clanChairLimitStatus;

/** 房间装饰背景图 9.2.0不再返回 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomBgURL DEPRECATED_ATTRIBUTE;

/** 是否显示吐泡泡入口 */
@property(nonatomic, readwrite) BOOL isShowRedEnvelope;

/** 使用中的房间装饰 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32ObjectDictionary<PB3UsingDecorateList*> *decorateList;
/** The number of items in @c decorateList without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger decorateList_Count;

/** 进房者的场景玩家信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3ScenePlayer *mySceneInfo;
/** Test to see if @c mySceneInfo has been set. */
@property(nonatomic, readwrite) BOOL hasMySceneInfo;

/** 麦下人数 */
@property(nonatomic, readwrite) int32_t underChairNum;

/** 是否第一次进入房间 */
@property(nonatomic, readwrite) BOOL isFirstTime;

/** 表演模式类型 */
@property(nonatomic, readwrite) enum PB3ShowType showType;

/** 心情特效 */
@property(nonatomic, readwrite, strong, null_resettable) PB3BroadcastEffectMood *effectMood;
/** Test to see if @c effectMood has been set. */
@property(nonatomic, readwrite) BOOL hasEffectMood;

/** 是否公会房 */
@property(nonatomic, readwrite) BOOL isClan;

/** 个播模式信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3SingleLiveInfo *singleLiveInfo;
/** Test to see if @c singleLiveInfo has been set. */
@property(nonatomic, readwrite) BOOL hasSingleLiveInfo;

/** 亲密粉丝信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3IntimateFansInfo *intimateFansInfo;
/** Test to see if @c intimateFansInfo has been set. */
@property(nonatomic, readwrite) BOOL hasIntimateFansInfo;

/** gme token 0:普通房频道 1:狼人杀 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSData*> *gmeAuthListArray;
/** The number of items in @c gmeAuthListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger gmeAuthListArray_Count;

/** 声网key 0:普通房频道 1:狼人杀 9.2.0不再返回 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3AgodaKey*> *agodaKeyListArray DEPRECATED_ATTRIBUTE;
/** The number of items in @c agodaKeyListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger agodaKeyListArray_Count DEPRECATED_ATTRIBUTE;

/** 公会类型ID is_clan为true时有值(包括0) */
@property(nonatomic, readwrite) int32_t clanCategory;

/** 是否是引流房 */
@property(nonatomic, readwrite) BOOL isReferralTraffic;

/** 房间的厅类型 */
@property(nonatomic, readwrite) PB3RoomClanType roomClanType;

/** 麦上师徒特效 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3TeacherStudentChair*> *teacherStudentChairArray;
/** The number of items in @c teacherStudentChairArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger teacherStudentChairArray_Count;

/** 当前个播模式2.0房间使用的模版（个播2.0模式才有） */
@property(nonatomic, readwrite) enum PB3SingleLiveTplType singleLiveTplType;

/** 房间模式对应的默认麦位状态 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3RoomChairStatus*> *patternChairArray;
/** The number of items in @c patternChairArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger patternChairArray_Count;

/** 小时榜信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3HourRankRoomInfo *hourRankRoomInfo;
/** Test to see if @c hourRankRoomInfo has been set. */
@property(nonatomic, readwrite) BOOL hasHourRankRoomInfo;

/** 虚拟形象开关 */
@property(nonatomic, readwrite) BOOL cubismEnable;

/** 男声女声版 */
@property(nonatomic, readwrite) enum PB3GenderPattern genderPattern;

/** 弹幕游戏结构体 */
@property(nonatomic, readwrite, strong, null_resettable) PB3BarrageGameInfo *gameInfo;
/** Test to see if @c gameInfo has been set. */
@property(nonatomic, readwrite) BOOL hasGameInfo;

@end

/**
 * Fetches the raw value of a @c PB3EnterRoomRes's @c pattern property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3EnterRoomRes_Pattern_RawValue(PB3EnterRoomRes *message);
/**
 * Sets the raw value of an @c PB3EnterRoomRes's @c pattern property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3EnterRoomRes_Pattern_RawValue(PB3EnterRoomRes *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3EnterRoomRes's @c adminType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3EnterRoomRes_AdminType_RawValue(PB3EnterRoomRes *message);
/**
 * Sets the raw value of an @c PB3EnterRoomRes's @c adminType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3EnterRoomRes_AdminType_RawValue(PB3EnterRoomRes *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3EnterRoomRes's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3EnterRoomRes_Type_RawValue(PB3EnterRoomRes *message);
/**
 * Sets the raw value of an @c PB3EnterRoomRes's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3EnterRoomRes_Type_RawValue(PB3EnterRoomRes *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3EnterRoomRes's @c ownerInRoom property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3EnterRoomRes_OwnerInRoom_RawValue(PB3EnterRoomRes *message);
/**
 * Sets the raw value of an @c PB3EnterRoomRes's @c ownerInRoom property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3EnterRoomRes_OwnerInRoom_RawValue(PB3EnterRoomRes *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3EnterRoomRes's @c sdkType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3EnterRoomRes_SdkType_RawValue(PB3EnterRoomRes *message);
/**
 * Sets the raw value of an @c PB3EnterRoomRes's @c sdkType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3EnterRoomRes_SdkType_RawValue(PB3EnterRoomRes *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3EnterRoomRes's @c newPattern property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3EnterRoomRes_NewPattern_RawValue(PB3EnterRoomRes *message);
/**
 * Sets the raw value of an @c PB3EnterRoomRes's @c newPattern property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3EnterRoomRes_NewPattern_RawValue(PB3EnterRoomRes *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3EnterRoomRes's @c voice property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3EnterRoomRes_Voice_RawValue(PB3EnterRoomRes *message);
/**
 * Sets the raw value of an @c PB3EnterRoomRes's @c voice property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3EnterRoomRes_Voice_RawValue(PB3EnterRoomRes *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3EnterRoomRes's @c showType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3EnterRoomRes_ShowType_RawValue(PB3EnterRoomRes *message);
/**
 * Sets the raw value of an @c PB3EnterRoomRes's @c showType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3EnterRoomRes_ShowType_RawValue(PB3EnterRoomRes *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3EnterRoomRes's @c roomClanType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3EnterRoomRes_RoomClanType_RawValue(PB3EnterRoomRes *message);
/**
 * Sets the raw value of an @c PB3EnterRoomRes's @c roomClanType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3EnterRoomRes_RoomClanType_RawValue(PB3EnterRoomRes *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3EnterRoomRes's @c singleLiveTplType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3EnterRoomRes_SingleLiveTplType_RawValue(PB3EnterRoomRes *message);
/**
 * Sets the raw value of an @c PB3EnterRoomRes's @c singleLiveTplType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3EnterRoomRes_SingleLiveTplType_RawValue(PB3EnterRoomRes *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3EnterRoomRes's @c genderPattern property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3EnterRoomRes_GenderPattern_RawValue(PB3EnterRoomRes *message);
/**
 * Sets the raw value of an @c PB3EnterRoomRes's @c genderPattern property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3EnterRoomRes_GenderPattern_RawValue(PB3EnterRoomRes *message, int32_t value);

#pragma mark - PB3BarrageGameTeam

typedef GPB_ENUM(PB3BarrageGameTeam_FieldNumber) {
  PB3BarrageGameTeam_FieldNumber_RoomId = 1,
  PB3BarrageGameTeam_FieldNumber_RoomName = 2,
  PB3BarrageGameTeam_FieldNumber_RoomIcon = 3,
  PB3BarrageGameTeam_FieldNumber_HostId = 4,
  PB3BarrageGameTeam_FieldNumber_HostName = 5,
  PB3BarrageGameTeam_FieldNumber_HostIcon = 6,
};

@interface PB3BarrageGameTeam : GPBMessage

/** 房间ID */
@property(nonatomic, readwrite) int64_t roomId;

/** 房间名字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomName;

/** 房间头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomIcon;

/** 主持ID */
@property(nonatomic, readwrite) int64_t hostId;

/** 主持名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *hostName;

/** 主持头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *hostIcon;

@end

#pragma mark - PB3BarrageGameInfo

typedef GPB_ENUM(PB3BarrageGameInfo_FieldNumber) {
  PB3BarrageGameInfo_FieldNumber_GameId = 1,
  PB3BarrageGameInfo_FieldNumber_SessionId = 2,
  PB3BarrageGameInfo_FieldNumber_RedTeam = 3,
  PB3BarrageGameInfo_FieldNumber_BlueTeam = 4,
  PB3BarrageGameInfo_FieldNumber_Status = 5,
  PB3BarrageGameInfo_FieldNumber_AppPullLiveURL = 6,
  PB3BarrageGameInfo_FieldNumber_PcPullLiveURL = 7,
};

@interface PB3BarrageGameInfo : GPBMessage

/** 游戏ID */
@property(nonatomic, readwrite) int64_t gameId;

/** 唯一ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;

/** 红队 */
@property(nonatomic, readwrite, strong, null_resettable) PB3BarrageGameTeam *redTeam;
/** Test to see if @c redTeam has been set. */
@property(nonatomic, readwrite) BOOL hasRedTeam;

/** 蓝队 */
@property(nonatomic, readwrite, strong, null_resettable) PB3BarrageGameTeam *blueTeam;
/** Test to see if @c blueTeam has been set. */
@property(nonatomic, readwrite) BOOL hasBlueTeam;

/** 游戏状态 ---fix */
@property(nonatomic, readwrite) PB3BarrageGameStatus status;

/** app拉流链接 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *appPullLiveURL;

/** pc 拉流链接 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcPullLiveURL;

@end

/**
 * Fetches the raw value of a @c PB3BarrageGameInfo's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BarrageGameInfo_Status_RawValue(PB3BarrageGameInfo *message);
/**
 * Sets the raw value of an @c PB3BarrageGameInfo's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BarrageGameInfo_Status_RawValue(PB3BarrageGameInfo *message, int32_t value);

#pragma mark - PB3BarrageGameMatchConfirmData

typedef GPB_ENUM(PB3BarrageGameMatchConfirmData_FieldNumber) {
  PB3BarrageGameMatchConfirmData_FieldNumber_SessionId = 1,
  PB3BarrageGameMatchConfirmData_FieldNumber_TheOtherId = 2,
  PB3BarrageGameMatchConfirmData_FieldNumber_TheOtherIcon = 3,
  PB3BarrageGameMatchConfirmData_FieldNumber_TheOtherStatus = 4,
  PB3BarrageGameMatchConfirmData_FieldNumber_SelfStatus = 5,
  PB3BarrageGameMatchConfirmData_FieldNumber_CountDown = 6,
};

@interface PB3BarrageGameMatchConfirmData : GPBMessage

/** 匹配记录唯一ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;

/** 对方的ID */
@property(nonatomic, readwrite) int64_t theOtherId;

/** 对方的头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *theOtherIcon;

/** 对方确认状态 */
@property(nonatomic, readwrite) PB3BarrageGameMatchConfirmStatus theOtherStatus;

/** 自己的确认状态 */
@property(nonatomic, readwrite) PB3BarrageGameMatchConfirmStatus selfStatus;

/** 倒计时 秒 */
@property(nonatomic, readwrite) int64_t countDown;

@end

/**
 * Fetches the raw value of a @c PB3BarrageGameMatchConfirmData's @c theOtherStatus property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BarrageGameMatchConfirmData_TheOtherStatus_RawValue(PB3BarrageGameMatchConfirmData *message);
/**
 * Sets the raw value of an @c PB3BarrageGameMatchConfirmData's @c theOtherStatus property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BarrageGameMatchConfirmData_TheOtherStatus_RawValue(PB3BarrageGameMatchConfirmData *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3BarrageGameMatchConfirmData's @c selfStatus property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BarrageGameMatchConfirmData_SelfStatus_RawValue(PB3BarrageGameMatchConfirmData *message);
/**
 * Sets the raw value of an @c PB3BarrageGameMatchConfirmData's @c selfStatus property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BarrageGameMatchConfirmData_SelfStatus_RawValue(PB3BarrageGameMatchConfirmData *message, int32_t value);

#pragma mark - PB3BarrageGameMatchInfo

typedef GPB_ENUM(PB3BarrageGameMatchInfo_FieldNumber) {
  PB3BarrageGameMatchInfo_FieldNumber_Status = 1,
  PB3BarrageGameMatchInfo_FieldNumber_StartAt = 2,
  PB3BarrageGameMatchInfo_FieldNumber_Data_p = 3,
  PB3BarrageGameMatchInfo_FieldNumber_GameId = 4,
};

/**
 * cmdid=100255
 **/
@interface PB3BarrageGameMatchInfo : GPBMessage

/** 匹配状态 */
@property(nonatomic, readwrite) PB3BarrageGameMatchStatus status;

/** 匹配开始时间戳 秒 */
@property(nonatomic, readwrite) int64_t startAt;

/** 状态为匹配成功(GMS_SUCCESS)时用 */
@property(nonatomic, readwrite, strong, null_resettable) PB3BarrageGameMatchConfirmData *data_p;
/** Test to see if @c data_p has been set. */
@property(nonatomic, readwrite) BOOL hasData_p;

/** 游戏ID */
@property(nonatomic, readwrite) int64_t gameId;

@end

/**
 * Fetches the raw value of a @c PB3BarrageGameMatchInfo's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BarrageGameMatchInfo_Status_RawValue(PB3BarrageGameMatchInfo *message);
/**
 * Sets the raw value of an @c PB3BarrageGameMatchInfo's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BarrageGameMatchInfo_Status_RawValue(PB3BarrageGameMatchInfo *message, int32_t value);

#pragma mark - PB3HourRankRoomInfo

typedef GPB_ENUM(PB3HourRankRoomInfo_FieldNumber) {
  PB3HourRankRoomInfo_FieldNumber_IsHourRankFirst = 1,
  PB3HourRankRoomInfo_FieldNumber_IsHourRankFirstExpire = 2,
  PB3HourRankRoomInfo_FieldNumber_RankNum = 3,
  PB3HourRankRoomInfo_FieldNumber_RankName = 4,
  PB3HourRankRoomInfo_FieldNumber_FirstGapText = 5,
  PB3HourRankRoomInfo_FieldNumber_FirstImage = 6,
  PB3HourRankRoomInfo_FieldNumber_RankNumText = 7,
  PB3HourRankRoomInfo_FieldNumber_PushType = 8,
};

/**
 * 小时榜信息推送 CmdId=100222
 **/
@interface PB3HourRankRoomInfo : GPBMessage

/** 是否获得上小时推荐位 */
@property(nonatomic, readwrite) BOOL isHourRankFirst;

/** 上小时推荐位过期时间（单位秒） */
@property(nonatomic, readwrite) int64_t isHourRankFirstExpire;

/** 排名 */
@property(nonatomic, readwrite) int64_t rankNum;

/** 榜单名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *rankName;

/** 距第一名差距 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *firstGapText;

/** 推荐位图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *firstImage;

/** 榜单排名文案 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *rankNumText;

/** 推送类型 */
@property(nonatomic, readwrite) PB3HourRankRoomPushType pushType;

@end

/**
 * Fetches the raw value of a @c PB3HourRankRoomInfo's @c pushType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3HourRankRoomInfo_PushType_RawValue(PB3HourRankRoomInfo *message);
/**
 * Sets the raw value of an @c PB3HourRankRoomInfo's @c pushType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3HourRankRoomInfo_PushType_RawValue(PB3HourRankRoomInfo *message, int32_t value);

#pragma mark - PB3BroadcastPlayerEnter

typedef GPB_ENUM(PB3BroadcastPlayerEnter_FieldNumber) {
  PB3BroadcastPlayerEnter_FieldNumber_Player = 1,
  PB3BroadcastPlayerEnter_FieldNumber_ViewerNum = 2,
  PB3BroadcastPlayerEnter_FieldNumber_FollowId = 3,
  PB3BroadcastPlayerEnter_FieldNumber_FollowName = 4,
  PB3BroadcastPlayerEnter_FieldNumber_FollowType = 5,
  PB3BroadcastPlayerEnter_FieldNumber_FollowMsg = 6,
  PB3BroadcastPlayerEnter_FieldNumber_ModName = 7,
  PB3BroadcastPlayerEnter_FieldNumber_FollowNobility = 8,
  PB3BroadcastPlayerEnter_FieldNumber_UnderChairNum = 9,
  PB3BroadcastPlayerEnter_FieldNumber_FollowSex = 10,
  PB3BroadcastPlayerEnter_FieldNumber_DeviceType = 11,
  PB3BroadcastPlayerEnter_FieldNumber_IntimateFansInfo = 12,
  PB3BroadcastPlayerEnter_FieldNumber_IsRobot = 13,
  PB3BroadcastPlayerEnter_FieldNumber_FlowSupportType = 14,
};

/**
 * 广播有人进房间
 * cmdId=100001
 **/
@interface PB3BroadcastPlayerEnter : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3ScenePlayer *player;
/** Test to see if @c player has been set. */
@property(nonatomic, readwrite) BOOL hasPlayer;

/** 房间总人数 */
@property(nonatomic, readwrite) uint32_t viewerNum;

/** 跟随id */
@property(nonatomic, readwrite) int64_t followId;

/** 跟随昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *followName;

/** 跟随类型，默认为0=原来跟随进来，1=xxx被xxx接引进来, 2=xxx在广播交友跟随xxx的脚步进入房间 */
@property(nonatomic, readwrite) int32_t followType;

/** 跟随语 %enter_name%-进入者  %follow_name%-被跟随者 %mod_name%-模块名 %enter_name%被%follow_name%接引进来, */
@property(nonatomic, readwrite, copy, null_resettable) NSString *followMsg;

@property(nonatomic, readwrite, copy, null_resettable) NSString *modName;

/** 被跟随者爵位信息，跟随进入才有值 */
@property(nonatomic, readwrite, strong, null_resettable) PB3RoomNobilityInfo *followNobility;
/** Test to see if @c followNobility has been set. */
@property(nonatomic, readwrite) BOOL hasFollowNobility;

/** 麦下人数 */
@property(nonatomic, readwrite) int32_t underChairNum;

/** 性别 */
@property(nonatomic, readwrite) enum PB3SexType followSex;

/** 设备类型 */
@property(nonatomic, readwrite) enum PB3DeviceType deviceType;

/** 亲密粉丝信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3IntimateFansInfo *intimateFansInfo;
/** Test to see if @c intimateFansInfo has been set. */
@property(nonatomic, readwrite) BOOL hasIntimateFansInfo;

/** 是否是机器人 */
@property(nonatomic, readwrite) BOOL isRobot;

/** 流量扶持类型 */
@property(nonatomic, readwrite) int32_t flowSupportType;

@end

/**
 * Fetches the raw value of a @c PB3BroadcastPlayerEnter's @c followSex property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BroadcastPlayerEnter_FollowSex_RawValue(PB3BroadcastPlayerEnter *message);
/**
 * Sets the raw value of an @c PB3BroadcastPlayerEnter's @c followSex property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BroadcastPlayerEnter_FollowSex_RawValue(PB3BroadcastPlayerEnter *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3BroadcastPlayerEnter's @c deviceType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BroadcastPlayerEnter_DeviceType_RawValue(PB3BroadcastPlayerEnter *message);
/**
 * Sets the raw value of an @c PB3BroadcastPlayerEnter's @c deviceType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BroadcastPlayerEnter_DeviceType_RawValue(PB3BroadcastPlayerEnter *message, int32_t value);

#pragma mark - PB3BroadcastEnterToMyself

typedef GPB_ENUM(PB3BroadcastEnterToMyself_FieldNumber) {
  PB3BroadcastEnterToMyself_FieldNumber_RoomId = 1,
  PB3BroadcastEnterToMyself_FieldNumber_RoomPwd = 2,
  PB3BroadcastEnterToMyself_FieldNumber_DeviceId = 3,
  PB3BroadcastEnterToMyself_FieldNumber_DeviceType = 4,
  PB3BroadcastEnterToMyself_FieldNumber_IsEntering = 5,
  PB3BroadcastEnterToMyself_FieldNumber_RoomName = 6,
  PB3BroadcastEnterToMyself_FieldNumber_Timestamp = 7,
};

/**
 * 进房间，广播给自己，多端登录
 * cmdId=100181
 **/
@interface PB3BroadcastEnterToMyself : GPBMessage

@property(nonatomic, readwrite) int64_t roomId;

/** 房间密码，空则不需要密码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomPwd;

/** 设备id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceId;

/** 设备类型 */
@property(nonatomic, readwrite) enum PB3DeviceType deviceType;

/** 是否进房前通知其他端做退房操作 */
@property(nonatomic, readwrite) BOOL isEntering;

/** 房间名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomName;

/** 每一次进房操作，都会推两个BroadcastEnterToMyself推送，一个 is_entering=true,一个 is_entering=false，这两个推送的timestamp会相同 */
@property(nonatomic, readwrite) int64_t timestamp;

@end

/**
 * Fetches the raw value of a @c PB3BroadcastEnterToMyself's @c deviceType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BroadcastEnterToMyself_DeviceType_RawValue(PB3BroadcastEnterToMyself *message);
/**
 * Sets the raw value of an @c PB3BroadcastEnterToMyself's @c deviceType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BroadcastEnterToMyself_DeviceType_RawValue(PB3BroadcastEnterToMyself *message, int32_t value);

#pragma mark - PB3LeaveRoomReq

typedef GPB_ENUM(PB3LeaveRoomReq_FieldNumber) {
  PB3LeaveRoomReq_FieldNumber_PlayerId = 1,
};

/**
 * 离开房间
 **/
@interface PB3LeaveRoomReq : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

@end

#pragma mark - PB3LeaveRoomRes

@interface PB3LeaveRoomRes : GPBMessage

@end

#pragma mark - PB3BroadcastPlayerLeave

typedef GPB_ENUM(PB3BroadcastPlayerLeave_FieldNumber) {
  PB3BroadcastPlayerLeave_FieldNumber_RoomId = 1,
  PB3BroadcastPlayerLeave_FieldNumber_PlayerId = 2,
  PB3BroadcastPlayerLeave_FieldNumber_Name = 3,
  PB3BroadcastPlayerLeave_FieldNumber_ViewerNum = 4,
  PB3BroadcastPlayerLeave_FieldNumber_UnderChairNum = 5,
};

/**
 * 广播有人离开房间
 * cmdId=100002 LongVO 玩家Id
 **/
@interface PB3BroadcastPlayerLeave : GPBMessage

@property(nonatomic, readwrite) int64_t roomId;

@property(nonatomic, readwrite) int64_t playerId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 房间总人数 */
@property(nonatomic, readwrite) int32_t viewerNum;

/** 麦下人数 */
@property(nonatomic, readwrite) int32_t underChairNum;

@end

#pragma mark - PB3BroadcastRoomHeat

typedef GPB_ENUM(PB3BroadcastRoomHeat_FieldNumber) {
  PB3BroadcastRoomHeat_FieldNumber_RoomId = 1,
  PB3BroadcastRoomHeat_FieldNumber_Heat = 2,
};

@interface PB3BroadcastRoomHeat : GPBMessage

@property(nonatomic, readwrite) int64_t roomId;

/** 热度 */
@property(nonatomic, readwrite) int32_t heat;

@end

#pragma mark - PB3BroadcastChairButton

typedef GPB_ENUM(PB3BroadcastChairButton_FieldNumber) {
  PB3BroadcastChairButton_FieldNumber_RoomId = 1,
  PB3BroadcastChairButton_FieldNumber_IsShowChairButton = 2,
};

/**
 * cmdId = 100164
 **/
@interface PB3BroadcastChairButton : GPBMessage

@property(nonatomic, readwrite) int64_t roomId;

@property(nonatomic, readwrite) BOOL isShowChairButton;

@end

#pragma mark - PB3BroadcastPresenter

typedef GPB_ENUM(PB3BroadcastPresenter_FieldNumber) {
  PB3BroadcastPresenter_FieldNumber_RoomId = 1,
  PB3BroadcastPresenter_FieldNumber_PlayerId = 2,
  PB3BroadcastPresenter_FieldNumber_PlayerName = 3,
  PB3BroadcastPresenter_FieldNumber_Opt = 4,
};

/**
 * cmdId = 100167
 **/
@interface PB3BroadcastPresenter : GPBMessage

@property(nonatomic, readwrite) int64_t roomId;

/** 玩家ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 玩家名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerName;

/** 主持类型 */
@property(nonatomic, readwrite) PB3SetPresenterOpt opt;

@end

/**
 * Fetches the raw value of a @c PB3BroadcastPresenter's @c opt property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BroadcastPresenter_Opt_RawValue(PB3BroadcastPresenter *message);
/**
 * Sets the raw value of an @c PB3BroadcastPresenter's @c opt property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BroadcastPresenter_Opt_RawValue(PB3BroadcastPresenter *message, int32_t value);

#pragma mark - PB3PlayerListRes

typedef GPB_ENUM(PB3PlayerListRes_FieldNumber) {
  PB3PlayerListRes_FieldNumber_ValueArray = 1,
  PB3PlayerListRes_FieldNumber_NextIndex = 2,
  PB3PlayerListRes_FieldNumber_NobilityNum = 3,
  PB3PlayerListRes_FieldNumber_StealthNum = 4,
};

/**
 * 玩家列表
 **/
@interface PB3PlayerListRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ScenePlayer*> *valueArray;
/** The number of items in @c valueArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger valueArray_Count;

@property(nonatomic, readwrite) int32_t nextIndex;

/** 贵宾人数（进入贵宾总人数） */
@property(nonatomic, readwrite) int32_t nobilityNum;

/** 贵宾人数（隐身进入人数) */
@property(nonatomic, readwrite) int32_t stealthNum;

@end

#pragma mark - PB3SetRoomReq

typedef GPB_ENUM(PB3SetRoomReq_FieldNumber) {
  PB3SetRoomReq_FieldNumber_Name = 3,
  PB3SetRoomReq_FieldNumber_Password = 4,
  PB3SetRoomReq_FieldNumber_Greeting = 5,
  PB3SetRoomReq_FieldNumber_Category = 6,
  PB3SetRoomReq_FieldNumber_Pattern = 7,
  PB3SetRoomReq_FieldNumber_NewPattern = 8,
  PB3SetRoomReq_FieldNumber_Voice = 9,
  PB3SetRoomReq_FieldNumber_ChairCharmStatus = 10,
  PB3SetRoomReq_FieldNumber_ClanChairLimitStatus = 11,
  PB3SetRoomReq_FieldNumber_PwdEnable = 12,
};

/**
 * 房间设置
 **/
@interface PB3SetRoomReq : GPBMessage

/** 房间名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 房间密码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *password;

/** 房间问候语 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *greeting;

/** 房间标签 */
@property(nonatomic, readwrite) int32_t category;

/** 房间模式 6.3.5及之后版本不再使用 */
@property(nonatomic, readwrite) enum PB3RoomPattern pattern;

/** 新房间模式 6.3.5及之后版本使用 */
@property(nonatomic, readwrite) enum PB3NewRoomPattern newPattern;

/** 音质 */
@property(nonatomic, readwrite) enum PB3RoomVoice voice;

/** 麦序魅力值状态，0为关闭，1为开启 */
@property(nonatomic, readwrite) int32_t chairCharmStatus;

/** 麦位限制状态 */
@property(nonatomic, readwrite) BOOL clanChairLimitStatus;

/** 房间密码开关 */
@property(nonatomic, readwrite) BOOL pwdEnable;

@end

/**
 * Fetches the raw value of a @c PB3SetRoomReq's @c pattern property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SetRoomReq_Pattern_RawValue(PB3SetRoomReq *message);
/**
 * Sets the raw value of an @c PB3SetRoomReq's @c pattern property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SetRoomReq_Pattern_RawValue(PB3SetRoomReq *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3SetRoomReq's @c newPattern property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SetRoomReq_NewPattern_RawValue(PB3SetRoomReq *message);
/**
 * Sets the raw value of an @c PB3SetRoomReq's @c newPattern property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SetRoomReq_NewPattern_RawValue(PB3SetRoomReq *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3SetRoomReq's @c voice property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SetRoomReq_Voice_RawValue(PB3SetRoomReq *message);
/**
 * Sets the raw value of an @c PB3SetRoomReq's @c voice property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SetRoomReq_Voice_RawValue(PB3SetRoomReq *message, int32_t value);

#pragma mark - PB3SetRoomRes

typedef GPB_ENUM(PB3SetRoomRes_FieldNumber) {
  PB3SetRoomRes_FieldNumber_NameGreetStatus = 1,
  PB3SetRoomRes_FieldNumber_OldName = 2,
  PB3SetRoomRes_FieldNumber_NewName = 3,
  PB3SetRoomRes_FieldNumber_OldGreeting = 4,
  PB3SetRoomRes_FieldNumber_NewGreeting = 5,
  PB3SetRoomRes_FieldNumber_IsModify = 6,
};

@interface PB3SetRoomRes : GPBMessage

@property(nonatomic, readwrite) enum PB3AuditStatus nameGreetStatus;

@property(nonatomic, readwrite, copy, null_resettable) NSString *oldName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *newName NS_RETURNS_NOT_RETAINED;

@property(nonatomic, readwrite, copy, null_resettable) NSString *oldGreeting;

@property(nonatomic, readwrite, copy, null_resettable) NSString *newGreeting NS_RETURNS_NOT_RETAINED;

@property(nonatomic, readwrite) BOOL isModify;

@end

/**
 * Fetches the raw value of a @c PB3SetRoomRes's @c nameGreetStatus property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SetRoomRes_NameGreetStatus_RawValue(PB3SetRoomRes *message);
/**
 * Sets the raw value of an @c PB3SetRoomRes's @c nameGreetStatus property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SetRoomRes_NameGreetStatus_RawValue(PB3SetRoomRes *message, int32_t value);

#pragma mark - PB3BroadcastRoomSet

typedef GPB_ENUM(PB3BroadcastRoomSet_FieldNumber) {
  PB3BroadcastRoomSet_FieldNumber_RoomId = 1,
  PB3BroadcastRoomSet_FieldNumber_PlayerId = 2,
  PB3BroadcastRoomSet_FieldNumber_Name = 3,
  PB3BroadcastRoomSet_FieldNumber_Password = 4,
  PB3BroadcastRoomSet_FieldNumber_Greeting = 5,
  PB3BroadcastRoomSet_FieldNumber_Category = 6,
  PB3BroadcastRoomSet_FieldNumber_Pattern = 7,
  PB3BroadcastRoomSet_FieldNumber_NewPattern = 8,
  PB3BroadcastRoomSet_FieldNumber_Voice = 9,
  PB3BroadcastRoomSet_FieldNumber_ChairCharmStatus = 10,
  PB3BroadcastRoomSet_FieldNumber_SingleLiveTpl = 11,
  PB3BroadcastRoomSet_FieldNumber_PatternChairArray = 12,
  PB3BroadcastRoomSet_FieldNumber_IsCloudDiscoRoomShake = 13,
  PB3BroadcastRoomSet_FieldNumber_IsCloudDiscoChairShake = 14,
};

/**
 * cmdId=100028 广播房间设置
 **/
@interface PB3BroadcastRoomSet : GPBMessage

@property(nonatomic, readwrite) int64_t roomId;

@property(nonatomic, readwrite) int64_t playerId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *password;

@property(nonatomic, readwrite, copy, null_resettable) NSString *greeting;

@property(nonatomic, readwrite) int32_t category;

/** 旧房间模式 6.3.5及之后版本不再使用 */
@property(nonatomic, readwrite) enum PB3RoomPattern pattern;

/** 新房间模式 6.3.5及之后版本使用 */
@property(nonatomic, readwrite) enum PB3NewRoomPattern newPattern;

/** 音质 */
@property(nonatomic, readwrite) enum PB3RoomVoice voice;

/** 麦序魅力值状态，0为关闭，1为开启 */
@property(nonatomic, readwrite) int32_t chairCharmStatus;

/** 个播2.0模版类型 */
@property(nonatomic, readwrite) enum PB3SingleLiveTplType singleLiveTpl;

/** 房间模式对应的默认麦位状态 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3RoomChairStatus*> *patternChairArray;
/** The number of items in @c patternChairArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger patternChairArray_Count;

/** 云蹦迪房间震动开关 */
@property(nonatomic, readwrite) BOOL isCloudDiscoRoomShake;

/** 云蹦迪房间麦位抖动开关 */
@property(nonatomic, readwrite) BOOL isCloudDiscoChairShake;

@end

/**
 * Fetches the raw value of a @c PB3BroadcastRoomSet's @c pattern property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BroadcastRoomSet_Pattern_RawValue(PB3BroadcastRoomSet *message);
/**
 * Sets the raw value of an @c PB3BroadcastRoomSet's @c pattern property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BroadcastRoomSet_Pattern_RawValue(PB3BroadcastRoomSet *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3BroadcastRoomSet's @c newPattern property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BroadcastRoomSet_NewPattern_RawValue(PB3BroadcastRoomSet *message);
/**
 * Sets the raw value of an @c PB3BroadcastRoomSet's @c newPattern property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BroadcastRoomSet_NewPattern_RawValue(PB3BroadcastRoomSet *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3BroadcastRoomSet's @c voice property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BroadcastRoomSet_Voice_RawValue(PB3BroadcastRoomSet *message);
/**
 * Sets the raw value of an @c PB3BroadcastRoomSet's @c voice property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BroadcastRoomSet_Voice_RawValue(PB3BroadcastRoomSet *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3BroadcastRoomSet's @c singleLiveTpl property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BroadcastRoomSet_SingleLiveTpl_RawValue(PB3BroadcastRoomSet *message);
/**
 * Sets the raw value of an @c PB3BroadcastRoomSet's @c singleLiveTpl property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BroadcastRoomSet_SingleLiveTpl_RawValue(PB3BroadcastRoomSet *message, int32_t value);

#pragma mark - PB3BroadcastChairLimit

typedef GPB_ENUM(PB3BroadcastChairLimit_FieldNumber) {
  PB3BroadcastChairLimit_FieldNumber_ClanChairLimitStatus = 1,
};

@interface PB3BroadcastChairLimit : GPBMessage

/** 麦位限制状态 */
@property(nonatomic, readwrite) BOOL clanChairLimitStatus;

@end

#pragma mark - PB3BroadcastRedEnvelope

typedef GPB_ENUM(PB3BroadcastRedEnvelope_FieldNumber) {
  PB3BroadcastRedEnvelope_FieldNumber_IsShowRedEnvelope = 1,
};

/**
 * RC_RoomRedEnvelope = 100176
 **/
@interface PB3BroadcastRedEnvelope : GPBMessage

/** 是否显示吐泡泡入口 */
@property(nonatomic, readwrite) BOOL isShowRedEnvelope;

@end

#pragma mark - PB3SetReceptionReq

typedef GPB_ENUM(PB3SetReceptionReq_FieldNumber) {
  PB3SetReceptionReq_FieldNumber_Value = 1,
};

/**
 * 设置接待语
 **/
@interface PB3SetReceptionReq : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *value;

@end

#pragma mark - PB3SetReceptionRes

typedef GPB_ENUM(PB3SetReceptionRes_FieldNumber) {
  PB3SetReceptionRes_FieldNumber_ReceptionStatus = 1,
  PB3SetReceptionRes_FieldNumber_OldValue = 2,
  PB3SetReceptionRes_FieldNumber_NewValue = 3,
};

@interface PB3SetReceptionRes : GPBMessage

@property(nonatomic, readwrite) enum PB3AuditStatus receptionStatus;

@property(nonatomic, readwrite, copy, null_resettable) NSString *oldValue;

@property(nonatomic, readwrite, copy, null_resettable) NSString *newValue NS_RETURNS_NOT_RETAINED;

@end

/**
 * Fetches the raw value of a @c PB3SetReceptionRes's @c receptionStatus property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SetReceptionRes_ReceptionStatus_RawValue(PB3SetReceptionRes *message);
/**
 * Sets the raw value of an @c PB3SetReceptionRes's @c receptionStatus property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SetReceptionRes_ReceptionStatus_RawValue(PB3SetReceptionRes *message, int32_t value);

#pragma mark - PB3BroadcastReception

typedef GPB_ENUM(PB3BroadcastReception_FieldNumber) {
  PB3BroadcastReception_FieldNumber_Value = 1,
  PB3BroadcastReception_FieldNumber_PlayerId = 2,
  PB3BroadcastReception_FieldNumber_NobilityInfo = 3,
};

/**
 * cmdId=100051 广播房间接待语
 **/
@interface PB3BroadcastReception : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *value;

/** 操作者id */
@property(nonatomic, readwrite) int64_t playerId;

/** 爵位信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3RoomNobilityInfo *nobilityInfo;
/** Test to see if @c nobilityInfo has been set. */
@property(nonatomic, readwrite) BOOL hasNobilityInfo;

@end

#pragma mark - PB3BroadcastCloseRoom

typedef GPB_ENUM(PB3BroadcastCloseRoom_FieldNumber) {
  PB3BroadcastCloseRoom_FieldNumber_RoomId = 1,
};

/**
 * cmdId=100050 广播房间房间关闭
 **/
@interface PB3BroadcastCloseRoom : GPBMessage

@property(nonatomic, readwrite) int64_t roomId;

@end

#pragma mark - PB3SetRoomAdminReq

typedef GPB_ENUM(PB3SetRoomAdminReq_FieldNumber) {
  PB3SetRoomAdminReq_FieldNumber_ToPlayerId = 3,
  PB3SetRoomAdminReq_FieldNumber_AdminType = 4,
};

/**
 * 管理员设置
 **/
@interface PB3SetRoomAdminReq : GPBMessage

@property(nonatomic, readwrite) int64_t toPlayerId;

/** 设置管理员的类型(想要成什么身份就传什么身份的值) */
@property(nonatomic, readwrite) enum PB3RoomAdminType adminType;

@end

/**
 * Fetches the raw value of a @c PB3SetRoomAdminReq's @c adminType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SetRoomAdminReq_AdminType_RawValue(PB3SetRoomAdminReq *message);
/**
 * Sets the raw value of an @c PB3SetRoomAdminReq's @c adminType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SetRoomAdminReq_AdminType_RawValue(PB3SetRoomAdminReq *message, int32_t value);

#pragma mark - PB3SetRoomAdminRes

typedef GPB_ENUM(PB3SetRoomAdminRes_FieldNumber) {
  PB3SetRoomAdminRes_FieldNumber_PlayerId = 2,
  PB3SetRoomAdminRes_FieldNumber_AdminType = 3,
};

@interface PB3SetRoomAdminRes : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

@property(nonatomic, readwrite) enum PB3RoomAdminType adminType;

@end

/**
 * Fetches the raw value of a @c PB3SetRoomAdminRes's @c adminType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SetRoomAdminRes_AdminType_RawValue(PB3SetRoomAdminRes *message);
/**
 * Sets the raw value of an @c PB3SetRoomAdminRes's @c adminType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SetRoomAdminRes_AdminType_RawValue(PB3SetRoomAdminRes *message, int32_t value);

#pragma mark - PB3RoomPasswordReq

/**
 * 获取房间密码
 **/
@interface PB3RoomPasswordReq : GPBMessage

@end

#pragma mark - PB3RoomPasswordRes

typedef GPB_ENUM(PB3RoomPasswordRes_FieldNumber) {
  PB3RoomPasswordRes_FieldNumber_Password = 1,
  PB3RoomPasswordRes_FieldNumber_Enable = 2,
};

@interface PB3RoomPasswordRes : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *password;

/** 密码开关 */
@property(nonatomic, readwrite) BOOL enable;

@end

#pragma mark - PB3BroadcastSetRoomAdmin

typedef GPB_ENUM(PB3BroadcastSetRoomAdmin_FieldNumber) {
  PB3BroadcastSetRoomAdmin_FieldNumber_RoomId = 1,
  PB3BroadcastSetRoomAdmin_FieldNumber_ManagerId = 2,
  PB3BroadcastSetRoomAdmin_FieldNumber_ManagerName = 3,
  PB3BroadcastSetRoomAdmin_FieldNumber_PlayerId = 4,
  PB3BroadcastSetRoomAdmin_FieldNumber_PlayerName = 5,
  PB3BroadcastSetRoomAdmin_FieldNumber_AdminType = 6,
};

/**
 * 通知管理员变更（房间广播，前端根据策划按要求提示）
 * 100046
 **/
@interface PB3BroadcastSetRoomAdmin : GPBMessage

@property(nonatomic, readwrite) int64_t roomId;

/** 管理员ID */
@property(nonatomic, readwrite) int64_t managerId;

/** 管理员名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *managerName;

/** 玩家ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 玩家名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerName;

/** 设置管理员的类型(想要成什么身份就传什么身份的值) */
@property(nonatomic, readwrite) enum PB3RoomAdminType adminType;

@end

/**
 * Fetches the raw value of a @c PB3BroadcastSetRoomAdmin's @c adminType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BroadcastSetRoomAdmin_AdminType_RawValue(PB3BroadcastSetRoomAdmin *message);
/**
 * Sets the raw value of an @c PB3BroadcastSetRoomAdmin's @c adminType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BroadcastSetRoomAdmin_AdminType_RawValue(PB3BroadcastSetRoomAdmin *message, int32_t value);

#pragma mark - PB3ForbidSpeakReq

typedef GPB_ENUM(PB3ForbidSpeakReq_FieldNumber) {
  PB3ForbidSpeakReq_FieldNumber_ToPlayerId = 3,
  PB3ForbidSpeakReq_FieldNumber_ForbidSpeakTime = 4,
};

/**
 * 房间禁言
 **/
@interface PB3ForbidSpeakReq : GPBMessage

@property(nonatomic, readwrite) int64_t toPlayerId;

/** 单位：秒 */
@property(nonatomic, readwrite) int32_t forbidSpeakTime;

@end

#pragma mark - PB3ForbidSpeakRes

typedef GPB_ENUM(PB3ForbidSpeakRes_FieldNumber) {
  PB3ForbidSpeakRes_FieldNumber_NobilityId = 1,
};

@interface PB3ForbidSpeakRes : GPBMessage

/** 爵位ID */
@property(nonatomic, readwrite) int32_t nobilityId;

@end

#pragma mark - PB3BroadcastForbidSpeak

typedef GPB_ENUM(PB3BroadcastForbidSpeak_FieldNumber) {
  PB3BroadcastForbidSpeak_FieldNumber_RoomId = 1,
  PB3BroadcastForbidSpeak_FieldNumber_ManagerId = 2,
  PB3BroadcastForbidSpeak_FieldNumber_ManagerName = 3,
  PB3BroadcastForbidSpeak_FieldNumber_PlayerId = 4,
  PB3BroadcastForbidSpeak_FieldNumber_PlayerName = 5,
  PB3BroadcastForbidSpeak_FieldNumber_Times = 6,
};

/**
 * 场景广播 被禁言 SSC100041
 **/
@interface PB3BroadcastForbidSpeak : GPBMessage

/** SceneID */
@property(nonatomic, readwrite) int64_t roomId;

/** 玩家ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 玩家名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerName;

/** 管理员ID */
@property(nonatomic, readwrite) int64_t managerId;

/** 管理员名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *managerName;

/** 禁言时间：秒 */
@property(nonatomic, readwrite) uint32_t times;

@end

#pragma mark - PB3KickoutRoomReq

typedef GPB_ENUM(PB3KickoutRoomReq_FieldNumber) {
  PB3KickoutRoomReq_FieldNumber_ToPlayerId = 3,
  PB3KickoutRoomReq_FieldNumber_CfgId = 4,
  PB3KickoutRoomReq_FieldNumber_ExpiredTime = 5,
  PB3KickoutRoomReq_FieldNumber_UnitTime = 6,
};

/**
 * 踢出房间
 **/
@interface PB3KickoutRoomReq : GPBMessage

@property(nonatomic, readwrite) int64_t toPlayerId;

/** 配置ID */
@property(nonatomic, readwrite) int32_t cfgId;

/** 过期时间 */
@property(nonatomic, readwrite) int64_t expiredTime;

/** 时间单位 */
@property(nonatomic, readwrite) enum PB3XcmKickOutRoomType unitTime;

@end

/**
 * Fetches the raw value of a @c PB3KickoutRoomReq's @c unitTime property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3KickoutRoomReq_UnitTime_RawValue(PB3KickoutRoomReq *message);
/**
 * Sets the raw value of an @c PB3KickoutRoomReq's @c unitTime property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3KickoutRoomReq_UnitTime_RawValue(PB3KickoutRoomReq *message, int32_t value);

#pragma mark - PB3KickoutRoomRes

typedef GPB_ENUM(PB3KickoutRoomRes_FieldNumber) {
  PB3KickoutRoomRes_FieldNumber_NobilityId = 1,
};

@interface PB3KickoutRoomRes : GPBMessage

/** 爵位ID */
@property(nonatomic, readwrite) int32_t nobilityId;

@end

#pragma mark - PB3GetKickOutRoomCfgReq

@interface PB3GetKickOutRoomCfgReq : GPBMessage

@end

#pragma mark - PB3GetKickOutRoomCfgRes

typedef GPB_ENUM(PB3GetKickOutRoomCfgRes_FieldNumber) {
  PB3GetKickOutRoomCfgRes_FieldNumber_ListArray = 1,
};

@interface PB3GetKickOutRoomCfgRes : GPBMessage

/** 配置列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3XcmKickOutRoomCfg*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3BroadcastKickout

typedef GPB_ENUM(PB3BroadcastKickout_FieldNumber) {
  PB3BroadcastKickout_FieldNumber_RoomId = 1,
  PB3BroadcastKickout_FieldNumber_ManagerId = 2,
  PB3BroadcastKickout_FieldNumber_ManagerName = 3,
  PB3BroadcastKickout_FieldNumber_PlayerId = 4,
  PB3BroadcastKickout_FieldNumber_PlayerName = 5,
};

/**
 * 场景广播被踢出 SSC100042
 **/
@interface PB3BroadcastKickout : GPBMessage

/** 被踢出 SceneID */
@property(nonatomic, readwrite) int64_t roomId;

/** 玩家ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 玩家名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerName;

/** 管理员ID */
@property(nonatomic, readwrite) int64_t managerId;

/** 管理员名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *managerName;

@end

#pragma mark - PB3RoomPlayerListReq

typedef GPB_ENUM(PB3RoomPlayerListReq_FieldNumber) {
  PB3RoomPlayerListReq_FieldNumber_Index = 1,
};

/**
 * 房间黑名单请求
 **/
@interface PB3RoomPlayerListReq : GPBMessage

@property(nonatomic, readwrite) int32_t index;

@end

#pragma mark - PB3GetRoomRankReq

typedef GPB_ENUM(PB3GetRoomRankReq_FieldNumber) {
  PB3GetRoomRankReq_FieldNumber_Type = 1,
  PB3GetRoomRankReq_FieldNumber_RankFlag = 2,
};

@interface PB3GetRoomRankReq : GPBMessage

/** 请求类型，1：财富，2：魅力 */
@property(nonatomic, readwrite) int32_t type;

/** 请求的周期榜标识，1：日榜，2：周榜，3：所有时间的累计榜, 4 年榜，5 月榜 */
@property(nonatomic, readwrite) int32_t rankFlag;

@end

#pragma mark - PB3GetRoomRankRes

typedef GPB_ENUM(PB3GetRoomRankRes_FieldNumber) {
  PB3GetRoomRankRes_FieldNumber_RoomId = 1,
  PB3GetRoomRankRes_FieldNumber_Type = 2,
  PB3GetRoomRankRes_FieldNumber_RankFlag = 3,
  PB3GetRoomRankRes_FieldNumber_RoomRankListArray = 4,
  PB3GetRoomRankRes_FieldNumber_TotalValue = 5,
  PB3GetRoomRankRes_FieldNumber_MyRank = 6,
  PB3GetRoomRankRes_FieldNumber_RoomRankListNotFlowerArray = 7,
};

@interface PB3GetRoomRankRes : GPBMessage

@property(nonatomic, readwrite) int64_t roomId;

/** 请求类型，1：财富，2：魅力 */
@property(nonatomic, readwrite) int32_t type;

/** 请求的周期榜标识，1：日榜，2：周榜，3：所以时间的累计榜 */
@property(nonatomic, readwrite) int32_t rankFlag;

/** 排行榜 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3Rank*> *roomRankListArray;
/** The number of items in @c roomRankListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger roomRankListArray_Count;

/** 总的房间贡献值 */
@property(nonatomic, readwrite) uint64_t totalValue;

/** 我的排行榜 */
@property(nonatomic, readwrite, strong, null_resettable) PB3Rank1 *myRank;
/** Test to see if @c myRank has been set. */
@property(nonatomic, readwrite) BOOL hasMyRank;

/** 剔除鲜花的排行榜 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3Rank*> *roomRankListNotFlowerArray;
/** The number of items in @c roomRankListNotFlowerArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger roomRankListNotFlowerArray_Count;

@end

#pragma mark - PB3Greeting

typedef GPB_ENUM(PB3Greeting_FieldNumber) {
  PB3Greeting_FieldNumber_Index = 1,
  PB3Greeting_FieldNumber_Content = 2,
};

@interface PB3Greeting : GPBMessage

/** 问候语序号 */
@property(nonatomic, readwrite) int64_t index;

/** 问候语内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

@end

#pragma mark - PB3PCRoomGreetingOperationReq

typedef GPB_ENUM(PB3PCRoomGreetingOperationReq_FieldNumber) {
  PB3PCRoomGreetingOperationReq_FieldNumber_Type = 2,
  PB3PCRoomGreetingOperationReq_FieldNumber_Item = 3,
};

/**
 * PC房间问候语操作操作
 **/
@interface PB3PCRoomGreetingOperationReq : GPBMessage

/** 操作类型 */
@property(nonatomic, readwrite) PB3PCRoomGreetingOperationType type;

@property(nonatomic, readwrite, strong, null_resettable) PB3Greeting *item;
/** Test to see if @c item has been set. */
@property(nonatomic, readwrite) BOOL hasItem;

@end

/**
 * Fetches the raw value of a @c PB3PCRoomGreetingOperationReq's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3PCRoomGreetingOperationReq_Type_RawValue(PB3PCRoomGreetingOperationReq *message);
/**
 * Sets the raw value of an @c PB3PCRoomGreetingOperationReq's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3PCRoomGreetingOperationReq_Type_RawValue(PB3PCRoomGreetingOperationReq *message, int32_t value);

#pragma mark - PB3PCRoomGreetingOperationRes

@interface PB3PCRoomGreetingOperationRes : GPBMessage

@end

#pragma mark - PB3GetPCRoomGreetingsReq

/**
 * 获取问候语列表
 **/
@interface PB3GetPCRoomGreetingsReq : GPBMessage

@end

#pragma mark - PB3GetPCRoomGreetingsRes

typedef GPB_ENUM(PB3GetPCRoomGreetingsRes_FieldNumber) {
  PB3GetPCRoomGreetingsRes_FieldNumber_ItemsArray = 1,
  PB3GetPCRoomGreetingsRes_FieldNumber_DisplayTime = 2,
  PB3GetPCRoomGreetingsRes_FieldNumber_IsDisplay = 3,
};

@interface PB3GetPCRoomGreetingsRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3Greeting*> *itemsArray;
/** The number of items in @c itemsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger itemsArray_Count;

@property(nonatomic, readwrite) int32_t displayTime;

@property(nonatomic, readwrite) BOOL isDisplay;

@end

#pragma mark - PB3Chair

typedef GPB_ENUM(PB3Chair_FieldNumber) {
  PB3Chair_FieldNumber_Id_p = 1,
  PB3Chair_FieldNumber_Status = 2,
  PB3Chair_FieldNumber_Player = 3,
  PB3Chair_FieldNumber_Operator_p = 4,
  PB3Chair_FieldNumber_GoldLevel = 5,
  PB3Chair_FieldNumber_ChairCharm = 6,
  PB3Chair_FieldNumber_MateChairCharm = 7,
  PB3Chair_FieldNumber_TopicEffect = 8,
};

/**
 * 嘉宾位
 **/
@interface PB3Chair : GPBMessage

/** 座位ID, 0到8， 0是房主位 */
@property(nonatomic, readwrite) int32_t id_p;

@property(nonatomic, readwrite) PB3ChairStatus status;

/** 位置上的玩家 */
@property(nonatomic, readwrite, strong, null_resettable) PB3ScenePlayer *player;
/** Test to see if @c player has been set. */
@property(nonatomic, readwrite) BOOL hasPlayer;

/** 操作者ID */
@property(nonatomic, readwrite) int64_t operator_p;

/** 帽子等级 */
@property(nonatomic, readwrite) int32_t goldLevel;

/** 麦序魅力值 */
@property(nonatomic, readwrite) int32_t chairCharm;

/** 麦序交友2.0魅力值 */
@property(nonatomic, readwrite) int32_t mateChairCharm;

/** 互动话题特效 */
@property(nonatomic, readwrite, strong, null_resettable) PB3InteractTopicEffect *topicEffect;
/** Test to see if @c topicEffect has been set. */
@property(nonatomic, readwrite) BOOL hasTopicEffect;

@end

/**
 * Fetches the raw value of a @c PB3Chair's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3Chair_Status_RawValue(PB3Chair *message);
/**
 * Sets the raw value of an @c PB3Chair's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3Chair_Status_RawValue(PB3Chair *message, int32_t value);

#pragma mark - PB3ChairStatusReq

typedef GPB_ENUM(PB3ChairStatusReq_FieldNumber) {
  PB3ChairStatusReq_FieldNumber_ChairId = 2,
  PB3ChairStatusReq_FieldNumber_Status = 3,
};

/**
 * 设置嘉宾位状态
 **/
@interface PB3ChairStatusReq : GPBMessage

/** 座位ID, 0到8， 0是房主位 */
@property(nonatomic, readwrite) int32_t chairId;

@property(nonatomic, readwrite) PB3ChairStatus status;

@end

/**
 * Fetches the raw value of a @c PB3ChairStatusReq's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ChairStatusReq_Status_RawValue(PB3ChairStatusReq *message);
/**
 * Sets the raw value of an @c PB3ChairStatusReq's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ChairStatusReq_Status_RawValue(PB3ChairStatusReq *message, int32_t value);

#pragma mark - PB3ChairStatusRes

@interface PB3ChairStatusRes : GPBMessage

@end

#pragma mark - PB3ChairSpeakReq

typedef GPB_ENUM(PB3ChairSpeakReq_FieldNumber) {
  PB3ChairSpeakReq_FieldNumber_TargetId = 2,
  PB3ChairSpeakReq_FieldNumber_ChairBanSpeak = 3,
};

/**
 * 请求禁麦/开麦
 **/
@interface PB3ChairSpeakReq : GPBMessage

/** 目标id */
@property(nonatomic, readwrite) int64_t targetId;

/** 坑位发言状态，0开麦/1禁麦 */
@property(nonatomic, readwrite) BOOL chairBanSpeak;

@end

#pragma mark - PB3ChairSpeakRes

@interface PB3ChairSpeakRes : GPBMessage

@end

#pragma mark - PB3BroadcastChairSpeak

typedef GPB_ENUM(PB3BroadcastChairSpeak_FieldNumber) {
  PB3BroadcastChairSpeak_FieldNumber_TargetId = 1,
  PB3BroadcastChairSpeak_FieldNumber_ChairBanSpeak = 2,
  PB3BroadcastChairSpeak_FieldNumber_TargetName = 3,
  PB3BroadcastChairSpeak_FieldNumber_OperatorId = 4,
  PB3BroadcastChairSpeak_FieldNumber_OperatorName = 5,
};

/**
 * cmdId=100104, 广播禁麦/开麦
 **/
@interface PB3BroadcastChairSpeak : GPBMessage

/** 目标id */
@property(nonatomic, readwrite) int64_t targetId;

/** 坑位发言状态，0开麦/1禁麦 */
@property(nonatomic, readwrite) BOOL chairBanSpeak;

/** 目标名字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *targetName;

/** 操作者Id */
@property(nonatomic, readwrite) int64_t operatorId;

/** 操作者名字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *operatorName;

@end

#pragma mark - PB3ChairSpeakOnOffReq

typedef GPB_ENUM(PB3ChairSpeakOnOffReq_FieldNumber) {
  PB3ChairSpeakOnOffReq_FieldNumber_ChairSpeakOnoff = 1,
};

/**
 * 设置坑位发言开关
 **/
@interface PB3ChairSpeakOnOffReq : GPBMessage

/** 坑位发言状态， */
@property(nonatomic, readwrite) BOOL chairSpeakOnoff;

@end

#pragma mark - PB3ChairSpeakOnOffRes

@interface PB3ChairSpeakOnOffRes : GPBMessage

@end

#pragma mark - PB3BroadcastChairSpeakOnOff

typedef GPB_ENUM(PB3BroadcastChairSpeakOnOff_FieldNumber) {
  PB3BroadcastChairSpeakOnOff_FieldNumber_TargetId = 1,
  PB3BroadcastChairSpeakOnOff_FieldNumber_ChairSpeakOnoff = 2,
  PB3BroadcastChairSpeakOnOff_FieldNumber_DeviceId = 3,
  PB3BroadcastChairSpeakOnOff_FieldNumber_DeviceType = 4,
};

/**
 * cmdId=100105, 广播设置坑位发言开关
 **/
@interface PB3BroadcastChairSpeakOnOff : GPBMessage

/** 目标id */
@property(nonatomic, readwrite) int64_t targetId;

@property(nonatomic, readwrite) BOOL chairSpeakOnoff;

/** 开麦设备id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceId;

/** 设备类型 */
@property(nonatomic, readwrite) enum PB3DeviceType deviceType;

@end

/**
 * Fetches the raw value of a @c PB3BroadcastChairSpeakOnOff's @c deviceType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BroadcastChairSpeakOnOff_DeviceType_RawValue(PB3BroadcastChairSpeakOnOff *message);
/**
 * Sets the raw value of an @c PB3BroadcastChairSpeakOnOff's @c deviceType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BroadcastChairSpeakOnOff_DeviceType_RawValue(PB3BroadcastChairSpeakOnOff *message, int32_t value);

#pragma mark - PB3AccompanyOnOffReq

typedef GPB_ENUM(PB3AccompanyOnOffReq_FieldNumber) {
  PB3AccompanyOnOffReq_FieldNumber_AccompanyOnoff = 1,
};

/**
 * 设置伴奏开关
 **/
@interface PB3AccompanyOnOffReq : GPBMessage

@property(nonatomic, readwrite) BOOL accompanyOnoff;

@end

#pragma mark - PB3AccompanyOnOffRes

@interface PB3AccompanyOnOffRes : GPBMessage

@end

#pragma mark - PB3BroadcastAccompanyOnOff

typedef GPB_ENUM(PB3BroadcastAccompanyOnOff_FieldNumber) {
  PB3BroadcastAccompanyOnOff_FieldNumber_TargetId = 1,
  PB3BroadcastAccompanyOnOff_FieldNumber_AccompanyOnoff = 2,
};

/**
 * cmdId=100106, 广播伴奏开关
 **/
@interface PB3BroadcastAccompanyOnOff : GPBMessage

/** 目标id */
@property(nonatomic, readwrite) int64_t targetId;

@property(nonatomic, readwrite) BOOL accompanyOnoff;

@end

#pragma mark - PB3BroadcastChairStatus

typedef GPB_ENUM(PB3BroadcastChairStatus_FieldNumber) {
  PB3BroadcastChairStatus_FieldNumber_ChairId = 1,
  PB3BroadcastChairStatus_FieldNumber_Status = 2,
};

/**
 * cmdId=100102, 广播嘉宾位状态变更
 **/
@interface PB3BroadcastChairStatus : GPBMessage

/** 座位ID */
@property(nonatomic, readwrite) int32_t chairId;

@property(nonatomic, readwrite) PB3ChairStatus status;

@end

/**
 * Fetches the raw value of a @c PB3BroadcastChairStatus's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BroadcastChairStatus_Status_RawValue(PB3BroadcastChairStatus *message);
/**
 * Sets the raw value of an @c PB3BroadcastChairStatus's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BroadcastChairStatus_Status_RawValue(PB3BroadcastChairStatus *message, int32_t value);

#pragma mark - PB3BroadcastChair

typedef GPB_ENUM(PB3BroadcastChair_FieldNumber) {
  PB3BroadcastChair_FieldNumber_ChairId = 1,
  PB3BroadcastChair_FieldNumber_Chair = 2,
  PB3BroadcastChair_FieldNumber_UnderChairNum = 3,
};

/**
 * cmdId=100110, 广播嘉宾位玩家变更
 **/
@interface PB3BroadcastChair : GPBMessage

/** 座位ID */
@property(nonatomic, readwrite) int32_t chairId;

@property(nonatomic, readwrite, strong, null_resettable) PB3Chair *chair;
/** Test to see if @c chair has been set. */
@property(nonatomic, readwrite) BOOL hasChair;

/** 麦下人数 */
@property(nonatomic, readwrite) int32_t underChairNum;

@end

#pragma mark - PB3ChairSitReq

typedef GPB_ENUM(PB3ChairSitReq_FieldNumber) {
  PB3ChairSitReq_FieldNumber_TargetId = 2,
  PB3ChairSitReq_FieldNumber_ChairId = 3,
  PB3ChairSitReq_FieldNumber_SitType = 4,
};

/**
 * 请求上座
 **/
@interface PB3ChairSitReq : GPBMessage

/** 上座目标id */
@property(nonatomic, readwrite) int64_t targetId;

/** 座位ID */
@property(nonatomic, readwrite) int32_t chairId;

/** 上坐类型 */
@property(nonatomic, readwrite) PB3SitChairType sitType;

@end

/**
 * Fetches the raw value of a @c PB3ChairSitReq's @c sitType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ChairSitReq_SitType_RawValue(PB3ChairSitReq *message);
/**
 * Sets the raw value of an @c PB3ChairSitReq's @c sitType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ChairSitReq_SitType_RawValue(PB3ChairSitReq *message, int32_t value);

#pragma mark - PB3ChairSitRes

typedef GPB_ENUM(PB3ChairSitRes_FieldNumber) {
  PB3ChairSitRes_FieldNumber_AgodaKey = 2,
};

@interface PB3ChairSitRes : GPBMessage

/** 声网key */
@property(nonatomic, readwrite, strong, null_resettable) PB3AgodaKey *agodaKey;
/** Test to see if @c agodaKey has been set. */
@property(nonatomic, readwrite) BOOL hasAgodaKey;

@end

#pragma mark - PB3BroadcastChairSit

typedef GPB_ENUM(PB3BroadcastChairSit_FieldNumber) {
  PB3BroadcastChairSit_FieldNumber_OperatorId = 1,
  PB3BroadcastChairSit_FieldNumber_TargetId = 2,
  PB3BroadcastChairSit_FieldNumber_ChairId = 3,
};

/**
 * 通知 上座者收到 cmdId=100111,
 **/
@interface PB3BroadcastChairSit : GPBMessage

/** 操作者id */
@property(nonatomic, readwrite) int64_t operatorId;

/** 上座目标id */
@property(nonatomic, readwrite) int64_t targetId;

/** 座位ID */
@property(nonatomic, readwrite) int32_t chairId;

@end

#pragma mark - PB3ChairMoveReq

typedef GPB_ENUM(PB3ChairMoveReq_FieldNumber) {
  PB3ChairMoveReq_FieldNumber_FromChairId = 2,
  PB3ChairMoveReq_FieldNumber_ToChairId = 3,
};

/**
 * 移麦
 **/
@interface PB3ChairMoveReq : GPBMessage

@property(nonatomic, readwrite) int32_t fromChairId;

/** 移到位置 */
@property(nonatomic, readwrite) int32_t toChairId;

@end

#pragma mark - PB3ChairMoveRes

@interface PB3ChairMoveRes : GPBMessage

@end

#pragma mark - PB3BroadcastChairMove

typedef GPB_ENUM(PB3BroadcastChairMove_FieldNumber) {
  PB3BroadcastChairMove_FieldNumber_PlayerId = 1,
  PB3BroadcastChairMove_FieldNumber_FromChairId = 2,
  PB3BroadcastChairMove_FieldNumber_ToChairId = 3,
  PB3BroadcastChairMove_FieldNumber_ChairCharm = 4,
  PB3BroadcastChairMove_FieldNumber_MateChairCharm = 5,
};

/**
 * cmdId=100112 广播移麦
 **/
@interface PB3BroadcastChairMove : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

@property(nonatomic, readwrite) int32_t fromChairId;

/** 移到位置 */
@property(nonatomic, readwrite) int32_t toChairId;

/** 麦序魅力值 */
@property(nonatomic, readwrite) int32_t chairCharm;

/** 麦序交友2.0魅力值 */
@property(nonatomic, readwrite) int32_t mateChairCharm;

@end

#pragma mark - PB3ChairLeaveReq

typedef GPB_ENUM(PB3ChairLeaveReq_FieldNumber) {
  PB3ChairLeaveReq_FieldNumber_TargetId = 2,
  PB3ChairLeaveReq_FieldNumber_ChairId = 3,
  PB3ChairLeaveReq_FieldNumber_OptType = 4,
};

/**
 * 请求下座
 **/
@interface PB3ChairLeaveReq : GPBMessage

/** 下座目标id */
@property(nonatomic, readwrite) int64_t targetId;

/** 座位ID */
@property(nonatomic, readwrite) int32_t chairId;

@property(nonatomic, readwrite) PB3ClearChairType optType;

@end

/**
 * Fetches the raw value of a @c PB3ChairLeaveReq's @c optType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ChairLeaveReq_OptType_RawValue(PB3ChairLeaveReq *message);
/**
 * Sets the raw value of an @c PB3ChairLeaveReq's @c optType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ChairLeaveReq_OptType_RawValue(PB3ChairLeaveReq *message, int32_t value);

#pragma mark - PB3ChairLeaveRes

typedef GPB_ENUM(PB3ChairLeaveRes_FieldNumber) {
  PB3ChairLeaveRes_FieldNumber_AgodaKey = 2,
};

@interface PB3ChairLeaveRes : GPBMessage

/** 声网key */
@property(nonatomic, readwrite, strong, null_resettable) PB3AgodaKey *agodaKey;
/** Test to see if @c agodaKey has been set. */
@property(nonatomic, readwrite) BOOL hasAgodaKey;

@end

#pragma mark - PB3BroadcastChairLeave

typedef GPB_ENUM(PB3BroadcastChairLeave_FieldNumber) {
  PB3BroadcastChairLeave_FieldNumber_OperatorId = 1,
  PB3BroadcastChairLeave_FieldNumber_TargetId = 2,
  PB3BroadcastChairLeave_FieldNumber_ChairId = 3,
};

/**
 * cmdId=100113 通知 下座者收到
 **/
@interface PB3BroadcastChairLeave : GPBMessage

/** 操作者id */
@property(nonatomic, readwrite) int64_t operatorId;

/** 下座目标id */
@property(nonatomic, readwrite) int64_t targetId;

/** 座位ID */
@property(nonatomic, readwrite) int32_t chairId;

@end

#pragma mark - PB3BroadcastChairAdminOpt

typedef GPB_ENUM(PB3BroadcastChairAdminOpt_FieldNumber) {
  PB3BroadcastChairAdminOpt_FieldNumber_OperatorId = 1,
  PB3BroadcastChairAdminOpt_FieldNumber_OperatorName = 2,
  PB3BroadcastChairAdminOpt_FieldNumber_TargetId = 3,
  PB3BroadcastChairAdminOpt_FieldNumber_TargetName = 4,
  PB3BroadcastChairAdminOpt_FieldNumber_OptType = 5,
};

/**
 * cmdId=100118 广播管理员抱麦/移麦
 **/
@interface PB3BroadcastChairAdminOpt : GPBMessage

/** 操作者id */
@property(nonatomic, readwrite) int64_t operatorId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *operatorName;

/** 下座目标id */
@property(nonatomic, readwrite) int64_t targetId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *targetName;

/** 操作类型，0抱麦，1移麦, */
@property(nonatomic, readwrite) int32_t optType;

@end

#pragma mark - PB3ChairQueueOptReq

typedef GPB_ENUM(PB3ChairQueueOptReq_FieldNumber) {
  PB3ChairQueueOptReq_FieldNumber_Type = 2,
  PB3ChairQueueOptReq_FieldNumber_TargetId = 3,
  PB3ChairQueueOptReq_FieldNumber_SitType = 4,
};

/**
 * 加入/退出排麦
 **/
@interface PB3ChairQueueOptReq : GPBMessage

/** 0加入，1退出 */
@property(nonatomic, readwrite) uint32_t type;

/** 被添加/移除排麦的目标id， 当!=0时，被管理员插入队列 */
@property(nonatomic, readwrite) int64_t targetId;

/** 排麦类型 */
@property(nonatomic, readwrite) PB3SitChairType sitType;

@end

/**
 * Fetches the raw value of a @c PB3ChairQueueOptReq's @c sitType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ChairQueueOptReq_SitType_RawValue(PB3ChairQueueOptReq *message);
/**
 * Sets the raw value of an @c PB3ChairQueueOptReq's @c sitType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ChairQueueOptReq_SitType_RawValue(PB3ChairQueueOptReq *message, int32_t value);

#pragma mark - PB3ChairQueueOptRes

@interface PB3ChairQueueOptRes : GPBMessage

@end

#pragma mark - PB3BroadcastChairQueueOpt

typedef GPB_ENUM(PB3BroadcastChairQueueOpt_FieldNumber) {
  PB3BroadcastChairQueueOpt_FieldNumber_Type = 1,
  PB3BroadcastChairQueueOpt_FieldNumber_QueueArray = 3,
};

/**
 * cmdId=100115, 广播加入/退出/插队排麦队列
 **/
@interface PB3BroadcastChairQueueOpt : GPBMessage

/** 0加入，1退出, 2插队 */
@property(nonatomic, readwrite) uint32_t type;

/** 排麦列表 （注：此ScenePlayer只有id，id2, name, icon 4个字段可用） */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ScenePlayer*> *queueArray;
/** The number of items in @c queueArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger queueArray_Count;

@end

#pragma mark - PB3ChairQueueJumpReq

typedef GPB_ENUM(PB3ChairQueueJumpReq_FieldNumber) {
  PB3ChairQueueJumpReq_FieldNumber_TargetId = 2,
};

/**
 * 排麦插队
 **/
@interface PB3ChairQueueJumpReq : GPBMessage

/** 目标用户id */
@property(nonatomic, readwrite) int64_t targetId;

@end

#pragma mark - PB3ChairQueueJumpRes

@interface PB3ChairQueueJumpRes : GPBMessage

@end

#pragma mark - PB3ChairQueueReq

/**
 * 请求排麦列表
 **/
@interface PB3ChairQueueReq : GPBMessage

@end

#pragma mark - PB3ChairQueueRes

typedef GPB_ENUM(PB3ChairQueueRes_FieldNumber) {
  PB3ChairQueueRes_FieldNumber_BanQueueStatus = 1,
  PB3ChairQueueRes_FieldNumber_QueueArray = 14,
};

@interface PB3ChairQueueRes : GPBMessage

/** 排麦列表 （注：此ScenePlayer只有id，name, icon 3个字段可用） */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ScenePlayer*> *queueArray;
/** The number of items in @c queueArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger queueArray_Count;

/** 队列状态； false可排麦，true不可排麦 */
@property(nonatomic, readwrite) BOOL banQueueStatus;

@end

#pragma mark - PB3OnlineFlower

typedef GPB_ENUM(PB3OnlineFlower_FieldNumber) {
  PB3OnlineFlower_FieldNumber_Id_p = 1,
  PB3OnlineFlower_FieldNumber_GiveTime = 2,
  PB3OnlineFlower_FieldNumber_CurrCount = 3,
  PB3OnlineFlower_FieldNumber_NextTime = 4,
  PB3OnlineFlower_FieldNumber_PeriodTime = 5,
  PB3OnlineFlower_FieldNumber_MaxCount = 6,
};

/**
 * 在线鲜花
 **/
@interface PB3OnlineFlower : GPBMessage

@property(nonatomic, readwrite) int64_t id_p;

/** 领取时间 */
@property(nonatomic, readwrite) int32_t giveTime;

/** 当前数量 */
@property(nonatomic, readwrite) int32_t currCount;

/** 下次领取倒计时,秒 */
@property(nonatomic, readwrite) int32_t nextTime;

/** 周期时间,500秒 */
@property(nonatomic, readwrite) int32_t periodTime;

/** 最大数量 */
@property(nonatomic, readwrite) int32_t maxCount;

@end

#pragma mark - PB3FlowerInfoReq

/**
 * 获取花数量信息
 **/
@interface PB3FlowerInfoReq : GPBMessage

@end

#pragma mark - PB3FlowerInfoRes

typedef GPB_ENUM(PB3FlowerInfoRes_FieldNumber) {
  PB3FlowerInfoRes_FieldNumber_Info = 1,
};

@interface PB3FlowerInfoRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3OnlineFlower *info;
/** Test to see if @c info has been set. */
@property(nonatomic, readwrite) BOOL hasInfo;

@end

#pragma mark - PB3BroadcastOnlineFlower

typedef GPB_ENUM(PB3BroadcastOnlineFlower_FieldNumber) {
  PB3BroadcastOnlineFlower_FieldNumber_Info = 1,
};

/**
 * 通知花数量变更，(新手礼物领取成功时会通知)
 **/
@interface PB3BroadcastOnlineFlower : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3OnlineFlower *info;
/** Test to see if @c info has been set. */
@property(nonatomic, readwrite) BOOL hasInfo;

@end

#pragma mark - PB3PresentFlowerReq

typedef GPB_ENUM(PB3PresentFlowerReq_FieldNumber) {
  PB3PresentFlowerReq_FieldNumber_TargetIdsArray = 1,
};

/**
 * 给主播送花
 **/
@interface PB3PresentFlowerReq : GPBMessage

/** 目标id */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *targetIdsArray;
/** The number of items in @c targetIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger targetIdsArray_Count;

@end

#pragma mark - PB3PresentFlowerRes

@interface PB3PresentFlowerRes : GPBMessage

@end

#pragma mark - PB3BroadcastPresentFlower

typedef GPB_ENUM(PB3BroadcastPresentFlower_FieldNumber) {
  PB3BroadcastPresentFlower_FieldNumber_Id_p = 1,
  PB3BroadcastPresentFlower_FieldNumber_Name = 2,
  PB3BroadcastPresentFlower_FieldNumber_Icon = 3,
  PB3BroadcastPresentFlower_FieldNumber_WealthLevel = 4,
  PB3BroadcastPresentFlower_FieldNumber_ReceiveName = 5,
  PB3BroadcastPresentFlower_FieldNumber_ReceiveId = 6,
  PB3BroadcastPresentFlower_FieldNumber_SendNobility = 7,
  PB3BroadcastPresentFlower_FieldNumber_ReceiveNobility = 8,
};

/**
 * 广播送花
 **/
@interface PB3BroadcastPresentFlower : GPBMessage

/** 发送者id */
@property(nonatomic, readwrite) int64_t id_p;

/** 发送者名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

@property(nonatomic, readwrite) uint32_t wealthLevel;

/** 接收者名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *receiveName;

/** 接收者id */
@property(nonatomic, readwrite) int64_t receiveId;

/** 发送者爵位信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3RoomNobilityInfo *sendNobility;
/** Test to see if @c sendNobility has been set. */
@property(nonatomic, readwrite) BOOL hasSendNobility;

/** 发送者爵位信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3RoomNobilityInfo *receiveNobility;
/** Test to see if @c receiveNobility has been set. */
@property(nonatomic, readwrite) BOOL hasReceiveNobility;

@end

#pragma mark - PB3ChatReq

typedef GPB_ENUM(PB3ChatReq_FieldNumber) {
  PB3ChatReq_FieldNumber_Content = 1,
  PB3ChatReq_FieldNumber_Options = 2,
  PB3ChatReq_FieldNumber_ToId = 3,
  PB3ChatReq_FieldNumber_IsPrivate = 4,
  PB3ChatReq_FieldNumber_Channel = 5,
  PB3ChatReq_FieldNumber_FastSpeakId = 6,
};

/**
 * [M] 发送聊天
 **/
@interface PB3ChatReq : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

/** 附加属性，客户端自己处理性别、昵称、VIP。。。。。 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *options;

/** 目标player_id */
@property(nonatomic, readwrite) int64_t toId;

/** 是否悄悄话 */
@property(nonatomic, readwrite) BOOL isPrivate;

/** 发送的聊天频道 */
@property(nonatomic, readwrite) enum PB3ChannelType channel;

/** 快速发言ID */
@property(nonatomic, readwrite) int64_t fastSpeakId;

@end

/**
 * Fetches the raw value of a @c PB3ChatReq's @c channel property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ChatReq_Channel_RawValue(PB3ChatReq *message);
/**
 * Sets the raw value of an @c PB3ChatReq's @c channel property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ChatReq_Channel_RawValue(PB3ChatReq *message, int32_t value);

#pragma mark - PB3ChatRes

@interface PB3ChatRes : GPBMessage

@end

#pragma mark - PB3BroadcastChat

typedef GPB_ENUM(PB3BroadcastChat_FieldNumber) {
  PB3BroadcastChat_FieldNumber_PlayerId = 1,
  PB3BroadcastChat_FieldNumber_Chat = 2,
  PB3BroadcastChat_FieldNumber_AtTime = 3,
  PB3BroadcastChat_FieldNumber_Name = 4,
  PB3BroadcastChat_FieldNumber_WealthLevel = 5,
  PB3BroadcastChat_FieldNumber_CharmLevel = 6,
  PB3BroadcastChat_FieldNumber_Flags = 7,
  PB3BroadcastChat_FieldNumber_Flags2 = 8,
  PB3BroadcastChat_FieldNumber_IsCharge = 9,
  PB3BroadcastChat_FieldNumber_EffectArray = 10,
  PB3BroadcastChat_FieldNumber_IsNewUser = 11,
  PB3BroadcastChat_FieldNumber_Id2 = 12,
  PB3BroadcastChat_FieldNumber_CaijiId = 13,
  PB3BroadcastChat_FieldNumber_NobilityInfo = 14,
  PB3BroadcastChat_FieldNumber_ChatShow = 15,
  PB3BroadcastChat_FieldNumber_DeviceType = 16,
  PB3BroadcastChat_FieldNumber_IsExposure = 17,
  PB3BroadcastChat_FieldNumber_IntimateFansInfo = 18,
  PB3BroadcastChat_FieldNumber_Nickname = 19,
  PB3BroadcastChat_FieldNumber_ChatEffect = 20,
  PB3BroadcastChat_FieldNumber_FishWealthLevel = 21,
  PB3BroadcastChat_FieldNumber_FishCharmLevel = 22,
};

/**
 * 广播聊天
 **/
@interface PB3BroadcastChat : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3ChatReq *chat;
/** Test to see if @c chat has been set. */
@property(nonatomic, readwrite) BOOL hasChat;

/** 发送时间 */
@property(nonatomic, readwrite) int32_t atTime;

/** 发送者信息 */
@property(nonatomic, readwrite) int64_t playerId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite) int32_t wealthLevel;

@property(nonatomic, readwrite) int32_t charmLevel;

@property(nonatomic, readwrite) int64_t flags;

@property(nonatomic, readwrite) int64_t flags2;

@property(nonatomic, readwrite) BOOL isCharge;

/** 特效 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3Effect*> *effectArray;
/** The number of items in @c effectArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger effectArray_Count;

/** 是否新人 */
@property(nonatomic, readwrite) BOOL isNewUser;

/** 靓号 */
@property(nonatomic, readwrite) int64_t id2;

/** 菜鸡id */
@property(nonatomic, readwrite) int64_t caijiId;

@property(nonatomic, readwrite, strong, null_resettable) PB3ChatNobilityInfo *nobilityInfo;
/** Test to see if @c nobilityInfo has been set. */
@property(nonatomic, readwrite) BOOL hasNobilityInfo;

@property(nonatomic, readwrite) PB3ChatShowSiteType chatShow;

/** 设备类型 */
@property(nonatomic, readwrite) enum PB3DeviceType deviceType;

/** 是否匿名曝光 */
@property(nonatomic, readwrite) BOOL isExposure;

/** 亲密粉丝信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3IntimateFansInfo *intimateFansInfo;
/** Test to see if @c intimateFansInfo has been set. */
@property(nonatomic, readwrite) BOOL hasIntimateFansInfo;

/** 用户昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nickname;

/** 聊天特效 */
@property(nonatomic, readwrite, strong, null_resettable) PB3ChatEffect *chatEffect;
/** Test to see if @c chatEffect has been set. */
@property(nonatomic, readwrite) BOOL hasChatEffect;

/** 半糖财富等级 */
@property(nonatomic, readwrite) int32_t fishWealthLevel;

/** 半糖魅力等级 */
@property(nonatomic, readwrite) int32_t fishCharmLevel;

@end

/**
 * Fetches the raw value of a @c PB3BroadcastChat's @c chatShow property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BroadcastChat_ChatShow_RawValue(PB3BroadcastChat *message);
/**
 * Sets the raw value of an @c PB3BroadcastChat's @c chatShow property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BroadcastChat_ChatShow_RawValue(PB3BroadcastChat *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3BroadcastChat's @c deviceType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BroadcastChat_DeviceType_RawValue(PB3BroadcastChat *message);
/**
 * Sets the raw value of an @c PB3BroadcastChat's @c deviceType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BroadcastChat_DeviceType_RawValue(PB3BroadcastChat *message, int32_t value);

#pragma mark - PB3ChatNobilityInfo

typedef GPB_ENUM(PB3ChatNobilityInfo_FieldNumber) {
  PB3ChatNobilityInfo_FieldNumber_NobilityId = 1,
  PB3ChatNobilityInfo_FieldNumber_NobilityPrefix = 2,
  PB3ChatNobilityInfo_FieldNumber_NobilityColor = 3,
  PB3ChatNobilityInfo_FieldNumber_MaskInfo = 4,
  PB3ChatNobilityInfo_FieldNumber_ChairId = 5,
};

@interface PB3ChatNobilityInfo : GPBMessage

/** 爵位ID */
@property(nonatomic, readwrite) int32_t nobilityId;

/** 爵位前缀，爵位的icon */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nobilityPrefix;

/** 爵位公屏字体颜色 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nobilityColor;

/** 马甲信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3MaskInfo *maskInfo;
/** Test to see if @c maskInfo has been set. */
@property(nonatomic, readwrite) BOOL hasMaskInfo;

/** 所在麦位id，如果在是匿名上麦，且在麦上，才有值 */
@property(nonatomic, readwrite) int32_t chairId;

@end

#pragma mark - PB3PlayDiceReq

typedef GPB_ENUM(PB3PlayDiceReq_FieldNumber) {
  PB3PlayDiceReq_FieldNumber_EmojiId = 1,
};

/**
 * 举牌
 **/
@interface PB3PlayDiceReq : GPBMessage

@property(nonatomic, readwrite) int64_t emojiId;

@end

#pragma mark - PB3PlayDiceRes

@interface PB3PlayDiceRes : GPBMessage

@end

#pragma mark - PB3BroadcastPlayDice

typedef GPB_ENUM(PB3BroadcastPlayDice_FieldNumber) {
  PB3BroadcastPlayDice_FieldNumber_PlayerId = 1,
  PB3BroadcastPlayDice_FieldNumber_Point = 2,
  PB3BroadcastPlayDice_FieldNumber_MaskInfo = 3,
  PB3BroadcastPlayDice_FieldNumber_ChairId = 4,
  PB3BroadcastPlayDice_FieldNumber_Chats = 5,
  PB3BroadcastPlayDice_FieldNumber_EmojiId = 6,
};

/**
 * 广播举牌
 **/
@interface PB3BroadcastPlayDice : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

/** 0到9 */
@property(nonatomic, readwrite) int32_t point;

@property(nonatomic, readwrite, strong, null_resettable) PB3MaskInfo *maskInfo;
/** Test to see if @c maskInfo has been set. */
@property(nonatomic, readwrite) BOOL hasMaskInfo;

/** 所在麦位id */
@property(nonatomic, readwrite) int32_t chairId;

@property(nonatomic, readwrite, strong, null_resettable) PB3BroadcastChat *chats;
/** Test to see if @c chats has been set. */
@property(nonatomic, readwrite) BOOL hasChats;

@property(nonatomic, readwrite) int64_t emojiId;

@end

#pragma mark - PB3UserSpeakReq

typedef GPB_ENUM(PB3UserSpeakReq_FieldNumber) {
  PB3UserSpeakReq_FieldNumber_Content = 1,
  PB3UserSpeakReq_FieldNumber_Tiaotiao = 2,
};

/**
 * 用户发言 SCC000119
 **/
@interface PB3UserSpeakReq : GPBMessage

/** 消息内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

/** 1 跳单信息 */
@property(nonatomic, readwrite) int32_t tiaotiao;

@end

#pragma mark - PB3UserSpeakRes

typedef GPB_ENUM(PB3UserSpeakRes_FieldNumber) {
  PB3UserSpeakRes_FieldNumber_NextTime = 1,
};

/**
 * SSC000119 IntegerVO is_ok = 1; 是否成功； 1=成功
 * ；2=财富、在线等级不足；3=不在麦上；4=不在房间;
 **/
@interface PB3UserSpeakRes : GPBMessage

/** 下次发广播间隔时间，单位: s */
@property(nonatomic, readwrite) int32_t nextTime;

@end

#pragma mark - PB3BroadcastMakeFriend

typedef GPB_ENUM(PB3BroadcastMakeFriend_FieldNumber) {
  PB3BroadcastMakeFriend_FieldNumber_PlayerId = 1,
  PB3BroadcastMakeFriend_FieldNumber_Icon = 2,
  PB3BroadcastMakeFriend_FieldNumber_Sex = 3,
  PB3BroadcastMakeFriend_FieldNumber_WealthLevel = 4,
  PB3BroadcastMakeFriend_FieldNumber_Name = 5,
  PB3BroadcastMakeFriend_FieldNumber_BroadcastContent = 6,
  PB3BroadcastMakeFriend_FieldNumber_Id2 = 7,
  PB3BroadcastMakeFriend_FieldNumber_RoomId = 8,
  PB3BroadcastMakeFriend_FieldNumber_CharmLevel = 9,
  PB3BroadcastMakeFriend_FieldNumber_Pos = 10,
  PB3BroadcastMakeFriend_FieldNumber_Time = 11,
  PB3BroadcastMakeFriend_FieldNumber_InfoType = 12,
  PB3BroadcastMakeFriend_FieldNumber_Gift = 13,
  PB3BroadcastMakeFriend_FieldNumber_Clicks = 14,
  PB3BroadcastMakeFriend_FieldNumber_Id_p = 15,
  PB3BroadcastMakeFriend_FieldNumber_RoomOnlineNum = 16,
  PB3BroadcastMakeFriend_FieldNumber_LeftIconBgColor = 17,
  PB3BroadcastMakeFriend_FieldNumber_LeftText = 18,
  PB3BroadcastMakeFriend_FieldNumber_LeftTextColor = 19,
  PB3BroadcastMakeFriend_FieldNumber_Pattern = 20,
  PB3BroadcastMakeFriend_FieldNumber_RoomType = 21,
  PB3BroadcastMakeFriend_FieldNumber_Extends = 22,
  PB3BroadcastMakeFriend_FieldNumber_LabelsArray = 23,
  PB3BroadcastMakeFriend_FieldNumber_FishWealthLevel = 24,
  PB3BroadcastMakeFriend_FieldNumber_FishCharmLevel = 25,
};

/**
 * 广播交友的消息列表信息  SSC000118   RC_MakeFriend = 100127;  广播交友
 **/
@interface PB3BroadcastMakeFriend : GPBMessage

/** 用户id */
@property(nonatomic, readwrite) int64_t playerId;

/** 头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 性别 */
@property(nonatomic, readwrite) enum PB3SexType sex;

/** 财富等级 */
@property(nonatomic, readwrite) int32_t wealthLevel;

/** 用户昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 广告内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *broadcastContent;

@property(nonatomic, readwrite) int64_t id2;

@property(nonatomic, readwrite) int64_t roomId;

@property(nonatomic, readwrite) int32_t charmLevel;

/** 1　广播交友首页不显示 */
@property(nonatomic, readwrite) int32_t pos;

/** 发言时间 */
@property(nonatomic, readwrite) int64_t time;

/** 1 跳跳，2礼物 */
@property(nonatomic, readwrite) int32_t infoType;

/** 赠送礼物 */
@property(nonatomic, readwrite, strong, null_resettable) PB3GiveGift *gift;
/** Test to see if @c gift has been set. */
@property(nonatomic, readwrite) BOOL hasGift;

/** 用户点击次数，只有info_type为 1跳跳 的时候才记录 */
@property(nonatomic, readwrite) int32_t clicks;

/** 信息id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** 房间人数 */
@property(nonatomic, readwrite) int64_t roomOnlineNum;

@property(nonatomic, readwrite, copy, null_resettable) NSString *leftIconBgColor;

@property(nonatomic, readwrite, copy, null_resettable) NSString *leftText;

@property(nonatomic, readwrite, copy, null_resettable) NSString *leftTextColor;

@property(nonatomic, readwrite) enum PB3NewRoomPattern pattern;

/** 房间类型 -1 普通房，>0厅 */
@property(nonatomic, readwrite) int32_t roomType;

/** 扩展字段ExtendKey */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32ObjectDictionary<NSString*> *extends;
/** The number of items in @c extends without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger extends_Count;

/** 标签列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *labelsArray;
/** The number of items in @c labelsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger labelsArray_Count;

/** 半糖财富等级 */
@property(nonatomic, readwrite) int32_t fishWealthLevel;

/** 半糖魅力等级 */
@property(nonatomic, readwrite) int32_t fishCharmLevel;

@end

/**
 * Fetches the raw value of a @c PB3BroadcastMakeFriend's @c sex property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BroadcastMakeFriend_Sex_RawValue(PB3BroadcastMakeFriend *message);
/**
 * Sets the raw value of an @c PB3BroadcastMakeFriend's @c sex property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BroadcastMakeFriend_Sex_RawValue(PB3BroadcastMakeFriend *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3BroadcastMakeFriend's @c pattern property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BroadcastMakeFriend_Pattern_RawValue(PB3BroadcastMakeFriend *message);
/**
 * Sets the raw value of an @c PB3BroadcastMakeFriend's @c pattern property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BroadcastMakeFriend_Pattern_RawValue(PB3BroadcastMakeFriend *message, int32_t value);

#pragma mark - PB3GiveGift

typedef GPB_ENUM(PB3GiveGift_FieldNumber) {
  PB3GiveGift_FieldNumber_SendId = 1,
  PB3GiveGift_FieldNumber_SendName = 2,
  PB3GiveGift_FieldNumber_SendIcon = 3,
  PB3GiveGift_FieldNumber_SendSex = 4,
  PB3GiveGift_FieldNumber_RecvId = 5,
  PB3GiveGift_FieldNumber_RecvName = 6,
  PB3GiveGift_FieldNumber_RecvIcon = 7,
  PB3GiveGift_FieldNumber_RecvSex = 8,
  PB3GiveGift_FieldNumber_RoomId = 9,
  PB3GiveGift_FieldNumber_RoomPwd = 10,
  PB3GiveGift_FieldNumber_GiftId = 11,
  PB3GiveGift_FieldNumber_GiftNum = 12,
  PB3GiveGift_FieldNumber_CreateTime = 13,
  PB3GiveGift_FieldNumber_Gold = 14,
  PB3GiveGift_FieldNumber_RoomId2 = 15,
  PB3GiveGift_FieldNumber_SendNobilityInfo = 16,
  PB3GiveGift_FieldNumber_RevNobilityInfo = 17,
  PB3GiveGift_FieldNumber_IsWorld = 18,
  PB3GiveGift_FieldNumber_GiftIcon = 19,
  PB3GiveGift_FieldNumber_GiftType = 20,
  PB3GiveGift_FieldNumber_FromIdCubismIcon = 21,
  PB3GiveGift_FieldNumber_ToIdCubismIcon = 22,
  PB3GiveGift_FieldNumber_RoomName = 23,
  PB3GiveGift_FieldNumber_Message = 24,
};

@interface PB3GiveGift : GPBMessage

/** 赠送者ID */
@property(nonatomic, readwrite) int64_t sendId;

/** 赠送者昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sendName;

/** 赠送者头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sendIcon;

/** 赠送者性别 */
@property(nonatomic, readwrite) enum PB3SexType sendSex;

/** 接收者ID */
@property(nonatomic, readwrite) int64_t recvId;

/** 接收者昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *recvName;

/** 接收者头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *recvIcon;

/** 接收者性别 */
@property(nonatomic, readwrite) enum PB3SexType recvSex;

/** 房间ID */
@property(nonatomic, readwrite) int64_t roomId;

/** 房间密码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomPwd;

/** 礼物ID */
@property(nonatomic, readwrite) int32_t giftId;

/** 礼物数量 */
@property(nonatomic, readwrite) int32_t giftNum;

/** 送礼时间unix时间，单位: s */
@property(nonatomic, readwrite) int64_t createTime;

/** 价值 */
@property(nonatomic, readwrite) int32_t gold;

/** 房间靓号 */
@property(nonatomic, readwrite) int64_t roomId2;

/** 送礼者爵位信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3RoomNobilityInfo *sendNobilityInfo;
/** Test to see if @c sendNobilityInfo has been set. */
@property(nonatomic, readwrite) BOOL hasSendNobilityInfo;

/** 收礼者爵位信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3RoomNobilityInfo *revNobilityInfo;
/** Test to see if @c revNobilityInfo has been set. */
@property(nonatomic, readwrite) BOOL hasRevNobilityInfo;

/** 是否全服礼物 */
@property(nonatomic, readwrite) BOOL isWorld;

/** 礼物图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *giftIcon;

/** 礼物类型 */
@property(nonatomic, readwrite) int32_t giftType;

/** 送礼者的虚拟形象静态图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *fromIdCubismIcon;

/** 收礼者的虚拟形象静态图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *toIdCubismIcon;

/** 房间名字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomName;

/** 输入信息 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *message;

@end

/**
 * Fetches the raw value of a @c PB3GiveGift's @c sendSex property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3GiveGift_SendSex_RawValue(PB3GiveGift *message);
/**
 * Sets the raw value of an @c PB3GiveGift's @c sendSex property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3GiveGift_SendSex_RawValue(PB3GiveGift *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3GiveGift's @c recvSex property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3GiveGift_RecvSex_RawValue(PB3GiveGift *message);
/**
 * Sets the raw value of an @c PB3GiveGift's @c recvSex property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3GiveGift_RecvSex_RawValue(PB3GiveGift *message, int32_t value);

#pragma mark - PB3GetBroadcastListReq

typedef GPB_ENUM(PB3GetBroadcastListReq_FieldNumber) {
  PB3GetBroadcastListReq_FieldNumber_Pos = 1,
};

@interface PB3GetBroadcastListReq : GPBMessage

/** 1 首页过滤，０默认 */
@property(nonatomic, readwrite) int32_t pos;

@end

#pragma mark - PB3GetBroadcastListRes

typedef GPB_ENUM(PB3GetBroadcastListRes_FieldNumber) {
  PB3GetBroadcastListRes_FieldNumber_ListArray = 1,
  PB3GetBroadcastListRes_FieldNumber_Status = 2,
  PB3GetBroadcastListRes_FieldNumber_Time = 3,
  PB3GetBroadcastListRes_FieldNumber_SurvivalTime = 4,
};

@interface PB3GetBroadcastListRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3BroadcastMakeFriend*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@property(nonatomic, readwrite) int32_t status;

@property(nonatomic, readwrite) int64_t time;

/** 跳跳存在时长，以发布时间为准，发布之后survival_time秒跳跳即失效，单位: s */
@property(nonatomic, readwrite) int32_t survivalTime;

@end

#pragma mark - PB3ClickTiaoTiaoReq

typedef GPB_ENUM(PB3ClickTiaoTiaoReq_FieldNumber) {
  PB3ClickTiaoTiaoReq_FieldNumber_PlayerId = 1,
  PB3ClickTiaoTiaoReq_FieldNumber_CreateTime = 2,
};

/**
 * 用户点击发布的跳跳
 **/
@interface PB3ClickTiaoTiaoReq : GPBMessage

/** 跳跳发布者id */
@property(nonatomic, readwrite) int64_t playerId;

/** 跳跳发布的时间 */
@property(nonatomic, readwrite) int64_t createTime;

@end

#pragma mark - PB3ClickTiaoTiaoRes

@interface PB3ClickTiaoTiaoRes : GPBMessage

@end

#pragma mark - PB3BroadcastIntimateSitChair

typedef GPB_ENUM(PB3BroadcastIntimateSitChair_FieldNumber) {
  PB3BroadcastIntimateSitChair_FieldNumber_PlayerId = 1,
  PB3BroadcastIntimateSitChair_FieldNumber_PlayerName = 2,
  PB3BroadcastIntimateSitChair_FieldNumber_PlayerIcon = 3,
  PB3BroadcastIntimateSitChair_FieldNumber_FriendId = 4,
  PB3BroadcastIntimateSitChair_FieldNumber_FriendName = 5,
  PB3BroadcastIntimateSitChair_FieldNumber_FriendIcon = 6,
  PB3BroadcastIntimateSitChair_FieldNumber_Type = 7,
  PB3BroadcastIntimateSitChair_FieldNumber_PublicText = 8,
  PB3BroadcastIntimateSitChair_FieldNumber_PublicTextConfig = 9,
};

/**
 * 广播：xxx 与亲密挚友 xxxx一起上麦 cmdId=100128
 **/
@interface PB3BroadcastIntimateSitChair : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *playerName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *playerIcon;

@property(nonatomic, readwrite) int64_t friendId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *friendName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *friendIcon;

/** 挚友类型 */
@property(nonatomic, readwrite) int32_t type;

/** 公屏提示文本，已转换过的 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *publicText;

/** 公屏提示原配置 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *publicTextConfig;

@end

#pragma mark - PB3IntimateChair

typedef GPB_ENUM(PB3IntimateChair_FieldNumber) {
  PB3IntimateChair_FieldNumber_PlayerId = 1,
  PB3IntimateChair_FieldNumber_Type = 2,
  PB3IntimateChair_FieldNumber_Sort = 3,
  PB3IntimateChair_FieldNumber_PrivateFriendId = 4,
  PB3IntimateChair_FieldNumber_PrivateType = 5,
  PB3IntimateChair_FieldNumber_PrivateSort = 6,
};

/**
 * 坑上挚友
 **/
@interface PB3IntimateChair : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

/** 挚友类型 */
@property(nonatomic, readwrite) int32_t type;

/** 挚友排序 */
@property(nonatomic, readwrite) int32_t sort;

/** 私密(还没公开)的挚友的id */
@property(nonatomic, readwrite) int64_t privateFriendId;

/** 私密(还没公开)的挚友的挚友类型 */
@property(nonatomic, readwrite) int32_t privateType;

/** 私密(还没公开)的挚友的挚友排序 */
@property(nonatomic, readwrite) int32_t privateSort;

@end

#pragma mark - PB3BroadcastIntimateChairList

typedef GPB_ENUM(PB3BroadcastIntimateChairList_FieldNumber) {
  PB3BroadcastIntimateChairList_FieldNumber_IntimatesArray = 1,
};

/**
 * 广播 挚友列表变更 cmdId=100129
 **/
@interface PB3BroadcastIntimateChairList : GPBMessage

/** 挚友列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3IntimateChair*> *intimatesArray;
/** The number of items in @c intimatesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger intimatesArray_Count;

@end

#pragma mark - PB3StartMateChoiceReq

/**
 * 开始互选
 **/
@interface PB3StartMateChoiceReq : GPBMessage

@end

#pragma mark - PB3StartMateChoiceRes

@interface PB3StartMateChoiceRes : GPBMessage

@end

#pragma mark - PB3BroadcastStartMateChoice

/**
 * 广播 互选开始 cmdId=100130
 **/
@interface PB3BroadcastStartMateChoice : GPBMessage

@end

#pragma mark - PB3MateChoiceChairReq

typedef GPB_ENUM(PB3MateChoiceChairReq_FieldNumber) {
  PB3MateChoiceChairReq_FieldNumber_PlayerId = 1,
};

@interface PB3MateChoiceChairReq : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

@end

#pragma mark - PB3MateChoiceChairRes

@interface PB3MateChoiceChairRes : GPBMessage

@end

#pragma mark - PB3BroadcastMateChoiceNum

typedef GPB_ENUM(PB3BroadcastMateChoiceNum_FieldNumber) {
  PB3BroadcastMateChoiceNum_FieldNumber_Num = 1,
};

/**
 * 广播 已确定人数 cmdId=100131
 **/
@interface PB3BroadcastMateChoiceNum : GPBMessage

@property(nonatomic, readwrite) int32_t num;

@end

#pragma mark - PB3MateChoiceResultReq

@interface PB3MateChoiceResultReq : GPBMessage

@end

#pragma mark - PB3MateChoiceResultRes

@interface PB3MateChoiceResultRes : GPBMessage

@end

#pragma mark - PB3ChangeMateChoiceStatusReq

typedef GPB_ENUM(PB3ChangeMateChoiceStatusReq_FieldNumber) {
  PB3ChangeMateChoiceStatusReq_FieldNumber_Status = 1,
};

@interface PB3ChangeMateChoiceStatusReq : GPBMessage

/** 状态 */
@property(nonatomic, readwrite) int32_t status;

@end

#pragma mark - PB3ChangeMateChoiceStatusRes

@interface PB3ChangeMateChoiceStatusRes : GPBMessage

@end

#pragma mark - PB3QueryMateChoiceInfoReq

@interface PB3QueryMateChoiceInfoReq : GPBMessage

@end

#pragma mark - PB3QueryMateChoiceInfoRes

typedef GPB_ENUM(PB3QueryMateChoiceInfoRes_FieldNumber) {
  PB3QueryMateChoiceInfoRes_FieldNumber_Status = 1,
  PB3QueryMateChoiceInfoRes_FieldNumber_ChoiceEndUnix = 2,
  PB3QueryMateChoiceInfoRes_FieldNumber_Pairs = 3,
  PB3QueryMateChoiceInfoRes_FieldNumber_HatOwnerId = 4,
  PB3QueryMateChoiceInfoRes_FieldNumber_HatIcon = 5,
};

@interface PB3QueryMateChoiceInfoRes : GPBMessage

/** 状态 */
@property(nonatomic, readwrite) int32_t status;

/** 心动选择结束时间戳 */
@property(nonatomic, readwrite) int64_t choiceEndUnix;

/** playerId->target playerId, 0表示没选 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Int64Dictionary *pairs;
/** The number of items in @c pairs without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger pairs_Count;

@property(nonatomic, readwrite) int64_t hatOwnerId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *hatIcon;

@end

#pragma mark - PB3MateChoicePublishResultReq

typedef GPB_ENUM(PB3MateChoicePublishResultReq_FieldNumber) {
  PB3MateChoicePublishResultReq_FieldNumber_PlayerId = 1,
};

@interface PB3MateChoicePublishResultReq : GPBMessage

/** 被公布人的ID */
@property(nonatomic, readwrite) int64_t playerId;

@end

#pragma mark - PB3MateChoicePublishResultRes

@interface PB3MateChoicePublishResultRes : GPBMessage

@end

#pragma mark - PB3BroadcastMateChoiceResult

typedef GPB_ENUM(PB3BroadcastMateChoiceResult_FieldNumber) {
  PB3BroadcastMateChoiceResult_FieldNumber_Pairs = 1,
};

/**
 * 广播公布结果 cmdId=100132
 **/
@interface PB3BroadcastMateChoiceResult : GPBMessage

/** playerId->target playerId, 0表示没选 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Int64Dictionary *pairs;
/** The number of items in @c pairs without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger pairs_Count;

@end

#pragma mark - PB3MateRoomMatch

typedef GPB_ENUM(PB3MateRoomMatch_FieldNumber) {
  PB3MateRoomMatch_FieldNumber_GoldStream = 1,
  PB3MateRoomMatch_FieldNumber_RoomId = 2,
  PB3MateRoomMatch_FieldNumber_CardKey = 3,
  PB3MateRoomMatch_FieldNumber_CardType = 4,
  PB3MateRoomMatch_FieldNumber_Player1Id = 10,
  PB3MateRoomMatch_FieldNumber_Player1Name = 11,
  PB3MateRoomMatch_FieldNumber_Player1Icon = 12,
  PB3MateRoomMatch_FieldNumber_Player2Id = 20,
  PB3MateRoomMatch_FieldNumber_Player2Name = 21,
  PB3MateRoomMatch_FieldNumber_Player2Icon = 22,
  PB3MateRoomMatch_FieldNumber_IsWorldBroadcast = 23,
  PB3MateRoomMatch_FieldNumber_NobilityInfo1 = 24,
  PB3MateRoomMatch_FieldNumber_NobilityInfo2 = 25,
  PB3MateRoomMatch_FieldNumber_IsMatch = 26,
  PB3MateRoomMatch_FieldNumber_BroadcastMsg = 27,
  PB3MateRoomMatch_FieldNumber_RoomName = 28,
};

/**
 * 交友模板
 **/
@interface PB3MateRoomMatch : GPBMessage

/** 流水 */
@property(nonatomic, readwrite) int32_t goldStream;

@property(nonatomic, readwrite) int64_t roomId;

/** 卡片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *cardKey;

/**
 * /upload/date_room/cards/{key[0,2]}/{key[0,4]}/{key}_{index}.webp
 * index: 0大图,1小图
 **/
@property(nonatomic, readwrite) int32_t cardType;

@property(nonatomic, readwrite) int64_t player1Id;

@property(nonatomic, readwrite, copy, null_resettable) NSString *player1Name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *player1Icon;

@property(nonatomic, readwrite) int64_t player2Id;

@property(nonatomic, readwrite, copy, null_resettable) NSString *player2Name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *player2Icon;

/** 是否全服广播 */
@property(nonatomic, readwrite) BOOL isWorldBroadcast;

/** 爵位信息  交友1.0才用 */
@property(nonatomic, readwrite, strong, null_resettable) PB3RoomNobilityInfo *nobilityInfo1;
/** Test to see if @c nobilityInfo1 has been set. */
@property(nonatomic, readwrite) BOOL hasNobilityInfo1;

/** 爵位信息  交友1.0才用 */
@property(nonatomic, readwrite, strong, null_resettable) PB3RoomNobilityInfo *nobilityInfo2;
/** Test to see if @c nobilityInfo2 has been set. */
@property(nonatomic, readwrite) BOOL hasNobilityInfo2;

/** 是否互选 */
@property(nonatomic, readwrite) BOOL isMatch;

/** 公屏消息 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *broadcastMsg;

/** 房间名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomName;

@end

#pragma mark - PB3BroadcastMateRoomMatch

typedef GPB_ENUM(PB3BroadcastMateRoomMatch_FieldNumber) {
  PB3BroadcastMateRoomMatch_FieldNumber_Match = 1,
};

/**
 * 广播匹配成功公告 cmdId=100133
 **/
@interface PB3BroadcastMateRoomMatch : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3MateRoomMatch *match;
/** Test to see if @c match has been set. */
@property(nonatomic, readwrite) BOOL hasMatch;

@end

#pragma mark - PB3BroadcastMateMatchMsg

typedef GPB_ENUM(PB3BroadcastMateMatchMsg_FieldNumber) {
  PB3BroadcastMateMatchMsg_FieldNumber_TargetId = 1,
  PB3BroadcastMateMatchMsg_FieldNumber_TargetName = 2,
  PB3BroadcastMateMatchMsg_FieldNumber_CardPath = 3,
  PB3BroadcastMateMatchMsg_FieldNumber_Tip = 4,
};

/**
 * 广播匹配成功系统消息 cmdId=100137
 *  恭喜你与[xxxxx]成功牵手，请查收你们的浪漫时刻纪念卡片~[点击查看]
 **/
@interface PB3BroadcastMateMatchMsg : GPBMessage

@property(nonatomic, readwrite) int64_t targetId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *targetName;

/** http://cdn + card_path */
@property(nonatomic, readwrite, copy, null_resettable) NSString *cardPath;

/** 恭喜你与[xxxx]成功牵手，请查收你们的浪漫时刻纪念卡片~ [点击查看]; */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tip;

@end

#pragma mark - PB3BroadcastMateNotMatch

/**
 * 广播没有匹配 cmdId=100134
 **/
@interface PB3BroadcastMateNotMatch : GPBMessage

@end

#pragma mark - PB3BroadMateChairGoldStream

typedef GPB_ENUM(PB3BroadMateChairGoldStream_FieldNumber) {
  PB3BroadMateChairGoldStream_FieldNumber_PlayerId = 1,
  PB3BroadMateChairGoldStream_FieldNumber_GoldLevel = 2,
  PB3BroadMateChairGoldStream_FieldNumber_Sex = 3,
};

/**
 * 广播累计金币更新 cmdId=100135
 **/
@interface PB3BroadMateChairGoldStream : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

/** 0~6 */
@property(nonatomic, readwrite) int32_t goldLevel;

@property(nonatomic, readwrite) enum PB3SexType sex;

@end

/**
 * Fetches the raw value of a @c PB3BroadMateChairGoldStream's @c sex property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BroadMateChairGoldStream_Sex_RawValue(PB3BroadMateChairGoldStream *message);
/**
 * Sets the raw value of an @c PB3BroadMateChairGoldStream's @c sex property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BroadMateChairGoldStream_Sex_RawValue(PB3BroadMateChairGoldStream *message, int32_t value);

#pragma mark - PB3BroadMateChairCharm

typedef GPB_ENUM(PB3BroadMateChairCharm_FieldNumber) {
  PB3BroadMateChairCharm_FieldNumber_PlayerId = 1,
  PB3BroadMateChairCharm_FieldNumber_ChairCharm = 4,
  PB3BroadMateChairCharm_FieldNumber_ChairId = 5,
};

@interface PB3BroadMateChairCharm : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

@property(nonatomic, readwrite) int32_t chairCharm;

@property(nonatomic, readwrite) int32_t chairId;

@end

#pragma mark - PB3DragonBallReq

typedef GPB_ENUM(PB3DragonBallReq_FieldNumber) {
  PB3DragonBallReq_FieldNumber_Type = 1,
};

/**
 * 龙珠
 **/
@interface PB3DragonBallReq : GPBMessage

@property(nonatomic, readwrite) int32_t type;

@end

#pragma mark - PB3DragonBallRes

typedef GPB_ENUM(PB3DragonBallRes_FieldNumber) {
  PB3DragonBallRes_FieldNumber_Id_p = 1,
  PB3DragonBallRes_FieldNumber_DragonBallArray = 2,
  PB3DragonBallRes_FieldNumber_Type = 3,
  PB3DragonBallRes_FieldNumber_Name = 4,
};

@interface PB3DragonBallRes : GPBMessage

/** playerId */
@property(nonatomic, readwrite) int64_t id_p;

/** 0 数字一  1 数字二  2 数字三 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *dragonBallArray;
/** The number of items in @c dragonBallArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger dragonBallArray_Count;

/** 0 第一次  1 第二次 */
@property(nonatomic, readwrite) int32_t type;

/** 昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@end

#pragma mark - PB3BroadcastDragonBall

typedef GPB_ENUM(PB3BroadcastDragonBall_FieldNumber) {
  PB3BroadcastDragonBall_FieldNumber_Id_p = 1,
  PB3BroadcastDragonBall_FieldNumber_DragonBallArray = 2,
  PB3BroadcastDragonBall_FieldNumber_Type = 3,
  PB3BroadcastDragonBall_FieldNumber_Name = 4,
};

@interface PB3BroadcastDragonBall : GPBMessage

/** playerId */
@property(nonatomic, readwrite) int64_t id_p;

/** 0 数字一  1 数字二  2 数字三 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *dragonBallArray;
/** The number of items in @c dragonBallArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger dragonBallArray_Count;

/** 0 第一次  1 第二次 */
@property(nonatomic, readwrite) int32_t type;

/** 昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@end

#pragma mark - PB3Vote

typedef GPB_ENUM(PB3Vote_FieldNumber) {
  PB3Vote_FieldNumber_VoteId = 1,
  PB3Vote_FieldNumber_VoteName = 2,
  PB3Vote_FieldNumber_BeginAt = 4,
  PB3Vote_FieldNumber_EndAt = 5,
  PB3Vote_FieldNumber_Ret = 6,
  PB3Vote_FieldNumber_PlayerId = 7,
  PB3Vote_FieldNumber_PlayerName = 8,
  PB3Vote_FieldNumber_VoteArray = 9,
  PB3Vote_FieldNumber_NobilityInfo = 10,
  PB3Vote_FieldNumber_Type = 11,
};

/**
 *  投票信息
 **/
@interface PB3Vote : GPBMessage

/** 投票Id */
@property(nonatomic, readwrite) int32_t voteId;

/** 投票名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *voteName;

/** 服务器当前时间 秒 */
@property(nonatomic, readwrite) int64_t beginAt;

/** 结束时间 秒 */
@property(nonatomic, readwrite) int64_t endAt;

/** 0投票没有开启,1发起投票中, 2 投票结束 */
@property(nonatomic, readwrite) int32_t ret;

/** 发起人 */
@property(nonatomic, readwrite) int64_t playerId;

/** 发起人昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerName;

/** 投票人信息 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3VotePlayer*> *voteArray;
/** The number of items in @c voteArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger voteArray_Count;

/** 发起人爵位信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3RoomNobilityInfo *nobilityInfo;
/** Test to see if @c nobilityInfo has been set. */
@property(nonatomic, readwrite) BOOL hasNobilityInfo;

/** 投票类型 */
@property(nonatomic, readwrite) PB3VoteType type;

@end

/**
 * Fetches the raw value of a @c PB3Vote's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3Vote_Type_RawValue(PB3Vote *message);
/**
 * Sets the raw value of an @c PB3Vote's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3Vote_Type_RawValue(PB3Vote *message, int32_t value);

#pragma mark - PB3VotePlayer

typedef GPB_ENUM(PB3VotePlayer_FieldNumber) {
  PB3VotePlayer_FieldNumber_OptionIndex = 1,
  PB3VotePlayer_FieldNumber_OptionName = 2,
  PB3VotePlayer_FieldNumber_Icon = 3,
  PB3VotePlayer_FieldNumber_Vote = 4,
  PB3VotePlayer_FieldNumber_Type = 5,
  PB3VotePlayer_FieldNumber_NobilityInfo = 34,
};

/**
 * 投票玩家信息
 **/
@interface PB3VotePlayer : GPBMessage

/** playerId或序号id */
@property(nonatomic, readwrite) int64_t optionIndex;

/** 昵称或投票项名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *optionName;

/** 头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 票数 */
@property(nonatomic, readwrite) int32_t vote;

/** 爵位信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3RoomNobilityInfo *nobilityInfo;
/** Test to see if @c nobilityInfo has been set. */
@property(nonatomic, readwrite) BOOL hasNobilityInfo;

/** 投票类型 */
@property(nonatomic, readwrite) PB3VoteType type;

@end

/**
 * Fetches the raw value of a @c PB3VotePlayer's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3VotePlayer_Type_RawValue(PB3VotePlayer *message);
/**
 * Sets the raw value of an @c PB3VotePlayer's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3VotePlayer_Type_RawValue(PB3VotePlayer *message, int32_t value);

#pragma mark - PB3VoteOption

typedef GPB_ENUM(PB3VoteOption_FieldNumber) {
  PB3VoteOption_FieldNumber_Index = 1,
  PB3VoteOption_FieldNumber_Name = 2,
};

@interface PB3VoteOption : GPBMessage

/** 投票选项序号 */
@property(nonatomic, readwrite) int64_t index;

/** 投票选项名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@end

#pragma mark - PB3StartVoteReq

typedef GPB_ENUM(PB3StartVoteReq_FieldNumber) {
  PB3StartVoteReq_FieldNumber_VoteName = 1,
  PB3StartVoteReq_FieldNumber_LimitAt = 2,
  PB3StartVoteReq_FieldNumber_IdsArray = 3,
  PB3StartVoteReq_FieldNumber_Type = 4,
  PB3StartVoteReq_FieldNumber_OptionsArray = 5,
};

/**
 * 发起投票
 **/
@interface PB3StartVoteReq : GPBMessage

/** 投票名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *voteName;

/** 限时： 分 */
@property(nonatomic, readwrite) int32_t limitAt;

/** 投票人 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *idsArray;
/** The number of items in @c idsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger idsArray_Count;

/** 投票类型 */
@property(nonatomic, readwrite) PB3VoteType type;

/** 投票项 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3VoteOption*> *optionsArray;
/** The number of items in @c optionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger optionsArray_Count;

@end

/**
 * Fetches the raw value of a @c PB3StartVoteReq's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3StartVoteReq_Type_RawValue(PB3StartVoteReq *message);
/**
 * Sets the raw value of an @c PB3StartVoteReq's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3StartVoteReq_Type_RawValue(PB3StartVoteReq *message, int32_t value);

#pragma mark - PB3StartVoteRes

@interface PB3StartVoteRes : GPBMessage

@end

#pragma mark - PB3BroadcastStartVote

typedef GPB_ENUM(PB3BroadcastStartVote_FieldNumber) {
  PB3BroadcastStartVote_FieldNumber_Vote = 1,
};

/**
 * 广播投票开始 cmdId=100138
 **/
@interface PB3BroadcastStartVote : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3Vote *vote;
/** Test to see if @c vote has been set. */
@property(nonatomic, readwrite) BOOL hasVote;

@end

#pragma mark - PB3GetVoteConfReq

/**
 * 获取投票配置
 **/
@interface PB3GetVoteConfReq : GPBMessage

@end

#pragma mark - PB3GetVoteConfRes

typedef GPB_ENUM(PB3GetVoteConfRes_FieldNumber) {
  PB3GetVoteConfRes_FieldNumber_MaxVoteOptionCount = 1,
};

@interface PB3GetVoteConfRes : GPBMessage

/** 最大限制投票项数量 */
@property(nonatomic, readwrite) int32_t maxVoteOptionCount;

@end

#pragma mark - PB3GetVoteInfoReq

/**
 * 获取投票信息
 **/
@interface PB3GetVoteInfoReq : GPBMessage

@end

#pragma mark - PB3GetVoteInfoRes

typedef GPB_ENUM(PB3GetVoteInfoRes_FieldNumber) {
  PB3GetVoteInfoRes_FieldNumber_Vote = 1,
};

@interface PB3GetVoteInfoRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3Vote *vote;
/** Test to see if @c vote has been set. */
@property(nonatomic, readwrite) BOOL hasVote;

@end

#pragma mark - PB3BroadcastVoteInfo

typedef GPB_ENUM(PB3BroadcastVoteInfo_FieldNumber) {
  PB3BroadcastVoteInfo_FieldNumber_Vote = 1,
};

/**
 * cmdId=100230
 **/
@interface PB3BroadcastVoteInfo : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3Vote *vote;
/** Test to see if @c vote has been set. */
@property(nonatomic, readwrite) BOOL hasVote;

@end

#pragma mark - PB3VoteReq

typedef GPB_ENUM(PB3VoteReq_FieldNumber) {
  PB3VoteReq_FieldNumber_TargetId = 2,
};

/**
 * 投票
 **/
@interface PB3VoteReq : GPBMessage

/** 目标id */
@property(nonatomic, readwrite) int64_t targetId;

@end

#pragma mark - PB3VoteRes

@interface PB3VoteRes : GPBMessage

@end

#pragma mark - PB3PublishVoteReq

/**
 * 公布结果
 **/
@interface PB3PublishVoteReq : GPBMessage

@end

#pragma mark - PB3PublishVoteRes

@interface PB3PublishVoteRes : GPBMessage

@end

#pragma mark - PB3BroadcastPublishVote

typedef GPB_ENUM(PB3BroadcastPublishVote_FieldNumber) {
  PB3BroadcastPublishVote_FieldNumber_VoteArray = 9,
};

/**
 * 广播投票结束, cmdId=100139, 收到了请求http 000347结果
 **/
@interface PB3BroadcastPublishVote : GPBMessage

/** 投票人信息 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3VotePlayer*> *voteArray;
/** The number of items in @c voteArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger voteArray_Count;

@end

#pragma mark - PB3BroadcastAddVote

typedef GPB_ENUM(PB3BroadcastAddVote_FieldNumber) {
  PB3BroadcastAddVote_FieldNumber_VoteArray = 1,
};

@interface PB3BroadcastAddVote : GPBMessage

/** 更改投票数量的投票项 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3VotePlayer*> *voteArray;
/** The number of items in @c voteArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger voteArray_Count;

@end

#pragma mark - PB3VoteLog

typedef GPB_ENUM(PB3VoteLog_FieldNumber) {
  PB3VoteLog_FieldNumber_OptionIndex = 1,
  PB3VoteLog_FieldNumber_OptionName = 2,
  PB3VoteLog_FieldNumber_Icon = 3,
  PB3VoteLog_FieldNumber_Vote = 4,
  PB3VoteLog_FieldNumber_NobilityInfo = 5,
  PB3VoteLog_FieldNumber_Type = 6,
};

@interface PB3VoteLog : GPBMessage

/** playerId或序号id */
@property(nonatomic, readwrite) int64_t optionIndex;

/** 昵称或投票项名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *optionName;

/** 头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 得票数 */
@property(nonatomic, readwrite) int32_t vote;

/** 爵位信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3RoomNobilityInfo *nobilityInfo;
/** Test to see if @c nobilityInfo has been set. */
@property(nonatomic, readwrite) BOOL hasNobilityInfo;

/** 投票类型 */
@property(nonatomic, readwrite) PB3VoteType type;

@end

/**
 * Fetches the raw value of a @c PB3VoteLog's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3VoteLog_Type_RawValue(PB3VoteLog *message);
/**
 * Sets the raw value of an @c PB3VoteLog's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3VoteLog_Type_RawValue(PB3VoteLog *message, int32_t value);

#pragma mark - PB3RoomVoteLog

typedef GPB_ENUM(PB3RoomVoteLog_FieldNumber) {
  PB3RoomVoteLog_FieldNumber_Time = 1,
  PB3RoomVoteLog_FieldNumber_Name = 2,
  PB3RoomVoteLog_FieldNumber_Count = 3,
  PB3RoomVoteLog_FieldNumber_LogsArray = 4,
};

@interface PB3RoomVoteLog : GPBMessage

/** 开启时间戳 */
@property(nonatomic, readwrite) int64_t time;

/** 投票名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 总票数 */
@property(nonatomic, readwrite) int32_t count;

/** 投票记录 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3VoteLog*> *logsArray;
/** The number of items in @c logsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger logsArray_Count;

@end

#pragma mark - PB3RoomVoteLogReq

typedef GPB_ENUM(PB3RoomVoteLogReq_FieldNumber) {
  PB3RoomVoteLogReq_FieldNumber_RoomId = 1,
  PB3RoomVoteLogReq_FieldNumber_Page = 2,
  PB3RoomVoteLogReq_FieldNumber_PageSize = 3,
};

/**
 * 房间投票记录
 **/
@interface PB3RoomVoteLogReq : GPBMessage

/** 房间id */
@property(nonatomic, readwrite) int64_t roomId;

@property(nonatomic, readwrite) int32_t page;

@property(nonatomic, readwrite) int32_t pageSize;

@end

#pragma mark - PB3RoomVoteLogRes

typedef GPB_ENUM(PB3RoomVoteLogRes_FieldNumber) {
  PB3RoomVoteLogRes_FieldNumber_VoteLogsArray = 4,
};

@interface PB3RoomVoteLogRes : GPBMessage

/** 投票记录 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3RoomVoteLog*> *voteLogsArray;
/** The number of items in @c voteLogsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger voteLogsArray_Count;

@end

#pragma mark - PB3UserVoteLog

typedef GPB_ENUM(PB3UserVoteLog_FieldNumber) {
  PB3UserVoteLog_FieldNumber_OptionIndex = 1,
  PB3UserVoteLog_FieldNumber_OptionName = 2,
  PB3UserVoteLog_FieldNumber_VoteName = 3,
  PB3UserVoteLog_FieldNumber_Time = 4,
  PB3UserVoteLog_FieldNumber_NobilityInfo = 5,
  PB3UserVoteLog_FieldNumber_Type = 6,
};

@interface PB3UserVoteLog : GPBMessage

/** playerId或序号id */
@property(nonatomic, readwrite) int64_t optionIndex;

/** 昵称或投票项名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *optionName;

/** 投票名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *voteName;

/** 开启时间戳 */
@property(nonatomic, readwrite) int64_t time;

/** 爵位信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3RoomNobilityInfo *nobilityInfo;
/** Test to see if @c nobilityInfo has been set. */
@property(nonatomic, readwrite) BOOL hasNobilityInfo;

/** 投票类型 */
@property(nonatomic, readwrite) PB3VoteType type;

@end

/**
 * Fetches the raw value of a @c PB3UserVoteLog's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3UserVoteLog_Type_RawValue(PB3UserVoteLog *message);
/**
 * Sets the raw value of an @c PB3UserVoteLog's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3UserVoteLog_Type_RawValue(PB3UserVoteLog *message, int32_t value);

#pragma mark - PB3UserVoteLogReq

typedef GPB_ENUM(PB3UserVoteLogReq_FieldNumber) {
  PB3UserVoteLogReq_FieldNumber_Page = 1,
  PB3UserVoteLogReq_FieldNumber_PageSize = 2,
};

/**
 * 个人投票记录
 **/
@interface PB3UserVoteLogReq : GPBMessage

@property(nonatomic, readwrite) int32_t page;

@property(nonatomic, readwrite) int32_t pageSize;

@end

#pragma mark - PB3UserVoteLogRes

typedef GPB_ENUM(PB3UserVoteLogRes_FieldNumber) {
  PB3UserVoteLogRes_FieldNumber_VoteLogsArray = 1,
};

@interface PB3UserVoteLogRes : GPBMessage

/** 投票记录 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3UserVoteLog*> *voteLogsArray;
/** The number of items in @c voteLogsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger voteLogsArray_Count;

@end

#pragma mark - PB3BroadcastHeadline

typedef GPB_ENUM(PB3BroadcastHeadline_FieldNumber) {
  PB3BroadcastHeadline_FieldNumber_Headline = 1,
};

/**
 * 广播广播交友头条信息 cmdId=100140
 **/
@interface PB3BroadcastHeadline : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3Headline *headline;
/** Test to see if @c headline has been set. */
@property(nonatomic, readwrite) BOOL hasHeadline;

@end

#pragma mark - PB3BroadFriendRoomIdReq

typedef GPB_ENUM(PB3BroadFriendRoomIdReq_FieldNumber) {
  PB3BroadFriendRoomIdReq_FieldNumber_PlayerId = 1,
  PB3BroadFriendRoomIdReq_FieldNumber_ToId = 2,
  PB3BroadFriendRoomIdReq_FieldNumber_GiftRoomId = 3,
};

@interface PB3BroadFriendRoomIdReq : GPBMessage

/** 广播交友发言用户ID，全服礼物赠送者ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 全服礼物接受者ID */
@property(nonatomic, readwrite) int64_t toId;

/** 全服礼物房间ID */
@property(nonatomic, readwrite) int64_t giftRoomId;

@end

#pragma mark - PB3BroadFriendRoomIdRes

typedef GPB_ENUM(PB3BroadFriendRoomIdRes_FieldNumber) {
  PB3BroadFriendRoomIdRes_FieldNumber_RoomId = 1,
  PB3BroadFriendRoomIdRes_FieldNumber_IsInRoom = 2,
};

@interface PB3BroadFriendRoomIdRes : GPBMessage

@property(nonatomic, readwrite) int64_t roomId;

@property(nonatomic, readwrite) BOOL isInRoom;

@end

#pragma mark - PB3FollowCheckReq

typedef GPB_ENUM(PB3FollowCheckReq_FieldNumber) {
  PB3FollowCheckReq_FieldNumber_FollowId = 1,
};

/**
 * 防跟随检查
 **/
@interface PB3FollowCheckReq : GPBMessage

/** 被跟随者id */
@property(nonatomic, readwrite) int64_t followId;

@end

#pragma mark - PB3FollowCheckRes

typedef GPB_ENUM(PB3FollowCheckRes_FieldNumber) {
  PB3FollowCheckRes_FieldNumber_RoomId = 1,
  PB3FollowCheckRes_FieldNumber_NobilityId = 2,
  PB3FollowCheckRes_FieldNumber_RoomName = 3,
};

@interface PB3FollowCheckRes : GPBMessage

/** 请求中 follow_id 所在房间 */
@property(nonatomic, readwrite) int64_t roomId;

/** 爵位id，不能被跟随时该值不为零；其他情况为零 */
@property(nonatomic, readwrite) int32_t nobilityId;

/** 房间名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomName;

@end

#pragma mark - PB3PcaChangeUser

typedef GPB_ENUM(PB3PcaChangeUser_FieldNumber) {
  PB3PcaChangeUser_FieldNumber_UserId = 1,
};

/**
 * 通知切换到PC Assistant推流模式
 **/
@interface PB3PcaChangeUser : GPBMessage

/** GME小号ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@end

#pragma mark - PB3PcaStartPushReq

@interface PB3PcaStartPushReq : GPBMessage

@end

#pragma mark - PB3PcaStartPushRes

typedef GPB_ENUM(PB3PcaStartPushRes_FieldNumber) {
  PB3PcaStartPushRes_FieldNumber_Result = 1,
  PB3PcaStartPushRes_FieldNumber_RoomId = 2,
};

@interface PB3PcaStartPushRes : GPBMessage

/** 0成功，1需要先跳房间 */
@property(nonatomic, readwrite) int32_t result;

/** 返回1时，先跳到指定房间再重发这个请求 */
@property(nonatomic, readwrite) int64_t roomId;

@end

#pragma mark - PB3BroadcastPcaStartPush

typedef GPB_ENUM(PB3BroadcastPcaStartPush_FieldNumber) {
  PB3BroadcastPcaStartPush_FieldNumber_UserId = 1,
};

@interface PB3BroadcastPcaStartPush : GPBMessage

/** GME大号ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@end

#pragma mark - PB3PcaStopPushReq

@interface PB3PcaStopPushReq : GPBMessage

@end

#pragma mark - PB3PcaStopPushRes

@interface PB3PcaStopPushRes : GPBMessage

@end

#pragma mark - PB3PcaChangeUserAckReq

@interface PB3PcaChangeUserAckReq : GPBMessage

@end

#pragma mark - PB3PcaChangeUserAckRes

@interface PB3PcaChangeUserAckRes : GPBMessage

@end

#pragma mark - PB3Headline

typedef GPB_ENUM(PB3Headline_FieldNumber) {
  PB3Headline_FieldNumber_PlayerId = 1,
  PB3Headline_FieldNumber_Name = 2,
  PB3Headline_FieldNumber_Icon = 3,
  PB3Headline_FieldNumber_Sex = 4,
  PB3Headline_FieldNumber_WealthLevel = 5,
  PB3Headline_FieldNumber_CharmLevel = 6,
  PB3Headline_FieldNumber_Content = 7,
  PB3Headline_FieldNumber_ShowTime = 8,
  PB3Headline_FieldNumber_ProtectTime = 9,
  PB3Headline_FieldNumber_Gold = 10,
  PB3Headline_FieldNumber_RoomOnlineNum = 11,
  PB3Headline_FieldNumber_LeftIconBg = 12,
  PB3Headline_FieldNumber_LeftText = 13,
  PB3Headline_FieldNumber_LeftTextColor = 14,
  PB3Headline_FieldNumber_Pattern = 15,
  PB3Headline_FieldNumber_GrabStatus = 16,
  PB3Headline_FieldNumber_Style = 17,
};

@interface PB3Headline : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

@property(nonatomic, readwrite) enum PB3SexType sex;

@property(nonatomic, readwrite) int32_t wealthLevel;

@property(nonatomic, readwrite) int32_t charmLevel;

@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

/** 头条显示时间，单位s */
@property(nonatomic, readwrite) int32_t showTime;

/** 头条保护时间，单位s */
@property(nonatomic, readwrite) int32_t protectTime;

/** 头条花费的金币 */
@property(nonatomic, readwrite) int32_t gold;

/** 房间人数 */
@property(nonatomic, readwrite) int64_t roomOnlineNum;

@property(nonatomic, readwrite, copy, null_resettable) NSString *leftIconBg;

@property(nonatomic, readwrite, copy, null_resettable) NSString *leftText;

@property(nonatomic, readwrite, copy, null_resettable) NSString *leftTextColor;

@property(nonatomic, readwrite) enum PB3NewRoomPattern pattern;

/** TRUE:抢; FALSE:不抢 */
@property(nonatomic, readwrite) BOOL grabStatus;

/** 头条样式 */
@property(nonatomic, readwrite) PB3HeadLineStyle style;

@end

/**
 * Fetches the raw value of a @c PB3Headline's @c sex property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3Headline_Sex_RawValue(PB3Headline *message);
/**
 * Sets the raw value of an @c PB3Headline's @c sex property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3Headline_Sex_RawValue(PB3Headline *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3Headline's @c pattern property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3Headline_Pattern_RawValue(PB3Headline *message);
/**
 * Sets the raw value of an @c PB3Headline's @c pattern property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3Headline_Pattern_RawValue(PB3Headline *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3Headline's @c style property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3Headline_Style_RawValue(PB3Headline *message);
/**
 * Sets the raw value of an @c PB3Headline's @c style property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3Headline_Style_RawValue(PB3Headline *message, int32_t value);

#pragma mark - PB3GetBFHeadlineReq

@interface PB3GetBFHeadlineReq : GPBMessage

@end

#pragma mark - PB3GetBFHeadlineRes

typedef GPB_ENUM(PB3GetBFHeadlineRes_FieldNumber) {
  PB3GetBFHeadlineRes_FieldNumber_Headline = 1,
};

@interface PB3GetBFHeadlineRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3Headline *headline;
/** Test to see if @c headline has been set. */
@property(nonatomic, readwrite) BOOL hasHeadline;

@end

#pragma mark - PB3PushHeadlineReq

typedef GPB_ENUM(PB3PushHeadlineReq_FieldNumber) {
  PB3PushHeadlineReq_FieldNumber_Content = 1,
  PB3PushHeadlineReq_FieldNumber_Gold = 2,
  PB3PushHeadlineReq_FieldNumber_PushType = 3,
};

@interface PB3PushHeadlineReq : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

@property(nonatomic, readwrite) int32_t gold;

/** 发布类型 */
@property(nonatomic, readwrite) PB3PushHeadlineType pushType;

@end

/**
 * Fetches the raw value of a @c PB3PushHeadlineReq's @c pushType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3PushHeadlineReq_PushType_RawValue(PB3PushHeadlineReq *message);
/**
 * Sets the raw value of an @c PB3PushHeadlineReq's @c pushType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3PushHeadlineReq_PushType_RawValue(PB3PushHeadlineReq *message, int32_t value);

#pragma mark - PB3PushHeadlineRes

typedef GPB_ENUM(PB3PushHeadlineRes_FieldNumber) {
  PB3PushHeadlineRes_FieldNumber_BaseGold = 1,
  PB3PushHeadlineRes_FieldNumber_AddGold = 2,
  PB3PushHeadlineRes_FieldNumber_Tip = 3,
};

@interface PB3PushHeadlineRes : GPBMessage

/** 基础金币 */
@property(nonatomic, readwrite) int32_t baseGold;

/** 金币步长 */
@property(nonatomic, readwrite) int32_t addGold;

/** 提示语 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tip;

@end

#pragma mark - PB3GetBFHeadlineBaseReq

typedef GPB_ENUM(PB3GetBFHeadlineBaseReq_FieldNumber) {
  PB3GetBFHeadlineBaseReq_FieldNumber_PushType = 1,
};

@interface PB3GetBFHeadlineBaseReq : GPBMessage

/** 发布类型 */
@property(nonatomic, readwrite) PB3PushHeadlineType pushType;

@end

/**
 * Fetches the raw value of a @c PB3GetBFHeadlineBaseReq's @c pushType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3GetBFHeadlineBaseReq_PushType_RawValue(PB3GetBFHeadlineBaseReq *message);
/**
 * Sets the raw value of an @c PB3GetBFHeadlineBaseReq's @c pushType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3GetBFHeadlineBaseReq_PushType_RawValue(PB3GetBFHeadlineBaseReq *message, int32_t value);

#pragma mark - PB3GetBFHeadlineBaseRes

typedef GPB_ENUM(PB3GetBFHeadlineBaseRes_FieldNumber) {
  PB3GetBFHeadlineBaseRes_FieldNumber_BaseGold = 1,
  PB3GetBFHeadlineBaseRes_FieldNumber_AddGold = 2,
  PB3GetBFHeadlineBaseRes_FieldNumber_Tip = 3,
};

@interface PB3GetBFHeadlineBaseRes : GPBMessage

/** 基础金币 */
@property(nonatomic, readwrite) int32_t baseGold;

/** 金币步长 */
@property(nonatomic, readwrite) int32_t addGold;

/** 提示语 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tip;

@end

#pragma mark - PB3GetWorldGiftReq

typedef GPB_ENUM(PB3GetWorldGiftReq_FieldNumber) {
  PB3GetWorldGiftReq_FieldNumber_OpType = 1,
  PB3GetWorldGiftReq_FieldNumber_PlayerId = 2,
};

@interface PB3GetWorldGiftReq : GPBMessage

/** 0 默认获取全服；1 获取个人按日期；2 获取个人按价值; 3 按日期 所有; 4 按价值 所有; 5 个人最新一条 */
@property(nonatomic, readwrite) int32_t opType;

@property(nonatomic, readwrite) int64_t playerId;

@end

#pragma mark - PB3GetWorldGiftRes

typedef GPB_ENUM(PB3GetWorldGiftRes_FieldNumber) {
  PB3GetWorldGiftRes_FieldNumber_GiftInfoArray = 1,
  PB3GetWorldGiftRes_FieldNumber_Top = 2,
};

@interface PB3GetWorldGiftRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3GiveGift*> *giftInfoArray;
/** The number of items in @c giftInfoArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger giftInfoArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) PB3GiveGift *top;
/** Test to see if @c top has been set. */
@property(nonatomic, readwrite) BOOL hasTop;

@end

#pragma mark - PB3GetBFInfoReq

typedef GPB_ENUM(PB3GetBFInfoReq_FieldNumber) {
  PB3GetBFInfoReq_FieldNumber_OnType = 1,
};

@interface PB3GetBFInfoReq : GPBMessage

/** 1 首页过滤，０默认, 2 跳跳 3雷达 */
@property(nonatomic, readwrite) int32_t onType;

@end

#pragma mark - PB3GetBFInfoRes

typedef GPB_ENUM(PB3GetBFInfoRes_FieldNumber) {
  PB3GetBFInfoRes_FieldNumber_ListArray = 1,
  PB3GetBFInfoRes_FieldNumber_Status = 2,
  PB3GetBFInfoRes_FieldNumber_Time = 3,
  PB3GetBFInfoRes_FieldNumber_LimitCharm = 4,
  PB3GetBFInfoRes_FieldNumber_SurvivalTime = 5,
};

@interface PB3GetBFInfoRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3BroadcastMakeFriend*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@property(nonatomic, readwrite) int32_t status;

@property(nonatomic, readwrite) int64_t time;

@property(nonatomic, readwrite) int32_t limitCharm;

/** 跳跳存在时长，以发布时间为准，发布之后survival_time秒跳跳即失效，单位: s */
@property(nonatomic, readwrite) int32_t survivalTime;

@end

#pragma mark - PB3DelHeadlineReq

@interface PB3DelHeadlineReq : GPBMessage

@end

#pragma mark - PB3DelHeadlineRes

/**
 * ErrCode 34012 没有权限
 **/
@interface PB3DelHeadlineRes : GPBMessage

@end

#pragma mark - PB3MyChairInfoReq

@interface PB3MyChairInfoReq : GPBMessage

@end

#pragma mark - PB3MyChairInfoRes

typedef GPB_ENUM(PB3MyChairInfoRes_FieldNumber) {
  PB3MyChairInfoRes_FieldNumber_RoomId = 1,
  PB3MyChairInfoRes_FieldNumber_OnChair = 2,
};

@interface PB3MyChairInfoRes : GPBMessage

/** 所在房间, 0没在房间 */
@property(nonatomic, readwrite) int64_t roomId;

/** 是否在坑上 */
@property(nonatomic, readwrite) BOOL onChair;

@end

#pragma mark - PB3GetScenePlayerReq

typedef GPB_ENUM(PB3GetScenePlayerReq_FieldNumber) {
  PB3GetScenePlayerReq_FieldNumber_PlayerId = 1,
};

@interface PB3GetScenePlayerReq : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

@end

#pragma mark - PB3GetScenePlayerRes

typedef GPB_ENUM(PB3GetScenePlayerRes_FieldNumber) {
  PB3GetScenePlayerRes_FieldNumber_RoomId = 1,
  PB3GetScenePlayerRes_FieldNumber_ChairId = 2,
  PB3GetScenePlayerRes_FieldNumber_Player = 3,
};

@interface PB3GetScenePlayerRes : GPBMessage

/** 等于0时不在房间 */
@property(nonatomic, readwrite) int64_t roomId;

/** 所在坑位 */
@property(nonatomic, readwrite) int32_t chairId;

@property(nonatomic, readwrite, strong, null_resettable) PB3ScenePlayer *player;
/** Test to see if @c player has been set. */
@property(nonatomic, readwrite) BOOL hasPlayer;

@end

#pragma mark - PB3LockAllChairReq

typedef GPB_ENUM(PB3LockAllChairReq_FieldNumber) {
  PB3LockAllChairReq_FieldNumber_OptType = 1,
};

@interface PB3LockAllChairReq : GPBMessage

/** 操作类型 0=全开；1=全锁 */
@property(nonatomic, readwrite) int32_t optType;

@end

#pragma mark - PB3LockAllChairRes

typedef GPB_ENUM(PB3LockAllChairRes_FieldNumber) {
  PB3LockAllChairRes_FieldNumber_OptType = 1,
};

@interface PB3LockAllChairRes : GPBMessage

/** 操作类型 0=全开；1=全锁 */
@property(nonatomic, readwrite) int32_t optType;

@end

#pragma mark - PB3SetChairBanQueueReq

typedef GPB_ENUM(PB3SetChairBanQueueReq_FieldNumber) {
  PB3SetChairBanQueueReq_FieldNumber_BanQueueStatus = 1,
};

@interface PB3SetChairBanQueueReq : GPBMessage

/** 队列状态； false可排麦，true不可排麦 */
@property(nonatomic, readwrite) BOOL banQueueStatus;

@end

#pragma mark - PB3SetChairBanQueueRes

@interface PB3SetChairBanQueueRes : GPBMessage

@end

#pragma mark - PB3BroadcastChairBanQueue

typedef GPB_ENUM(PB3BroadcastChairBanQueue_FieldNumber) {
  PB3BroadcastChairBanQueue_FieldNumber_BanQueueStatus = 1,
};

/**
 * 广播排麦队列状态 cmdId=100114
 **/
@interface PB3BroadcastChairBanQueue : GPBMessage

/** 队列状态； false可排麦，true不可排麦 */
@property(nonatomic, readwrite) BOOL banQueueStatus;

@end

#pragma mark - PB3ClearChairQueueReq

@interface PB3ClearChairQueueReq : GPBMessage

@end

#pragma mark - PB3ClearChairQueueRes

@interface PB3ClearChairQueueRes : GPBMessage

@end

#pragma mark - PB3BroadcastClearChairQueue

/**
 * 广播排麦队列被清空 cmdId=100116 (排麦中的用户收到)
 **/
@interface PB3BroadcastClearChairQueue : GPBMessage

@end

#pragma mark - PB3BroadcastAddChairQueue

typedef GPB_ENUM(PB3BroadcastAddChairQueue_FieldNumber) {
  PB3BroadcastAddChairQueue_FieldNumber_Type = 2,
};

/**
 * 通知你已被添加/移除当前排麦队伍 cmdId=100119， 只有目标收到
 **/
@interface PB3BroadcastAddChairQueue : GPBMessage

/** 0添加，1移除 */
@property(nonatomic, readwrite) uint32_t type;

@end

#pragma mark - PB3GetRoomConfReq

@interface PB3GetRoomConfReq : GPBMessage

@end

#pragma mark - PB3GetRoomConfRes

typedef GPB_ENUM(PB3GetRoomConfRes_FieldNumber) {
  PB3GetRoomConfRes_FieldNumber_IsHighQuality = 1,
  PB3GetRoomConfRes_FieldNumber_IsIntimate = 2,
  PB3GetRoomConfRes_FieldNumber_ImagesArray = 3,
  PB3GetRoomConfRes_FieldNumber_IsSendBill = 4,
  PB3GetRoomConfRes_FieldNumber_IsShowPresenter = 5,
  PB3GetRoomConfRes_FieldNumber_RoomName = 6,
  PB3GetRoomConfRes_FieldNumber_Greet = 7,
  PB3GetRoomConfRes_FieldNumber_NameGreetStatus = 8,
  PB3GetRoomConfRes_FieldNumber_Reception = 9,
  PB3GetRoomConfRes_FieldNumber_ReceptionStatus = 10,
  PB3GetRoomConfRes_FieldNumber_PatternsArray = 11,
  PB3GetRoomConfRes_FieldNumber_GameAutoBf = 12,
  PB3GetRoomConfRes_FieldNumber_SingleLiveNotify = 13,
  PB3GetRoomConfRes_FieldNumber_SingleLiveTpl = 14,
  PB3GetRoomConfRes_FieldNumber_ShowSingleLiveTpl = 15,
  PB3GetRoomConfRes_FieldNumber_IsRoomShake = 16,
  PB3GetRoomConfRes_FieldNumber_IsRoomChairShake = 17,
};

@interface PB3GetRoomConfRes : GPBMessage

/** 是否有天籁模式选项 */
@property(nonatomic, readwrite) BOOL isHighQuality;

/** 是否有陪伴模式 */
@property(nonatomic, readwrite) BOOL isIntimate;

/** 背景图片列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3RoomImage*> *imagesArray;
/** The number of items in @c imagesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger imagesArray_Count;

/** 是否有派单模式 */
@property(nonatomic, readwrite) BOOL isSendBill;

/**  是否显示主持人 */
@property(nonatomic, readwrite) BOOL isShowPresenter;

@property(nonatomic, readwrite, copy, null_resettable) NSString *roomName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *greet;

@property(nonatomic, readwrite) enum PB3AuditStatus nameGreetStatus;

@property(nonatomic, readwrite, copy, null_resettable) NSString *reception;

@property(nonatomic, readwrite) enum PB3AuditStatus receptionStatus;

/** 模式列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3RoomPatternInfo*> *patternsArray;
/** The number of items in @c patternsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger patternsArray_Count;

/** 游戏自动广播开关 */
@property(nonatomic, readwrite) BOOL gameAutoBf;

/** 个播通知开关 */
@property(nonatomic, readwrite) BOOL singleLiveNotify;

/** 个播2.0模版类型 */
@property(nonatomic, readwrite) enum PB3SingleLiveTplType singleLiveTpl;

/** 个播2.0模板显示单播双播类型 */
@property(nonatomic, readwrite) enum PB3ShowSingleLiveTplType showSingleLiveTpl;

/** 房间震动开关 */
@property(nonatomic, readwrite) BOOL isRoomShake;

/** 房间麦位抖动开关 */
@property(nonatomic, readwrite) BOOL isRoomChairShake;

@end

/**
 * Fetches the raw value of a @c PB3GetRoomConfRes's @c nameGreetStatus property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3GetRoomConfRes_NameGreetStatus_RawValue(PB3GetRoomConfRes *message);
/**
 * Sets the raw value of an @c PB3GetRoomConfRes's @c nameGreetStatus property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3GetRoomConfRes_NameGreetStatus_RawValue(PB3GetRoomConfRes *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3GetRoomConfRes's @c receptionStatus property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3GetRoomConfRes_ReceptionStatus_RawValue(PB3GetRoomConfRes *message);
/**
 * Sets the raw value of an @c PB3GetRoomConfRes's @c receptionStatus property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3GetRoomConfRes_ReceptionStatus_RawValue(PB3GetRoomConfRes *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3GetRoomConfRes's @c singleLiveTpl property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3GetRoomConfRes_SingleLiveTpl_RawValue(PB3GetRoomConfRes *message);
/**
 * Sets the raw value of an @c PB3GetRoomConfRes's @c singleLiveTpl property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3GetRoomConfRes_SingleLiveTpl_RawValue(PB3GetRoomConfRes *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3GetRoomConfRes's @c showSingleLiveTpl property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3GetRoomConfRes_ShowSingleLiveTpl_RawValue(PB3GetRoomConfRes *message);
/**
 * Sets the raw value of an @c PB3GetRoomConfRes's @c showSingleLiveTpl property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3GetRoomConfRes_ShowSingleLiveTpl_RawValue(PB3GetRoomConfRes *message, int32_t value);

#pragma mark - PB3RoomPatternInfo

typedef GPB_ENUM(PB3RoomPatternInfo_FieldNumber) {
  PB3RoomPatternInfo_FieldNumber_Pattern = 1,
  PB3RoomPatternInfo_FieldNumber_Name = 2,
  PB3RoomPatternInfo_FieldNumber_Intro = 3,
};

@interface PB3RoomPatternInfo : GPBMessage

/** 房间模式 */
@property(nonatomic, readwrite) enum PB3NewRoomPattern pattern;

/** 模式名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 模式介绍 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *intro;

@end

/**
 * Fetches the raw value of a @c PB3RoomPatternInfo's @c pattern property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3RoomPatternInfo_Pattern_RawValue(PB3RoomPatternInfo *message);
/**
 * Sets the raw value of an @c PB3RoomPatternInfo's @c pattern property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3RoomPatternInfo_Pattern_RawValue(PB3RoomPatternInfo *message, int32_t value);

#pragma mark - PB3RoomImage

typedef GPB_ENUM(PB3RoomImage_FieldNumber) {
  PB3RoomImage_FieldNumber_ImageId = 1,
  PB3RoomImage_FieldNumber_ImageName = 2,
  PB3RoomImage_FieldNumber_ExpireAt = 4,
  PB3RoomImage_FieldNumber_FriendId = 5,
  PB3RoomImage_FieldNumber_FriendName = 6,
};

/**
 * 房间背景图片
 * 背景图地址
 * /upload/resources/friend/bg/id/bg_id.jpg // 背景图
 * /upload/resources/friend/bg/id/bg_heart_id.png // 心图片
 * /upload/resources/friend/bg/id/bg_name_right_id.png // 名称图片
 * /upload/resources/friend/bg/id/bg_name_left_id.png // 名称图片
 * /upload/resources/friend/bg/id/show_id.png // 大预览图
 * /upload/resources/friend/bg/id/show_min_id.png // 小预览图
 * 如： id = 108713
 * /upload/resources/friend/bg/108713/bg_108713.jpg // 背景图
 * /upload/resources/friend/bg/108713/bg_heart_108713.png // 心图片
 * /upload/resources/friend/bg/108713/bg_name_right_108713.png // 名称图片
 * /upload/resources/friend/bg/108713/bg_name_left_108713.png // 名称图片
 * /upload/resources/friend/bg/108713/show_108713.png // 大预览图
 * /upload/resources/friend/bg/108713/show_min_108713.png // 小预览图
 **/
@interface PB3RoomImage : GPBMessage

/** eg:背景ID：200014 背景图：/upload/resources/friend/bg/200014/bg_200014.png 预览图：/upload/resources/friend/bg/200014/show_200014.png */
@property(nonatomic, readwrite) int64_t imageId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *imageName;

/** 到期时间，秒 */
@property(nonatomic, readwrite) int32_t expireAt;

/** 好友id */
@property(nonatomic, readwrite) int64_t friendId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *friendName;

@end

#pragma mark - PB3RoomImageListReq

typedef GPB_ENUM(PB3RoomImageListReq_FieldNumber) {
  PB3RoomImageListReq_FieldNumber_FriendId = 1,
};

@interface PB3RoomImageListReq : GPBMessage

@property(nonatomic, readwrite) int64_t friendId;

@end

#pragma mark - PB3RoomImageListRes

typedef GPB_ENUM(PB3RoomImageListRes_FieldNumber) {
  PB3RoomImageListRes_FieldNumber_ImagesArray = 1,
};

@interface PB3RoomImageListRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3RoomImage*> *imagesArray;
/** The number of items in @c imagesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger imagesArray_Count;

@end

#pragma mark - PB3ChangeRoomImageReq

typedef GPB_ENUM(PB3ChangeRoomImageReq_FieldNumber) {
  PB3ChangeRoomImageReq_FieldNumber_ImageId = 1,
  PB3ChangeRoomImageReq_FieldNumber_FriendId = 2,
};

@interface PB3ChangeRoomImageReq : GPBMessage

@property(nonatomic, readwrite) int64_t imageId;

@property(nonatomic, readwrite) int64_t friendId;

@end

#pragma mark - PB3ChangeRoomImageRes

@interface PB3ChangeRoomImageRes : GPBMessage

@end

#pragma mark - PB3BroadcastRoomImage

typedef GPB_ENUM(PB3BroadcastRoomImage_FieldNumber) {
  PB3BroadcastRoomImage_FieldNumber_ImageId = 1,
  PB3BroadcastRoomImage_FieldNumber_FriendId = 2,
};

/**
 * cmdId=100155 广播房间背景变更
 **/
@interface PB3BroadcastRoomImage : GPBMessage

@property(nonatomic, readwrite) int64_t imageId;

@property(nonatomic, readwrite) int64_t friendId;

@end

#pragma mark - PB3BroadcastRoomOwnerCert

typedef GPB_ENUM(PB3BroadcastRoomOwnerCert_FieldNumber) {
  PB3BroadcastRoomOwnerCert_FieldNumber_Msg = 1,
};

/**
 * cmdId=100156 通知房主实名认证
 **/
@interface PB3BroadcastRoomOwnerCert : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;

@end

#pragma mark - PB3RoomInfoExt

typedef GPB_ENUM(PB3RoomInfoExt_FieldNumber) {
  PB3RoomInfoExt_FieldNumber_RoomId = 1,
  PB3RoomInfoExt_FieldNumber_Name = 2,
  PB3RoomInfoExt_FieldNumber_Greeting = 3,
  PB3RoomInfoExt_FieldNumber_Pattern = 4,
  PB3RoomInfoExt_FieldNumber_IsEnterPwd = 5,
};

@interface PB3RoomInfoExt : GPBMessage

/** 房间Id */
@property(nonatomic, readwrite) int64_t roomId;

/** 房间名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 欢迎语 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *greeting;

/** 房间模式 */
@property(nonatomic, readwrite) int32_t pattern;

/** 是否加锁 */
@property(nonatomic, readwrite) BOOL isEnterPwd;

@end

#pragma mark - PB3RoomInfoExtReq

typedef GPB_ENUM(PB3RoomInfoExtReq_FieldNumber) {
  PB3RoomInfoExtReq_FieldNumber_RoomIdArray = 1,
};

/**
 * 获取房间房间信息请求
 **/
@interface PB3RoomInfoExtReq : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *roomIdArray;
/** The number of items in @c roomIdArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger roomIdArray_Count;

@end

#pragma mark - PB3RoomInfoExtRes

typedef GPB_ENUM(PB3RoomInfoExtRes_FieldNumber) {
  PB3RoomInfoExtRes_FieldNumber_RoomArray = 1,
};

/**
 * 返回对应房间Id的房间信息
 **/
@interface PB3RoomInfoExtRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3RoomInfoExt*> *roomArray;
/** The number of items in @c roomArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger roomArray_Count;

@end

#pragma mark - PB3SettingOption

typedef GPB_ENUM(PB3SettingOption_FieldNumber) {
  PB3SettingOption_FieldNumber_Type = 1,
  PB3SettingOption_FieldNumber_Value = 2,
};

/**
 * 摇号抽奖：设置选项
 **/
@interface PB3SettingOption : GPBMessage

/** 选项类型 */
@property(nonatomic, readwrite) PB3SettingOptionType type;

/** 选项附属信息 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *value;

@end

/**
 * Fetches the raw value of a @c PB3SettingOption's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SettingOption_Type_RawValue(PB3SettingOption *message);
/**
 * Sets the raw value of an @c PB3SettingOption's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SettingOption_Type_RawValue(PB3SettingOption *message, int32_t value);

#pragma mark - PB3LuckyDrawStartReq

typedef GPB_ENUM(PB3LuckyDrawStartReq_FieldNumber) {
  PB3LuckyDrawStartReq_FieldNumber_Type = 1,
  PB3LuckyDrawStartReq_FieldNumber_OptionsArray = 2,
};

/**
 * 摇号抽奖：开始，设置
 **/
@interface PB3LuckyDrawStartReq : GPBMessage

/** 抽奖类型 */
@property(nonatomic, readwrite) PB3LuckyDrawType type;

/** 抽奖设置勾选的选项 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SettingOption*> *optionsArray;
/** The number of items in @c optionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger optionsArray_Count;

@end

/**
 * Fetches the raw value of a @c PB3LuckyDrawStartReq's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3LuckyDrawStartReq_Type_RawValue(PB3LuckyDrawStartReq *message);
/**
 * Sets the raw value of an @c PB3LuckyDrawStartReq's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3LuckyDrawStartReq_Type_RawValue(PB3LuckyDrawStartReq *message, int32_t value);

#pragma mark - PB3LuckyDrawStartRes

@interface PB3LuckyDrawStartRes : GPBMessage

@end

#pragma mark - PB3LuckyDrawMakeResultReq

/**
 * 摇号抽奖：抽奖滚动和出中奖名单
 **/
@interface PB3LuckyDrawMakeResultReq : GPBMessage

@end

#pragma mark - PB3LuckyDrawMakeResultRes

@interface PB3LuckyDrawMakeResultRes : GPBMessage

@end

#pragma mark - PB3LuckyDrawEndReq

typedef GPB_ENUM(PB3LuckyDrawEndReq_FieldNumber) {
  PB3LuckyDrawEndReq_FieldNumber_Option = 1,
};

/**
 * 摇号抽奖：确认抽奖结果
 **/
@interface PB3LuckyDrawEndReq : GPBMessage

@property(nonatomic, readwrite) PB3ConfirmWinnerOption option;

@end

/**
 * Fetches the raw value of a @c PB3LuckyDrawEndReq's @c option property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3LuckyDrawEndReq_Option_RawValue(PB3LuckyDrawEndReq *message);
/**
 * Sets the raw value of an @c PB3LuckyDrawEndReq's @c option property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3LuckyDrawEndReq_Option_RawValue(PB3LuckyDrawEndReq *message, int32_t value);

#pragma mark - PB3LuckyDrawEndRes

@interface PB3LuckyDrawEndRes : GPBMessage

@end

#pragma mark - PB3LuckyDrawSignUpReq

/**
 * 摇号抽奖：玩家报名
 **/
@interface PB3LuckyDrawSignUpReq : GPBMessage

@end

#pragma mark - PB3LuckyDrawSignUpRes

@interface PB3LuckyDrawSignUpRes : GPBMessage

@end

#pragma mark - PB3LuckyDrawCancelReq

/**
 * 摇号抽奖：报名阶段房主取消抽奖活动
 **/
@interface PB3LuckyDrawCancelReq : GPBMessage

@end

#pragma mark - PB3LuckyDrawCancelRes

@interface PB3LuckyDrawCancelRes : GPBMessage

@end

#pragma mark - PB3LuckyDrawStageReq

/**
 * 摇号抽奖：抽奖活动阶段
 **/
@interface PB3LuckyDrawStageReq : GPBMessage

@end

#pragma mark - PB3LuckyDrawStageRes

typedef GPB_ENUM(PB3LuckyDrawStageRes_FieldNumber) {
  PB3LuckyDrawStageRes_FieldNumber_IsAuth = 1,
};

@interface PB3LuckyDrawStageRes : GPBMessage

/** 发起抽奖活动权限 */
@property(nonatomic, readwrite) BOOL isAuth;

@end

#pragma mark - PB3LuckyDrawBroadcast

typedef GPB_ENUM(PB3LuckyDrawBroadcast_FieldNumber) {
  PB3LuckyDrawBroadcast_FieldNumber_ExcludePlayerIdArray = 1,
};

/**
 * 摇号抽奖：房主发起报名抽奖，通知玩家.
 **/
@interface PB3LuckyDrawBroadcast : GPBMessage

/** 客户端负责屏蔽名单里面的玩家 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *excludePlayerIdArray;
/** The number of items in @c excludePlayerIdArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger excludePlayerIdArray_Count;

@end

#pragma mark - PB3LuckyDrawCount

typedef GPB_ENUM(PB3LuckyDrawCount_FieldNumber) {
  PB3LuckyDrawCount_FieldNumber_ParticipatorCount = 1,
  PB3LuckyDrawCount_FieldNumber_EndTime = 2,
};

/**
 * 摇号抽奖：报名人数
 **/
@interface PB3LuckyDrawCount : GPBMessage

/** 参与抽奖的人数 */
@property(nonatomic, readwrite) int32_t participatorCount;

/** 倒计时结束时间，unix时间戳 */
@property(nonatomic, readwrite) int64_t endTime;

@end

#pragma mark - PB3LuckyDrawCancelled

/**
 * 摇号抽奖：抽奖活动被取消，通知玩家
 **/
@interface PB3LuckyDrawCancelled : GPBMessage

@end

#pragma mark - PB3LuckyDrawParticipator

typedef GPB_ENUM(PB3LuckyDrawParticipator_FieldNumber) {
  PB3LuckyDrawParticipator_FieldNumber_PlayersArray = 1,
  PB3LuckyDrawParticipator_FieldNumber_OwnerId = 2,
};

/**
 * 摇号抽奖：参与抽奖的玩家名单列表
 **/
@interface PB3LuckyDrawParticipator : GPBMessage

/** （注：此ScenePlayer只有id，name, icon 3个字段可用） */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ScenePlayer*> *playersArray;
/** The number of items in @c playersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger playersArray_Count;

/** 抽奖发起人 */
@property(nonatomic, readwrite) int64_t ownerId;

@end

#pragma mark - PB3LuckyDrawResult

typedef GPB_ENUM(PB3LuckyDrawResult_FieldNumber) {
  PB3LuckyDrawResult_FieldNumber_PlayersArray = 1,
  PB3LuckyDrawResult_FieldNumber_EndTime = 2,
};

/**
 * 摇号抽奖：摇号结果
 **/
@interface PB3LuckyDrawResult : GPBMessage

/** （注：此ScenePlayer只有id，name, icon 3个字段可用） */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ScenePlayer*> *playersArray;
/** The number of items in @c playersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger playersArray_Count;

/** 倒计时结束时间，unix时间戳 */
@property(nonatomic, readwrite) int64_t endTime;

@end

#pragma mark - PB3LuckyDrawWinner

typedef GPB_ENUM(PB3LuckyDrawWinner_FieldNumber) {
  PB3LuckyDrawWinner_FieldNumber_WinnersArray = 1,
};

/**
 * 摇号抽奖：公布获奖者名单
 **/
@interface PB3LuckyDrawWinner : GPBMessage

/** （注：此ScenePlayer只有id，name, icon 3个字段可用） */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ScenePlayer*> *winnersArray;
/** The number of items in @c winnersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger winnersArray_Count;

@end

#pragma mark - PB3RoomSwitchVoiceSdk

typedef GPB_ENUM(PB3RoomSwitchVoiceSdk_FieldNumber) {
  PB3RoomSwitchVoiceSdk_FieldNumber_SdkType = 1,
};

@interface PB3RoomSwitchVoiceSdk : GPBMessage

@property(nonatomic, readwrite) PB3VoiceSdkType sdkType;

@end

/**
 * Fetches the raw value of a @c PB3RoomSwitchVoiceSdk's @c sdkType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3RoomSwitchVoiceSdk_SdkType_RawValue(PB3RoomSwitchVoiceSdk *message);
/**
 * Sets the raw value of an @c PB3RoomSwitchVoiceSdk's @c sdkType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3RoomSwitchVoiceSdk_SdkType_RawValue(PB3RoomSwitchVoiceSdk *message, int32_t value);

#pragma mark - PB3ChangeChairReq

@interface PB3ChangeChairReq : GPBMessage

@end

#pragma mark - PB3ChangeChairRes

@interface PB3ChangeChairRes : GPBMessage

@end

#pragma mark - PB3AcceptSendBillReq

typedef GPB_ENUM(PB3AcceptSendBillReq_FieldNumber) {
  PB3AcceptSendBillReq_FieldNumber_OptType = 1,
};

@interface PB3AcceptSendBillReq : GPBMessage

@property(nonatomic, readwrite) PB3RoomOptType optType;

@end

/**
 * Fetches the raw value of a @c PB3AcceptSendBillReq's @c optType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3AcceptSendBillReq_OptType_RawValue(PB3AcceptSendBillReq *message);
/**
 * Sets the raw value of an @c PB3AcceptSendBillReq's @c optType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3AcceptSendBillReq_OptType_RawValue(PB3AcceptSendBillReq *message, int32_t value);

#pragma mark - PB3AcceptSendBillRes

typedef GPB_ENUM(PB3AcceptSendBillRes_FieldNumber) {
  PB3AcceptSendBillRes_FieldNumber_Tip = 1,
};

@interface PB3AcceptSendBillRes : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *tip;

@end

#pragma mark - PB3SetPresenterReq

typedef GPB_ENUM(PB3SetPresenterReq_FieldNumber) {
  PB3SetPresenterReq_FieldNumber_PlayerId = 1,
  PB3SetPresenterReq_FieldNumber_Opt = 2,
};

@interface PB3SetPresenterReq : GPBMessage

/** 被设置的主持人ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 操作类型 */
@property(nonatomic, readwrite) PB3SetPresenterOpt opt;

@end

/**
 * Fetches the raw value of a @c PB3SetPresenterReq's @c opt property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SetPresenterReq_Opt_RawValue(PB3SetPresenterReq *message);
/**
 * Sets the raw value of an @c PB3SetPresenterReq's @c opt property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SetPresenterReq_Opt_RawValue(PB3SetPresenterReq *message, int32_t value);

#pragma mark - PB3SetPresenterRes

@interface PB3SetPresenterRes : GPBMessage

@end

#pragma mark - PB3PresenterWelcomeInfoReq

@interface PB3PresenterWelcomeInfoReq : GPBMessage

@end

#pragma mark - PB3PresenterWelcomeInfoRes

typedef GPB_ENUM(PB3PresenterWelcomeInfoRes_FieldNumber) {
  PB3PresenterWelcomeInfoRes_FieldNumber_Male = 1,
  PB3PresenterWelcomeInfoRes_FieldNumber_Female = 2,
  PB3PresenterWelcomeInfoRes_FieldNumber_WelcomeText = 3,
  PB3PresenterWelcomeInfoRes_FieldNumber_WelcomeFunction = 4,
  PB3PresenterWelcomeInfoRes_FieldNumber_WealthLevel = 5,
  PB3PresenterWelcomeInfoRes_FieldNumber_IntervalStr = 6,
  PB3PresenterWelcomeInfoRes_FieldNumber_Interval = 7,
  PB3PresenterWelcomeInfoRes_FieldNumber_AutoWelcome = 8,
};

@interface PB3PresenterWelcomeInfoRes : GPBMessage

/** 男性：小哥哥~ */
@property(nonatomic, readwrite, copy, null_resettable) NSString *male;

/** 女性：小姐姐~ */
@property(nonatomic, readwrite, copy, null_resettable) NSString *female;

/** 欢迎语 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *welcomeText;

/** 欢迎语功能 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *welcomeFunction;

/** 财富等级条件<= */
@property(nonatomic, readwrite) int32_t wealthLevel;

/** 间隔 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *intervalStr;

/** 间隔（分钟） */
@property(nonatomic, readwrite) int32_t interval;

/** 公屏自动欢迎 */
@property(nonatomic, readwrite) BOOL autoWelcome;

@end

#pragma mark - PB3SetPresenterWelcomeInfoReq

typedef GPB_ENUM(PB3SetPresenterWelcomeInfoReq_FieldNumber) {
  PB3SetPresenterWelcomeInfoReq_FieldNumber_Male = 1,
  PB3SetPresenterWelcomeInfoReq_FieldNumber_Female = 2,
  PB3SetPresenterWelcomeInfoReq_FieldNumber_WelcomeText = 3,
  PB3SetPresenterWelcomeInfoReq_FieldNumber_AutoWelcome = 4,
};

@interface PB3SetPresenterWelcomeInfoReq : GPBMessage

/** 男性：小哥哥~ */
@property(nonatomic, readwrite, copy, null_resettable) NSString *male;

/** 女性：小姐姐~ */
@property(nonatomic, readwrite, copy, null_resettable) NSString *female;

/** 欢迎语 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *welcomeText;

/** 公屏自动欢迎 */
@property(nonatomic, readwrite) BOOL autoWelcome;

@end

#pragma mark - PB3SetPresenterWelcomeInfoRes

@interface PB3SetPresenterWelcomeInfoRes : GPBMessage

@end

#pragma mark - PB3BroadcastChairCharm

typedef GPB_ENUM(PB3BroadcastChairCharm_FieldNumber) {
  PB3BroadcastChairCharm_FieldNumber_Id_p = 1,
  PB3BroadcastChairCharm_FieldNumber_PlayerId = 2,
  PB3BroadcastChairCharm_FieldNumber_ChairCharm = 3,
};

/**
 * 广播麦序魅力值变更 cmdId=100168
 **/
@interface PB3BroadcastChairCharm : GPBMessage

/** 座位ID, 0到8， 0是房主位 */
@property(nonatomic, readwrite) int32_t id_p;

/** 目标玩家id */
@property(nonatomic, readwrite) int64_t playerId;

/** 麦序魅力值 */
@property(nonatomic, readwrite) int32_t chairCharm;

@end

#pragma mark - PB3ClearChairCharmReq

typedef GPB_ENUM(PB3ClearChairCharmReq_FieldNumber) {
  PB3ClearChairCharmReq_FieldNumber_ChairId = 1,
  PB3ClearChairCharmReq_FieldNumber_PlayerId = 2,
};

@interface PB3ClearChairCharmReq : GPBMessage

@property(nonatomic, readwrite) int32_t chairId;

/** 目标玩家id */
@property(nonatomic, readwrite) int64_t playerId;

@end

#pragma mark - PB3ClearChairCharmRes

@interface PB3ClearChairCharmRes : GPBMessage

@end

#pragma mark - PB3NewestSendChatReq

typedef GPB_ENUM(PB3NewestSendChatReq_FieldNumber) {
  PB3NewestSendChatReq_FieldNumber_Channel = 1,
};

/**
 * 频道最近聊天记录
 **/
@interface PB3NewestSendChatReq : GPBMessage

/** 频道 */
@property(nonatomic, readwrite) enum PB3ChannelType channel;

@end

/**
 * Fetches the raw value of a @c PB3NewestSendChatReq's @c channel property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3NewestSendChatReq_Channel_RawValue(PB3NewestSendChatReq *message);
/**
 * Sets the raw value of an @c PB3NewestSendChatReq's @c channel property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3NewestSendChatReq_Channel_RawValue(PB3NewestSendChatReq *message, int32_t value);

#pragma mark - PB3NewestSendChatRes

typedef GPB_ENUM(PB3NewestSendChatRes_FieldNumber) {
  PB3NewestSendChatRes_FieldNumber_ChatsArray = 1,
};

@interface PB3NewestSendChatRes : GPBMessage

/** 广播聊天列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3BroadcastChat*> *chatsArray;
/** The number of items in @c chatsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger chatsArray_Count;

@end

#pragma mark - PB3NewestAllChannelChat

typedef GPB_ENUM(PB3NewestAllChannelChat_FieldNumber) {
  PB3NewestAllChannelChat_FieldNumber_Type = 1,
  PB3NewestAllChannelChat_FieldNumber_Chat = 2,
  PB3NewestAllChannelChat_FieldNumber_Global = 3,
};

/**
 * 全部频道最近聊天记录
 **/
@interface PB3NewestAllChannelChat : GPBMessage

/** 频道类型(根据这个频道类型读取下面不同的结构) */
@property(nonatomic, readwrite) enum PB3ChannelType type;

/** 房间、传闻、家族聊天记录列表 */
@property(nonatomic, readwrite, strong, null_resettable) PB3BroadcastChat *chat;
/** Test to see if @c chat has been set. */
@property(nonatomic, readwrite) BOOL hasChat;

/** 世界聊天记录列表 */
@property(nonatomic, readwrite, strong, null_resettable) PB3BroadcastMakeFriend *global;
/** Test to see if @c global has been set. */
@property(nonatomic, readwrite) BOOL hasGlobal;

@end

/**
 * Fetches the raw value of a @c PB3NewestAllChannelChat's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3NewestAllChannelChat_Type_RawValue(PB3NewestAllChannelChat *message);
/**
 * Sets the raw value of an @c PB3NewestAllChannelChat's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3NewestAllChannelChat_Type_RawValue(PB3NewestAllChannelChat *message, int32_t value);

#pragma mark - PB3NewestAllChatReq

/**
 * 最新全部频道发言
 **/
@interface PB3NewestAllChatReq : GPBMessage

@end

#pragma mark - PB3NewestAllChatRes

typedef GPB_ENUM(PB3NewestAllChatRes_FieldNumber) {
  PB3NewestAllChatRes_FieldNumber_ChatsArray = 1,
};

@interface PB3NewestAllChatRes : GPBMessage

/** 全部频道最近聊天记录列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3NewestAllChannelChat*> *chatsArray;
/** The number of items in @c chatsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger chatsArray_Count;

@end

#pragma mark - PB3AllChatCfg

typedef GPB_ENUM(PB3AllChatCfg_FieldNumber) {
  PB3AllChatCfg_FieldNumber_Type = 1,
  PB3AllChatCfg_FieldNumber_Name = 2,
  PB3AllChatCfg_FieldNumber_IsShow = 3,
  PB3AllChatCfg_FieldNumber_IsDefault = 4,
  PB3AllChatCfg_FieldNumber_IsShowHeadline = 5,
  PB3AllChatCfg_FieldNumber_ApplicationsArray = 6,
};

/**
 * 公屏多频道配置
 **/
@interface PB3AllChatCfg : GPBMessage

/** 频道类型(根据这个频道类型读取下面不同的结构) */
@property(nonatomic, readwrite) enum PB3ChannelType type;

/** 频道名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 频道是否显示 */
@property(nonatomic, readwrite) BOOL isShow;

/** 频道是否默认 */
@property(nonatomic, readwrite) BOOL isDefault;

/** 频道是否显示头条 */
@property(nonatomic, readwrite) BOOL isShowHeadline;

/** 应用包名 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *applicationsArray;
/** The number of items in @c applicationsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger applicationsArray_Count;

@end

/**
 * Fetches the raw value of a @c PB3AllChatCfg's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3AllChatCfg_Type_RawValue(PB3AllChatCfg *message);
/**
 * Sets the raw value of an @c PB3AllChatCfg's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3AllChatCfg_Type_RawValue(PB3AllChatCfg *message, int32_t value);

#pragma mark - PB3ReceiveChair

typedef GPB_ENUM(PB3ReceiveChair_FieldNumber) {
  PB3ReceiveChair_FieldNumber_ChairId = 1,
  PB3ReceiveChair_FieldNumber_Image = 2,
  PB3ReceiveChair_FieldNumber_ChairName = 3,
  PB3ReceiveChair_FieldNumber_Sex = 4,
  PB3ReceiveChair_FieldNumber_Flags = 5,
  PB3ReceiveChair_FieldNumber_ChairSign = 6,
};

@interface PB3ReceiveChair : GPBMessage

/** 主持id */
@property(nonatomic, readwrite) int64_t chairId;

/** 图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *image;

/** 名字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *chairName;

@property(nonatomic, readwrite) int32_t sex;

/** 标志，按位存储。各位表示意思参考common.ext.proto:PlayerFlags */
@property(nonatomic, readwrite) int64_t flags;

/** 个人签名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *chairSign;

@end

#pragma mark - PB3ReceiveWindow

typedef GPB_ENUM(PB3ReceiveWindow_FieldNumber) {
  PB3ReceiveWindow_FieldNumber_RoomId = 1,
  PB3ReceiveWindow_FieldNumber_Chair = 2,
  PB3ReceiveWindow_FieldNumber_ReceiveContent = 3,
  PB3ReceiveWindow_FieldNumber_RoomType = 4,
  PB3ReceiveWindow_FieldNumber_Style = 5,
  PB3ReceiveWindow_FieldNumber_Data_p = 6,
};

/**
 * cmdId=100169 接待弹窗推送协议
 **/
@interface PB3ReceiveWindow : GPBMessage

/** 房间id */
@property(nonatomic, readwrite) int64_t roomId;

@property(nonatomic, readwrite, strong, null_resettable) PB3ReceiveChair *chair;
/** Test to see if @c chair has been set. */
@property(nonatomic, readwrite) BOOL hasChair;

/** 接待语 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *receiveContent;

/** 房间类型 */
@property(nonatomic, readwrite) PB3ReceiveRoomType roomType;

/** 样式 */
@property(nonatomic, readwrite) PB3ReceiveWindowStyle style;

/** 接引弹窗数据-推荐 ReceiveWindowOpt */
@property(nonatomic, readwrite, copy, null_resettable) NSData *data_p;

@end

/**
 * Fetches the raw value of a @c PB3ReceiveWindow's @c roomType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ReceiveWindow_RoomType_RawValue(PB3ReceiveWindow *message);
/**
 * Sets the raw value of an @c PB3ReceiveWindow's @c roomType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ReceiveWindow_RoomType_RawValue(PB3ReceiveWindow *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3ReceiveWindow's @c style property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ReceiveWindow_Style_RawValue(PB3ReceiveWindow *message);
/**
 * Sets the raw value of an @c PB3ReceiveWindow's @c style property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ReceiveWindow_Style_RawValue(PB3ReceiveWindow *message, int32_t value);

#pragma mark - PB3EnterRoomByReceiveWindow

typedef GPB_ENUM(PB3EnterRoomByReceiveWindow_FieldNumber) {
  PB3EnterRoomByReceiveWindow_FieldNumber_PlayerId = 1,
  PB3EnterRoomByReceiveWindow_FieldNumber_Nickname = 2,
  PB3EnterRoomByReceiveWindow_FieldNumber_Sex = 3,
  PB3EnterRoomByReceiveWindow_FieldNumber_EnterRoomMsg = 4,
};

/**
 * ame:  cmdId=100179 新用户通过首页接引弹窗进入房间通知，房主和主持才能收到
 **/
@interface PB3EnterRoomByReceiveWindow : GPBMessage

/** 用户id */
@property(nonatomic, readwrite) int64_t playerId;

/** 用户昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nickname;

/** 用户性别 */
@property(nonatomic, readwrite) enum PB3SexType sex;

/** 进房通知内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *enterRoomMsg;

@end

/**
 * Fetches the raw value of a @c PB3EnterRoomByReceiveWindow's @c sex property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3EnterRoomByReceiveWindow_Sex_RawValue(PB3EnterRoomByReceiveWindow *message);
/**
 * Sets the raw value of an @c PB3EnterRoomByReceiveWindow's @c sex property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3EnterRoomByReceiveWindow_Sex_RawValue(PB3EnterRoomByReceiveWindow *message, int32_t value);

#pragma mark - PB3CancelReceiveWindowReq

typedef GPB_ENUM(PB3CancelReceiveWindowReq_FieldNumber) {
  PB3CancelReceiveWindowReq_FieldNumber_WindowData = 1,
};

/**
 * 用户点击接引弹窗的取消
 **/
@interface PB3CancelReceiveWindowReq : GPBMessage

/** 接引弹窗数据 */
@property(nonatomic, readwrite, strong, null_resettable) PB3ReceiveWindow *windowData;
/** Test to see if @c windowData has been set. */
@property(nonatomic, readwrite) BOOL hasWindowData;

@end

#pragma mark - PB3CancelReceiveWindowRes

@interface PB3CancelReceiveWindowRes : GPBMessage

@end

#pragma mark - PB3ReceiveWindowOpt

typedef GPB_ENUM(PB3ReceiveWindowOpt_FieldNumber) {
  PB3ReceiveWindowOpt_FieldNumber_PlayerId = 1,
  PB3ReceiveWindowOpt_FieldNumber_RoomId = 2,
  PB3ReceiveWindowOpt_FieldNumber_Name = 3,
  PB3ReceiveWindowOpt_FieldNumber_Sex = 4,
  PB3ReceiveWindowOpt_FieldNumber_Icon = 5,
  PB3ReceiveWindowOpt_FieldNumber_RecommendWord = 6,
  PB3ReceiveWindowOpt_FieldNumber_VoiceURL = 7,
  PB3ReceiveWindowOpt_FieldNumber_VoiceTime = 8,
  PB3ReceiveWindowOpt_FieldNumber_VoiceTagText = 9,
  PB3ReceiveWindowOpt_FieldNumber_URL = 10,
  PB3ReceiveWindowOpt_FieldNumber_Btn = 11,
  PB3ReceiveWindowOpt_FieldNumber_AlgorithmId = 12,
  PB3ReceiveWindowOpt_FieldNumber_Style = 13,
  PB3ReceiveWindowOpt_FieldNumber_Position = 14,
  PB3ReceiveWindowOpt_FieldNumber_PeopleNum = 15,
  PB3ReceiveWindowOpt_FieldNumber_Pattern = 16,
  PB3ReceiveWindowOpt_FieldNumber_RoomType = 17,
  PB3ReceiveWindowOpt_FieldNumber_StayTime = 18,
  PB3ReceiveWindowOpt_FieldNumber_IsClick = 19,
  PB3ReceiveWindowOpt_FieldNumber_CloseType = 20,
  PB3ReceiveWindowOpt_FieldNumber_IsPlayVoice = 21,
  PB3ReceiveWindowOpt_FieldNumber_DiscardType = 22,
  PB3ReceiveWindowOpt_FieldNumber_HomeStayTime = 23,
  PB3ReceiveWindowOpt_FieldNumber_AbGroupId = 24,
  PB3ReceiveWindowOpt_FieldNumber_PlayerSex = 25,
  PB3ReceiveWindowOpt_FieldNumber_ChairPlayer = 26,
};

/**
 * 接引弹窗-推荐
 **/
@interface PB3ReceiveWindowOpt : GPBMessage

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 房间ID */
@property(nonatomic, readwrite) int64_t roomId;

/** 房间名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 性别 */
@property(nonatomic, readwrite) enum PB3SexType sex;

/** 图标路径 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 推荐语 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *recommendWord;

/** 声音地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *voiceURL;

/** 声音时长 */
@property(nonatomic, readwrite) int32_t voiceTime;

/** 主音色文字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *voiceTagText;

/** 跳转URL */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

/** 按钮文案 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *btn;

/** 算法编号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *algorithmId;

/** 接引弹窗样式 */
@property(nonatomic, readwrite) PB3ReceiveWindowStyle style;

/** 显示位置 */
@property(nonatomic, readwrite) PB3ReceiveWindowPosition position;

/** 当前房间人数 */
@property(nonatomic, readwrite) int32_t peopleNum;

/** 房间类型 */
@property(nonatomic, readwrite) enum PB3NewRoomPattern pattern;

/** 公会厅类型 */
@property(nonatomic, readwrite) int32_t roomType;

/** 弹窗停留时长 上报 */
@property(nonatomic, readwrite) int32_t stayTime;

/** 点击    上报 */
@property(nonatomic, readwrite) BOOL isClick;

/** 关闭类型 上报 */
@property(nonatomic, readwrite) PB3CancelReceiveWindowType closeType;

/** 是否播放声音条 上报 */
@property(nonatomic, readwrite) BOOL isPlayVoice;

/** 丢弃类型 上报 */
@property(nonatomic, readwrite) PB3DiscardReceiveWindowType discardType;

/** 首页停留时长 上报 */
@property(nonatomic, readwrite) int32_t homeStayTime;

/** ab对照组id 回传阿里云 trace_id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *abGroupId;

/** 用户性别 */
@property(nonatomic, readwrite) int32_t playerSex;

/** 麦上用户 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Int64Dictionary *chairPlayer;
/** The number of items in @c chairPlayer without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger chairPlayer_Count;

@end

/**
 * Fetches the raw value of a @c PB3ReceiveWindowOpt's @c sex property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ReceiveWindowOpt_Sex_RawValue(PB3ReceiveWindowOpt *message);
/**
 * Sets the raw value of an @c PB3ReceiveWindowOpt's @c sex property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ReceiveWindowOpt_Sex_RawValue(PB3ReceiveWindowOpt *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3ReceiveWindowOpt's @c style property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ReceiveWindowOpt_Style_RawValue(PB3ReceiveWindowOpt *message);
/**
 * Sets the raw value of an @c PB3ReceiveWindowOpt's @c style property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ReceiveWindowOpt_Style_RawValue(PB3ReceiveWindowOpt *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3ReceiveWindowOpt's @c position property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ReceiveWindowOpt_Position_RawValue(PB3ReceiveWindowOpt *message);
/**
 * Sets the raw value of an @c PB3ReceiveWindowOpt's @c position property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ReceiveWindowOpt_Position_RawValue(PB3ReceiveWindowOpt *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3ReceiveWindowOpt's @c pattern property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ReceiveWindowOpt_Pattern_RawValue(PB3ReceiveWindowOpt *message);
/**
 * Sets the raw value of an @c PB3ReceiveWindowOpt's @c pattern property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ReceiveWindowOpt_Pattern_RawValue(PB3ReceiveWindowOpt *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3ReceiveWindowOpt's @c closeType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ReceiveWindowOpt_CloseType_RawValue(PB3ReceiveWindowOpt *message);
/**
 * Sets the raw value of an @c PB3ReceiveWindowOpt's @c closeType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ReceiveWindowOpt_CloseType_RawValue(PB3ReceiveWindowOpt *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3ReceiveWindowOpt's @c discardType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ReceiveWindowOpt_DiscardType_RawValue(PB3ReceiveWindowOpt *message);
/**
 * Sets the raw value of an @c PB3ReceiveWindowOpt's @c discardType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ReceiveWindowOpt_DiscardType_RawValue(PB3ReceiveWindowOpt *message, int32_t value);

#pragma mark - PB3OpenWindowReq

typedef GPB_ENUM(PB3OpenWindowReq_FieldNumber) {
  PB3OpenWindowReq_FieldNumber_WinType = 1,
};

/**
 * 房间弹窗询问
 **/
@interface PB3OpenWindowReq : GPBMessage

@property(nonatomic, readwrite) PB3WinType winType;

@end

/**
 * Fetches the raw value of a @c PB3OpenWindowReq's @c winType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3OpenWindowReq_WinType_RawValue(PB3OpenWindowReq *message);
/**
 * Sets the raw value of an @c PB3OpenWindowReq's @c winType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3OpenWindowReq_WinType_RawValue(PB3OpenWindowReq *message, int32_t value);

#pragma mark - PB3OpenWindowRes

@interface PB3OpenWindowRes : GPBMessage

@end

#pragma mark - PB3RoomSitLvLimit

typedef GPB_ENUM(PB3RoomSitLvLimit_FieldNumber) {
  PB3RoomSitLvLimit_FieldNumber_ErrorCode = 1,
  PB3RoomSitLvLimit_FieldNumber_ErrorMsg = 2,
};

/**
 * cmdId=100170 排队上8麦时，如果上麦条件不符合，则推送
 **/
@interface PB3RoomSitLvLimit : GPBMessage

/** 错误码 */
@property(nonatomic, readwrite) PB3RoomErr errorCode;

/** 错误描述 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMsg;

@end

/**
 * Fetches the raw value of a @c PB3RoomSitLvLimit's @c errorCode property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3RoomSitLvLimit_ErrorCode_RawValue(PB3RoomSitLvLimit *message);
/**
 * Sets the raw value of an @c PB3RoomSitLvLimit's @c errorCode property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3RoomSitLvLimit_ErrorCode_RawValue(PB3RoomSitLvLimit *message, int32_t value);

#pragma mark - PB3RoomOnOffStatus

typedef GPB_ENUM(PB3RoomOnOffStatus_FieldNumber) {
  PB3RoomOnOffStatus_FieldNumber_Type = 1,
  PB3RoomOnOffStatus_FieldNumber_Status = 2,
};

@interface PB3RoomOnOffStatus : GPBMessage

@property(nonatomic, readwrite) PB3RoomOnOffType type;

/** 0关，1开 */
@property(nonatomic, readwrite) int32_t status;

@end

/**
 * Fetches the raw value of a @c PB3RoomOnOffStatus's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3RoomOnOffStatus_Type_RawValue(PB3RoomOnOffStatus *message);
/**
 * Sets the raw value of an @c PB3RoomOnOffStatus's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3RoomOnOffStatus_Type_RawValue(PB3RoomOnOffStatus *message, int32_t value);

#pragma mark - PB3FirstChargeReq

/**
 * 首充提示配置请求
 **/
@interface PB3FirstChargeReq : GPBMessage

@end

#pragma mark - PB3FirstChargeRes

typedef GPB_ENUM(PB3FirstChargeRes_FieldNumber) {
  PB3FirstChargeRes_FieldNumber_GiftTipTime = 1,
  PB3FirstChargeRes_FieldNumber_GiftTip = 2,
  PB3FirstChargeRes_FieldNumber_WindowStay = 3,
  PB3FirstChargeRes_FieldNumber_GiftJump = 4,
  PB3FirstChargeRes_FieldNumber_WindowJump = 5,
  PB3FirstChargeRes_FieldNumber_IsCharge = 6,
  PB3FirstChargeRes_FieldNumber_GiftIcon = 7,
};

@interface PB3FirstChargeRes : GPBMessage

/** 房间礼包文案提示时长(秒)，0则不提示 */
@property(nonatomic, readwrite) int32_t giftTipTime;

/** 房间礼包提示文案 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *giftTip;

/** 用户在房间停留X秒后弹出提示，0则不弹出 */
@property(nonatomic, readwrite) int32_t windowStay;

/** 房间礼包 跳转地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *giftJump;

/** 房间弹窗 跳转地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *windowJump;

/** 今天是否充值过，0没有，1有 */
@property(nonatomic, readwrite) int32_t isCharge;

/** 房间礼包图标是否显示 0否1是 */
@property(nonatomic, readwrite) int32_t giftIcon;

@end

#pragma mark - PB3FirstChargeWindowReq

/**
 * 首充提示 房间弹窗询问
 **/
@interface PB3FirstChargeWindowReq : GPBMessage

@end

#pragma mark - PB3FirstChargeWindowRes

@interface PB3FirstChargeWindowRes : GPBMessage

@end

#pragma mark - PB3AllDecorateConfReq

typedef GPB_ENUM(PB3AllDecorateConfReq_FieldNumber) {
  PB3AllDecorateConfReq_FieldNumber_DecorateType = 1,
};

@interface PB3AllDecorateConfReq : GPBMessage

@property(nonatomic, readwrite) enum PB3DecorateType decorateType;

@end

/**
 * Fetches the raw value of a @c PB3AllDecorateConfReq's @c decorateType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3AllDecorateConfReq_DecorateType_RawValue(PB3AllDecorateConfReq *message);
/**
 * Sets the raw value of an @c PB3AllDecorateConfReq's @c decorateType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3AllDecorateConfReq_DecorateType_RawValue(PB3AllDecorateConfReq *message, int32_t value);

#pragma mark - PB3AllDecorateConfRes

typedef GPB_ENUM(PB3AllDecorateConfRes_FieldNumber) {
  PB3AllDecorateConfRes_FieldNumber_ItemArray = 1,
};

@interface PB3AllDecorateConfRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3RoomAllDecorateItem*> *itemArray;
/** The number of items in @c itemArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger itemArray_Count;

@end

#pragma mark - PB3UsingDecorateList

typedef GPB_ENUM(PB3UsingDecorateList_FieldNumber) {
  PB3UsingDecorateList_FieldNumber_DecorateIdArray = 1,
};

@interface PB3UsingDecorateList : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *decorateIdArray;
/** The number of items in @c decorateIdArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger decorateIdArray_Count;

@end

#pragma mark - PB3BuyDecorateReq

typedef GPB_ENUM(PB3BuyDecorateReq_FieldNumber) {
  PB3BuyDecorateReq_FieldNumber_ShopId = 1,
  PB3BuyDecorateReq_FieldNumber_DecorateId = 2,
};

/**
 * 购买房间装饰
 **/
@interface PB3BuyDecorateReq : GPBMessage

@property(nonatomic, readwrite) int64_t shopId;

@property(nonatomic, readwrite) int64_t decorateId;

@end

#pragma mark - PB3BuyDecorateRes

@interface PB3BuyDecorateRes : GPBMessage

@end

#pragma mark - PB3UseDecorateReq

typedef GPB_ENUM(PB3UseDecorateReq_FieldNumber) {
  PB3UseDecorateReq_FieldNumber_DecorateId = 1,
};

/**
 * 使用房间装饰
 **/
@interface PB3UseDecorateReq : GPBMessage

@property(nonatomic, readwrite) int64_t decorateId;

@end

#pragma mark - PB3UseDecorateRes

@interface PB3UseDecorateRes : GPBMessage

@end

#pragma mark - PB3BroadcastUseDecorate

typedef GPB_ENUM(PB3BroadcastUseDecorate_FieldNumber) {
  PB3BroadcastUseDecorate_FieldNumber_RoomBgURL = 1,
  PB3BroadcastUseDecorate_FieldNumber_PcRoomBgURL = 2,
  PB3BroadcastUseDecorate_FieldNumber_DecorateId = 3,
};

@interface PB3BroadcastUseDecorate : GPBMessage

/** 房间装饰背景图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomBgURL;

/** pc房间装饰背景图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcRoomBgURL;

/** 装饰id 6.4.5后优化 只根据装饰ID获取 */
@property(nonatomic, readwrite) int64_t decorateId;

@end

#pragma mark - PB3BroadcastBuyDecorate

typedef GPB_ENUM(PB3BroadcastBuyDecorate_FieldNumber) {
  PB3BroadcastBuyDecorate_FieldNumber_DecorateId = 1,
};

@interface PB3BroadcastBuyDecorate : GPBMessage

@property(nonatomic, readwrite) int64_t decorateId;

@end

#pragma mark - PB3BaseDecorateConfItem

typedef GPB_ENUM(PB3BaseDecorateConfItem_FieldNumber) {
  PB3BaseDecorateConfItem_FieldNumber_DecorateId = 1,
  PB3BaseDecorateConfItem_FieldNumber_DecorateType = 2,
  PB3BaseDecorateConfItem_FieldNumber_Name = 3,
  PB3BaseDecorateConfItem_FieldNumber_BgURL = 4,
  PB3BaseDecorateConfItem_FieldNumber_SmallBgURL = 5,
  PB3BaseDecorateConfItem_FieldNumber_PcURL = 6,
  PB3BaseDecorateConfItem_FieldNumber_SmallPcURL = 7,
  PB3BaseDecorateConfItem_FieldNumber_Describe = 8,
  PB3BaseDecorateConfItem_FieldNumber_ShelterURL = 9,
  PB3BaseDecorateConfItem_FieldNumber_PcShelterURL = 10,
  PB3BaseDecorateConfItem_FieldNumber_StretchableURL = 11,
  PB3BaseDecorateConfItem_FieldNumber_BgVideoURL = 12,
  PB3BaseDecorateConfItem_FieldNumber_BgVideoPcURL = 13,
};

/**
 * ////////////新装饰配置/////////////////////
 * 6.4.5之后优化独立出装饰配置
 **/
@interface PB3BaseDecorateConfItem : GPBMessage

@property(nonatomic, readwrite) int64_t decorateId;

@property(nonatomic, readwrite) enum PB3DecorateType decorateType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bgURL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *smallBgURL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *pcURL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *smallPcURL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *describe;

/** 方形庇护图片地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *shelterURL;

/** 方形庇护PC图片地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcShelterURL;

/** 拉伸图地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *stretchableURL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bgVideoURL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bgVideoPcURL;

@end

/**
 * Fetches the raw value of a @c PB3BaseDecorateConfItem's @c decorateType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BaseDecorateConfItem_DecorateType_RawValue(PB3BaseDecorateConfItem *message);
/**
 * Sets the raw value of an @c PB3BaseDecorateConfItem's @c decorateType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BaseDecorateConfItem_DecorateType_RawValue(PB3BaseDecorateConfItem *message, int32_t value);

#pragma mark - PB3BaseDecorateConfReq

typedef GPB_ENUM(PB3BaseDecorateConfReq_FieldNumber) {
  PB3BaseDecorateConfReq_FieldNumber_Md5 = 1,
};

@interface PB3BaseDecorateConfReq : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *md5;

@end

#pragma mark - PB3BaseDecorateConfRes

typedef GPB_ENUM(PB3BaseDecorateConfRes_FieldNumber) {
  PB3BaseDecorateConfRes_FieldNumber_Status = 1,
  PB3BaseDecorateConfRes_FieldNumber_Md5 = 2,
  PB3BaseDecorateConfRes_FieldNumber_ItemArray = 3,
};

@interface PB3BaseDecorateConfRes : GPBMessage

/** 0获取成功 1已是最新 2获取失败 */
@property(nonatomic, readwrite) int32_t status;

@property(nonatomic, readwrite, copy, null_resettable) NSString *md5;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3BaseDecorateConfItem*> *itemArray;
/** The number of items in @c itemArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger itemArray_Count;

@end

#pragma mark - PB3BaseDecorateConfUrlReq

/**
 * 装饰基础配置url
 **/
@interface PB3BaseDecorateConfUrlReq : GPBMessage

@end

#pragma mark - PB3BaseDecorateConfUrlRes

typedef GPB_ENUM(PB3BaseDecorateConfUrlRes_FieldNumber) {
  PB3BaseDecorateConfUrlRes_FieldNumber_URL = 1,
};

@interface PB3BaseDecorateConfUrlRes : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

@end

#pragma mark - PB3PlayersRoomsReq

typedef GPB_ENUM(PB3PlayersRoomsReq_FieldNumber) {
  PB3PlayersRoomsReq_FieldNumber_FlagRoomName = 1,
  PB3PlayersRoomsReq_FieldNumber_PlayerIdsArray = 2,
};

@interface PB3PlayersRoomsReq : GPBMessage

/** 是否返回房间名 */
@property(nonatomic, readwrite) int32_t flagRoomName;

/** 要查询的玩家id列表，最多50个 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *playerIdsArray;
/** The number of items in @c playerIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger playerIdsArray_Count;

@end

#pragma mark - PB3PlayersRoomsRes

typedef GPB_ENUM(PB3PlayersRoomsRes_FieldNumber) {
  PB3PlayersRoomsRes_FieldNumber_RoomMap = 1,
};

@interface PB3PlayersRoomsRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBInt64ObjectDictionary<PB3RoomIdName*> *roomMap;
/** The number of items in @c roomMap without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger roomMap_Count;

@end

#pragma mark - PB3RoomIdName

typedef GPB_ENUM(PB3RoomIdName_FieldNumber) {
  PB3RoomIdName_FieldNumber_RoomId = 1,
  PB3RoomIdName_FieldNumber_RoomName = 2,
};

@interface PB3RoomIdName : GPBMessage

/** 玩家所在房间，0表示不在房间 */
@property(nonatomic, readwrite) int64_t roomId;

/** 房间名，请求中 flag_room_name 为0，则该字段为 "" */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomName;

@end

#pragma mark - PB3DelBroadcastFriendRecordReq

typedef GPB_ENUM(PB3DelBroadcastFriendRecordReq_FieldNumber) {
  PB3DelBroadcastFriendRecordReq_FieldNumber_Id_p = 1,
  PB3DelBroadcastFriendRecordReq_FieldNumber_Content = 2,
  PB3DelBroadcastFriendRecordReq_FieldNumber_PlayerId = 3,
  PB3DelBroadcastFriendRecordReq_FieldNumber_InfoType = 12,
};

@interface PB3DelBroadcastFriendRecordReq : GPBMessage

/** 广播交友信息id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** 广播交友内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

/** 发送者id */
@property(nonatomic, readwrite) int64_t playerId;

/** 0 广播交友信息, 1 跳跳，2礼物 */
@property(nonatomic, readwrite) PB3BF_RECORD_KIND infoType;

@end

/**
 * Fetches the raw value of a @c PB3DelBroadcastFriendRecordReq's @c infoType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3DelBroadcastFriendRecordReq_InfoType_RawValue(PB3DelBroadcastFriendRecordReq *message);
/**
 * Sets the raw value of an @c PB3DelBroadcastFriendRecordReq's @c infoType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3DelBroadcastFriendRecordReq_InfoType_RawValue(PB3DelBroadcastFriendRecordReq *message, int32_t value);

#pragma mark - PB3DelBroadcastFriendRecordRes

@interface PB3DelBroadcastFriendRecordRes : GPBMessage

@end

#pragma mark - PB3NextRewardRoomReq

@interface PB3NextRewardRoomReq : GPBMessage

@end

#pragma mark - PB3NextRewardRoomRes

typedef GPB_ENUM(PB3NextRewardRoomRes_FieldNumber) {
  PB3NextRewardRoomRes_FieldNumber_RoomId = 1,
};

@interface PB3NextRewardRoomRes : GPBMessage

@property(nonatomic, readwrite) int64_t roomId;

@end

#pragma mark - PB3RoomSkillReq

@interface PB3RoomSkillReq : GPBMessage

@end

#pragma mark - PB3RoomSkillRes

typedef GPB_ENUM(PB3RoomSkillRes_FieldNumber) {
  PB3RoomSkillRes_FieldNumber_SkillArray = 1,
};

@interface PB3RoomSkillRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3PlayerRoomSkill*> *skillArray;
/** The number of items in @c skillArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger skillArray_Count;

@end

#pragma mark - PB3PlayerRoomSkill

typedef GPB_ENUM(PB3PlayerRoomSkill_FieldNumber) {
  PB3PlayerRoomSkill_FieldNumber_SkillId = 1,
  PB3PlayerRoomSkill_FieldNumber_SkillType = 2,
  PB3PlayerRoomSkill_FieldNumber_SkillIcon = 3,
  PB3PlayerRoomSkill_FieldNumber_HasTimes = 4,
  PB3PlayerRoomSkill_FieldNumber_SkillName = 5,
  PB3PlayerRoomSkill_FieldNumber_SkillDes = 6,
  PB3PlayerRoomSkill_FieldNumber_TotalTimes = 7,
};

@interface PB3PlayerRoomSkill : GPBMessage

@property(nonatomic, readwrite) int64_t skillId;

@property(nonatomic, readwrite) PB3ROOM_SKILL_TYPE skillType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *skillIcon;

/** 剩余次数 */
@property(nonatomic, readwrite) int32_t hasTimes;

@property(nonatomic, readwrite, copy, null_resettable) NSString *skillName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *skillDes;

@property(nonatomic, readwrite) int32_t totalTimes;

@end

/**
 * Fetches the raw value of a @c PB3PlayerRoomSkill's @c skillType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3PlayerRoomSkill_SkillType_RawValue(PB3PlayerRoomSkill *message);
/**
 * Sets the raw value of an @c PB3PlayerRoomSkill's @c skillType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3PlayerRoomSkill_SkillType_RawValue(PB3PlayerRoomSkill *message, int32_t value);

#pragma mark - PB3UseSkillReq

typedef GPB_ENUM(PB3UseSkillReq_FieldNumber) {
  PB3UseSkillReq_FieldNumber_SkillId = 1,
};

@interface PB3UseSkillReq : GPBMessage

@property(nonatomic, readwrite) int64_t skillId;

@end

#pragma mark - PB3UseSkillRes

typedef GPB_ENUM(PB3UseSkillRes_FieldNumber) {
  PB3UseSkillRes_FieldNumber_SkillId = 1,
  PB3UseSkillRes_FieldNumber_SkillType = 2,
  PB3UseSkillRes_FieldNumber_DataType = 3,
  PB3UseSkillRes_FieldNumber_DataByte = 4,
  PB3UseSkillRes_FieldNumber_HasPrivilege = 5,
  PB3UseSkillRes_FieldNumber_MinNobilityId = 6,
};

@interface PB3UseSkillRes : GPBMessage

@property(nonatomic, readwrite) int64_t skillId;

@property(nonatomic, readwrite) PB3ROOM_SKILL_TYPE skillType;

@property(nonatomic, readwrite) PB3ROOM_SKILL_DATA dataType;

/** 内容结构 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *dataByte;

/** 是否有特权 */
@property(nonatomic, readwrite) BOOL hasPrivilege;

/** 最低爵位要求 */
@property(nonatomic, readwrite) int64_t minNobilityId;

@end

/**
 * Fetches the raw value of a @c PB3UseSkillRes's @c skillType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3UseSkillRes_SkillType_RawValue(PB3UseSkillRes *message);
/**
 * Sets the raw value of an @c PB3UseSkillRes's @c skillType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3UseSkillRes_SkillType_RawValue(PB3UseSkillRes *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3UseSkillRes's @c dataType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3UseSkillRes_DataType_RawValue(PB3UseSkillRes *message);
/**
 * Sets the raw value of an @c PB3UseSkillRes's @c dataType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3UseSkillRes_DataType_RawValue(PB3UseSkillRes *message, int32_t value);

#pragma mark - PB3SkillInfo

typedef GPB_ENUM(PB3SkillInfo_FieldNumber) {
  PB3SkillInfo_FieldNumber_UserId = 1,
  PB3SkillInfo_FieldNumber_SkillId = 2,
  PB3SkillInfo_FieldNumber_SkillPlayTime = 3,
  PB3SkillInfo_FieldNumber_SkillType = 4,
};

@interface PB3SkillInfo : GPBMessage

@property(nonatomic, readwrite) int64_t userId;

@property(nonatomic, readwrite) int64_t skillId;

@property(nonatomic, readwrite) int32_t skillPlayTime;

@property(nonatomic, readwrite) PB3ROOM_SKILL_TYPE skillType;

@end

/**
 * Fetches the raw value of a @c PB3SkillInfo's @c skillType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SkillInfo_SkillType_RawValue(PB3SkillInfo *message);
/**
 * Sets the raw value of an @c PB3SkillInfo's @c skillType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SkillInfo_SkillType_RawValue(PB3SkillInfo *message, int32_t value);

#pragma mark - PB3BroadCastUseSkill

typedef GPB_ENUM(PB3BroadCastUseSkill_FieldNumber) {
  PB3BroadCastUseSkill_FieldNumber_SkillInfo = 1,
};

@interface PB3BroadCastUseSkill : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3SkillInfo *skillInfo;
/** Test to see if @c skillInfo has been set. */
@property(nonatomic, readwrite) BOOL hasSkillInfo;

@end

#pragma mark - PB3BroadCastSkillResult

typedef GPB_ENUM(PB3BroadCastSkillResult_FieldNumber) {
  PB3BroadCastSkillResult_FieldNumber_SkillInfo = 1,
  PB3BroadCastSkillResult_FieldNumber_DataType = 2,
  PB3BroadCastSkillResult_FieldNumber_DataByte = 3,
};

@interface PB3BroadCastSkillResult : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3SkillInfo *skillInfo;
/** Test to see if @c skillInfo has been set. */
@property(nonatomic, readwrite) BOOL hasSkillInfo;

@property(nonatomic, readwrite) PB3ROOM_SKILL_DATA dataType;

/** 内容结构 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *dataByte;

@end

/**
 * Fetches the raw value of a @c PB3BroadCastSkillResult's @c dataType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BroadCastSkillResult_DataType_RawValue(PB3BroadCastSkillResult *message);
/**
 * Sets the raw value of an @c PB3BroadCastSkillResult's @c dataType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BroadCastSkillResult_DataType_RawValue(PB3BroadCastSkillResult *message, int32_t value);

#pragma mark - PB3SkillPlayer

typedef GPB_ENUM(PB3SkillPlayer_FieldNumber) {
  PB3SkillPlayer_FieldNumber_PlayerId = 1,
  PB3SkillPlayer_FieldNumber_Chair = 2,
  PB3SkillPlayer_FieldNumber_Icon = 3,
  PB3SkillPlayer_FieldNumber_Name = 4,
};

@interface PB3SkillPlayer : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

@property(nonatomic, readwrite) int32_t chair;

@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@end

#pragma mark - PB3SkillChair

typedef GPB_ENUM(PB3SkillChair_FieldNumber) {
  PB3SkillChair_FieldNumber_Chair = 1,
};

@interface PB3SkillChair : GPBMessage

@property(nonatomic, readwrite) int32_t chair;

@end

#pragma mark - PB3UpdateAnonymousSitReq

typedef GPB_ENUM(PB3UpdateAnonymousSitReq_FieldNumber) {
  PB3UpdateAnonymousSitReq_FieldNumber_Flag = 1,
};

@interface PB3UpdateAnonymousSitReq : GPBMessage

/** true 匿名， false 不匿名 */
@property(nonatomic, readwrite) BOOL flag;

@end

#pragma mark - PB3UpdateAnonymousSitRes

@interface PB3UpdateAnonymousSitRes : GPBMessage

@end

#pragma mark - PB3ClanMember

typedef GPB_ENUM(PB3ClanMember_FieldNumber) {
  PB3ClanMember_FieldNumber_Id_p = 1,
  PB3ClanMember_FieldNumber_Id2 = 2,
  PB3ClanMember_FieldNumber_Icon = 3,
  PB3ClanMember_FieldNumber_Name = 4,
  PB3ClanMember_FieldNumber_Sex = 5,
  PB3ClanMember_FieldNumber_ClanId = 6,
};

@interface PB3ClanMember : GPBMessage

@property(nonatomic, readwrite) int64_t id_p;

@property(nonatomic, readwrite) int64_t id2;

@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite) enum PB3SexType sex;

/** 公会ID */
@property(nonatomic, readwrite) int64_t clanId;

@end

/**
 * Fetches the raw value of a @c PB3ClanMember's @c sex property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ClanMember_Sex_RawValue(PB3ClanMember *message);
/**
 * Sets the raw value of an @c PB3ClanMember's @c sex property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ClanMember_Sex_RawValue(PB3ClanMember *message, int32_t value);

#pragma mark - PB3RoomClanMembersOnChairReq

@interface PB3RoomClanMembersOnChairReq : GPBMessage

@end

#pragma mark - PB3RoomClanMembersOnChairRes

typedef GPB_ENUM(PB3RoomClanMembersOnChairRes_FieldNumber) {
  PB3RoomClanMembersOnChairRes_FieldNumber_ListArray = 1,
  PB3RoomClanMembersOnChairRes_FieldNumber_ClanId = 6,
};

@interface PB3RoomClanMembersOnChairRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ClanMember*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

/** 公会ID */
@property(nonatomic, readwrite) int64_t clanId;

@end

#pragma mark - PB3RoomClanInfoReq

@interface PB3RoomClanInfoReq : GPBMessage

@end

#pragma mark - PB3RoomClanInfoRes

typedef GPB_ENUM(PB3RoomClanInfoRes_FieldNumber) {
  PB3RoomClanInfoRes_FieldNumber_RoomId = 1,
  PB3RoomClanInfoRes_FieldNumber_Name = 2,
};

@interface PB3RoomClanInfoRes : GPBMessage

/** 房间ID */
@property(nonatomic, readwrite) int64_t roomId;

/** 房间名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@end

#pragma mark - PB3PreCheckRoomPatternSetReq

typedef GPB_ENUM(PB3PreCheckRoomPatternSetReq_FieldNumber) {
  PB3PreCheckRoomPatternSetReq_FieldNumber_Pattern = 1,
};

@interface PB3PreCheckRoomPatternSetReq : GPBMessage

@property(nonatomic, readwrite) enum PB3NewRoomPattern pattern;

@end

/**
 * Fetches the raw value of a @c PB3PreCheckRoomPatternSetReq's @c pattern property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3PreCheckRoomPatternSetReq_Pattern_RawValue(PB3PreCheckRoomPatternSetReq *message);
/**
 * Sets the raw value of an @c PB3PreCheckRoomPatternSetReq's @c pattern property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3PreCheckRoomPatternSetReq_Pattern_RawValue(PB3PreCheckRoomPatternSetReq *message, int32_t value);

#pragma mark - PB3PreCheckRoomPatternSetRes

@interface PB3PreCheckRoomPatternSetRes : GPBMessage

@end

#pragma mark - PB3ReceiveWindowRoomIdReq

/**
 * 根据首页接引弹窗的规则，获取一个房间
 **/
@interface PB3ReceiveWindowRoomIdReq : GPBMessage

@end

#pragma mark - PB3ReceiveWindowRoomIdRes

typedef GPB_ENUM(PB3ReceiveWindowRoomIdRes_FieldNumber) {
  PB3ReceiveWindowRoomIdRes_FieldNumber_RoomId = 1,
};

@interface PB3ReceiveWindowRoomIdRes : GPBMessage

/** 房间ID */
@property(nonatomic, readwrite) int64_t roomId;

@end

#pragma mark - PB3ProgramInfoReq

typedef GPB_ENUM(PB3ProgramInfoReq_FieldNumber) {
  PB3ProgramInfoReq_FieldNumber_ProgramType = 1,
};

/**
 * 获取节目设置
 **/
@interface PB3ProgramInfoReq : GPBMessage

/** 节目类型, 1：点歌；2：互动 */
@property(nonatomic, readwrite) int64_t programType;

@end

#pragma mark - PB3ProgramInfoRes

typedef GPB_ENUM(PB3ProgramInfoRes_FieldNumber) {
  PB3ProgramInfoRes_FieldNumber_RoomId = 1,
  PB3ProgramInfoRes_FieldNumber_ProgramType = 2,
  PB3ProgramInfoRes_FieldNumber_BoomItemId = 3,
  PB3ProgramInfoRes_FieldNumber_OrderItemId = 4,
  PB3ProgramInfoRes_FieldNumber_OrderDoubleItemId = 5,
  PB3ProgramInfoRes_FieldNumber_BombItemId = 6,
  PB3ProgramInfoRes_FieldNumber_BombDoubleItemId = 7,
  PB3ProgramInfoRes_FieldNumber_BombTaskType = 8,
  PB3ProgramInfoRes_FieldNumber_BombTaskNum = 9,
  PB3ProgramInfoRes_FieldNumber_TargetFee = 10,
};

@interface PB3ProgramInfoRes : GPBMessage

/** 房间ID */
@property(nonatomic, readwrite) int64_t roomId;

/** 节目类型, 1：点歌；2：互动 */
@property(nonatomic, readwrite) int32_t programType;

/** 爆音礼物ID */
@property(nonatomic, readwrite) int32_t boomItemId;

/** 点歌礼物ID */
@property(nonatomic, readwrite) int32_t orderItemId;

/** 点歌双费 */
@property(nonatomic, readwrite) int32_t orderDoubleItemId;

/** 炸档全麦 */
@property(nonatomic, readwrite) int32_t bombItemId;

/** 炸档双费 */
@property(nonatomic, readwrite) int32_t bombDoubleItemId;

/** 麦序任务类型 1: 清空麦序， 2：清空指定数量 */
@property(nonatomic, readwrite) int32_t bombTaskType;

/** 炸档清空数量 */
@property(nonatomic, readwrite) int32_t bombTaskNum;

/** 双费目标 */
@property(nonatomic, readwrite) int32_t targetFee;

@end

#pragma mark - PB3SaveProgramReq

typedef GPB_ENUM(PB3SaveProgramReq_FieldNumber) {
  PB3SaveProgramReq_FieldNumber_RoomId = 1,
  PB3SaveProgramReq_FieldNumber_ProgramType = 2,
  PB3SaveProgramReq_FieldNumber_BoomItemId = 3,
  PB3SaveProgramReq_FieldNumber_OrderItemId = 4,
  PB3SaveProgramReq_FieldNumber_OrderDoubleItemId = 5,
  PB3SaveProgramReq_FieldNumber_BombItemId = 6,
  PB3SaveProgramReq_FieldNumber_BombDoubleItemId = 7,
  PB3SaveProgramReq_FieldNumber_BombTaskType = 8,
  PB3SaveProgramReq_FieldNumber_BombTaskNum = 9,
};

/**
 * 保存节目设置
 **/
@interface PB3SaveProgramReq : GPBMessage

/** 房间ID */
@property(nonatomic, readwrite) int64_t roomId;

/** 节目类型, 1：点歌；2：互动 */
@property(nonatomic, readwrite) int32_t programType;

/** 爆音礼物ID */
@property(nonatomic, readwrite) int32_t boomItemId;

/** 点歌礼物ID */
@property(nonatomic, readwrite) int32_t orderItemId;

/** 点歌双费 */
@property(nonatomic, readwrite) int32_t orderDoubleItemId;

/** 炸档全麦 */
@property(nonatomic, readwrite) int32_t bombItemId;

/** 炸档双费 */
@property(nonatomic, readwrite) int32_t bombDoubleItemId;

/** 麦序任务类型 1: 清空麦序， 2：清空指定数量 */
@property(nonatomic, readwrite) int32_t bombTaskType;

/** 炸档清空数量 */
@property(nonatomic, readwrite) int32_t bombTaskNum;

@end

#pragma mark - PB3SaveProgramRes

@interface PB3SaveProgramRes : GPBMessage

@end

#pragma mark - PB3ProgramFeeItem

typedef GPB_ENUM(PB3ProgramFeeItem_FieldNumber) {
  PB3ProgramFeeItem_FieldNumber_ItemId = 1,
  PB3ProgramFeeItem_FieldNumber_Name = 2,
};

/**
 * 节目设置费用
 **/
@interface PB3ProgramFeeItem : GPBMessage

/** 道具id */
@property(nonatomic, readwrite) int32_t itemId;

/** 道具名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@end

#pragma mark - PB3ProgramFeeCfg

typedef GPB_ENUM(PB3ProgramFeeCfg_FieldNumber) {
  PB3ProgramFeeCfg_FieldNumber_Mod = 1,
  PB3ProgramFeeCfg_FieldNumber_Type = 2,
  PB3ProgramFeeCfg_FieldNumber_ItemsArray = 3,
};

@interface PB3ProgramFeeCfg : GPBMessage

/** 功能： 爆音、点歌、互动、炸档 */
@property(nonatomic, readwrite) int32_t mod;

/** 费用类型: 单价、双费、全麦 */
@property(nonatomic, readwrite) int32_t type;

/** 费用道具 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ProgramFeeItem*> *itemsArray;
/** The number of items in @c itemsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger itemsArray_Count;

@end

#pragma mark - PB3ProgramFeeCfgList

typedef GPB_ENUM(PB3ProgramFeeCfgList_FieldNumber) {
  PB3ProgramFeeCfgList_FieldNumber_CfgListArray = 1,
};

@interface PB3ProgramFeeCfgList : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ProgramFeeCfg*> *cfgListArray;
/** The number of items in @c cfgListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger cfgListArray_Count;

@end

#pragma mark - PB3SetShowReq

typedef GPB_ENUM(PB3SetShowReq_FieldNumber) {
  PB3SetShowReq_FieldNumber_TargetId = 1,
  PB3SetShowReq_FieldNumber_IsShow = 2,
};

@interface PB3SetShowReq : GPBMessage

/** 需要设为或解除表演的用户ID */
@property(nonatomic, readwrite) int64_t targetId;

/** 是否设为表演 */
@property(nonatomic, readwrite) BOOL isShow;

@end

#pragma mark - PB3SetShowRes

/**
 * 推送 RC_Chair = 100110;           // 广播坑位变动
 **/
@interface PB3SetShowRes : GPBMessage

@end

#pragma mark - PB3HallHourBossReq

typedef GPB_ENUM(PB3HallHourBossReq_FieldNumber) {
  PB3HallHourBossReq_FieldNumber_Index = 1,
};

@interface PB3HallHourBossReq : GPBMessage

/** 初始传0 */
@property(nonatomic, readwrite) int32_t index;

@end

#pragma mark - PB3HallHourBossRes

typedef GPB_ENUM(PB3HallHourBossRes_FieldNumber) {
  PB3HallHourBossRes_FieldNumber_NextIndex = 1,
  PB3HallHourBossRes_FieldNumber_ListArray = 2,
};

@interface PB3HallHourBossRes : GPBMessage

/** -1 没有了，请求下一页，传给服务端 */
@property(nonatomic, readwrite) int32_t nextIndex;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3HallHourBoss*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3HallHourBoss

typedef GPB_ENUM(PB3HallHourBoss_FieldNumber) {
  PB3HallHourBoss_FieldNumber_PlayerId = 1,
  PB3HallHourBoss_FieldNumber_Name = 2,
  PB3HallHourBoss_FieldNumber_Icon = 3,
  PB3HallHourBoss_FieldNumber_Sex = 4,
};

@interface PB3HallHourBoss : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

@property(nonatomic, readwrite) enum PB3SexType sex;

@end

/**
 * Fetches the raw value of a @c PB3HallHourBoss's @c sex property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3HallHourBoss_Sex_RawValue(PB3HallHourBoss *message);
/**
 * Sets the raw value of an @c PB3HallHourBoss's @c sex property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3HallHourBoss_Sex_RawValue(PB3HallHourBoss *message, int32_t value);

#pragma mark - PB3BroadcastDeviceOpenMic

typedef GPB_ENUM(PB3BroadcastDeviceOpenMic_FieldNumber) {
  PB3BroadcastDeviceOpenMic_FieldNumber_DeviceId = 1,
  PB3BroadcastDeviceOpenMic_FieldNumber_DeviceType = 2,
};

/**
 * cmdId=100180, 多端登录，设备开麦通知自己
 **/
@interface PB3BroadcastDeviceOpenMic : GPBMessage

/** 开麦设备id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceId;

/** 设备类型 */
@property(nonatomic, readwrite) enum PB3DeviceType deviceType;

@end

/**
 * Fetches the raw value of a @c PB3BroadcastDeviceOpenMic's @c deviceType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BroadcastDeviceOpenMic_DeviceType_RawValue(PB3BroadcastDeviceOpenMic *message);
/**
 * Sets the raw value of an @c PB3BroadcastDeviceOpenMic's @c deviceType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BroadcastDeviceOpenMic_DeviceType_RawValue(PB3BroadcastDeviceOpenMic *message, int32_t value);

#pragma mark - PB3BroadcastSetShow

typedef GPB_ENUM(PB3BroadcastSetShow_FieldNumber) {
  PB3BroadcastSetShow_FieldNumber_OldId = 1,
  PB3BroadcastSetShow_FieldNumber_NewId = 2,
};

/**
 * cmdId=100195
 **/
@interface PB3BroadcastSetShow : GPBMessage

/** 旧的表演ID */
@property(nonatomic, readwrite) int64_t oldId;

/** 新的表演ID */
@property(nonatomic, readwrite) int64_t newId;

@end

#pragma mark - PB3ChangeRoomSetReq

typedef GPB_ENUM(PB3ChangeRoomSetReq_FieldNumber) {
  PB3ChangeRoomSetReq_FieldNumber_ChangeType = 1,
  PB3ChangeRoomSetReq_FieldNumber_Name = 2,
  PB3ChangeRoomSetReq_FieldNumber_Password = 3,
  PB3ChangeRoomSetReq_FieldNumber_Greeting = 4,
  PB3ChangeRoomSetReq_FieldNumber_NewPattern = 5,
  PB3ChangeRoomSetReq_FieldNumber_Voice = 6,
  PB3ChangeRoomSetReq_FieldNumber_ChairCharmStatus = 7,
  PB3ChangeRoomSetReq_FieldNumber_ClanChairLimitStatus = 8,
  PB3ChangeRoomSetReq_FieldNumber_PwdEnable = 9,
  PB3ChangeRoomSetReq_FieldNumber_AutoGameBf = 10,
  PB3ChangeRoomSetReq_FieldNumber_SingleLiveNotify = 11,
  PB3ChangeRoomSetReq_FieldNumber_GameInfo = 12,
  PB3ChangeRoomSetReq_FieldNumber_SingleLiveTpl = 13,
  PB3ChangeRoomSetReq_FieldNumber_IsCloudDiscoRoomShake = 14,
  PB3ChangeRoomSetReq_FieldNumber_IsCloudDiscoChairShake = 15,
  PB3ChangeRoomSetReq_FieldNumber_CubismEnable = 16,
};

@interface PB3ChangeRoomSetReq : GPBMessage

@property(nonatomic, readwrite) PB3ChangeRoomSetType changeType;

/** 房间名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 房间密码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *password;

/** 房间问候语 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *greeting;

@property(nonatomic, readwrite) enum PB3NewRoomPattern newPattern;

/** 音质 */
@property(nonatomic, readwrite) enum PB3RoomVoice voice;

/** 麦序魅力值状态，0为关闭，1为开启 */
@property(nonatomic, readwrite) int32_t chairCharmStatus;

/** 麦位限制状态 */
@property(nonatomic, readwrite) BOOL clanChairLimitStatus;

/** 房间密码开关 */
@property(nonatomic, readwrite) BOOL pwdEnable;

/** 游戏自动广播 */
@property(nonatomic, readwrite) BOOL autoGameBf;

/** 个播开播通知 */
@property(nonatomic, readwrite) BOOL singleLiveNotify;

/** 游戏信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3MobaTeamGameInfo *gameInfo;
/** Test to see if @c gameInfo has been set. */
@property(nonatomic, readwrite) BOOL hasGameInfo;

/** 个播2.0模版类型 */
@property(nonatomic, readwrite) enum PB3SingleLiveTplType singleLiveTpl;

/** 云蹦迪房间震动开关 */
@property(nonatomic, readwrite) BOOL isCloudDiscoRoomShake;

/** 云蹦迪房间麦位抖动开关 */
@property(nonatomic, readwrite) BOOL isCloudDiscoChairShake;

/** 虚拟形象开关 */
@property(nonatomic, readwrite) BOOL cubismEnable;

@end

/**
 * Fetches the raw value of a @c PB3ChangeRoomSetReq's @c changeType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ChangeRoomSetReq_ChangeType_RawValue(PB3ChangeRoomSetReq *message);
/**
 * Sets the raw value of an @c PB3ChangeRoomSetReq's @c changeType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ChangeRoomSetReq_ChangeType_RawValue(PB3ChangeRoomSetReq *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3ChangeRoomSetReq's @c newPattern property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ChangeRoomSetReq_NewPattern_RawValue(PB3ChangeRoomSetReq *message);
/**
 * Sets the raw value of an @c PB3ChangeRoomSetReq's @c newPattern property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ChangeRoomSetReq_NewPattern_RawValue(PB3ChangeRoomSetReq *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3ChangeRoomSetReq's @c voice property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ChangeRoomSetReq_Voice_RawValue(PB3ChangeRoomSetReq *message);
/**
 * Sets the raw value of an @c PB3ChangeRoomSetReq's @c voice property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ChangeRoomSetReq_Voice_RawValue(PB3ChangeRoomSetReq *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3ChangeRoomSetReq's @c singleLiveTpl property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ChangeRoomSetReq_SingleLiveTpl_RawValue(PB3ChangeRoomSetReq *message);
/**
 * Sets the raw value of an @c PB3ChangeRoomSetReq's @c singleLiveTpl property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ChangeRoomSetReq_SingleLiveTpl_RawValue(PB3ChangeRoomSetReq *message, int32_t value);

#pragma mark - PB3ChangeRoomSetRes

typedef GPB_ENUM(PB3ChangeRoomSetRes_FieldNumber) {
  PB3ChangeRoomSetRes_FieldNumber_ChangeType = 1,
  PB3ChangeRoomSetRes_FieldNumber_NameGreetStatus = 2,
  PB3ChangeRoomSetRes_FieldNumber_OldName = 3,
  PB3ChangeRoomSetRes_FieldNumber_NewName = 4,
  PB3ChangeRoomSetRes_FieldNumber_OldGreeting = 5,
  PB3ChangeRoomSetRes_FieldNumber_NewGreeting = 6,
  PB3ChangeRoomSetRes_FieldNumber_IsModify = 7,
};

@interface PB3ChangeRoomSetRes : GPBMessage

@property(nonatomic, readwrite) PB3ChangeRoomSetType changeType;

@property(nonatomic, readwrite) enum PB3AuditStatus nameGreetStatus;

@property(nonatomic, readwrite, copy, null_resettable) NSString *oldName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *newName NS_RETURNS_NOT_RETAINED;

@property(nonatomic, readwrite, copy, null_resettable) NSString *oldGreeting;

@property(nonatomic, readwrite, copy, null_resettable) NSString *newGreeting NS_RETURNS_NOT_RETAINED;

@property(nonatomic, readwrite) BOOL isModify;

@end

/**
 * Fetches the raw value of a @c PB3ChangeRoomSetRes's @c changeType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ChangeRoomSetRes_ChangeType_RawValue(PB3ChangeRoomSetRes *message);
/**
 * Sets the raw value of an @c PB3ChangeRoomSetRes's @c changeType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ChangeRoomSetRes_ChangeType_RawValue(PB3ChangeRoomSetRes *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3ChangeRoomSetRes's @c nameGreetStatus property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ChangeRoomSetRes_NameGreetStatus_RawValue(PB3ChangeRoomSetRes *message);
/**
 * Sets the raw value of an @c PB3ChangeRoomSetRes's @c nameGreetStatus property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ChangeRoomSetRes_NameGreetStatus_RawValue(PB3ChangeRoomSetRes *message, int32_t value);

#pragma mark - PB3PrivilegeInfo

typedef GPB_ENUM(PB3PrivilegeInfo_FieldNumber) {
  PB3PrivilegeInfo_FieldNumber_Name = 1,
  PB3PrivilegeInfo_FieldNumber_StyleURL = 2,
  PB3PrivilegeInfo_FieldNumber_PcURL = 3,
  PB3PrivilegeInfo_FieldNumber_PcDrawURL = 4,
  PB3PrivilegeInfo_FieldNumber_PcTailURL = 5,
  PB3PrivilegeInfo_FieldNumber_Content = 6,
  PB3PrivilegeInfo_FieldNumber_NameColor = 7,
  PB3PrivilegeInfo_FieldNumber_ContentColor = 8,
  PB3PrivilegeInfo_FieldNumber_IosURL = 9,
};

/**
 * 特权信息
 **/
@interface PB3PrivilegeInfo : GPBMessage

/** 特权名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 安卓通知样式 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *styleURL;

/** pc通知样式头图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcURL;

/** pc通知样式拉伸图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcDrawURL;

/** pc通知样式拉尾图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcTailURL;

/** 上线通知文案 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

/** 用户名称颜色 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nameColor;

/** 通知文案颜色 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *contentColor;

/** ios通知样式 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *iosURL;

@end

#pragma mark - PB3BroadcastOnlineNotice

typedef GPB_ENUM(PB3BroadcastOnlineNotice_FieldNumber) {
  PB3BroadcastOnlineNotice_FieldNumber_SimplePlayer = 1,
  PB3BroadcastOnlineNotice_FieldNumber_PrivilegeInfo = 2,
};

/**
 * cmdid=100197 广播上线全服通知
 **/
@interface PB3BroadcastOnlineNotice : GPBMessage

/** 用户信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3SimplePlayer *simplePlayer;
/** Test to see if @c simplePlayer has been set. */
@property(nonatomic, readwrite) BOOL hasSimplePlayer;

/** 特权信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3PrivilegeInfo *privilegeInfo;
/** Test to see if @c privilegeInfo has been set. */
@property(nonatomic, readwrite) BOOL hasPrivilegeInfo;

@end

#pragma mark - PB3StopVoteReq

@interface PB3StopVoteReq : GPBMessage

@end

#pragma mark - PB3StopVoteRes

@interface PB3StopVoteRes : GPBMessage

@end

#pragma mark - PB3RoomPlayerInfoReq

/**
 * 获取房间个人相关信息
 **/
@interface PB3RoomPlayerInfoReq : GPBMessage

@end

#pragma mark - PB3RoomPlayerInfoRes

typedef GPB_ENUM(PB3RoomPlayerInfoRes_FieldNumber) {
  PB3RoomPlayerInfoRes_FieldNumber_IsSignMember = 1,
  PB3RoomPlayerInfoRes_FieldNumber_IsSingleLiveHost = 2,
  PB3RoomPlayerInfoRes_FieldNumber_IsSignMemberMaster = 3,
};

@interface PB3RoomPlayerInfoRes : GPBMessage

/** 是否是房间所在公会的签约成员 */
@property(nonatomic, readwrite) BOOL isSignMember;

/** 是否是个播模式主播 */
@property(nonatomic, readwrite) BOOL isSingleLiveHost;

/** 是否是签约成员(公会ID不一定是用户所在房间id) */
@property(nonatomic, readwrite) BOOL isSignMemberMaster;

@end

#pragma mark - PB3EnterRoomSuccessReq

typedef GPB_ENUM(PB3EnterRoomSuccessReq_FieldNumber) {
  PB3EnterRoomSuccessReq_FieldNumber_RoomId = 1,
  PB3EnterRoomSuccessReq_FieldNumber_EnterRoomOpt = 2,
  PB3EnterRoomSuccessReq_FieldNumber_GameId = 3,
  PB3EnterRoomSuccessReq_FieldNumber_Content = 4,
  PB3EnterRoomSuccessReq_FieldNumber_EnterRoomWay = 5,
};

@interface PB3EnterRoomSuccessReq : GPBMessage

@property(nonatomic, readwrite) int64_t roomId;

/** 进房间后的操作 */
@property(nonatomic, readwrite) PB3EnterRoomOpt enterRoomOpt;

/** game_id回传 */
@property(nonatomic, readwrite) int32_t gameId;

/** 车队ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

/** 如何进入房间 */
@property(nonatomic, readwrite) PB3EnterRoomWay enterRoomWay;

@end

/**
 * Fetches the raw value of a @c PB3EnterRoomSuccessReq's @c enterRoomOpt property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3EnterRoomSuccessReq_EnterRoomOpt_RawValue(PB3EnterRoomSuccessReq *message);
/**
 * Sets the raw value of an @c PB3EnterRoomSuccessReq's @c enterRoomOpt property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3EnterRoomSuccessReq_EnterRoomOpt_RawValue(PB3EnterRoomSuccessReq *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3EnterRoomSuccessReq's @c enterRoomWay property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3EnterRoomSuccessReq_EnterRoomWay_RawValue(PB3EnterRoomSuccessReq *message);
/**
 * Sets the raw value of an @c PB3EnterRoomSuccessReq's @c enterRoomWay property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3EnterRoomSuccessReq_EnterRoomWay_RawValue(PB3EnterRoomSuccessReq *message, int32_t value);

#pragma mark - PB3EnterRoomSuccessRes

@interface PB3EnterRoomSuccessRes : GPBMessage

@end

#pragma mark - PB3BarrageGameEntryPush

typedef GPB_ENUM(PB3BarrageGameEntryPush_FieldNumber) {
  PB3BarrageGameEntryPush_FieldNumber_ItemsArray = 1,
};

/**
 * cmdId=100241 进房成功 推送弹幕游戏配置
 **/
@interface PB3BarrageGameEntryPush : GPBMessage

/** 入口配置 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3BarrageGameEntryItem*> *itemsArray;
/** The number of items in @c itemsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger itemsArray_Count;

@end

#pragma mark - PB3BarrageGameEntryItem

typedef GPB_ENUM(PB3BarrageGameEntryItem_FieldNumber) {
  PB3BarrageGameEntryItem_FieldNumber_GameId = 1,
  PB3BarrageGameEntryItem_FieldNumber_GameName = 2,
  PB3BarrageGameEntryItem_FieldNumber_GameEntIcon = 3,
  PB3BarrageGameEntryItem_FieldNumber_GameAddr = 4,
  PB3BarrageGameEntryItem_FieldNumber_SingleGameMinute = 5,
  PB3BarrageGameEntryItem_FieldNumber_ClassifyName = 6,
  PB3BarrageGameEntryItem_FieldNumber_Weight = 7,
  PB3BarrageGameEntryItem_FieldNumber_StartHour = 8,
  PB3BarrageGameEntryItem_FieldNumber_EndHour = 9,
  PB3BarrageGameEntryItem_FieldNumber_ClanCatesArray = 10,
  PB3BarrageGameEntryItem_FieldNumber_RoomPatternListArray = 11,
  PB3BarrageGameEntryItem_FieldNumber_GiftIdsArray = 12,
  PB3BarrageGameEntryItem_FieldNumber_RoomTagsArray = 13,
  PB3BarrageGameEntryItem_FieldNumber_StatusBarColor = 14,
};

@interface PB3BarrageGameEntryItem : GPBMessage

/** 游戏id */
@property(nonatomic, readwrite) int64_t gameId;

/** 游戏名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *gameName;

/** 游戏入口图标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *gameEntIcon;

/** 游戏地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *gameAddr;

/** 单局游戏时长 (分钟) */
@property(nonatomic, readwrite) int64_t singleGameMinute;

/** 游戏分栏名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *classifyName;

/** 游戏权重 */
@property(nonatomic, readwrite) int64_t weight;

/** 开放时间 (钟点) */
@property(nonatomic, readwrite) int32_t startHour;

/** 结束时间 (钟点) */
@property(nonatomic, readwrite) int32_t endHour;

/** 有效的公会分类id */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *clanCatesArray;
/** The number of items in @c clanCatesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger clanCatesArray_Count;

/** 有效的房间模式 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *roomPatternListArray;
/** The number of items in @c roomPatternListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger roomPatternListArray_Count;

/** 关联的礼物id */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *giftIdsArray;
/** The number of items in @c giftIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger giftIdsArray_Count;

/** 房间标识 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3BarrageGameEntryItem_RoomTag*> *roomTagsArray;
/** The number of items in @c roomTagsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger roomTagsArray_Count;

/** 状态栏颜色 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *statusBarColor;

@end

#pragma mark - PB3BarrageGameEntryItem_RoomTag

typedef GPB_ENUM(PB3BarrageGameEntryItem_RoomTag_FieldNumber) {
  PB3BarrageGameEntryItem_RoomTag_FieldNumber_TagIcon = 1,
  PB3BarrageGameEntryItem_RoomTag_FieldNumber_TagType = 2,
};

@interface PB3BarrageGameEntryItem_RoomTag : GPBMessage

/** 标识图标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tagIcon;

/** 标识类型 0-无 1-方形 */
@property(nonatomic, readwrite) int32_t tagType;

@end

#pragma mark - PB3PkEntryItem

typedef GPB_ENUM(PB3PkEntryItem_FieldNumber) {
  PB3PkEntryItem_FieldNumber_PkMode = 1,
  PB3PkEntryItem_FieldNumber_StartSecond = 2,
  PB3PkEntryItem_FieldNumber_EndSecond = 3,
  PB3PkEntryItem_FieldNumber_RewardRate = 4,
  PB3PkEntryItem_FieldNumber_NewStartSecond = 5,
  PB3PkEntryItem_FieldNumber_NewEndSecond = 6,
};

@interface PB3PkEntryItem : GPBMessage

/** 开放模式 */
@property(nonatomic, readwrite) enum PB3PkMode pkMode;

/** 开始时间 秒数 */
@property(nonatomic, readwrite) int64_t startSecond;

/** 结束时间 秒数 */
@property(nonatomic, readwrite) int64_t endSecond;

/** 赏金比例 */
@property(nonatomic, readwrite) int32_t rewardRate;

/**  新的开始时间 秒数 (包含跨天的时间范围) */
@property(nonatomic, readwrite) int64_t newStartSecond;

/**  新的结束时间 秒数 (包含跨天的时间范围) */
@property(nonatomic, readwrite) int64_t newEndSecond;

@end

/**
 * Fetches the raw value of a @c PB3PkEntryItem's @c pkMode property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3PkEntryItem_PkMode_RawValue(PB3PkEntryItem *message);
/**
 * Sets the raw value of an @c PB3PkEntryItem's @c pkMode property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3PkEntryItem_PkMode_RawValue(PB3PkEntryItem *message, int32_t value);

#pragma mark - PB3PkEntryPush

typedef GPB_ENUM(PB3PkEntryPush_FieldNumber) {
  PB3PkEntryPush_FieldNumber_PkEntryItemsArray = 1,
};

/**
 * cmdId=100219 进房成功 推送pk入口
 **/
@interface PB3PkEntryPush : GPBMessage

/** pk模式项 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3PkEntryItem*> *pkEntryItemsArray;
/** The number of items in @c pkEntryItemsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger pkEntryItemsArray_Count;

@end

#pragma mark - PB3SingleLivePkEntryItem

typedef GPB_ENUM(PB3SingleLivePkEntryItem_FieldNumber) {
  PB3SingleLivePkEntryItem_FieldNumber_PkMode = 1,
  PB3SingleLivePkEntryItem_FieldNumber_StartSecond = 2,
  PB3SingleLivePkEntryItem_FieldNumber_EndSecond = 3,
};

@interface PB3SingleLivePkEntryItem : GPBMessage

/** 开放模式 */
@property(nonatomic, readwrite) enum PB3SingleLivePkMode pkMode;

/** 开始时间 秒数 */
@property(nonatomic, readwrite) int64_t startSecond;

/** 结束时间 秒数 */
@property(nonatomic, readwrite) int64_t endSecond;

@end

/**
 * Fetches the raw value of a @c PB3SingleLivePkEntryItem's @c pkMode property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SingleLivePkEntryItem_PkMode_RawValue(PB3SingleLivePkEntryItem *message);
/**
 * Sets the raw value of an @c PB3SingleLivePkEntryItem's @c pkMode property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SingleLivePkEntryItem_PkMode_RawValue(PB3SingleLivePkEntryItem *message, int32_t value);

#pragma mark - PB3SingleLivePkEntryPush

typedef GPB_ENUM(PB3SingleLivePkEntryPush_FieldNumber) {
  PB3SingleLivePkEntryPush_FieldNumber_PkEntryItemsArray = 1,
  PB3SingleLivePkEntryPush_FieldNumber_RouterURL = 2,
};

/**
 * cmdId=100221 进房成功 推送pk入口
 **/
@interface PB3SingleLivePkEntryPush : GPBMessage

/** pk模式项 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SingleLivePkEntryItem*> *pkEntryItemsArray;
/** The number of items in @c pkEntryItemsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger pkEntryItemsArray_Count;

/** 规则的路由 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *routerURL;

@end

#pragma mark - PB3BroadcastEffectMood

typedef GPB_ENUM(PB3BroadcastEffectMood_FieldNumber) {
  PB3BroadcastEffectMood_FieldNumber_Player = 1,
  PB3BroadcastEffectMood_FieldNumber_EffectId = 2,
  PB3BroadcastEffectMood_FieldNumber_IsShow = 3,
  PB3BroadcastEffectMood_FieldNumber_TimeStamp = 4,
};

/**
 * cmdId=100199 广播用户心情
 **/
@interface PB3BroadcastEffectMood : GPBMessage

/** 用户信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3ScenePlayer *player;
/** Test to see if @c player has been set. */
@property(nonatomic, readwrite) BOOL hasPlayer;

/** 心情特效ID */
@property(nonatomic, readwrite) int32_t effectId;

/** 是否显示，true:显示; false:不显示 */
@property(nonatomic, readwrite) BOOL isShow;

/** 时间戳，用于处理网络延迟导致推送到达顺序错乱的问题 */
@property(nonatomic, readwrite) int64_t timeStamp;

@end

#pragma mark - PB3CleanPublicScreen

/**
 * cmdId=100200 广播清空公屏
 **/
@interface PB3CleanPublicScreen : GPBMessage

@end

#pragma mark - PB3BroadcastRoomPattern

typedef GPB_ENUM(PB3BroadcastRoomPattern_FieldNumber) {
  PB3BroadcastRoomPattern_FieldNumber_NewPattern = 1,
  PB3BroadcastRoomPattern_FieldNumber_Voice = 2,
};

/**
 * cmdId=100201 推送房间模式
 **/
@interface PB3BroadcastRoomPattern : GPBMessage

/** 房间模式 */
@property(nonatomic, readwrite) enum PB3NewRoomPattern newPattern;

/** 房间音质 */
@property(nonatomic, readwrite) enum PB3RoomVoice voice;

@end

/**
 * Fetches the raw value of a @c PB3BroadcastRoomPattern's @c newPattern property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BroadcastRoomPattern_NewPattern_RawValue(PB3BroadcastRoomPattern *message);
/**
 * Sets the raw value of an @c PB3BroadcastRoomPattern's @c newPattern property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BroadcastRoomPattern_NewPattern_RawValue(PB3BroadcastRoomPattern *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3BroadcastRoomPattern's @c voice property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BroadcastRoomPattern_Voice_RawValue(PB3BroadcastRoomPattern *message);
/**
 * Sets the raw value of an @c PB3BroadcastRoomPattern's @c voice property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BroadcastRoomPattern_Voice_RawValue(PB3BroadcastRoomPattern *message, int32_t value);

#pragma mark - PB3ChorusNotice

typedef GPB_ENUM(PB3ChorusNotice_FieldNumber) {
  PB3ChorusNotice_FieldNumber_Opt = 1,
  PB3ChorusNotice_FieldNumber_ChorusId = 2,
  PB3ChorusNotice_FieldNumber_Invitor = 3,
  PB3ChorusNotice_FieldNumber_Acceptor = 4,
  PB3ChorusNotice_FieldNumber_DeviceType = 5,
};

/**
 * cmdId=100203 合唱推送
 **/
@interface PB3ChorusNotice : GPBMessage

@property(nonatomic, readwrite) PB3ChorusOptType opt;

/** 合唱ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *chorusId;

/** 邀请者 */
@property(nonatomic, readwrite, strong, null_resettable) PB3Chorus *invitor;
/** Test to see if @c invitor has been set. */
@property(nonatomic, readwrite) BOOL hasInvitor;

/** 接受者 */
@property(nonatomic, readwrite, strong, null_resettable) PB3Chorus *acceptor;
/** Test to see if @c acceptor has been set. */
@property(nonatomic, readwrite) BOOL hasAcceptor;

/** 操作者设备类型 */
@property(nonatomic, readwrite) enum PB3DeviceType deviceType;

@end

/**
 * Fetches the raw value of a @c PB3ChorusNotice's @c opt property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ChorusNotice_Opt_RawValue(PB3ChorusNotice *message);
/**
 * Sets the raw value of an @c PB3ChorusNotice's @c opt property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ChorusNotice_Opt_RawValue(PB3ChorusNotice *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3ChorusNotice's @c deviceType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ChorusNotice_DeviceType_RawValue(PB3ChorusNotice *message);
/**
 * Sets the raw value of an @c PB3ChorusNotice's @c deviceType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ChorusNotice_DeviceType_RawValue(PB3ChorusNotice *message, int32_t value);

#pragma mark - PB3Chorus

typedef GPB_ENUM(PB3Chorus_FieldNumber) {
  PB3Chorus_FieldNumber_ChairId = 1,
  PB3Chorus_FieldNumber_PlayerId = 2,
  PB3Chorus_FieldNumber_Id2 = 3,
  PB3Chorus_FieldNumber_Name = 4,
  PB3Chorus_FieldNumber_OpenId = 5,
};

@interface PB3Chorus : GPBMessage

/** 麦位ID */
@property(nonatomic, readwrite) int32_t chairId;

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 靓号 */
@property(nonatomic, readwrite) int64_t id2;

/** 昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** sdk open_id */
@property(nonatomic, readwrite) int64_t openId;

@end

#pragma mark - PB3ChorusOptReq

typedef GPB_ENUM(PB3ChorusOptReq_FieldNumber) {
  PB3ChorusOptReq_FieldNumber_Opt = 1,
  PB3ChorusOptReq_FieldNumber_ChorusId = 2,
  PB3ChorusOptReq_FieldNumber_InvitedId = 3,
};

@interface PB3ChorusOptReq : GPBMessage

/** 操作类型 */
@property(nonatomic, readwrite) PB3ChorusOptType opt;

/** 合唱ID，拒绝，接受，结束需要传入 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *chorusId;

/** 被邀请人ID，邀请时需要传入 */
@property(nonatomic, readwrite) int64_t invitedId;

@end

/**
 * Fetches the raw value of a @c PB3ChorusOptReq's @c opt property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ChorusOptReq_Opt_RawValue(PB3ChorusOptReq *message);
/**
 * Sets the raw value of an @c PB3ChorusOptReq's @c opt property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ChorusOptReq_Opt_RawValue(PB3ChorusOptReq *message, int32_t value);

#pragma mark - PB3ChorusOptRes

@interface PB3ChorusOptRes : GPBMessage

@end

#pragma mark - PB3NeteaseIMTokenReq

@interface PB3NeteaseIMTokenReq : GPBMessage

@end

#pragma mark - PB3NeteaseIMTokenRes

typedef GPB_ENUM(PB3NeteaseIMTokenRes_FieldNumber) {
  PB3NeteaseIMTokenRes_FieldNumber_NeteaseImToken = 1,
  PB3NeteaseIMTokenRes_FieldNumber_Id_p = 2,
};

@interface PB3NeteaseIMTokenRes : GPBMessage

/** 网易IMtoken */
@property(nonatomic, readwrite, copy, null_resettable) NSString *neteaseImToken;

/** imToken 的ID */
@property(nonatomic, readwrite) int64_t id_p;

@end

#pragma mark - PB3RoomBanSpeakNotice

typedef GPB_ENUM(PB3RoomBanSpeakNotice_FieldNumber) {
  PB3RoomBanSpeakNotice_FieldNumber_Opt = 1,
};

/**
 * cmdid=100202
 **/
@interface PB3RoomBanSpeakNotice : GPBMessage

@property(nonatomic, readwrite) PB3RoomBanSpeakType opt;

@end

/**
 * Fetches the raw value of a @c PB3RoomBanSpeakNotice's @c opt property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3RoomBanSpeakNotice_Opt_RawValue(PB3RoomBanSpeakNotice *message);
/**
 * Sets the raw value of an @c PB3RoomBanSpeakNotice's @c opt property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3RoomBanSpeakNotice_Opt_RawValue(PB3RoomBanSpeakNotice *message, int32_t value);

#pragma mark - PB3RoomBanSpeakReq

typedef GPB_ENUM(PB3RoomBanSpeakReq_FieldNumber) {
  PB3RoomBanSpeakReq_FieldNumber_Opt = 1,
};

@interface PB3RoomBanSpeakReq : GPBMessage

@property(nonatomic, readwrite) PB3RoomBanSpeakType opt;

@end

/**
 * Fetches the raw value of a @c PB3RoomBanSpeakReq's @c opt property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3RoomBanSpeakReq_Opt_RawValue(PB3RoomBanSpeakReq *message);
/**
 * Sets the raw value of an @c PB3RoomBanSpeakReq's @c opt property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3RoomBanSpeakReq_Opt_RawValue(PB3RoomBanSpeakReq *message, int32_t value);

#pragma mark - PB3RoomBanSpeakRes

@interface PB3RoomBanSpeakRes : GPBMessage

@end

#pragma mark - PB3BroadcastCountDownStart

/**
 * cmdId=100203 广播房间开始新年倒计时
 **/
@interface PB3BroadcastCountDownStart : GPBMessage

@end

#pragma mark - PB3InteractionConf

typedef GPB_ENUM(PB3InteractionConf_FieldNumber) {
  PB3InteractionConf_FieldNumber_Id_p = 1,
  PB3InteractionConf_FieldNumber_IaType = 2,
  PB3InteractionConf_FieldNumber_Name = 3,
  PB3InteractionConf_FieldNumber_Describe = 4,
  PB3InteractionConf_FieldNumber_SingleId = 5,
  PB3InteractionConf_FieldNumber_DoubleId = 6,
  PB3InteractionConf_FieldNumber_AllChairId = 7,
  PB3InteractionConf_FieldNumber_DoubleTarget = 8,
  PB3InteractionConf_FieldNumber_Status = 9,
  PB3InteractionConf_FieldNumber_Icon = 10,
  PB3InteractionConf_FieldNumber_IsAllChair = 11,
  PB3InteractionConf_FieldNumber_InterNum = 12,
  PB3InteractionConf_FieldNumber_MaxNum = 13,
};

@interface PB3InteractionConf : GPBMessage

/** 互动id */
@property(nonatomic, readwrite) int64_t id_p;

/** 互动类型 */
@property(nonatomic, readwrite) enum PB3InteractionType iaType;

/** 互动名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 互动描述 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *describe;

/** 单价 礼物id */
@property(nonatomic, readwrite) int32_t singleId;

/** 双费ID */
@property(nonatomic, readwrite) int32_t doubleId;

/** 全麦双费id */
@property(nonatomic, readwrite) int32_t allChairId;

/** 双费目标：1.房主加主持 2.房主 3.主持 */
@property(nonatomic, readwrite) int32_t doubleTarget;

/** 是否启用 */
@property(nonatomic, readwrite) BOOL status;

/** 图标url */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 是否需要全麦 */
@property(nonatomic, readwrite) BOOL isAllChair;

/** 互动需要的人数 -1：全麦；0：任意；n：必须n人 */
@property(nonatomic, readwrite) int32_t interNum;

/** 每次最大互动次数 -1：无限制 */
@property(nonatomic, readwrite) int32_t maxNum;

@end

/**
 * Fetches the raw value of a @c PB3InteractionConf's @c iaType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3InteractionConf_IaType_RawValue(PB3InteractionConf *message);
/**
 * Sets the raw value of an @c PB3InteractionConf's @c iaType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3InteractionConf_IaType_RawValue(PB3InteractionConf *message, int32_t value);

#pragma mark - PB3InteractionConfReq

typedef GPB_ENUM(PB3InteractionConfReq_FieldNumber) {
  PB3InteractionConfReq_FieldNumber_RoomId = 1,
};

/**
 * 获取房间互动面板配置
 **/
@interface PB3InteractionConfReq : GPBMessage

@property(nonatomic, readwrite) int64_t roomId;

@end

#pragma mark - PB3InteractionConfRes

typedef GPB_ENUM(PB3InteractionConfRes_FieldNumber) {
  PB3InteractionConfRes_FieldNumber_ConfListArray = 1,
  PB3InteractionConfRes_FieldNumber_GiftConfListArray = 2,
};

@interface PB3InteractionConfRes : GPBMessage

/** 旧版互动配置 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3InteractionConf*> *confListArray;
/** The number of items in @c confListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger confListArray_Count;

/** 新版关联点歌礼物的互动配置 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3InteractionConf*> *giftConfListArray;
/** The number of items in @c giftConfListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger giftConfListArray_Count;

@end

#pragma mark - PB3SetInteractionConfReq

typedef GPB_ENUM(PB3SetInteractionConfReq_FieldNumber) {
  PB3SetInteractionConfReq_FieldNumber_RoomId = 1,
  PB3SetInteractionConfReq_FieldNumber_Conf = 2,
};

/**
 * 设置房间互动面板配置 pc用
 **/
@interface PB3SetInteractionConfReq : GPBMessage

@property(nonatomic, readwrite) int64_t roomId;

/** icon 字段不填，不支持用户自定义 */
@property(nonatomic, readwrite, strong, null_resettable) PB3InteractionConf *conf;
/** Test to see if @c conf has been set. */
@property(nonatomic, readwrite) BOOL hasConf;

@end

#pragma mark - PB3SetInteractionConfRes

@interface PB3SetInteractionConfRes : GPBMessage

@end

#pragma mark - PB3InteractionConfGiftListReq

typedef GPB_ENUM(PB3InteractionConfGiftListReq_FieldNumber) {
  PB3InteractionConfGiftListReq_FieldNumber_IaId = 1,
};

/**
 * 设置房间互动面板配置 单价礼物、双费礼物、全麦双费礼物选择列表 pc用
 **/
@interface PB3InteractionConfGiftListReq : GPBMessage

/** 互动id */
@property(nonatomic, readwrite) int64_t iaId;

@end

#pragma mark - PB3InteractionConfGiftListRes

typedef GPB_ENUM(PB3InteractionConfGiftListRes_FieldNumber) {
  PB3InteractionConfGiftListRes_FieldNumber_SingleIdsArray = 1,
  PB3InteractionConfGiftListRes_FieldNumber_DoubleIdsArray = 2,
  PB3InteractionConfGiftListRes_FieldNumber_AllChairIdsArray = 3,
};

@interface PB3InteractionConfGiftListRes : GPBMessage

/** 单价 礼物id列表 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *singleIdsArray;
/** The number of items in @c singleIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger singleIdsArray_Count;

/** 双费 礼物id列表 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *doubleIdsArray;
/** The number of items in @c doubleIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger doubleIdsArray_Count;

/** 全麦双费 礼物id列表 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *allChairIdsArray;
/** The number of items in @c allChairIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger allChairIdsArray_Count;

@end

#pragma mark - PB3PublicScreenFastSpeakReq

typedef GPB_ENUM(PB3PublicScreenFastSpeakReq_FieldNumber) {
  PB3PublicScreenFastSpeakReq_FieldNumber_RoomId = 1,
  PB3PublicScreenFastSpeakReq_FieldNumber_Pattern = 2,
};

/**
 * 公屏快速发言
 **/
@interface PB3PublicScreenFastSpeakReq : GPBMessage

/** 房间ID */
@property(nonatomic, readwrite) int64_t roomId;

/** 房间模式 */
@property(nonatomic, readwrite) enum PB3NewRoomPattern pattern;

@end

/**
 * Fetches the raw value of a @c PB3PublicScreenFastSpeakReq's @c pattern property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3PublicScreenFastSpeakReq_Pattern_RawValue(PB3PublicScreenFastSpeakReq *message);
/**
 * Sets the raw value of an @c PB3PublicScreenFastSpeakReq's @c pattern property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3PublicScreenFastSpeakReq_Pattern_RawValue(PB3PublicScreenFastSpeakReq *message, int32_t value);

#pragma mark - PB3PublicScreenFastSpeakRes

typedef GPB_ENUM(PB3PublicScreenFastSpeakRes_FieldNumber) {
  PB3PublicScreenFastSpeakRes_FieldNumber_ExpireTime = 1,
  PB3PublicScreenFastSpeakRes_FieldNumber_ListArray = 2,
};

@interface PB3PublicScreenFastSpeakRes : GPBMessage

/** 关闭时间（秒） */
@property(nonatomic, readwrite) int64_t expireTime;

/** 快捷语列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3FastSpeak*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3FastSpeak

typedef GPB_ENUM(PB3FastSpeak_FieldNumber) {
  PB3FastSpeak_FieldNumber_FastSpeakId = 1,
  PB3FastSpeak_FieldNumber_FastSpeakContent = 2,
};

@interface PB3FastSpeak : GPBMessage

/** 快捷语ID */
@property(nonatomic, readwrite) int64_t fastSpeakId;

/** 快捷语内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *fastSpeakContent;

@end

#pragma mark - PB3BroadcastLeaveRoomRecommend

typedef GPB_ENUM(PB3BroadcastLeaveRoomRecommend_FieldNumber) {
  PB3BroadcastLeaveRoomRecommend_FieldNumber_IsRecommend = 1,
};

/**
 * (用户进房成功后推送)退房推荐cmdId = 100209
 **/
@interface PB3BroadcastLeaveRoomRecommend : GPBMessage

/** true:推荐; false:不推荐 */
@property(nonatomic, readwrite) BOOL isRecommend;

@end

#pragma mark - PB3FansRecallConfReq

/**
 * 粉丝召唤配置
 **/
@interface PB3FansRecallConfReq : GPBMessage

@end

#pragma mark - PB3FansRecallConfRes

typedef GPB_ENUM(PB3FansRecallConfRes_FieldNumber) {
  PB3FansRecallConfRes_FieldNumber_IsShow = 1,
  PB3FansRecallConfRes_FieldNumber_Remark = 2,
};

@interface PB3FansRecallConfRes : GPBMessage

/** true 显示粉丝召唤入口; false 不显示 */
@property(nonatomic, readwrite) BOOL isShow;

/** 底部文字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *remark;

@end

#pragma mark - PB3FansRecallPopupReq

/**
 * 粉丝召唤弹窗
 **/
@interface PB3FansRecallPopupReq : GPBMessage

@end

#pragma mark - PB3FansRecallPopupRes

typedef GPB_ENUM(PB3FansRecallPopupRes_FieldNumber) {
  PB3FansRecallPopupRes_FieldNumber_RuleListArray = 1,
  PB3FansRecallPopupRes_FieldNumber_RecallHistoryId = 2,
  PB3FansRecallPopupRes_FieldNumber_RecallHistoryContent = 3,
  PB3FansRecallPopupRes_FieldNumber_RecallPerson = 4,
  PB3FansRecallPopupRes_FieldNumber_RecallTime = 5,
  PB3FansRecallPopupRes_FieldNumber_BeginRecallTime = 6,
  PB3FansRecallPopupRes_FieldNumber_EndRecallTime = 7,
};

@interface PB3FansRecallPopupRes : GPBMessage

/** 粉丝召唤说明 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *ruleListArray;
/** The number of items in @c ruleListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger ruleListArray_Count;

/** 召唤历史ID */
@property(nonatomic, readwrite) int64_t recallHistoryId;

/** 召唤历史内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *recallHistoryContent;

/** 召唤人数 */
@property(nonatomic, readwrite) int32_t recallPerson;

/** 召唤倒计时;0:可召唤;(秒) */
@property(nonatomic, readwrite) int64_t recallTime;

/** 客户端发起召唤倒计时(秒) */
@property(nonatomic, readwrite) int64_t beginRecallTime;

/** 客户端结束召唤倒计时(秒) */
@property(nonatomic, readwrite) int64_t endRecallTime;

@end

#pragma mark - PB3FansRecallSendReq

typedef GPB_ENUM(PB3FansRecallSendReq_FieldNumber) {
  PB3FansRecallSendReq_FieldNumber_Id_p = 1,
  PB3FansRecallSendReq_FieldNumber_Content = 2,
  PB3FansRecallSendReq_FieldNumber_RoomId = 3,
};

/**
 * 发起粉丝召唤
 **/
@interface PB3FansRecallSendReq : GPBMessage

/** 召唤语ID */
@property(nonatomic, readwrite) int64_t id_p;

/** 召唤语内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

/** 房间ID */
@property(nonatomic, readwrite) int64_t roomId;

@end

#pragma mark - PB3FansRecallSendRes

typedef GPB_ENUM(PB3FansRecallSendRes_FieldNumber) {
  PB3FansRecallSendRes_FieldNumber_Id_p = 1,
  PB3FansRecallSendRes_FieldNumber_Content = 2,
  PB3FansRecallSendRes_FieldNumber_Status = 3,
};

@interface PB3FansRecallSendRes : GPBMessage

/** 召唤语ID */
@property(nonatomic, readwrite) int64_t id_p;

/** 召唤语内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

/** 召唤语审核状态 */
@property(nonatomic, readwrite) PB3RecallContentStatus status;

@end

/**
 * Fetches the raw value of a @c PB3FansRecallSendRes's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3FansRecallSendRes_Status_RawValue(PB3FansRecallSendRes *message);
/**
 * Sets the raw value of an @c PB3FansRecallSendRes's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3FansRecallSendRes_Status_RawValue(PB3FansRecallSendRes *message, int32_t value);

#pragma mark - PB3GetFansRecallListReq

typedef GPB_ENUM(PB3GetFansRecallListReq_FieldNumber) {
  PB3GetFansRecallListReq_FieldNumber_Id_p = 1,
};

/**
 * 获取已召唤用户列表
 **/
@interface PB3GetFansRecallListReq : GPBMessage

/** 召唤语ID */
@property(nonatomic, readwrite) int64_t id_p;

@end

#pragma mark - PB3GetFansRecallListRes

typedef GPB_ENUM(PB3GetFansRecallListRes_FieldNumber) {
  PB3GetFansRecallListRes_FieldNumber_ListArray = 1,
  PB3GetFansRecallListRes_FieldNumber_Count = 2,
};

@interface PB3GetFansRecallListRes : GPBMessage

/** 已召唤用户列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3FansRecallList*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

/** 已召唤总数 */
@property(nonatomic, readwrite) int32_t count;

@end

#pragma mark - PB3FansRecallList

typedef GPB_ENUM(PB3FansRecallList_FieldNumber) {
  PB3FansRecallList_FieldNumber_Id_p = 1,
  PB3FansRecallList_FieldNumber_NickName = 2,
  PB3FansRecallList_FieldNumber_Icon = 3,
  PB3FansRecallList_FieldNumber_Id2 = 4,
};

@interface PB3FansRecallList : GPBMessage

/** 用户ID */
@property(nonatomic, readwrite) int64_t id_p;

/** 用户昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;

/** 用户头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 靓号 */
@property(nonatomic, readwrite) int64_t id2;

@end

#pragma mark - PB3BroadcastFansRecall

typedef GPB_ENUM(PB3BroadcastFansRecall_FieldNumber) {
  PB3BroadcastFansRecall_FieldNumber_Icon = 1,
  PB3BroadcastFansRecall_FieldNumber_NickName = 2,
  PB3BroadcastFansRecall_FieldNumber_Title = 3,
  PB3BroadcastFansRecall_FieldNumber_Content = 4,
  PB3BroadcastFansRecall_FieldNumber_URL = 5,
  PB3BroadcastFansRecall_FieldNumber_ExpireTime = 6,
  PB3BroadcastFansRecall_FieldNumber_RoomId = 7,
};

/**
 * cmdId = 100206
 **/
@interface PB3BroadcastFansRecall : GPBMessage

/** 用户头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 用户昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;

/** 召唤标题 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** 召唤内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

/** 跳转路由 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

/** 弹窗关闭时间(秒) */
@property(nonatomic, readwrite) int64_t expireTime;

/** 房间ID */
@property(nonatomic, readwrite) int64_t roomId;

@end

#pragma mark - PB3BroadcastFansRecallSend

typedef GPB_ENUM(PB3BroadcastFansRecallSend_FieldNumber) {
  PB3BroadcastFansRecallSend_FieldNumber_Id_p = 1,
  PB3BroadcastFansRecallSend_FieldNumber_NickName = 2,
  PB3BroadcastFansRecallSend_FieldNumber_Content = 3,
};

/**
 * cmdId = 100207 (发起召唤提示)
 **/
@interface PB3BroadcastFansRecallSend : GPBMessage

/** 发起召唤人ID */
@property(nonatomic, readwrite) int64_t id_p;

/** 发起人昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;

/** 内容：%nick_name% 发起了粉丝召唤 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

@end

#pragma mark - PB3BroadcastFansRecallEnterRoom

typedef GPB_ENUM(PB3BroadcastFansRecallEnterRoom_FieldNumber) {
  PB3BroadcastFansRecallEnterRoom_FieldNumber_Id_p = 1,
  PB3BroadcastFansRecallEnterRoom_FieldNumber_NickName = 2,
  PB3BroadcastFansRecallEnterRoom_FieldNumber_FansId = 3,
  PB3BroadcastFansRecallEnterRoom_FieldNumber_FansNickName = 4,
  PB3BroadcastFansRecallEnterRoom_FieldNumber_Content = 5,
  PB3BroadcastFansRecallEnterRoom_FieldNumber_FansIcon = 6,
  PB3BroadcastFansRecallEnterRoom_FieldNumber_FansId2 = 7,
  PB3BroadcastFansRecallEnterRoom_FieldNumber_FansRecallId = 8,
};

/**
 * cmdId = 100208 (发起召唤进房提示)
 **/
@interface PB3BroadcastFansRecallEnterRoom : GPBMessage

/** 发起召唤人ID */
@property(nonatomic, readwrite) int64_t id_p;

/** 发起人昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;

/** 粉丝ID */
@property(nonatomic, readwrite) int64_t fansId;

/** 粉丝昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *fansNickName;

/** 内容 : %fans_nick_name% 被 %nick_name% 召唤进入本房间 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

/** 粉丝头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *fansIcon;

/** 粉丝靓号 */
@property(nonatomic, readwrite) int64_t fansId2;

/** 召唤语ID */
@property(nonatomic, readwrite) int64_t fansRecallId;

@end

#pragma mark - PB3FansRecallCancelReq

typedef GPB_ENUM(PB3FansRecallCancelReq_FieldNumber) {
  PB3FansRecallCancelReq_FieldNumber_Id_p = 1,
};

@interface PB3FansRecallCancelReq : GPBMessage

/** 召唤语ID */
@property(nonatomic, readwrite) int64_t id_p;

@end

#pragma mark - PB3FansRecallCancelRes

@interface PB3FansRecallCancelRes : GPBMessage

@end

#pragma mark - PB3BroadcastFansRecallCancel

typedef GPB_ENUM(PB3BroadcastFansRecallCancel_FieldNumber) {
  PB3BroadcastFansRecallCancel_FieldNumber_RoomId = 1,
  PB3BroadcastFansRecallCancel_FieldNumber_Content = 2,
};

/**
 * cmdId = 100210(加密房间)
 **/
@interface PB3BroadcastFansRecallCancel : GPBMessage

/** 房间ID */
@property(nonatomic, readwrite) int64_t roomId;

/** 当前房间已上锁,粉丝召唤取消 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

@end

#pragma mark - PB3BroadcastAgoda

typedef GPB_ENUM(PB3BroadcastAgoda_FieldNumber) {
  PB3BroadcastAgoda_FieldNumber_AgodaKeyListArray = 1,
};

/**
 * cmdId = 100211
 **/
@interface PB3BroadcastAgoda : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3AgodaKey*> *agodaKeyListArray;
/** The number of items in @c agodaKeyListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger agodaKeyListArray_Count;

@end

#pragma mark - PB3ReportVoiceStatusReq

@interface PB3ReportVoiceStatusReq : GPBMessage

@end

#pragma mark - PB3ReportVoiceStatusRes

@interface PB3ReportVoiceStatusRes : GPBMessage

@end

#pragma mark - PB3PersonalKickout

typedef GPB_ENUM(PB3PersonalKickout_FieldNumber) {
  PB3PersonalKickout_FieldNumber_RoomId = 1,
};

/**
 *  cmdId = 100212
 **/
@interface PB3PersonalKickout : GPBMessage

@property(nonatomic, readwrite) int64_t roomId;

@end

#pragma mark - PB3ChatEffect

typedef GPB_ENUM(PB3ChatEffect_FieldNumber) {
  PB3ChatEffect_FieldNumber_Version = 1,
  PB3ChatEffect_FieldNumber_AppAnimationURL = 2,
  PB3ChatEffect_FieldNumber_PcAnimationURL = 3,
  PB3ChatEffect_FieldNumber_Duration = 4,
  PB3ChatEffect_FieldNumber_Weight = 5,
  PB3ChatEffect_FieldNumber_PcSvgaURL = 6,
};

/**
 * 聊天特效
 **/
@interface PB3ChatEffect : GPBMessage

/** 动画版本 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *version;

/** 客户端动画 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *appAnimationURL;

/** PC端动画 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcAnimationURL;

/** 持续时间(毫秒) */
@property(nonatomic, readwrite) int32_t duration;

/** 权重 */
@property(nonatomic, readwrite) int32_t weight;

/** PC端SVGA */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcSvgaURL;

@end

#pragma mark - PB3BroadcastTeacherStudent

typedef GPB_ENUM(PB3BroadcastTeacherStudent_FieldNumber) {
  PB3BroadcastTeacherStudent_FieldNumber_EffectId = 1,
  PB3BroadcastTeacherStudent_FieldNumber_TeacherId = 2,
  PB3BroadcastTeacherStudent_FieldNumber_TeacherId2 = 3,
  PB3BroadcastTeacherStudent_FieldNumber_TeacherName = 4,
  PB3BroadcastTeacherStudent_FieldNumber_TeacherIcon = 5,
  PB3BroadcastTeacherStudent_FieldNumber_StudentPlayerId = 6,
  PB3BroadcastTeacherStudent_FieldNumber_StudentPlayerId2 = 7,
  PB3BroadcastTeacherStudent_FieldNumber_StudentName = 8,
  PB3BroadcastTeacherStudent_FieldNumber_StudentIcon = 9,
  PB3BroadcastTeacherStudent_FieldNumber_PublicText = 10,
};

/**
 * cmdId = 100213
 **/
@interface PB3BroadcastTeacherStudent : GPBMessage

/** 上麦特效ID */
@property(nonatomic, readwrite) int32_t effectId;

/** 用户ID */
@property(nonatomic, readwrite) int64_t teacherId;

/** 靓号 */
@property(nonatomic, readwrite) int64_t teacherId2;

/** 昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *teacherName;

/** 头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *teacherIcon;

/** 用户ID */
@property(nonatomic, readwrite) int64_t studentPlayerId;

/** 靓号 */
@property(nonatomic, readwrite) int64_t studentPlayerId2;

/** 昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *studentName;

/** 头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *studentIcon;

/** 文案 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *publicText;

@end

#pragma mark - PB3TeacherStudentChair

typedef GPB_ENUM(PB3TeacherStudentChair_FieldNumber) {
  PB3TeacherStudentChair_FieldNumber_PlayerId = 1,
  PB3TeacherStudentChair_FieldNumber_LevelId = 2,
};

/**
 * 师徒上麦心跳
 **/
@interface PB3TeacherStudentChair : GPBMessage

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 等级ID（特效ID） */
@property(nonatomic, readwrite) int32_t levelId;

@end

#pragma mark - PB3BroadcastTeacherStudentChairList

typedef GPB_ENUM(PB3BroadcastTeacherStudentChairList_FieldNumber) {
  PB3BroadcastTeacherStudentChairList_FieldNumber_TeacherStudentArray = 1,
};

/**
 * 广播 师徒列表变更 cmdId=100214
 **/
@interface PB3BroadcastTeacherStudentChairList : GPBMessage

/** 师徒列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3TeacherStudentChair*> *teacherStudentArray;
/** The number of items in @c teacherStudentArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger teacherStudentArray_Count;

@end

#pragma mark - PB3BroadcastTeacherStudentEnterRoom

typedef GPB_ENUM(PB3BroadcastTeacherStudentEnterRoom_FieldNumber) {
  PB3BroadcastTeacherStudentEnterRoom_FieldNumber_PlayerId = 1,
  PB3BroadcastTeacherStudentEnterRoom_FieldNumber_PlayerId2 = 2,
  PB3BroadcastTeacherStudentEnterRoom_FieldNumber_PlayerName = 3,
  PB3BroadcastTeacherStudentEnterRoom_FieldNumber_PlayerIcon = 4,
  PB3BroadcastTeacherStudentEnterRoom_FieldNumber_PublicText = 5,
};

/**
 * 个播 师徒进房公屏推送 cmdId= 100215
 **/
@interface PB3BroadcastTeacherStudentEnterRoom : GPBMessage

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 靓号 */
@property(nonatomic, readwrite) int64_t playerId2;

/** 昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerName;

/** 头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerIcon;

/** 文案 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *publicText;

@end

#pragma mark - PB3MobaTeamSitChairBroadcast

typedef GPB_ENUM(PB3MobaTeamSitChairBroadcast_FieldNumber) {
  PB3MobaTeamSitChairBroadcast_FieldNumber_RoomId = 1,
  PB3MobaTeamSitChairBroadcast_FieldNumber_ChairsArray = 2,
  PB3MobaTeamSitChairBroadcast_FieldNumber_UnderChairNum = 3,
};

/**
 * 开黑组队发车推送麦位列表 cmdId = 100216
 **/
@interface PB3MobaTeamSitChairBroadcast : GPBMessage

/** 房间id */
@property(nonatomic, readwrite) int64_t roomId;

/** 麦位列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3Chair*> *chairsArray;
/** The number of items in @c chairsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger chairsArray_Count;

/** 麦下人数 */
@property(nonatomic, readwrite) int32_t underChairNum;

@end

#pragma mark - PB3LiveBroadcast

typedef GPB_ENUM(PB3LiveBroadcast_FieldNumber) {
  PB3LiveBroadcast_FieldNumber_RoomId = 1,
  PB3LiveBroadcast_FieldNumber_URL = 2,
  PB3LiveBroadcast_FieldNumber_LowBitRateURL = 3,
};

/**
 * 广播房间直播url cmdId = 100218
 **/
@interface PB3LiveBroadcast : GPBMessage

/** 房间ID */
@property(nonatomic, readwrite) int64_t roomId;

/** 直播流url,PC端 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

/** 低码率url */
@property(nonatomic, readwrite, copy, null_resettable) NSString *lowBitRateURL;

@end

#pragma mark - PB3GetLiveUrlReq

/**
 * 获取视频直播url
 **/
@interface PB3GetLiveUrlReq : GPBMessage

@end

#pragma mark - PB3GetLiveUrlRes

typedef GPB_ENUM(PB3GetLiveUrlRes_FieldNumber) {
  PB3GetLiveUrlRes_FieldNumber_RoomId = 1,
  PB3GetLiveUrlRes_FieldNumber_URL = 2,
  PB3GetLiveUrlRes_FieldNumber_LowBitRateURL = 3,
};

@interface PB3GetLiveUrlRes : GPBMessage

/** 房间ID */
@property(nonatomic, readwrite) int64_t roomId;

/** 直播流url */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

/** 低码率url */
@property(nonatomic, readwrite, copy, null_resettable) NSString *lowBitRateURL;

@end

#pragma mark - PB3QuickChat

typedef GPB_ENUM(PB3QuickChat_FieldNumber) {
  PB3QuickChat_FieldNumber_QuickChatId = 1,
  PB3QuickChat_FieldNumber_Index = 2,
  PB3QuickChat_FieldNumber_Content = 3,
  PB3QuickChat_FieldNumber_ContentId = 4,
};

/**
 * 快捷语
 **/
@interface PB3QuickChat : GPBMessage

/** id */
@property(nonatomic, readwrite) int64_t quickChatId;

/** 序号 */
@property(nonatomic, readwrite) int32_t index;

/** 内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

/** 文案ID */
@property(nonatomic, readwrite) int64_t contentId;

@end

#pragma mark - PB3AddQuickChatReq

typedef GPB_ENUM(PB3AddQuickChatReq_FieldNumber) {
  PB3AddQuickChatReq_FieldNumber_QuickChatsArray = 1,
  PB3AddQuickChatReq_FieldNumber_Classify = 2,
};

/**
 * 快捷语管理
 **/
@interface PB3AddQuickChatReq : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3QuickChat*> *quickChatsArray;
/** The number of items in @c quickChatsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger quickChatsArray_Count;

@property(nonatomic, readwrite) PB3ChatClassify classify;

@end

/**
 * Fetches the raw value of a @c PB3AddQuickChatReq's @c classify property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3AddQuickChatReq_Classify_RawValue(PB3AddQuickChatReq *message);
/**
 * Sets the raw value of an @c PB3AddQuickChatReq's @c classify property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3AddQuickChatReq_Classify_RawValue(PB3AddQuickChatReq *message, int32_t value);

#pragma mark - PB3AddQuickChatRes

@interface PB3AddQuickChatRes : GPBMessage

@end

#pragma mark - PB3RoomQuickChatConfReq

@interface PB3RoomQuickChatConfReq : GPBMessage

@end

#pragma mark - PB3RoomQuickChatConfRes

typedef GPB_ENUM(PB3RoomQuickChatConfRes_FieldNumber) {
  PB3RoomQuickChatConfRes_FieldNumber_CurrentLimit = 1,
  PB3RoomQuickChatConfRes_FieldNumber_Show = 2,
  PB3RoomQuickChatConfRes_FieldNumber_QuickChatsArray = 3,
  PB3RoomQuickChatConfRes_FieldNumber_PatternArray = 4,
  PB3RoomQuickChatConfRes_FieldNumber_UserType = 5,
};

@interface PB3RoomQuickChatConfRes : GPBMessage

/** IM展示条数上限 */
@property(nonatomic, readwrite) int32_t currentLimit;

/** 展示时机 */
@property(nonatomic, readwrite) PB3RoomChatShowType show;

/** 快捷语列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3QuickChat*> *quickChatsArray;
/** The number of items in @c quickChatsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger quickChatsArray_Count;

/** 房间模式 */
// |patternArray| contains |PB3NewRoomPattern|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *patternArray;
/** The number of items in @c patternArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger patternArray_Count;

/** 用户类型 */
@property(nonatomic, readwrite) enum PB3QuickChatUserType userType;

@end

/**
 * Fetches the raw value of a @c PB3RoomQuickChatConfRes's @c show property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3RoomQuickChatConfRes_Show_RawValue(PB3RoomQuickChatConfRes *message);
/**
 * Sets the raw value of an @c PB3RoomQuickChatConfRes's @c show property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3RoomQuickChatConfRes_Show_RawValue(PB3RoomQuickChatConfRes *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3RoomQuickChatConfRes's @c userType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3RoomQuickChatConfRes_UserType_RawValue(PB3RoomQuickChatConfRes *message);
/**
 * Sets the raw value of an @c PB3RoomQuickChatConfRes's @c userType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3RoomQuickChatConfRes_UserType_RawValue(PB3RoomQuickChatConfRes *message, int32_t value);

#pragma mark - PB3CheckQuickChatContentReq

typedef GPB_ENUM(PB3CheckQuickChatContentReq_FieldNumber) {
  PB3CheckQuickChatContentReq_FieldNumber_Content = 1,
};

@interface PB3CheckQuickChatContentReq : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

@end

#pragma mark - PB3CheckQuickChatContentRes

@interface PB3CheckQuickChatContentRes : GPBMessage

@end

#pragma mark - PB3GetAllChatCfgReq

/**
 * 房间多频道配置
 **/
@interface PB3GetAllChatCfgReq : GPBMessage

@end

#pragma mark - PB3GetAllChatCfgRes

typedef GPB_ENUM(PB3GetAllChatCfgRes_FieldNumber) {
  PB3GetAllChatCfgRes_FieldNumber_ConfArray = 1,
};

@interface PB3GetAllChatCfgRes : GPBMessage

/** 频道配置 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3AllChatCfg*> *confArray;
/** The number of items in @c confArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger confArray_Count;

@end

#pragma mark - PB3RoomChairStatus

typedef GPB_ENUM(PB3RoomChairStatus_FieldNumber) {
  PB3RoomChairStatus_FieldNumber_ChairId = 1,
  PB3RoomChairStatus_FieldNumber_Status = 2,
};

@interface PB3RoomChairStatus : GPBMessage

/** 座位ID */
@property(nonatomic, readwrite) int32_t chairId;

@property(nonatomic, readwrite) PB3ChairStatus status;

@end

/**
 * Fetches the raw value of a @c PB3RoomChairStatus's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3RoomChairStatus_Status_RawValue(PB3RoomChairStatus *message);
/**
 * Sets the raw value of an @c PB3RoomChairStatus's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3RoomChairStatus_Status_RawValue(PB3RoomChairStatus *message, int32_t value);

#pragma mark - PB3AsyncReconnectedInRoomReq

typedef GPB_ENUM(PB3AsyncReconnectedInRoomReq_FieldNumber) {
  PB3AsyncReconnectedInRoomReq_FieldNumber_Typ = 1,
  PB3AsyncReconnectedInRoomReq_FieldNumber_ExtraData = 2,
};

/**
 * 在房间内断线重连请求，异步推送
 **/
@interface PB3AsyncReconnectedInRoomReq : GPBMessage

/** 请求数据类型 */
@property(nonatomic, readwrite) PB3AsyncReconnectedInRoomType typ;

/** 根据type，使用对应结构体 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *extraData;

@end

/**
 * Fetches the raw value of a @c PB3AsyncReconnectedInRoomReq's @c typ property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3AsyncReconnectedInRoomReq_Typ_RawValue(PB3AsyncReconnectedInRoomReq *message);
/**
 * Sets the raw value of an @c PB3AsyncReconnectedInRoomReq's @c typ property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3AsyncReconnectedInRoomReq_Typ_RawValue(PB3AsyncReconnectedInRoomReq *message, int32_t value);

#pragma mark - PB3AsyncReconnectedInRoomRes

@interface PB3AsyncReconnectedInRoomRes : GPBMessage

@end

#pragma mark - PB3AsyncRoomPatternCfgReq

/**
 * 异步获取房间模式配置
 **/
@interface PB3AsyncRoomPatternCfgReq : GPBMessage

@end

#pragma mark - PB3AsyncRoomPatternCfgRes

/**
 * 推送cmdId=100224 XcmRoomPatternCliCfgData (acm_conf.ext.proto)
 **/
@interface PB3AsyncRoomPatternCfgRes : GPBMessage

@end

#pragma mark - PB3ClanTaskReq

typedef GPB_ENUM(PB3ClanTaskReq_FieldNumber) {
  PB3ClanTaskReq_FieldNumber_BeginTime = 1,
  PB3ClanTaskReq_FieldNumber_EndTime = 2,
  PB3ClanTaskReq_FieldNumber_PlayersArray = 3,
  PB3ClanTaskReq_FieldNumber_Type = 4,
  PB3ClanTaskReq_FieldNumber_DonePlayerId = 5,
};

/**
 * 公会房 置顶任务
 **/
@interface PB3ClanTaskReq : GPBMessage

/** 任务开始时间 绝对时间 type=CTT_SAVE 时使用 */
@property(nonatomic, readwrite) int64_t beginTime;

/** 任务结束时间 绝对时间 type=CTT_SAVE 时使用 */
@property(nonatomic, readwrite) int64_t endTime;

/** 任务玩家列表 type=CTT_SAVE 时使用 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3PlayerTask*> *playersArray;
/** The number of items in @c playersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger playersArray_Count;

/** 请求类型 */
@property(nonatomic, readwrite) PB3ClanTaskType type;

/** 任务完成数+1用户ID type=CTT_TASK_DONE 时使用 */
@property(nonatomic, readwrite) int64_t donePlayerId;

@end

/**
 * Fetches the raw value of a @c PB3ClanTaskReq's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ClanTaskReq_Type_RawValue(PB3ClanTaskReq *message);
/**
 * Sets the raw value of an @c PB3ClanTaskReq's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ClanTaskReq_Type_RawValue(PB3ClanTaskReq *message, int32_t value);

#pragma mark - PB3ClanTaskRes

typedef GPB_ENUM(PB3ClanTaskRes_FieldNumber) {
  PB3ClanTaskRes_FieldNumber_BeginTime = 1,
  PB3ClanTaskRes_FieldNumber_EndTime = 2,
  PB3ClanTaskRes_FieldNumber_PlayersArray = 3,
  PB3ClanTaskRes_FieldNumber_CurrentPlayer = 4,
};

/**
 * cmdId=100225
 **/
@interface PB3ClanTaskRes : GPBMessage

/** 任务开始时间 绝对时间 */
@property(nonatomic, readwrite) int64_t beginTime;

/** 任务结束时间 绝对时间 */
@property(nonatomic, readwrite) int64_t endTime;

/** 任务玩家列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3PlayerTask*> *playersArray;
/** The number of items in @c playersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger playersArray_Count;

/** 当前任务玩家 */
@property(nonatomic, readwrite, strong, null_resettable) PB3PlayerTask *currentPlayer;
/** Test to see if @c currentPlayer has been set. */
@property(nonatomic, readwrite) BOOL hasCurrentPlayer;

@end

#pragma mark - PB3PlayerTask

typedef GPB_ENUM(PB3PlayerTask_FieldNumber) {
  PB3PlayerTask_FieldNumber_Image = 1,
  PB3PlayerTask_FieldNumber_Nick = 2,
  PB3PlayerTask_FieldNumber_PlayerId = 3,
  PB3PlayerTask_FieldNumber_TaskDoneNum = 4,
  PB3PlayerTask_FieldNumber_TaskTotalNum = 5,
  PB3PlayerTask_FieldNumber_ChairsNum = 6,
};

/**
 * cmdId=100226
 **/
@interface PB3PlayerTask : GPBMessage

/** 头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *image;

/** 昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nick;

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 置顶任务完成数量 */
@property(nonatomic, readwrite) int32_t taskDoneNum;

/** 置顶任务总数数量 */
@property(nonatomic, readwrite) int32_t taskTotalNum;

/** 麦位 */
@property(nonatomic, readwrite) int32_t chairsNum;

@end

#pragma mark - PB3PunishmentRankReq

/**
 * 惩罚榜
 **/
@interface PB3PunishmentRankReq : GPBMessage

@end

#pragma mark - PB3PunishmentRankRes

typedef GPB_ENUM(PB3PunishmentRankRes_FieldNumber) {
  PB3PunishmentRankRes_FieldNumber_RankArray = 1,
  PB3PunishmentRankRes_FieldNumber_CurrentRank = 2,
};

@interface PB3PunishmentRankRes : GPBMessage

/** 排行列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3PunishmentRank*> *rankArray;
/** The number of items in @c rankArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger rankArray_Count;

/** 当前用户排名 */
@property(nonatomic, readwrite, strong, null_resettable) PB3PunishmentRank *currentRank;
/** Test to see if @c currentRank has been set. */
@property(nonatomic, readwrite) BOOL hasCurrentRank;

@end

#pragma mark - PB3PunishmentRank

typedef GPB_ENUM(PB3PunishmentRank_FieldNumber) {
  PB3PunishmentRank_FieldNumber_RankNum = 1,
  PB3PunishmentRank_FieldNumber_Image = 2,
  PB3PunishmentRank_FieldNumber_Nick = 3,
  PB3PunishmentRank_FieldNumber_WealthLevel = 4,
  PB3PunishmentRank_FieldNumber_CharmLevel = 5,
  PB3PunishmentRank_FieldNumber_PlayerId = 6,
  PB3PunishmentRank_FieldNumber_GiftNum = 7,
  PB3PunishmentRank_FieldNumber_GiftId = 8,
};

@interface PB3PunishmentRank : GPBMessage

/** 排名 */
@property(nonatomic, readwrite) int64_t rankNum;

/** 头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *image;

/** 昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nick;

/** 财富等级 */
@property(nonatomic, readwrite) int32_t wealthLevel;

/** 魅力等级 */
@property(nonatomic, readwrite) int32_t charmLevel;

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 送礼数量 */
@property(nonatomic, readwrite) int64_t giftNum;

/** 惩罚礼物ID */
@property(nonatomic, readwrite) int32_t giftId;

@end

#pragma mark - PB3PunishmentGiftConfReq

/**
 * 获取惩罚礼物配置
 **/
@interface PB3PunishmentGiftConfReq : GPBMessage

@end

#pragma mark - PB3PunishmentGiftConfRes

typedef GPB_ENUM(PB3PunishmentGiftConfRes_FieldNumber) {
  PB3PunishmentGiftConfRes_FieldNumber_GiftId = 1,
};

@interface PB3PunishmentGiftConfRes : GPBMessage

@property(nonatomic, readwrite) int32_t giftId;

@end

#pragma mark - PB3WishGiftReq

typedef GPB_ENUM(PB3WishGiftReq_FieldNumber) {
  PB3WishGiftReq_FieldNumber_GiftsArray = 1,
  PB3WishGiftReq_FieldNumber_Type = 2,
};

/**
 * 达人房 心愿礼物
 **/
@interface PB3WishGiftReq : GPBMessage

/** 礼物列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3GiftTask*> *giftsArray;
/** The number of items in @c giftsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger giftsArray_Count;

/** 请求类型 */
@property(nonatomic, readwrite) PB3WishGiftType type;

@end

/**
 * Fetches the raw value of a @c PB3WishGiftReq's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3WishGiftReq_Type_RawValue(PB3WishGiftReq *message);
/**
 * Sets the raw value of an @c PB3WishGiftReq's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3WishGiftReq_Type_RawValue(PB3WishGiftReq *message, int32_t value);

#pragma mark - PB3WishGiftRes

typedef GPB_ENUM(PB3WishGiftRes_FieldNumber) {
  PB3WishGiftRes_FieldNumber_EndTime = 1,
  PB3WishGiftRes_FieldNumber_GiftsArray = 2,
};

/**
 * cmdId=100227
 **/
@interface PB3WishGiftRes : GPBMessage

/** 任务结束时间 */
@property(nonatomic, readwrite) int64_t endTime;

/** 心愿礼物列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3GiftTask*> *giftsArray;
/** The number of items in @c giftsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger giftsArray_Count;

@end

#pragma mark - PB3GiftTask

typedef GPB_ENUM(PB3GiftTask_FieldNumber) {
  PB3GiftTask_FieldNumber_GiftId = 2,
  PB3GiftTask_FieldNumber_TaskDoneNum = 3,
  PB3GiftTask_FieldNumber_TaskTotalNum = 4,
  PB3GiftTask_FieldNumber_UpdateTime = 5,
};

/**
 * cmdId=100228
 **/
@interface PB3GiftTask : GPBMessage

/** 礼物id */
@property(nonatomic, readwrite) int32_t giftId;

/** 任务完成数量 */
@property(nonatomic, readwrite) int32_t taskDoneNum;

/** 任务总数数量 */
@property(nonatomic, readwrite) int32_t taskTotalNum;

/** 更新任务完成数量时间戳 纳秒 */
@property(nonatomic, readwrite) int64_t updateTime;

@end

#pragma mark - PB3WishGiftConfReq

/**
 * 获取心愿礼物配置墙
 **/
@interface PB3WishGiftConfReq : GPBMessage

@end

#pragma mark - PB3WishGiftConfRes

typedef GPB_ENUM(PB3WishGiftConfRes_FieldNumber) {
  PB3WishGiftConfRes_FieldNumber_GiftIdsArray = 1,
};

@interface PB3WishGiftConfRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *giftIdsArray;
/** The number of items in @c giftIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger giftIdsArray_Count;

@end

#pragma mark - PB3EnterFossaRoom

typedef GPB_ENUM(PB3EnterFossaRoom_FieldNumber) {
  PB3EnterFossaRoom_FieldNumber_RoomId = 1,
};

/**
 * 收到推送进入小窝 cmdid = 100235
 **/
@interface PB3EnterFossaRoom : GPBMessage

/** 进房ID */
@property(nonatomic, readwrite) int64_t roomId;

@end

#pragma mark - PB3LeaveFossaRoom

/**
 * 收到退出小窝 cmdid = 100236
 **/
@interface PB3LeaveFossaRoom : GPBMessage

@end

#pragma mark - PB3OtherRejectFossa

typedef GPB_ENUM(PB3OtherRejectFossa_FieldNumber) {
  PB3OtherRejectFossa_FieldNumber_Toast = 1,
};

/**
 * 对方拒绝开启小窝 cmdid = 100237
 **/
@interface PB3OtherRejectFossa : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *toast;

@end

#pragma mark - PB3OtherLeaveFossaEarly

typedef GPB_ENUM(PB3OtherLeaveFossaEarly_FieldNumber) {
  PB3OtherLeaveFossaEarly_FieldNumber_Toast = 1,
};

/**
 * 对方提前离开小窝 cmdid = 100238
 **/
@interface PB3OtherLeaveFossaEarly : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *toast;

@end

#pragma mark - PB3LeaveFossaRoomTimeReq

/**
 * 退出小窝房的时间
 **/
@interface PB3LeaveFossaRoomTimeReq : GPBMessage

@end

#pragma mark - PB3LeaveFossaRoomTimeRes

typedef GPB_ENUM(PB3LeaveFossaRoomTimeRes_FieldNumber) {
  PB3LeaveFossaRoomTimeRes_FieldNumber_LeaveAt = 1,
};

@interface PB3LeaveFossaRoomTimeRes : GPBMessage

/** 退房时间戳 */
@property(nonatomic, readwrite) int64_t leaveAt;

@end

#pragma mark - PB3OpenFossaRoomReq

typedef GPB_ENUM(PB3OpenFossaRoomReq_FieldNumber) {
  PB3OpenFossaRoomReq_FieldNumber_Open = 1,
};

@interface PB3OpenFossaRoomReq : GPBMessage

/** 开启小窝房：false-不开启，true-开启 */
@property(nonatomic, readwrite) BOOL open;

@end

#pragma mark - PB3OpenFossaRoomRes

@interface PB3OpenFossaRoomRes : GPBMessage

@end

#pragma mark - PB3BroadcastMateChoiceHatOwner

typedef GPB_ENUM(PB3BroadcastMateChoiceHatOwner_FieldNumber) {
  PB3BroadcastMateChoiceHatOwner_FieldNumber_HatOwnerId = 1,
  PB3BroadcastMateChoiceHatOwner_FieldNumber_HatLevel = 2,
  PB3BroadcastMateChoiceHatOwner_FieldNumber_HatIcon = 3,
};

@interface PB3BroadcastMateChoiceHatOwner : GPBMessage

/** 帽子获得者ID */
@property(nonatomic, readwrite) int64_t hatOwnerId;

/** 帽子等级 */
@property(nonatomic, readwrite) int32_t hatLevel;

/** 帽子icon */
@property(nonatomic, readwrite, copy, null_resettable) NSString *hatIcon;

@end

#pragma mark - PB3BroadcastMateChoiceChangeStatusSuccess

typedef GPB_ENUM(PB3BroadcastMateChoiceChangeStatusSuccess_FieldNumber) {
  PB3BroadcastMateChoiceChangeStatusSuccess_FieldNumber_Status = 1,
  PB3BroadcastMateChoiceChangeStatusSuccess_FieldNumber_ChoiceEndUnix = 2,
};

@interface PB3BroadcastMateChoiceChangeStatusSuccess : GPBMessage

/** 状态  对应MateChoiceStatus枚举 */
@property(nonatomic, readwrite) int32_t status;

/**  心动选择结束时间戳  精确到秒 */
@property(nonatomic, readwrite) int64_t choiceEndUnix;

@end

#pragma mark - PB3BroadcastMateChoiceSelectChairNumber

typedef GPB_ENUM(PB3BroadcastMateChoiceSelectChairNumber_FieldNumber) {
  PB3BroadcastMateChoiceSelectChairNumber_FieldNumber_PlayerId = 1,
  PB3BroadcastMateChoiceSelectChairNumber_FieldNumber_SelectPlayerId = 2,
};

@interface PB3BroadcastMateChoiceSelectChairNumber : GPBMessage

/** 选择方 用户ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 被选择方 用户ID */
@property(nonatomic, readwrite) int64_t selectPlayerId;

@end

#pragma mark - PB3MateChoiceSelectChairNumberReq

typedef GPB_ENUM(PB3MateChoiceSelectChairNumberReq_FieldNumber) {
  PB3MateChoiceSelectChairNumberReq_FieldNumber_SelectPlayerId = 1,
};

@interface PB3MateChoiceSelectChairNumberReq : GPBMessage

/** 被选择方 用户ID */
@property(nonatomic, readwrite) int64_t selectPlayerId;

@end

#pragma mark - PB3MateChoiceSelectChairNumberRes

@interface PB3MateChoiceSelectChairNumberRes : GPBMessage

@end

#pragma mark - PB3BroadcastMateChoice2Pairs

typedef GPB_ENUM(PB3BroadcastMateChoice2Pairs_FieldNumber) {
  PB3BroadcastMateChoice2Pairs_FieldNumber_Pairs = 1,
};

@interface PB3BroadcastMateChoice2Pairs : GPBMessage

/** 心动选择结果 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Int64Dictionary *pairs;
/** The number of items in @c pairs without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger pairs_Count;

@end

#pragma mark - PB3BroadcastMateChoice2ChangeStatusToReady

@interface PB3BroadcastMateChoice2ChangeStatusToReady : GPBMessage

@end

#pragma mark - PB3InitMateRoomGoldStatReq

@interface PB3InitMateRoomGoldStatReq : GPBMessage

@end

#pragma mark - PB3InitMateRoomGoldStatRes

@interface PB3InitMateRoomGoldStatRes : GPBMessage

@end

#pragma mark - PB3MateRoomGoldStatReq

@interface PB3MateRoomGoldStatReq : GPBMessage

@end

#pragma mark - PB3MateRoomGoldStatRes

typedef GPB_ENUM(PB3MateRoomGoldStatRes_FieldNumber) {
  PB3MateRoomGoldStatRes_FieldNumber_RoomId = 1,
  PB3MateRoomGoldStatRes_FieldNumber_TotalGold = 2,
};

@interface PB3MateRoomGoldStatRes : GPBMessage

@property(nonatomic, readwrite) int64_t roomId;

@property(nonatomic, readwrite) int64_t totalGold;

@end

#pragma mark - PB3BgmPlayerSwitch

typedef GPB_ENUM(PB3BgmPlayerSwitch_FieldNumber) {
  PB3BgmPlayerSwitch_FieldNumber_IsSwitch = 1,
};

/**
 * cmdId=100229
 **/
@interface PB3BgmPlayerSwitch : GPBMessage

/** 播放器入口是否显示 */
@property(nonatomic, readwrite) BOOL isSwitch;

@end

#pragma mark - PB3FullChairRoomReq

@interface PB3FullChairRoomReq : GPBMessage

@end

#pragma mark - PB3FullChairRoomRes

typedef GPB_ENUM(PB3FullChairRoomRes_FieldNumber) {
  PB3FullChairRoomRes_FieldNumber_RoomId = 1,
};

@interface PB3FullChairRoomRes : GPBMessage

@property(nonatomic, readwrite) int64_t roomId;

@end

#pragma mark - PB3BroadcastRoomCubism

typedef GPB_ENUM(PB3BroadcastRoomCubism_FieldNumber) {
  PB3BroadcastRoomCubism_FieldNumber_Enable = 1,
};

/**
 * cmdid 100250
 **/
@interface PB3BroadcastRoomCubism : GPBMessage

@property(nonatomic, readwrite) BOOL enable;

@end

#pragma mark - PB3NewUserRandomRoomReq

@interface PB3NewUserRandomRoomReq : GPBMessage

@end

#pragma mark - PB3NewUserRandomRoomRes

typedef GPB_ENUM(PB3NewUserRandomRoomRes_FieldNumber) {
  PB3NewUserRandomRoomRes_FieldNumber_IsOpen = 1,
  PB3NewUserRandomRoomRes_FieldNumber_MaleRoomId = 2,
  PB3NewUserRandomRoomRes_FieldNumber_FemaleRoomId = 3,
};

@interface PB3NewUserRandomRoomRes : GPBMessage

/** 是否满足条件开启 */
@property(nonatomic, readwrite) BOOL isOpen;

/** 男厅 */
@property(nonatomic, readwrite) int64_t maleRoomId;

/** 女厅 */
@property(nonatomic, readwrite) int64_t femaleRoomId;

@end

#pragma mark - PB3QueryRoomTopRightCornerLabelReq

@interface PB3QueryRoomTopRightCornerLabelReq : GPBMessage

@end

#pragma mark - PB3QueryRoomTopRightCornerLabelRes

typedef GPB_ENUM(PB3QueryRoomTopRightCornerLabelRes_FieldNumber) {
  PB3QueryRoomTopRightCornerLabelRes_FieldNumber_InfoListArray = 1,
};

@interface PB3QueryRoomTopRightCornerLabelRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3RoomTopRightCornerLabelInfo*> *infoListArray;
/** The number of items in @c infoListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger infoListArray_Count;

@end

#pragma mark - PB3BroadcastRoomTopRightCornerLabel

typedef GPB_ENUM(PB3BroadcastRoomTopRightCornerLabel_FieldNumber) {
  PB3BroadcastRoomTopRightCornerLabel_FieldNumber_InfoListArray = 1,
};

@interface PB3BroadcastRoomTopRightCornerLabel : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3RoomTopRightCornerLabelInfo*> *infoListArray;
/** The number of items in @c infoListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger infoListArray_Count;

@end

#pragma mark - PB3QueryRoomEffectConfReq

typedef GPB_ENUM(PB3QueryRoomEffectConfReq_FieldNumber) {
  PB3QueryRoomEffectConfReq_FieldNumber_RoomId = 1,
};

@interface PB3QueryRoomEffectConfReq : GPBMessage

@property(nonatomic, readwrite) int64_t roomId;

@end

#pragma mark - PB3BroadcastRoomTopRightCornerLabelChange

typedef GPB_ENUM(PB3BroadcastRoomTopRightCornerLabelChange_FieldNumber) {
  PB3BroadcastRoomTopRightCornerLabelChange_FieldNumber_ListArray = 1,
};

@interface PB3BroadcastRoomTopRightCornerLabelChange : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3BroadcastRoomTopRightCornerLabelChange_Act*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3BroadcastRoomTopRightCornerLabelChange_Act

typedef GPB_ENUM(PB3BroadcastRoomTopRightCornerLabelChange_Act_FieldNumber) {
  PB3BroadcastRoomTopRightCornerLabelChange_Act_FieldNumber_ActId = 1,
  PB3BroadcastRoomTopRightCornerLabelChange_Act_FieldNumber_RelId = 2,
  PB3BroadcastRoomTopRightCornerLabelChange_Act_FieldNumber_ListArray = 3,
};

@interface PB3BroadcastRoomTopRightCornerLabelChange_Act : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relId;

/** 变更字段信息 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3RoomTopRightCornerLabelChangeField*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3QueryRoomEffectConfRes

typedef GPB_ENUM(PB3QueryRoomEffectConfRes_FieldNumber) {
  PB3QueryRoomEffectConfRes_FieldNumber_RoomEffectURL = 1,
  PB3QueryRoomEffectConfRes_FieldNumber_RoomPcEffectURL = 2,
  PB3QueryRoomEffectConfRes_FieldNumber_EffectEndTime = 3,
};

@interface PB3QueryRoomEffectConfRes : GPBMessage

/** 特效资源 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomEffectURL;

/** pc特效资源 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomPcEffectURL;

/** 特效结束时间 */
@property(nonatomic, readwrite) int64_t effectEndTime;

@end

#pragma mark - PB3RoomTopRightCornerLabelInfo

typedef GPB_ENUM(PB3RoomTopRightCornerLabelInfo_FieldNumber) {
  PB3RoomTopRightCornerLabelInfo_FieldNumber_LabelType = 1,
  PB3RoomTopRightCornerLabelInfo_FieldNumber_ActId = 2,
  PB3RoomTopRightCornerLabelInfo_FieldNumber_RelActId = 3,
  PB3RoomTopRightCornerLabelInfo_FieldNumber_Router = 4,
  PB3RoomTopRightCornerLabelInfo_FieldNumber_PlayerIcon1 = 5,
  PB3RoomTopRightCornerLabelInfo_FieldNumber_PlayerIcon2 = 6,
  PB3RoomTopRightCornerLabelInfo_FieldNumber_RemainingTime = 7,
  PB3RoomTopRightCornerLabelInfo_FieldNumber_AppLabelIcon = 8,
  PB3RoomTopRightCornerLabelInfo_FieldNumber_AppLabelEffect = 9,
  PB3RoomTopRightCornerLabelInfo_FieldNumber_PcLabelIcon = 10,
  PB3RoomTopRightCornerLabelInfo_FieldNumber_PcLabelEffect = 11,
  PB3RoomTopRightCornerLabelInfo_FieldNumber_CountdownColor = 12,
  PB3RoomTopRightCornerLabelInfo_FieldNumber_NumberContent = 14,
  PB3RoomTopRightCornerLabelInfo_FieldNumber_NumberBackgroundImage = 15,
  PB3RoomTopRightCornerLabelInfo_FieldNumber_NumberColor = 16,
  PB3RoomTopRightCornerLabelInfo_FieldNumber_CountdownBackgroundImage = 17,
  PB3RoomTopRightCornerLabelInfo_FieldNumber_PcNumberBackgroundImage = 18,
  PB3RoomTopRightCornerLabelInfo_FieldNumber_PcCountdownBackgroundImage = 19,
  PB3RoomTopRightCornerLabelInfo_FieldNumber_WealthMin = 21,
  PB3RoomTopRightCornerLabelInfo_FieldNumber_WealthMax = 22,
  PB3RoomTopRightCornerLabelInfo_FieldNumber_CharmMin = 23,
  PB3RoomTopRightCornerLabelInfo_FieldNumber_CharmMax = 24,
  PB3RoomTopRightCornerLabelInfo_FieldNumber_LogicType = 25,
  PB3RoomTopRightCornerLabelInfo_FieldNumber_Event = 26,
  PB3RoomTopRightCornerLabelInfo_FieldNumber_RoomId = 27,
  PB3RoomTopRightCornerLabelInfo_FieldNumber_ProgressBarColor = 28,
  PB3RoomTopRightCornerLabelInfo_FieldNumber_ProgressBarBackgroundColor = 29,
  PB3RoomTopRightCornerLabelInfo_FieldNumber_ProgressBarNumberColor = 30,
  PB3RoomTopRightCornerLabelInfo_FieldNumber_CurrentNum = 31,
  PB3RoomTopRightCornerLabelInfo_FieldNumber_GoalNum = 32,
  PB3RoomTopRightCornerLabelInfo_FieldNumber_ShowCountdown = 33,
  PB3RoomTopRightCornerLabelInfo_FieldNumber_ShowNumber = 35,
};

@interface PB3RoomTopRightCornerLabelInfo : GPBMessage

/** 角标类型   对应枚举  RoomTopRightCornerLabelType */
@property(nonatomic, readwrite) enum PB3RoomTopRightCornerLabelType labelType;

/** 主活动 */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动 */
@property(nonatomic, readwrite) int32_t relActId;

/** 路由地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *router;

/** 用户头像1 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerIcon1;

/** 用户头像2 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerIcon2;

/** 活动剩余时间 */
@property(nonatomic, readwrite) int64_t remainingTime;

/** app角标图片资源 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *appLabelIcon;

/** app角标特效 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *appLabelEffect;

/** pc角标图片资源 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcLabelIcon;

/** pc角标特效 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcLabelEffect;

/** 倒计时色值 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *countdownColor;

/** 数值文案 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *numberContent;

/** 数值背景图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *numberBackgroundImage;

/** 数值色值 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *numberColor;

/** 倒计时背景图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *countdownBackgroundImage;

/** PC数值背景图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcNumberBackgroundImage;

/** PC倒计时背景图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcCountdownBackgroundImage;

/** 最低财富值 */
@property(nonatomic, readwrite) int64_t wealthMin;

/** 最大财富值 */
@property(nonatomic, readwrite) int64_t wealthMax;

/** 最低魅力值 */
@property(nonatomic, readwrite) int64_t charmMin;

/** 最大魅力值 */
@property(nonatomic, readwrite) int64_t charmMax;

/** 等级逻辑关系 false: "或", true "且" */
@property(nonatomic, readwrite) BOOL logicType;

/** 公屏事件 */
@property(nonatomic, readwrite, strong, null_resettable) PB3SystemNoticeEvent *event;
/** Test to see if @c event has been set. */
@property(nonatomic, readwrite) BOOL hasEvent;

/** 房间ID */
@property(nonatomic, readwrite) int64_t roomId;

/** 进度颜色色值 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *progressBarColor;

/** 进度条底色色值 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *progressBarBackgroundColor;

/** 进度条数字色值 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *progressBarNumberColor;

/** 当前数量 */
@property(nonatomic, readwrite) int32_t currentNum;

/** 目标数量 */
@property(nonatomic, readwrite) int32_t goalNum;

/** 是否显示倒计时 */
@property(nonatomic, readwrite) BOOL showCountdown;

/** 是否显示数值 */
@property(nonatomic, readwrite) BOOL showNumber;

@end

/**
 * Fetches the raw value of a @c PB3RoomTopRightCornerLabelInfo's @c labelType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3RoomTopRightCornerLabelInfo_LabelType_RawValue(PB3RoomTopRightCornerLabelInfo *message);
/**
 * Sets the raw value of an @c PB3RoomTopRightCornerLabelInfo's @c labelType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3RoomTopRightCornerLabelInfo_LabelType_RawValue(PB3RoomTopRightCornerLabelInfo *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
