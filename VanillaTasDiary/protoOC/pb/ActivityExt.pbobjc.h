// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pb/activity.ext.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class PB3ActBoxGameRank;
@class PB3ActBoxGameSelLog;
@class PB3ActFormRecord;
@class PB3ActFormResult;
@class PB3ActGiftLogData;
@class PB3Activity;
@class PB3ActivityAwardInfo;
@class PB3ActivityUser;
@class PB3BannerDetonatedBox;
@class PB3BlindAwardInfo;
@class PB3BlindRoomInfo;
@class PB3BoxAward;
@class PB3Comment;
@class PB3CompoundAsset;
@class PB3ConfActFormCarrier;
@class PB3ConfCompound;
@class PB3ConfCultivate;
@class PB3ConfDrawCard;
@class PB3ConfGoldBack;
@class PB3ConfLottery;
@class PB3ConfNewAwardCustomAward;
@class PB3ConfPuzzle;
@class PB3ConfVote;
@class PB3ConfWelfare;
@class PB3CpsClanInviteeLogInfo;
@class PB3CpsInviteeInfo;
@class PB3CpsInviteeRechargeLog;
@class PB3CpsPlayerCountSort;
@class PB3CpsPlayerGoldSort;
@class PB3Cultivate;
@class PB3EventBoxReward;
@class PB3FriendCpInfo;
@class PB3GiftInfo;
@class PB3GoldBackData;
@class PB3GoldBackLog;
@class PB3IntegralBonusItem;
@class PB3IntegralMissionItem;
@class PB3InviteCodeRecord;
@class PB3ListGiftShow;
@class PB3LogCompound;
@class PB3LogCultivate;
@class PB3LogDrawCard;
@class PB3LogTreasureSaleGift;
@class PB3LotteryRecord;
@class PB3LuckFunGoods;
@class PB3LuckFunRankItem;
@class PB3LuckFunWinGoodsInfoData;
@class PB3ManySortResult;
@class PB3NameListResult;
@class PB3NewAward;
@class PB3NewAwards;
@class PB3NoticeRecord;
@class PB3Number;
@class PB3NumberAwardPlayer;
@class PB3PartitionData;
@class PB3Player;
@class PB3PlayerActAwardInfo;
@class PB3PlayerBetOrder;
@class PB3PlayerCommentInfo;
@class PB3PlayerSortMsg;
@class PB3PlayerTime;
@class PB3PlayerTreasureRecordInfo;
@class PB3Puzzle;
@class PB3QuizAnswer;
@class PB3QuizPaper;
@class PB3QuizPlayerQuestion;
@class PB3QuizPlayerQuestionOption;
@class PB3QuizQuestion;
@class PB3QuizQuestionOption;
@class PB3QuizRankPlayer;
@class PB3QuizTypeData;
@class PB3RankItem;
@class PB3RankPromotion;
@class PB3RoomRankItem;
@class PB3SaleGiftItem;
@class PB3SendGiftPlayer;
@class PB3SeqLotteryPrize;
@class PB3SignInLog;
@class PB3SignInfo;
@class PB3SlotMachineBetConfigItem;
@class PB3SlotMachineBetItem;
@class PB3SlotMachineBetPriceItem;
@class PB3SlotMachineBetRecordItem;
@class PB3SlotMachineOpenRecordItem;
@class PB3SlotMachinePriceItem;
@class PB3SortParam;
@class PB3SortResult;
@class PB3SpecialAward;
@class PB3SportCarAwardPool;
@class PB3SportCarDrawLotteryRes;
@class PB3SportCarRefreshInfo;
@class PB3StockGiftSortResult;
@class PB3StudentSort;
@class PB3SummaryAnnualTitle;
@class PB3SummaryBill;
@class PB3SummaryGift;
@class PB3SurplusBannerBoxInfo;
@class PB3TakeGoldGiftConf;
@class PB3TakeGoldLog;
@class PB3TemPointRecord;
@class PB3Theme;
@class PB3TransferAwardPlayer;
@class PB3TransferAwardRank;
@class PB3TreasureInfo;
@class PB3TreasurePlayerInfo;
@class PB3UserQuizAns;
@class PB3UserQuizOption;
@class PB3UserQuizQuestion;
@class PB3VoteAwardInfo;
@class PB3VoteRecord;
@class PB3VoteResult;
@class PB3WelfareLogData;
@class PB3WelfareRankInfo;
@class PB3WinGoodsRecord;
GPB_ENUM_FWD_DECLARE(PB3ActAwardType);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum PB3BetStatusType

/** 投注状态 */
typedef GPB_ENUM(PB3BetStatusType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3BetStatusType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 空, 占位 */
  PB3BetStatusType_BetStatusTypeNone = 0,

  /** 下注中 */
  PB3BetStatusType_BetStatusTypeBet = 1,

  /** 等待结果 */
  PB3BetStatusType_BetStatusTypeWaitResult = 2,

  /** 公布结果 */
  PB3BetStatusType_BetStatusTypeResult = 3,

  /** 等待下一轮开始 */
  PB3BetStatusType_BetStatusTypeWaitNextRound = 4,

  /** 关闭状态 */
  PB3BetStatusType_BetStatusTypeClose = 5,
};

GPBEnumDescriptor *PB3BetStatusType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3BetStatusType_IsValidValue(int32_t value);

#pragma mark - Enum PB3DeiceGridRewardType

/** 禮物、寶箱、金幣、鑽石 */
typedef GPB_ENUM(PB3DeiceGridRewardType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3DeiceGridRewardType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 无 */
  PB3DeiceGridRewardType_RewardNone = 0,

  /** 礼物 */
  PB3DeiceGridRewardType_Gift = 1,

  /** 宝箱 */
  PB3DeiceGridRewardType_TreasureBox = 2,

  /** 金币 */
  PB3DeiceGridRewardType_Gold = 3,

  /** 特效 */
  PB3DeiceGridRewardType_RewardEffect = 5,

  /** 积分 */
  PB3DeiceGridRewardType_Point = 6,

  /** 实物 */
  PB3DeiceGridRewardType_Entity = 7,
};

GPBEnumDescriptor *PB3DeiceGridRewardType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3DeiceGridRewardType_IsValidValue(int32_t value);

#pragma mark - Enum PB3CpsPlayerRoleEnum

/** cps角色枚举 */
typedef GPB_ENUM(PB3CpsPlayerRoleEnum) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3CpsPlayerRoleEnum_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 普通用户 */
  PB3CpsPlayerRoleEnum_Guest = 0,

  /** 战队成员 */
  PB3CpsPlayerRoleEnum_ClanPlayer = 1,

  /** 战队队长 */
  PB3CpsPlayerRoleEnum_ClanOwner = 2,

  /** 联盟盟主 */
  PB3CpsPlayerRoleEnum_LeagueOwner = 3,
};

GPBEnumDescriptor *PB3CpsPlayerRoleEnum_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3CpsPlayerRoleEnum_IsValidValue(int32_t value);

#pragma mark - Enum PB3StockGiftRetStatus

typedef GPB_ENUM(PB3StockGiftRetStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3StockGiftRetStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** /0未操作 */
  PB3StockGiftRetStatus_OptNull = 0,

  /** 1已领取 */
  PB3StockGiftRetStatus_OptReceived = 1,

  /** 2已赠送 */
  PB3StockGiftRetStatus_OptSend = 2,

  /** 3已拒绝 */
  PB3StockGiftRetStatus_OptRefuse = 3,

  /** 4活动已结束 */
  PB3StockGiftRetStatus_OptActEnd = 4,
};

GPBEnumDescriptor *PB3StockGiftRetStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3StockGiftRetStatus_IsValidValue(int32_t value);

#pragma mark - Enum PB3StockGiftOptType

typedef GPB_ENUM(PB3StockGiftOptType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3StockGiftOptType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 默认 */
  PB3StockGiftOptType_StockGiftNul = 0,

  /** 库存礼物增加 */
  PB3StockGiftOptType_StockGiftAdd = 1,

  /** 库存礼物减少 */
  PB3StockGiftOptType_StockGiftDec = 2,
};

GPBEnumDescriptor *PB3StockGiftOptType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3StockGiftOptType_IsValidValue(int32_t value);

#pragma mark - Enum PB3StockGiftRelateType

typedef GPB_ENUM(PB3StockGiftRelateType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3StockGiftRelateType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 默认 */
  PB3StockGiftRelateType_RelateTypeNull = 0,

  /** 福利 */
  PB3StockGiftRelateType_RelateTypeWelfare = 1,

  /** 抽奖 */
  PB3StockGiftRelateType_RelateTypeLottery = 2,

  /** 库存礼物赠送 */
  PB3StockGiftRelateType_RelateTypeSend = 3,

  /** 库存礼物领取 */
  PB3StockGiftRelateType_RelateTypeReceive = 4,

  /** 兑换 */
  PB3StockGiftRelateType_RelateTypeExchange = 5,
};

GPBEnumDescriptor *PB3StockGiftRelateType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3StockGiftRelateType_IsValidValue(int32_t value);

#pragma mark - Enum PB3ActivityUserType

typedef GPB_ENUM(PB3ActivityUserType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ActivityUserType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3ActivityUserType_UtNone = 0,

  /** 氧气 */
  PB3ActivityUserType_UtOxygen = 1,

  /** 微信 */
  PB3ActivityUserType_UtWechat = 2,

  /** QQ */
  PB3ActivityUserType_UtQq = 3,
};

GPBEnumDescriptor *PB3ActivityUserType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ActivityUserType_IsValidValue(int32_t value);

#pragma mark - Enum PB3MissionIds

typedef GPB_ENUM(PB3MissionIds) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3MissionIds_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3MissionIds_MissionZero = 0,

  /** 获得点赞 */
  PB3MissionIds_MissionGetLike = 1,

  /** 发布动态 */
  PB3MissionIds_MissionPublish = 2,

  /** 互相关注 */
  PB3MissionIds_MissionFollow = 3,

  /** 点在一条动态 */
  PB3MissionIds_MissionLike = 4,
};

GPBEnumDescriptor *PB3MissionIds_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3MissionIds_IsValidValue(int32_t value);

#pragma mark - Enum PB3QuizType

typedef GPB_ENUM(PB3QuizType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3QuizType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3QuizType_QtNone = 0,

  /** 判断题 */
  PB3QuizType_QtJudge = 1,

  /** 单选题 */
  PB3QuizType_QtSingleChoice = 2,

  /** 多选题 */
  PB3QuizType_QtMultiChoice = 3,

  /** 填空题 */
  PB3QuizType_QtCompletion = 4,
};

GPBEnumDescriptor *PB3QuizType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3QuizType_IsValidValue(int32_t value);

#pragma mark - Enum PB3OptType

typedef GPB_ENUM(PB3OptType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3OptType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3OptType_OtNone = 0,

  /** 普通 */
  PB3OptType_OtNormal = 1,

  /** 其他 */
  PB3OptType_OtOther = 2,
};

GPBEnumDescriptor *PB3OptType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3OptType_IsValidValue(int32_t value);

#pragma mark - Enum PB3NumType

typedef GPB_ENUM(PB3NumType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3NumType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 个数 */
  PB3NumType_Num = 0,

  /** 小时 */
  PB3NumType_Hour = 1,

  /** 天数 */
  PB3NumType_Day = 2,

  /** 分钟 */
  PB3NumType_Minute = 3,
};

GPBEnumDescriptor *PB3NumType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3NumType_IsValidValue(int32_t value);

#pragma mark - Enum PB3LuckFunType

typedef GPB_ENUM(PB3LuckFunType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3LuckFunType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3LuckFunType_LuckFunTypeNone = 0,

  /** 普通 */
  PB3LuckFunType_LuckFunTypeNormal = 1,

  /** 首储 */
  PB3LuckFunType_LuckFunTypeFirstCharge = 2,
};

GPBEnumDescriptor *PB3LuckFunType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3LuckFunType_IsValidValue(int32_t value);

#pragma mark - Enum PB3LuckFunZoneType

typedef GPB_ENUM(PB3LuckFunZoneType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3LuckFunZoneType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 保留 */
  PB3LuckFunZoneType_LfztZero = 0,

  /** 限定礼物 */
  PB3LuckFunZoneType_LfztLimited = 1,

  /** 全服礼物 */
  PB3LuckFunZoneType_LfztService = 2,

  /** 宝石专区 */
  PB3LuckFunZoneType_LfztGem = 3,

  /** 实物专区 */
  PB3LuckFunZoneType_LfztEntity = 4,
};

GPBEnumDescriptor *PB3LuckFunZoneType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3LuckFunZoneType_IsValidValue(int32_t value);

#pragma mark - PB3ActivityExtRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface PB3ActivityExtRoot : GPBRootObject
@end

#pragma mark - PB3GetActConfReq

typedef GPB_ENUM(PB3GetActConfReq_FieldNumber) {
  PB3GetActConfReq_FieldNumber_ActId = 1,
  PB3GetActConfReq_FieldNumber_ConfsArray = 2,
};

@interface PB3GetActConfReq : GPBMessage

/** 0或者此活动id不存在，则返回所有 */
@property(nonatomic, readwrite) int32_t actId;

/** 请求的活动配置 (空数组表示返回所有) */
// |confsArray| contains |PB3ActivityConfType|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *confsArray;
/** The number of items in @c confsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger confsArray_Count;

@end

#pragma mark - PB3GetActConfRes

typedef GPB_ENUM(PB3GetActConfRes_FieldNumber) {
  PB3GetActConfRes_FieldNumber_ActivityArray = 1,
  PB3GetActConfRes_FieldNumber_WelfareArray = 2,
  PB3GetActConfRes_FieldNumber_ConfPuzzleArray = 3,
  PB3GetActConfRes_FieldNumber_Vote = 4,
  PB3GetActConfRes_FieldNumber_CultivateArray = 5,
  PB3GetActConfRes_FieldNumber_GoldBackArray = 6,
  PB3GetActConfRes_FieldNumber_CompoundArray = 7,
  PB3GetActConfRes_FieldNumber_DrawCardArray = 8,
  PB3GetActConfRes_FieldNumber_LotteryArray = 9,
  PB3GetActConfRes_FieldNumber_ConfActFormCarrierArray = 10,
};

@interface PB3GetActConfRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3Activity*> *activityArray;
/** The number of items in @c activityArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger activityArray_Count;

/** 福利配置 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ConfWelfare*> *welfareArray;
/** The number of items in @c welfareArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger welfareArray_Count;

/** 盘点配置 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ConfPuzzle*> *confPuzzleArray;
/** The number of items in @c confPuzzleArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger confPuzzleArray_Count;

/** 投票 */
@property(nonatomic, readwrite, strong, null_resettable) PB3ConfVote *vote;
/** Test to see if @c vote has been set. */
@property(nonatomic, readwrite) BOOL hasVote;

/** 养成配置 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ConfCultivate*> *cultivateArray;
/** The number of items in @c cultivateArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger cultivateArray_Count;

/** 返现配置 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ConfGoldBack*> *goldBackArray;
/** The number of items in @c goldBackArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger goldBackArray_Count;

/** 合成配置 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ConfCompound*> *compoundArray;
/** The number of items in @c compoundArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger compoundArray_Count;

/** 抽卡配置 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ConfDrawCard*> *drawCardArray;
/** The number of items in @c drawCardArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger drawCardArray_Count;

/** 抽奖配置 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ConfLottery*> *lotteryArray;
/** The number of items in @c lotteryArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger lotteryArray_Count;

/** 动态表单配置 - 表单载体 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ConfActFormCarrier*> *confActFormCarrierArray;
/** The number of items in @c confActFormCarrierArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger confActFormCarrierArray_Count;

@end

#pragma mark - PB3CountSortReq

typedef GPB_ENUM(PB3CountSortReq_FieldNumber) {
  PB3CountSortReq_FieldNumber_ActivityId = 1,
  PB3CountSortReq_FieldNumber_RelActivityId = 2,
  PB3CountSortReq_FieldNumber_GiftId = 3,
  PB3CountSortReq_FieldNumber_Cate = 4,
};

/**
 * 统计排行榜(一般为查询过期排行榜时使用)
 **/
@interface PB3CountSortReq : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int32_t activityId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActivityId;

/** 要统计的礼物id */
@property(nonatomic, readwrite) int32_t giftId;

/** 统计类型 房间-room_sort  人员-player_sort */
@property(nonatomic, readwrite, copy, null_resettable) NSString *cate;

@end

#pragma mark - PB3CountSortRes

/**
 * 成功后可查询对应的排行榜数据
 **/
@interface PB3CountSortRes : GPBMessage

@end

#pragma mark - PB3PlayerSortReq

typedef GPB_ENUM(PB3PlayerSortReq_FieldNumber) {
  PB3PlayerSortReq_FieldNumber_Param = 1,
  PB3PlayerSortReq_FieldNumber_Type = 2,
  PB3PlayerSortReq_FieldNumber_PlayerId = 3,
};

/**
 * 个人排行榜
 **/
@interface PB3PlayerSortReq : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3SortParam *param;
/** Test to see if @c param has been set. */
@property(nonatomic, readwrite) BOOL hasParam;

/** 分类，填物品id */
@property(nonatomic, readwrite) int32_t type;

/** 人员id，用于搜索，只能搜索榜单上的数据 */
@property(nonatomic, readwrite) int64_t playerId;

@end

#pragma mark - PB3PlayerSortRes

typedef GPB_ENUM(PB3PlayerSortRes_FieldNumber) {
  PB3PlayerSortRes_FieldNumber_ListArray = 1,
  PB3PlayerSortRes_FieldNumber_Player = 2,
  PB3PlayerSortRes_FieldNumber_Total = 3,
};

@interface PB3PlayerSortRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SortResult*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) PB3SortResult *player;
/** Test to see if @c player has been set. */
@property(nonatomic, readwrite) BOOL hasPlayer;

@property(nonatomic, readwrite) int64_t total;

@end

#pragma mark - PB3ManyPlayerSortReq

typedef GPB_ENUM(PB3ManyPlayerSortReq_FieldNumber) {
  PB3ManyPlayerSortReq_FieldNumber_Param = 1,
  PB3ManyPlayerSortReq_FieldNumber_Type = 2,
  PB3ManyPlayerSortReq_FieldNumber_PlayerId = 3,
  PB3ManyPlayerSortReq_FieldNumber_IsFilterSelf = 4,
};

/**
 * 多人排行榜
 **/
@interface PB3ManyPlayerSortReq : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3SortParam *param;
/** Test to see if @c param has been set. */
@property(nonatomic, readwrite) BOOL hasParam;

/** 分类，填物品id 或者时间零点 */
@property(nonatomic, readwrite) int32_t type;

/** 人员id，用于搜索，只能搜索榜单上的数据 */
@property(nonatomic, readwrite) int64_t playerId;

/** 是否名单过滤 */
@property(nonatomic, readwrite) BOOL isFilterSelf;

@end

#pragma mark - PB3ManyPlayerSortRes

typedef GPB_ENUM(PB3ManyPlayerSortRes_FieldNumber) {
  PB3ManyPlayerSortRes_FieldNumber_ListArray = 1,
  PB3ManyPlayerSortRes_FieldNumber_Total = 2,
  PB3ManyPlayerSortRes_FieldNumber_Player = 3,
};

@interface PB3ManyPlayerSortRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ManySortResult*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@property(nonatomic, readwrite) int64_t total;

/** 个人信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3ManySortResult *player;
/** Test to see if @c player has been set. */
@property(nonatomic, readwrite) BOOL hasPlayer;

@end

#pragma mark - PB3GetManyPlayerSortNoAuthReq

typedef GPB_ENUM(PB3GetManyPlayerSortNoAuthReq_FieldNumber) {
  PB3GetManyPlayerSortNoAuthReq_FieldNumber_Param = 1,
  PB3GetManyPlayerSortNoAuthReq_FieldNumber_Type = 2,
  PB3GetManyPlayerSortNoAuthReq_FieldNumber_PlayerId = 3,
  PB3GetManyPlayerSortNoAuthReq_FieldNumber_IsFilterSelf = 4,
};

/**
 * 多人排行榜
 **/
@interface PB3GetManyPlayerSortNoAuthReq : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3SortParam *param;
/** Test to see if @c param has been set. */
@property(nonatomic, readwrite) BOOL hasParam;

/** 分类，填物品id 或者时间零点 */
@property(nonatomic, readwrite) int32_t type;

/** 人员id，用于搜索，只能搜索榜单上的数据 */
@property(nonatomic, readwrite) int64_t playerId;

/** 是否名单过滤 */
@property(nonatomic, readwrite) BOOL isFilterSelf;

@end

#pragma mark - PB3GetManyPlayerSortNoAuthRes

typedef GPB_ENUM(PB3GetManyPlayerSortNoAuthRes_FieldNumber) {
  PB3GetManyPlayerSortNoAuthRes_FieldNumber_ListArray = 1,
  PB3GetManyPlayerSortNoAuthRes_FieldNumber_Total = 2,
  PB3GetManyPlayerSortNoAuthRes_FieldNumber_Player = 3,
};

@interface PB3GetManyPlayerSortNoAuthRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ManySortResult*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@property(nonatomic, readwrite) int64_t total;

/** 个人信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3ManySortResult *player;
/** Test to see if @c player has been set. */
@property(nonatomic, readwrite) BOOL hasPlayer;

@end

#pragma mark - PB3ManyRoomSortReq

typedef GPB_ENUM(PB3ManyRoomSortReq_FieldNumber) {
  PB3ManyRoomSortReq_FieldNumber_Param = 1,
  PB3ManyRoomSortReq_FieldNumber_Type = 2,
  PB3ManyRoomSortReq_FieldNumber_PlayerId = 3,
};

/**
 * 多人排行榜
 **/
@interface PB3ManyRoomSortReq : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3SortParam *param;
/** Test to see if @c param has been set. */
@property(nonatomic, readwrite) BOOL hasParam;

/** 分类，填物品id 或者时间零点 */
@property(nonatomic, readwrite) int32_t type;

/** 房间id，用于搜索，只能搜索榜单上的数据 */
@property(nonatomic, readwrite) int64_t playerId;

@end

#pragma mark - PB3ManyRoomSortRes

typedef GPB_ENUM(PB3ManyRoomSortRes_FieldNumber) {
  PB3ManyRoomSortRes_FieldNumber_ListArray = 1,
  PB3ManyRoomSortRes_FieldNumber_Total = 2,
  PB3ManyRoomSortRes_FieldNumber_Room = 3,
};

@interface PB3ManyRoomSortRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ManySortResult*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@property(nonatomic, readwrite) int64_t total;

/** 个人信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3ManySortResult *room;
/** Test to see if @c room has been set. */
@property(nonatomic, readwrite) BOOL hasRoom;

@end

#pragma mark - PB3RoomSortReq

typedef GPB_ENUM(PB3RoomSortReq_FieldNumber) {
  PB3RoomSortReq_FieldNumber_Param = 1,
  PB3RoomSortReq_FieldNumber_RoomId = 2,
};

/**
 * 房间排行榜
 **/
@interface PB3RoomSortReq : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3SortParam *param;
/** Test to see if @c param has been set. */
@property(nonatomic, readwrite) BOOL hasParam;

@property(nonatomic, readwrite) int64_t roomId;

@end

#pragma mark - PB3RoomSortRes

typedef GPB_ENUM(PB3RoomSortRes_FieldNumber) {
  PB3RoomSortRes_FieldNumber_ListArray = 1,
  PB3RoomSortRes_FieldNumber_Room = 2,
  PB3RoomSortRes_FieldNumber_Total = 3,
};

@interface PB3RoomSortRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SortResult*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) PB3SortResult *room;
/** Test to see if @c room has been set. */
@property(nonatomic, readwrite) BOOL hasRoom;

@property(nonatomic, readwrite) int64_t total;

@end

#pragma mark - PB3GetGoodNumReq

typedef GPB_ENUM(PB3GetGoodNumReq_FieldNumber) {
  PB3GetGoodNumReq_FieldNumber_PlayerId = 1,
  PB3GetGoodNumReq_FieldNumber_ActivityId = 2,
  PB3GetGoodNumReq_FieldNumber_RelActivityId = 3,
};

/**
 * 获取靓号 当玩家之前获得靓号，但未绑定会暂存24小时或直到活动结束
 **/
@interface PB3GetGoodNumReq : GPBMessage

/** 用户id */
@property(nonatomic, readwrite) int64_t playerId;

/** 活动id */
@property(nonatomic, readwrite) int32_t activityId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActivityId;

@end

#pragma mark - PB3GetGoodNumRes

typedef GPB_ENUM(PB3GetGoodNumRes_FieldNumber) {
  PB3GetGoodNumRes_FieldNumber_Number = 1,
};

@interface PB3GetGoodNumRes : GPBMessage

@property(nonatomic, readwrite) int64_t number;

@end

#pragma mark - PB3RandGoodNumReq

typedef GPB_ENUM(PB3RandGoodNumReq_FieldNumber) {
  PB3RandGoodNumReq_FieldNumber_PlayerId = 1,
  PB3RandGoodNumReq_FieldNumber_ActivityId = 2,
  PB3RandGoodNumReq_FieldNumber_RelActivityId = 3,
};

/**
 * 随机靓号 随机从库存中获得一个靓号
 **/
@interface PB3RandGoodNumReq : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

@property(nonatomic, readwrite) int32_t activityId;

@property(nonatomic, readwrite) int32_t relActivityId;

@end

#pragma mark - PB3RandGoodNumRes

typedef GPB_ENUM(PB3RandGoodNumRes_FieldNumber) {
  PB3RandGoodNumRes_FieldNumber_Number = 1,
  PB3RandGoodNumRes_FieldNumber_GuaranteedAward = 2,
};

@interface PB3RandGoodNumRes : GPBMessage

@property(nonatomic, readwrite) int64_t number;

/** 判断是否触发保底奖励 */
@property(nonatomic, readwrite) BOOL guaranteedAward;

@end

#pragma mark - PB3BindGoodNumReq

typedef GPB_ENUM(PB3BindGoodNumReq_FieldNumber) {
  PB3BindGoodNumReq_FieldNumber_ActivityId = 1,
  PB3BindGoodNumReq_FieldNumber_RelActivityId = 2,
  PB3BindGoodNumReq_FieldNumber_Number = 3,
  PB3BindGoodNumReq_FieldNumber_OldNumber = 4,
  PB3BindGoodNumReq_FieldNumber_Used = 5,
};

/**
 * 绑定或替换靓号 如果没有靓号则直接使用
 **/
@interface PB3BindGoodNumReq : GPBMessage

@property(nonatomic, readwrite) int32_t activityId;

@property(nonatomic, readwrite) int32_t relActivityId;

/** 靓号 */
@property(nonatomic, readwrite) int64_t number;

/** 要替换的靓号 */
@property(nonatomic, readwrite) int64_t oldNumber;

/** 是否使用 true表示使用这个靓号 false 只绑定 */
@property(nonatomic, readwrite) BOOL used;

@end

#pragma mark - PB3BindGoodNumRes

@interface PB3BindGoodNumRes : GPBMessage

@end

#pragma mark - PB3BuyRockGoodNumReq

typedef GPB_ENUM(PB3BuyRockGoodNumReq_FieldNumber) {
  PB3BuyRockGoodNumReq_FieldNumber_ActivityId = 1,
  PB3BuyRockGoodNumReq_FieldNumber_RelActivityId = 2,
};

/**
 * 购买摇靓号机会
 **/
@interface PB3BuyRockGoodNumReq : GPBMessage

@property(nonatomic, readwrite) int32_t activityId;

@property(nonatomic, readwrite) int32_t relActivityId;

@end

#pragma mark - PB3BuyRockGoodNumRes

@interface PB3BuyRockGoodNumRes : GPBMessage

@end

#pragma mark - PB3GetPlayerPayRes

typedef GPB_ENUM(PB3GetPlayerPayRes_FieldNumber) {
  PB3GetPlayerPayRes_FieldNumber_PayCount = 1,
  PB3GetPlayerPayRes_FieldNumber_Times = 2,
  PB3GetPlayerPayRes_FieldNumber_CountTimes = 3,
  PB3GetPlayerPayRes_FieldNumber_BindNumTimes = 4,
  PB3GetPlayerPayRes_FieldNumber_GuaranteedUsed = 5,
  PB3GetPlayerPayRes_FieldNumber_GuaranteedPlan = 6,
};

@interface PB3GetPlayerPayRes : GPBMessage

/** 充值总数 */
@property(nonatomic, readwrite) int64_t payCount;

/** 可用次数 */
@property(nonatomic, readwrite) int32_t times;

/** 总次数 */
@property(nonatomic, readwrite) int32_t countTimes;

/** 绑定靓号次数 */
@property(nonatomic, readwrite) int32_t bindNumTimes;

/** 已使用几次保底奖励 */
@property(nonatomic, readwrite) int32_t guaranteedUsed;

/** 保底进度 */
@property(nonatomic, readwrite) int32_t guaranteedPlan;

@end

#pragma mark - PB3GetThemeReq

/**
 * 获取主题配置  有配置使用配置，没有使用默认
 **/
@interface PB3GetThemeReq : GPBMessage

@end

#pragma mark - PB3GetThemeRes

typedef GPB_ENUM(PB3GetThemeRes_FieldNumber) {
  PB3GetThemeRes_FieldNumber_ThemesArray = 1,
};

@interface PB3GetThemeRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3Theme*> *themesArray;
/** The number of items in @c themesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger themesArray_Count;

@end

#pragma mark - PB3GuaranteedAwardReq

typedef GPB_ENUM(PB3GuaranteedAwardReq_FieldNumber) {
  PB3GuaranteedAwardReq_FieldNumber_ActivityId = 1,
  PB3GuaranteedAwardReq_FieldNumber_RelActivityId = 2,
};

/**
 * 获取保底奖励
 **/
@interface PB3GuaranteedAwardReq : GPBMessage

@property(nonatomic, readwrite) int32_t activityId;

@property(nonatomic, readwrite) int32_t relActivityId;

@end

#pragma mark - PB3GuaranteedAwardRes

typedef GPB_ENUM(PB3GuaranteedAwardRes_FieldNumber) {
  PB3GuaranteedAwardRes_FieldNumber_GiftId = 1,
  PB3GuaranteedAwardRes_FieldNumber_Num = 2,
};

@interface PB3GuaranteedAwardRes : GPBMessage

@property(nonatomic, readwrite) int32_t giftId;

@property(nonatomic, readwrite) int64_t num;

@end

#pragma mark - PB3PublishCommentReq

typedef GPB_ENUM(PB3PublishCommentReq_FieldNumber) {
  PB3PublishCommentReq_FieldNumber_ActivityId = 1,
  PB3PublishCommentReq_FieldNumber_RelActivityId = 2,
  PB3PublishCommentReq_FieldNumber_Notice = 3,
  PB3PublishCommentReq_FieldNumber_ShowName = 4,
};

/**
 * //////发表评论
 **/
@interface PB3PublishCommentReq : GPBMessage

@property(nonatomic, readwrite) int32_t activityId;

@property(nonatomic, readwrite) int32_t relActivityId;

/** 评论内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *notice;

/** false 不匿名 true 匿名 */
@property(nonatomic, readwrite) BOOL showName;

@end

#pragma mark - PB3PublishCommentRes

@interface PB3PublishCommentRes : GPBMessage

@end

#pragma mark - PB3ListCommentReq

typedef GPB_ENUM(PB3ListCommentReq_FieldNumber) {
  PB3ListCommentReq_FieldNumber_ActivityId = 1,
  PB3ListCommentReq_FieldNumber_RelActivityId = 2,
  PB3ListCommentReq_FieldNumber_Page = 3,
  PB3ListCommentReq_FieldNumber_PageSize = 4,
};

/**
 * //////获取评论列表
 **/
@interface PB3ListCommentReq : GPBMessage

@property(nonatomic, readwrite) int32_t activityId;

@property(nonatomic, readwrite) int32_t relActivityId;

@property(nonatomic, readwrite) int64_t page;

@property(nonatomic, readwrite) int64_t pageSize;

@end

#pragma mark - PB3ListCommentRes

typedef GPB_ENUM(PB3ListCommentRes_FieldNumber) {
  PB3ListCommentRes_FieldNumber_ListArray = 1,
};

@interface PB3ListCommentRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3Comment*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3ListNameListReq

typedef GPB_ENUM(PB3ListNameListReq_FieldNumber) {
  PB3ListNameListReq_FieldNumber_RelId = 1,
};

/**
 * 获取入围名单
 **/
@interface PB3ListNameListReq : GPBMessage

@property(nonatomic, readwrite) int32_t relId;

@end

#pragma mark - PB3ListNameListRes

typedef GPB_ENUM(PB3ListNameListRes_FieldNumber) {
  PB3ListNameListRes_FieldNumber_ListArray = 1,
};

@interface PB3ListNameListRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3NameListResult*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3GiveALikeReq

typedef GPB_ENUM(PB3GiveALikeReq_FieldNumber) {
  PB3GiveALikeReq_FieldNumber_ActivityId = 1,
  PB3GiveALikeReq_FieldNumber_RelActivityId = 2,
  PB3GiveALikeReq_FieldNumber_PlayerIdArray = 3,
  PB3GiveALikeReq_FieldNumber_Type = 4,
};

/**
 * 点赞
 **/
@interface PB3GiveALikeReq : GPBMessage

@property(nonatomic, readwrite) int32_t activityId;

@property(nonatomic, readwrite) int32_t relActivityId;

/** 支持多个玩家 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *playerIdArray;
/** The number of items in @c playerIdArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger playerIdArray_Count;

/** 分类，填物品id 或者零点时间戳 */
@property(nonatomic, readwrite) int32_t type;

@end

#pragma mark - PB3GiveALikeRes

typedef GPB_ENUM(PB3GiveALikeRes_FieldNumber) {
  PB3GiveALikeRes_FieldNumber_Award = 1,
};

@interface PB3GiveALikeRes : GPBMessage

/** 奖励 二维数组的字符串 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *award;

@end

#pragma mark - PB3UploadFileReq

typedef GPB_ENUM(PB3UploadFileReq_FieldNumber) {
  PB3UploadFileReq_FieldNumber_File = 1,
  PB3UploadFileReq_FieldNumber_FileName = 2,
  PB3UploadFileReq_FieldNumber_Path = 3,
};

/**
 * 上传文件
 **/
@interface PB3UploadFileReq : GPBMessage

/** 文件 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *file;

/** 文件名字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *fileName;

/** 路径 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *path;

@end

#pragma mark - PB3UploadFileRes

typedef GPB_ENUM(PB3UploadFileRes_FieldNumber) {
  PB3UploadFileRes_FieldNumber_URL = 1,
};

@interface PB3UploadFileRes : GPBMessage

/** 返回相对路劲，自己拼host */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

@end

#pragma mark - PB3ReceiveWelfareReq

typedef GPB_ENUM(PB3ReceiveWelfareReq_FieldNumber) {
  PB3ReceiveWelfareReq_FieldNumber_WelfareId = 1,
  PB3ReceiveWelfareReq_FieldNumber_TargetId = 2,
  PB3ReceiveWelfareReq_FieldNumber_SelectAwardIdArray = 3,
};

/**
 * 领取福利
 **/
@interface PB3ReceiveWelfareReq : GPBMessage

@property(nonatomic, readwrite) int32_t welfareId;

/** 用于挚友绑定 */
@property(nonatomic, readwrite) int64_t targetId;

/** 自定义奖励id */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *selectAwardIdArray;
/** The number of items in @c selectAwardIdArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger selectAwardIdArray_Count;

@end

#pragma mark - PB3ReceiveWelfareRes

typedef GPB_ENUM(PB3ReceiveWelfareRes_FieldNumber) {
  PB3ReceiveWelfareRes_FieldNumber_Award = 1,
  PB3ReceiveWelfareRes_FieldNumber_AwardsArray = 2,
};

@interface PB3ReceiveWelfareRes : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *award;

/** 奖励 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3NewAward*> *awardsArray;
/** The number of items in @c awardsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger awardsArray_Count;

@end

#pragma mark - PB3FinishWelfareReq

typedef GPB_ENUM(PB3FinishWelfareReq_FieldNumber) {
  PB3FinishWelfareReq_FieldNumber_WelfareId = 1,
};

/**
 * 完成福利
 **/
@interface PB3FinishWelfareReq : GPBMessage

@property(nonatomic, readwrite) int32_t welfareId;

@end

#pragma mark - PB3FinishWelfareRes

@interface PB3FinishWelfareRes : GPBMessage

@end

#pragma mark - PB3GetUsePointReq

typedef GPB_ENUM(PB3GetUsePointReq_FieldNumber) {
  PB3GetUsePointReq_FieldNumber_ActivityId = 1,
  PB3GetUsePointReq_FieldNumber_RelActivityId = 2,
  PB3GetUsePointReq_FieldNumber_PlayerId = 3,
};

/**
 * 获取个人已使用积分
 **/
@interface PB3GetUsePointReq : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int32_t activityId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActivityId;

@property(nonatomic, readwrite) int64_t playerId;

@end

#pragma mark - PB3GetUsePointRes

typedef GPB_ENUM(PB3GetUsePointRes_FieldNumber) {
  PB3GetUsePointRes_FieldNumber_Point = 1,
  PB3GetUsePointRes_FieldNumber_UsePoint = 2,
};

@interface PB3GetUsePointRes : GPBMessage

/** 总积分 */
@property(nonatomic, readwrite) int64_t point;

/** 已使用积分 */
@property(nonatomic, readwrite) int64_t usePoint;

@end

#pragma mark - PB3DoTaskReq

typedef GPB_ENUM(PB3DoTaskReq_FieldNumber) {
  PB3DoTaskReq_FieldNumber_ActivityId = 1,
  PB3DoTaskReq_FieldNumber_RelActivityId = 2,
  PB3DoTaskReq_FieldNumber_Type = 3,
  PB3DoTaskReq_FieldNumber_DayTime = 4,
  PB3DoTaskReq_FieldNumber_WelfareId = 5,
};

/**
 * 做任务，福利
 **/
@interface PB3DoTaskReq : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int32_t activityId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActivityId;

/** 2-分享 3-签到 47-白嫖 */
@property(nonatomic, readwrite) int32_t type;

/** 签到时间戳 只保留日期yyyy-MM-dd 转化为秒 废弃 */
@property(nonatomic, readwrite) int64_t dayTime DEPRECATED_ATTRIBUTE;

/** 福利id，如果0触发所有当前类型可以触发的福利，如果传了福利id，触发相应的福利 */
@property(nonatomic, readwrite) int32_t welfareId;

@end

#pragma mark - PB3DoTaskRes

typedef GPB_ENUM(PB3DoTaskRes_FieldNumber) {
  PB3DoTaskRes_FieldNumber_WelfareIdArray = 1,
};

@interface PB3DoTaskRes : GPBMessage

/** 福利id列表 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *welfareIdArray;
/** The number of items in @c welfareIdArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger welfareIdArray_Count;

@end

#pragma mark - PB3ListSignReq

typedef GPB_ENUM(PB3ListSignReq_FieldNumber) {
  PB3ListSignReq_FieldNumber_ActivityId = 1,
  PB3ListSignReq_FieldNumber_RelActivityId = 2,
  PB3ListSignReq_FieldNumber_PlayerId = 3,
};

/**
 * 获取签到列表
 **/
@interface PB3ListSignReq : GPBMessage

@property(nonatomic, readwrite) int32_t activityId;

@property(nonatomic, readwrite) int32_t relActivityId;

@property(nonatomic, readwrite) int64_t playerId;

@end

#pragma mark - PB3ListSignRes

typedef GPB_ENUM(PB3ListSignRes_FieldNumber) {
  PB3ListSignRes_FieldNumber_ListArray = 1,
};

@interface PB3ListSignRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SignInfo*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3DrawLuckyReq

typedef GPB_ENUM(PB3DrawLuckyReq_FieldNumber) {
  PB3DrawLuckyReq_FieldNumber_RelId = 1,
  PB3DrawLuckyReq_FieldNumber_Num = 2,
  PB3DrawLuckyReq_FieldNumber_LotteryId = 3,
  PB3DrawLuckyReq_FieldNumber_AssignId = 4,
  PB3DrawLuckyReq_FieldNumber_IsAutoBuy = 5,
  PB3DrawLuckyReq_FieldNumber_ExtraLottery = 6,
};

/**
 * 抽奖
 **/
@interface PB3DrawLuckyReq : GPBMessage

/** 子活动id */
@property(nonatomic, readwrite) int32_t relId;

/** 数量 */
@property(nonatomic, readwrite) int32_t num;

/** 抽奖配置id */
@property(nonatomic, readwrite) int32_t lotteryId;

/** 物品id */
@property(nonatomic, readwrite) int32_t assignId;

/** 物品不足时自动购买物品 */
@property(nonatomic, readwrite) BOOL isAutoBuy;

/** 额外抽奖ID */
@property(nonatomic, readwrite) int32_t extraLottery;

@end

#pragma mark - PB3DrawLuckyRes

typedef GPB_ENUM(PB3DrawLuckyRes_FieldNumber) {
  PB3DrawLuckyRes_FieldNumber_Awards = 1,
  PB3DrawLuckyRes_FieldNumber_DeductAwards = 2,
};

/**
 * 奖励
 **/
@interface PB3DrawLuckyRes : GPBMessage

/** map[抽奖奖品配置id][]奖励 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32ObjectDictionary<PB3NewAwards*> *awards;
/** The number of items in @c awards without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger awards_Count;

/** map[抽奖奖品配置id][]奖励 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32ObjectDictionary<PB3NewAwards*> *deductAwards;
/** The number of items in @c deductAwards without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger deductAwards_Count;

@end

#pragma mark - PB3ListGiftShowReq

typedef GPB_ENUM(PB3ListGiftShowReq_FieldNumber) {
  PB3ListGiftShowReq_FieldNumber_ActivityId = 1,
  PB3ListGiftShowReq_FieldNumber_RelActivityId = 2,
};

/**
 * 获取礼物展示
 **/
@interface PB3ListGiftShowReq : GPBMessage

@property(nonatomic, readwrite) int32_t activityId;

@property(nonatomic, readwrite) int32_t relActivityId;

@end

#pragma mark - PB3ListGiftShowRes

typedef GPB_ENUM(PB3ListGiftShowRes_FieldNumber) {
  PB3ListGiftShowRes_FieldNumber_ListArray = 1,
};

@interface PB3ListGiftShowRes : GPBMessage

/** 礼物列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ListGiftShow*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3ActVoteReq

typedef GPB_ENUM(PB3ActVoteReq_FieldNumber) {
  PB3ActVoteReq_FieldNumber_ActivityId = 1,
  PB3ActVoteReq_FieldNumber_RelActivityId = 2,
  PB3ActVoteReq_FieldNumber_TargetId = 3,
  PB3ActVoteReq_FieldNumber_GiftId = 4,
  PB3ActVoteReq_FieldNumber_Num = 5,
};

/**
 * 投票
 **/
@interface PB3ActVoteReq : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int32_t activityId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActivityId;

/** 目标id */
@property(nonatomic, readwrite) int64_t targetId;

/** 礼物id */
@property(nonatomic, readwrite) int32_t giftId;

/** 礼物数量 */
@property(nonatomic, readwrite) int64_t num;

@end

#pragma mark - PB3ActVoteRes

@interface PB3ActVoteRes : GPBMessage

@end

#pragma mark - PB3RandNumberReq

typedef GPB_ENUM(PB3RandNumberReq_FieldNumber) {
  PB3RandNumberReq_FieldNumber_RelActivityId = 1,
  PB3RandNumberReq_FieldNumber_Cate = 2,
};

/**
 * 获取抽奖号
 **/
@interface PB3RandNumberReq : GPBMessage

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActivityId;

/** 1-分享 2-邀请 */
@property(nonatomic, readwrite) int32_t cate;

@end

#pragma mark - PB3RandNumberRes

typedef GPB_ENUM(PB3RandNumberRes_FieldNumber) {
  PB3RandNumberRes_FieldNumber_Number = 1,
};

@interface PB3RandNumberRes : GPBMessage

/** 抽奖号 */
@property(nonatomic, readwrite) int32_t number;

@end

#pragma mark - PB3ListNumberReq

typedef GPB_ENUM(PB3ListNumberReq_FieldNumber) {
  PB3ListNumberReq_FieldNumber_RelActivityId = 1,
};

/**
 * 获取抽奖号码列表
 **/
@interface PB3ListNumberReq : GPBMessage

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActivityId;

@end

#pragma mark - PB3ListNumberRes

typedef GPB_ENUM(PB3ListNumberRes_FieldNumber) {
  PB3ListNumberRes_FieldNumber_ListArray = 1,
};

@interface PB3ListNumberRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3Number*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3ListNumberAwardReq

typedef GPB_ENUM(PB3ListNumberAwardReq_FieldNumber) {
  PB3ListNumberAwardReq_FieldNumber_RelActivityId = 1,
};

/**
 * 获取中奖列表
 **/
@interface PB3ListNumberAwardReq : GPBMessage

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActivityId;

@end

#pragma mark - PB3ListNumberAwardRes

typedef GPB_ENUM(PB3ListNumberAwardRes_FieldNumber) {
  PB3ListNumberAwardRes_FieldNumber_ListArray = 1,
};

@interface PB3ListNumberAwardRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3NumberAwardPlayer*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3ListSpecialAwardReq

typedef GPB_ENUM(PB3ListSpecialAwardReq_FieldNumber) {
  PB3ListSpecialAwardReq_FieldNumber_RelActivityId = 1,
};

/**
 * 获取特别奖励列表
 **/
@interface PB3ListSpecialAwardReq : GPBMessage

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActivityId;

@end

#pragma mark - PB3ListSpecialAwardRes

typedef GPB_ENUM(PB3ListSpecialAwardRes_FieldNumber) {
  PB3ListSpecialAwardRes_FieldNumber_ListArray = 1,
};

@interface PB3ListSpecialAwardRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SpecialAward*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3CountInviteReq

typedef GPB_ENUM(PB3CountInviteReq_FieldNumber) {
  PB3CountInviteReq_FieldNumber_RelActivityId = 1,
  PB3CountInviteReq_FieldNumber_PlayerId = 2,
};

/**
 * 统计邀请人数
 **/
@interface PB3CountInviteReq : GPBMessage

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActivityId;

/** 人员id */
@property(nonatomic, readwrite) int64_t playerId;

@end

#pragma mark - PB3CountInviteRes

typedef GPB_ENUM(PB3CountInviteRes_FieldNumber) {
  PB3CountInviteRes_FieldNumber_InviteNum = 1,
};

@interface PB3CountInviteRes : GPBMessage

/** 邀请人数 */
@property(nonatomic, readwrite) int32_t inviteNum;

@end

#pragma mark - PB3GetPlayerSummaryReq

typedef GPB_ENUM(PB3GetPlayerSummaryReq_FieldNumber) {
  PB3GetPlayerSummaryReq_FieldNumber_RelId = 1,
  PB3GetPlayerSummaryReq_FieldNumber_PlayerId = 2,
};

/**
 * 获取个人盘点信息
 **/
@interface PB3GetPlayerSummaryReq : GPBMessage

/** 子活动id */
@property(nonatomic, readwrite) int32_t relId;

/** 人员id */
@property(nonatomic, readwrite) int64_t playerId;

@end

#pragma mark - PB3ListPlayerActAwardReq

typedef GPB_ENUM(PB3ListPlayerActAwardReq_FieldNumber) {
  PB3ListPlayerActAwardReq_FieldNumber_RelId = 1,
  PB3ListPlayerActAwardReq_FieldNumber_Stage = 2,
  PB3ListPlayerActAwardReq_FieldNumber_PlayerId = 3,
  PB3ListPlayerActAwardReq_FieldNumber_Page = 4,
  PB3ListPlayerActAwardReq_FieldNumber_PageSize = 5,
};

/**
 * 获取奖励记录
 **/
@interface PB3ListPlayerActAwardReq : GPBMessage

/** 关联id 0-获取全部 其他为子活动id */
@property(nonatomic, readwrite) int32_t relId;

/** 活动阶段 */
@property(nonatomic, readwrite) int64_t stage;

/** 玩家id 0-获取全部 */
@property(nonatomic, readwrite) int64_t playerId;

@property(nonatomic, readwrite) int32_t page;

@property(nonatomic, readwrite) int32_t pageSize;

@end

#pragma mark - PB3ListPlayerActAwardRes

typedef GPB_ENUM(PB3ListPlayerActAwardRes_FieldNumber) {
  PB3ListPlayerActAwardRes_FieldNumber_ListArray = 1,
};

@interface PB3ListPlayerActAwardRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3PlayerActAwardInfo*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3PlayerActAwardInfo

typedef GPB_ENUM(PB3PlayerActAwardInfo_FieldNumber) {
  PB3PlayerActAwardInfo_FieldNumber_PlayerId = 1,
  PB3PlayerActAwardInfo_FieldNumber_RelId = 2,
  PB3PlayerActAwardInfo_FieldNumber_AwardId = 3,
  PB3PlayerActAwardInfo_FieldNumber_Num = 5,
  PB3PlayerActAwardInfo_FieldNumber_Type = 6,
  PB3PlayerActAwardInfo_FieldNumber_Value = 7,
  PB3PlayerActAwardInfo_FieldNumber_Name = 8,
  PB3PlayerActAwardInfo_FieldNumber_ImageURL = 9,
};

/**
 * 奖励信息
 **/
@interface PB3PlayerActAwardInfo : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

/** 关联id */
@property(nonatomic, readwrite) int32_t relId;

@property(nonatomic, readwrite) int64_t awardId;

/** 数量 */
@property(nonatomic, readwrite) int32_t num;

@property(nonatomic, readwrite) enum PB3ActAwardType type;

/** 奖类型的值 礼物为礼物id，货币为货币总量 */
@property(nonatomic, readwrite) int32_t value;

/** 奖励名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *imageURL;

@end

/**
 * Fetches the raw value of a @c PB3PlayerActAwardInfo's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3PlayerActAwardInfo_Type_RawValue(PB3PlayerActAwardInfo *message);
/**
 * Sets the raw value of an @c PB3PlayerActAwardInfo's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3PlayerActAwardInfo_Type_RawValue(PB3PlayerActAwardInfo *message, int32_t value);

#pragma mark - PB3GetPlayerSummaryRes

typedef GPB_ENUM(PB3GetPlayerSummaryRes_FieldNumber) {
  PB3GetPlayerSummaryRes_FieldNumber_PlayerId = 1,
  PB3GetPlayerSummaryRes_FieldNumber_RegisterTime = 2,
  PB3GetPlayerSummaryRes_FieldNumber_RegisterRate = 3,
  PB3GetPlayerSummaryRes_FieldNumber_OnlineAmountTime = 4,
  PB3GetPlayerSummaryRes_FieldNumber_FollowNum = 5,
  PB3GetPlayerSummaryRes_FieldNumber_FollowIntimateNum = 6,
  PB3GetPlayerSummaryRes_FieldNumber_IntimateNum = 7,
  PB3GetPlayerSummaryRes_FieldNumber_LongestPlayer = 8,
  PB3GetPlayerSummaryRes_FieldNumber_DissLongestPlayer = 9,
  PB3GetPlayerSummaryRes_FieldNumber_ReceiveGiftNum = 10,
  PB3GetPlayerSummaryRes_FieldNumber_ReceiveGiftAmount = 11,
  PB3GetPlayerSummaryRes_FieldNumber_ReceiveExpensiveGiftId = 12,
  PB3GetPlayerSummaryRes_FieldNumber_CrackEggAmount = 13,
  PB3GetPlayerSummaryRes_FieldNumber_CrackEggRate = 14,
  PB3GetPlayerSummaryRes_FieldNumber_KeyWord = 15,
  PB3GetPlayerSummaryRes_FieldNumber_LongestDay = 16,
  PB3GetPlayerSummaryRes_FieldNumber_LogestDayTime = 17,
  PB3GetPlayerSummaryRes_FieldNumber_FriendsArray = 18,
  PB3GetPlayerSummaryRes_FieldNumber_IntimatesArray = 19,
  PB3GetPlayerSummaryRes_FieldNumber_Wealth = 20,
  PB3GetPlayerSummaryRes_FieldNumber_WealthRate = 21,
  PB3GetPlayerSummaryRes_FieldNumber_VisitorSummary = 22,
  PB3GetPlayerSummaryRes_FieldNumber_BeFollowNum = 23,
  PB3GetPlayerSummaryRes_FieldNumber_VisitTimeFrequency = 24,
  PB3GetPlayerSummaryRes_FieldNumber_LastestVisitTime = 25,
  PB3GetPlayerSummaryRes_FieldNumber_BuddyNum = 26,
  PB3GetPlayerSummaryRes_FieldNumber_SendGiftPlayerNum = 27,
  PB3GetPlayerSummaryRes_FieldNumber_SendGiftAmount = 28,
  PB3GetPlayerSummaryRes_FieldNumber_SendMostGiftPlayerId = 29,
  PB3GetPlayerSummaryRes_FieldNumber_SendMostGiftNum = 30,
  PB3GetPlayerSummaryRes_FieldNumber_ReceiveMostGiftsPlayerId = 31,
  PB3GetPlayerSummaryRes_FieldNumber_ReceiveMostGiftsAmount = 32,
  PB3GetPlayerSummaryRes_FieldNumber_ReceiveMostGiftsNum = 33,
  PB3GetPlayerSummaryRes_FieldNumber_RareGiftListArray = 34,
  PB3GetPlayerSummaryRes_FieldNumber_FirstWaterFlowersTime = 35,
  PB3GetPlayerSummaryRes_FieldNumber_WaterFlowerGiftListArray = 36,
  PB3GetPlayerSummaryRes_FieldNumber_BillAmount = 37,
  PB3GetPlayerSummaryRes_FieldNumber_BillDataArray = 38,
  PB3GetPlayerSummaryRes_FieldNumber_AnnualTitle = 39,
  PB3GetPlayerSummaryRes_FieldNumber_AnnualLevel = 40,
  PB3GetPlayerSummaryRes_FieldNumber_FansNumDoc = 41,
  PB3GetPlayerSummaryRes_FieldNumber_LastVisitTimeDoc = 42,
  PB3GetPlayerSummaryRes_FieldNumber_BuddyNumDoc = 43,
  PB3GetPlayerSummaryRes_FieldNumber_SendGiftNumDoc = 44,
  PB3GetPlayerSummaryRes_FieldNumber_DiamondCarNumDoc = 45,
  PB3GetPlayerSummaryRes_FieldNumber_BillTypeMostDoc = 46,
  PB3GetPlayerSummaryRes_FieldNumber_FansNumPercent = 47,
  PB3GetPlayerSummaryRes_FieldNumber_SendGiftGoldPercent = 48,
  PB3GetPlayerSummaryRes_FieldNumber_ReceiveGiftNumPercent = 49,
  PB3GetPlayerSummaryRes_FieldNumber_WaterFlowerCarNumPercent = 50,
  PB3GetPlayerSummaryRes_FieldNumber_BillNumPercent = 51,
};

@interface PB3GetPlayerSummaryRes : GPBMessage

/** 个人id */
@property(nonatomic, readwrite) int64_t playerId;

/** 注册时间 */
@property(nonatomic, readwrite) int64_t registerTime;

/** 注册时间比例 */
@property(nonatomic, readwrite) int32_t registerRate;

/** 在线总时长 */
@property(nonatomic, readwrite) int32_t onlineAmountTime;

/** 关注的总人数 */
@property(nonatomic, readwrite) int32_t followNum;

/** 关注的挚友 */
@property(nonatomic, readwrite) int32_t followIntimateNum;

/** 挚友数量 */
@property(nonatomic, readwrite) int32_t intimateNum;

/** 最久的挚友 */
@property(nonatomic, readwrite, strong, null_resettable) PB3PlayerTime *longestPlayer;
/** Test to see if @c longestPlayer has been set. */
@property(nonatomic, readwrite) BOOL hasLongestPlayer;

/** 已解除的最久的挚友 */
@property(nonatomic, readwrite, strong, null_resettable) PB3PlayerTime *dissLongestPlayer;
/** Test to see if @c dissLongestPlayer has been set. */
@property(nonatomic, readwrite) BOOL hasDissLongestPlayer;

/** 接收的礼物数量 */
@property(nonatomic, readwrite) int32_t receiveGiftNum;

/** 收到的礼物价值 */
@property(nonatomic, readwrite) int64_t receiveGiftAmount;

/** 收到的最贵礼物id */
@property(nonatomic, readwrite) int32_t receiveExpensiveGiftId;

/** 砸蛋获得的总奖励 */
@property(nonatomic, readwrite) int64_t crackEggAmount;

/** 砸蛋比例 */
@property(nonatomic, readwrite) int32_t crackEggRate;

/** 关键词 1-游客 2-佛系 3-潜力股 4-中产阶级 5-咪爪人气王 6-咪爪首富 7-砸蛋狂魔 8-闪耀之星 */
@property(nonatomic, readwrite) int32_t keyWord;

/** 最长的一天 */
@property(nonatomic, readwrite) int64_t longestDay;

/** 最长一天时长 */
@property(nonatomic, readwrite) int64_t logestDayTime;

/** 好友列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3PlayerTime*> *friendsArray;
/** The number of items in @c friendsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger friendsArray_Count;

/** 挚友列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3PlayerTime*> *intimatesArray;
/** The number of items in @c intimatesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger intimatesArray_Count;

/** 财富 */
@property(nonatomic, readwrite) int64_t wealth;

/** 财富比例 */
@property(nonatomic, readwrite) int32_t wealthRate;

/**
 * 2020补充
 * 注册数据
 **/
@property(nonatomic, readwrite) int32_t visitorSummary;

/** 粉丝数 */
@property(nonatomic, readwrite) int32_t beFollowNum;

/** 在线数据 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *visitTimeFrequency;

/** 最晚打开氧气的时间 05:02:12 之类字符串 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *lastestVisitTime;

/** 好友数据 */
@property(nonatomic, readwrite) int32_t buddyNum;

/** 送礼数据 */
@property(nonatomic, readwrite) int64_t sendGiftPlayerNum;

/** 送出礼物的价值 */
@property(nonatomic, readwrite) int64_t sendGiftAmount;

/** 送给谁最多礼物（按份数） */
@property(nonatomic, readwrite) int64_t sendMostGiftPlayerId;

/** 送给谁最多礼物 - 礼物总数 */
@property(nonatomic, readwrite) int64_t sendMostGiftNum;

/** 收礼数据 */
@property(nonatomic, readwrite) int64_t receiveMostGiftsPlayerId;

/** 收到谁的礼物最多 - 礼物总价值 */
@property(nonatomic, readwrite) int64_t receiveMostGiftsAmount;

/** 收到谁的礼物最多 - 礼物总数量 */
@property(nonatomic, readwrite) int64_t receiveMostGiftsNum;

/** 收到的稀有礼物列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SummaryGift*> *rareGiftListArray;
/** The number of items in @c rareGiftListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger rareGiftListArray_Count;

/** 浇花数据 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *firstWaterFlowersTime;

/** 浇花礼物列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SummaryGift*> *waterFlowerGiftListArray;
/** The number of items in @c waterFlowerGiftListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger waterFlowerGiftListArray_Count;

/** 点单数据 */
@property(nonatomic, readwrite) int32_t billAmount;

/** 点单数据 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SummaryBill*> *billDataArray;
/** The number of items in @c billDataArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger billDataArray_Count;

/** 年度称号 */
@property(nonatomic, readwrite, strong, null_resettable) PB3SummaryAnnualTitle *annualTitle;
/** Test to see if @c annualTitle has been set. */
@property(nonatomic, readwrite) BOOL hasAnnualTitle;

/** 年度等级（初级中级高级） */
@property(nonatomic, readwrite) int32_t annualLevel;

/** 文档配置 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *fansNumDoc;

/** 最晚打开时间 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *lastVisitTimeDoc;

/** 好友数量 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *buddyNumDoc;

/** 送礼人数 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sendGiftNumDoc;

/** 钻石跑车数量 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *diamondCarNumDoc;

/** 点单类型最多 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *billTypeMostDoc;

/** 百分比 */
@property(nonatomic, readwrite) int32_t fansNumPercent;

/** 送礼价值（总共） */
@property(nonatomic, readwrite) int32_t sendGiftGoldPercent;

/** 收礼数量(总共) */
@property(nonatomic, readwrite) int32_t receiveGiftNumPercent;

/** 浇花跑车数量 */
@property(nonatomic, readwrite) int32_t waterFlowerCarNumPercent;

/** 点单次数 */
@property(nonatomic, readwrite) int32_t billNumPercent;

@end

#pragma mark - PB3SummaryAnnualTitle

typedef GPB_ENUM(PB3SummaryAnnualTitle_FieldNumber) {
  PB3SummaryAnnualTitle_FieldNumber_Title = 1,
  PB3SummaryAnnualTitle_FieldNumber_TitleType = 2,
};

/**
 * 盘点，年度称号，类型
 **/
@interface PB3SummaryAnnualTitle : GPBMessage

/** 年度称号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** 年度称号类型 */
@property(nonatomic, readwrite) int32_t titleType;

@end

#pragma mark - PB3SummaryGift

typedef GPB_ENUM(PB3SummaryGift_FieldNumber) {
  PB3SummaryGift_FieldNumber_GiftId = 1,
  PB3SummaryGift_FieldNumber_GiftNum = 2,
  PB3SummaryGift_FieldNumber_Type = 3,
};

/**
 * 盘点，礼物数据（收礼、送礼，浇花）
 **/
@interface PB3SummaryGift : GPBMessage

/** 礼物id */
@property(nonatomic, readwrite) int64_t giftId;

/** 礼物数量 */
@property(nonatomic, readwrite) int64_t giftNum;

/** （浇花）礼物类型，1-全服礼物，2-跑车 */
@property(nonatomic, readwrite) int32_t type;

@end

#pragma mark - PB3SummaryBill

typedef GPB_ENUM(PB3SummaryBill_FieldNumber) {
  PB3SummaryBill_FieldNumber_BillId = 1,
  PB3SummaryBill_FieldNumber_BillTypeNum = 2,
  PB3SummaryBill_FieldNumber_BillTypeName = 3,
  PB3SummaryBill_FieldNumber_BillTypeIcon = 4,
};

/**
 * 盘点，点单数据
 **/
@interface PB3SummaryBill : GPBMessage

/** 点单技能id */
@property(nonatomic, readwrite) int64_t billId;

/** 该技能类型点单次数 */
@property(nonatomic, readwrite) int32_t billTypeNum;

/** 技能名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *billTypeName;

/** 技能图标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *billTypeIcon;

@end

#pragma mark - PB3InviteCpReq

typedef GPB_ENUM(PB3InviteCpReq_FieldNumber) {
  PB3InviteCpReq_FieldNumber_RelId = 1,
  PB3InviteCpReq_FieldNumber_TargetId = 2,
  PB3InviteCpReq_FieldNumber_Msg = 3,
  PB3InviteCpReq_FieldNumber_URL = 4,
};

/**
 * cp邀请
 **/
@interface PB3InviteCpReq : GPBMessage

/** 关联id */
@property(nonatomic, readwrite) int32_t relId;

/** 目标id */
@property(nonatomic, readwrite) int64_t targetId;

/** 邀请信息 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;

/** 跳转链接 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

@end

#pragma mark - PB3InviteCpRes

@interface PB3InviteCpRes : GPBMessage

@end

#pragma mark - PB3InviteCpReplyReq

typedef GPB_ENUM(PB3InviteCpReplyReq_FieldNumber) {
  PB3InviteCpReplyReq_FieldNumber_RelId = 1,
  PB3InviteCpReplyReq_FieldNumber_PlayerId = 2,
  PB3InviteCpReplyReq_FieldNumber_Accept = 3,
  PB3InviteCpReplyReq_FieldNumber_Msg = 4,
  PB3InviteCpReplyReq_FieldNumber_URL = 5,
};

/**
 * 回复cp邀请
 **/
@interface PB3InviteCpReplyReq : GPBMessage

/** 关联id */
@property(nonatomic, readwrite) int32_t relId;

/** 邀请人员id */
@property(nonatomic, readwrite) int64_t playerId;

/** 是否接受 */
@property(nonatomic, readwrite) BOOL accept;

/** 回复信息 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;

/** 跳转链接 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

@end

#pragma mark - PB3InviteCpReplyRes

@interface PB3InviteCpReplyRes : GPBMessage

@end

#pragma mark - PB3InviteCpPlayerReq

typedef GPB_ENUM(PB3InviteCpPlayerReq_FieldNumber) {
  PB3InviteCpPlayerReq_FieldNumber_RelId = 1,
};

/**
 * 获取自己的cp 和已邀请的列表
 **/
@interface PB3InviteCpPlayerReq : GPBMessage

/** 关联id */
@property(nonatomic, readwrite) int32_t relId;

@end

#pragma mark - PB3InviteCpPlayerRes

typedef GPB_ENUM(PB3InviteCpPlayerRes_FieldNumber) {
  PB3InviteCpPlayerRes_FieldNumber_Player = 1,
  PB3InviteCpPlayerRes_FieldNumber_PlayerListArray = 2,
};

@interface PB3InviteCpPlayerRes : GPBMessage

/** cp的信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3PlayerSortMsg *player;
/** Test to see if @c player has been set. */
@property(nonatomic, readwrite) BOOL hasPlayer;

/** 人员id列表 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *playerListArray;
/** The number of items in @c playerListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger playerListArray_Count;

@end

#pragma mark - PB3FriendCpInfoReq

typedef GPB_ENUM(PB3FriendCpInfoReq_FieldNumber) {
  PB3FriendCpInfoReq_FieldNumber_RelActivityId = 1,
  PB3FriendCpInfoReq_FieldNumber_PlayerListArray = 2,
};

/**
 * 返回好友列表的cp组队状态
 **/
@interface PB3FriendCpInfoReq : GPBMessage

@property(nonatomic, readwrite) int32_t relActivityId;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *playerListArray;
/** The number of items in @c playerListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger playerListArray_Count;

@end

#pragma mark - PB3FriendCpInfoRes

typedef GPB_ENUM(PB3FriendCpInfoRes_FieldNumber) {
  PB3FriendCpInfoRes_FieldNumber_ListArray = 1,
};

@interface PB3FriendCpInfoRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3FriendCpInfo*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3FriendCpInfo

typedef GPB_ENUM(PB3FriendCpInfo_FieldNumber) {
  PB3FriendCpInfo_FieldNumber_PlayerId = 1,
  PB3FriendCpInfo_FieldNumber_IsCp = 2,
};

@interface PB3FriendCpInfo : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

/** 是否已组队 */
@property(nonatomic, readwrite) BOOL isCp;

@end

#pragma mark - PB3GetPuzzlePlayerReq

typedef GPB_ENUM(PB3GetPuzzlePlayerReq_FieldNumber) {
  PB3GetPuzzlePlayerReq_FieldNumber_RelId = 1,
  PB3GetPuzzlePlayerReq_FieldNumber_PlayerId = 2,
};

/**
 * 个人拼图完成情况
 **/
@interface PB3GetPuzzlePlayerReq : GPBMessage

/** 子活动id */
@property(nonatomic, readwrite) int32_t relId;

/** 个人id */
@property(nonatomic, readwrite) int64_t playerId;

@end

#pragma mark - PB3GetPuzzlePlayerRes

typedef GPB_ENUM(PB3GetPuzzlePlayerRes_FieldNumber) {
  PB3GetPuzzlePlayerRes_FieldNumber_PuzzleArray = 1,
};

@interface PB3GetPuzzlePlayerRes : GPBMessage

/** 用户每行的完成情况 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3Puzzle*> *puzzleArray;
/** The number of items in @c puzzleArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger puzzleArray_Count;

@end

#pragma mark - PB3LightUpPuzzleReq

typedef GPB_ENUM(PB3LightUpPuzzleReq_FieldNumber) {
  PB3LightUpPuzzleReq_FieldNumber_RelId = 1,
  PB3LightUpPuzzleReq_FieldNumber_PuzzleId = 2,
};

/**
 * 点亮拼图
 **/
@interface PB3LightUpPuzzleReq : GPBMessage

/** 子活动id */
@property(nonatomic, readwrite) int32_t relId;

/** 拼图id */
@property(nonatomic, readwrite) int32_t puzzleId;

@end

#pragma mark - PB3LightUpPuzzleRes

typedef GPB_ENUM(PB3LightUpPuzzleRes_FieldNumber) {
  PB3LightUpPuzzleRes_FieldNumber_AwardsArray = 1,
};

@interface PB3LightUpPuzzleRes : GPBMessage

/** 奖励 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3NewAward*> *awardsArray;
/** The number of items in @c awardsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger awardsArray_Count;

@end

#pragma mark - PB3ListNoticeRecordReq

typedef GPB_ENUM(PB3ListNoticeRecordReq_FieldNumber) {
  PB3ListNoticeRecordReq_FieldNumber_RelId = 1,
  PB3ListNoticeRecordReq_FieldNumber_PlayerId = 2,
  PB3ListNoticeRecordReq_FieldNumber_ConfNoticeId = 3,
  PB3ListNoticeRecordReq_FieldNumber_Page = 4,
  PB3ListNoticeRecordReq_FieldNumber_PageSize = 5,
  PB3ListNoticeRecordReq_FieldNumber_StartTime = 6,
  PB3ListNoticeRecordReq_FieldNumber_EndTime = 7,
};

/**
 * //通知记录
 **/
@interface PB3ListNoticeRecordReq : GPBMessage

/** 子活动id */
@property(nonatomic, readwrite) int32_t relId;

/** 人员id 允许为空 */
@property(nonatomic, readwrite) int32_t playerId;

/** 通知的id */
@property(nonatomic, readwrite) int32_t confNoticeId;

/** 分页 */
@property(nonatomic, readwrite) int32_t page;

/** 分页数  默认20 */
@property(nonatomic, readwrite) int32_t pageSize;

/** 开始时间 */
@property(nonatomic, readwrite) int64_t startTime;

/** 结束时间 */
@property(nonatomic, readwrite) int64_t endTime;

@end

#pragma mark - PB3ListNoticeRecordRes

typedef GPB_ENUM(PB3ListNoticeRecordRes_FieldNumber) {
  PB3ListNoticeRecordRes_FieldNumber_ListArray = 1,
  PB3ListNoticeRecordRes_FieldNumber_Total = 2,
};

@interface PB3ListNoticeRecordRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3NoticeRecord*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

/** 总数 */
@property(nonatomic, readwrite) int32_t total;

@end

#pragma mark - PB3ListNoticeMarqueeReq

typedef GPB_ENUM(PB3ListNoticeMarqueeReq_FieldNumber) {
  PB3ListNoticeMarqueeReq_FieldNumber_RelId = 1,
  PB3ListNoticeMarqueeReq_FieldNumber_MsgId = 2,
  PB3ListNoticeMarqueeReq_FieldNumber_Size = 3,
};

/**
 * //通知记录
 **/
@interface PB3ListNoticeMarqueeReq : GPBMessage

/** 子活动id */
@property(nonatomic, readwrite) int32_t relId;

/** 现有的最大的msg id */
@property(nonatomic, readwrite) int32_t msgId;

/** 显示数据量 */
@property(nonatomic, readwrite) int32_t size;

@end

#pragma mark - PB3ListNoticeMarqueeRes

typedef GPB_ENUM(PB3ListNoticeMarqueeRes_FieldNumber) {
  PB3ListNoticeMarqueeRes_FieldNumber_ListArray = 1,
};

@interface PB3ListNoticeMarqueeRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3NoticeRecord*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3ListLotteryRecordReq

typedef GPB_ENUM(PB3ListLotteryRecordReq_FieldNumber) {
  PB3ListLotteryRecordReq_FieldNumber_RelId = 1,
  PB3ListLotteryRecordReq_FieldNumber_Weight = 2,
  PB3ListLotteryRecordReq_FieldNumber_Page = 3,
  PB3ListLotteryRecordReq_FieldNumber_PageSize = 4,
  PB3ListLotteryRecordReq_FieldNumber_ConfId = 6,
  PB3ListLotteryRecordReq_FieldNumber_PlayerId = 7,
};

/**
 * //抽奖记录
 **/
@interface PB3ListLotteryRecordReq : GPBMessage

/** 子活动id */
@property(nonatomic, readwrite) int32_t relId;

/** 礼物类型 1-小奖 2-中奖 3- 大奖 0-所有 */
@property(nonatomic, readwrite) int32_t weight;

/** 分页 */
@property(nonatomic, readwrite) int32_t page;

/** 分页数  默认20 */
@property(nonatomic, readwrite) int32_t pageSize;

/** 抽奖配置id */
@property(nonatomic, readwrite) int32_t confId;

/** 用户Id */
@property(nonatomic, readwrite) int64_t playerId;

@end

#pragma mark - PB3ListLotteryRecordRes

typedef GPB_ENUM(PB3ListLotteryRecordRes_FieldNumber) {
  PB3ListLotteryRecordRes_FieldNumber_ListArray = 1,
  PB3ListLotteryRecordRes_FieldNumber_Total = 2,
};

@interface PB3ListLotteryRecordRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3LotteryRecord*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

/** 总数 */
@property(nonatomic, readwrite) int32_t total;

@end

#pragma mark - PB3GetLotteryPointReq

typedef GPB_ENUM(PB3GetLotteryPointReq_FieldNumber) {
  PB3GetLotteryPointReq_FieldNumber_RelId = 1,
  PB3GetLotteryPointReq_FieldNumber_ConfLotteryId = 2,
};

/**
 * //抽奖幸运值
 **/
@interface PB3GetLotteryPointReq : GPBMessage

/** 子活动id */
@property(nonatomic, readwrite) int32_t relId;

/** 抽奖id */
@property(nonatomic, readwrite) int32_t confLotteryId;

@end

#pragma mark - PB3GetLotteryPointRes

typedef GPB_ENUM(PB3GetLotteryPointRes_FieldNumber) {
  PB3GetLotteryPointRes_FieldNumber_Point = 1,
  PB3GetLotteryPointRes_FieldNumber_ServerPoint = 2,
};

@interface PB3GetLotteryPointRes : GPBMessage

/** 总数 */
@property(nonatomic, readwrite) int32_t point;

/** 全服抽奖幸运值 */
@property(nonatomic, readwrite) int32_t serverPoint;

@end

#pragma mark - PB3CountLotteryPointReq

typedef GPB_ENUM(PB3CountLotteryPointReq_FieldNumber) {
  PB3CountLotteryPointReq_FieldNumber_RelId = 1,
  PB3CountLotteryPointReq_FieldNumber_ConfLotteryId = 2,
};

/**
 * //抽奖幸运值
 **/
@interface PB3CountLotteryPointReq : GPBMessage

/** 子活动id */
@property(nonatomic, readwrite) int32_t relId;

/** 抽奖id */
@property(nonatomic, readwrite) int32_t confLotteryId;

@end

#pragma mark - PB3CountLotteryPointRes

typedef GPB_ENUM(PB3CountLotteryPointRes_FieldNumber) {
  PB3CountLotteryPointRes_FieldNumber_Point = 1,
  PB3CountLotteryPointRes_FieldNumber_ServerPoint = 2,
};

@interface PB3CountLotteryPointRes : GPBMessage

/** 总数 */
@property(nonatomic, readwrite) int32_t point;

/** 全服抽奖幸运值 */
@property(nonatomic, readwrite) int32_t serverPoint;

@end

#pragma mark - PB3BuyDrawLotteryReq

typedef GPB_ENUM(PB3BuyDrawLotteryReq_FieldNumber) {
  PB3BuyDrawLotteryReq_FieldNumber_RelId = 1,
  PB3BuyDrawLotteryReq_FieldNumber_BuyId = 2,
  PB3BuyDrawLotteryReq_FieldNumber_Num = 3,
};

@interface PB3BuyDrawLotteryReq : GPBMessage

@property(nonatomic, readwrite) int32_t relId;

@property(nonatomic, readwrite) int32_t buyId;

/** 数量 */
@property(nonatomic, readwrite) int32_t num;

@end

#pragma mark - PB3BuyDrawLotteryRes

typedef GPB_ENUM(PB3BuyDrawLotteryRes_FieldNumber) {
  PB3BuyDrawLotteryRes_FieldNumber_Reward = 1,
};

@interface PB3BuyDrawLotteryRes : GPBMessage

/** 返回奖励 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *reward;

@end

#pragma mark - PB3NewVoteReq

typedef GPB_ENUM(PB3NewVoteReq_FieldNumber) {
  PB3NewVoteReq_FieldNumber_RelId = 1,
  PB3NewVoteReq_FieldNumber_TargetIdArray = 2,
  PB3NewVoteReq_FieldNumber_Num = 3,
};

/**
 * 新版投票接口
 **/
@interface PB3NewVoteReq : GPBMessage

@property(nonatomic, readwrite) int32_t relId;

/** 目标id */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *targetIdArray;
/** The number of items in @c targetIdArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger targetIdArray_Count;

/** 数量 */
@property(nonatomic, readwrite) int32_t num;

@end

#pragma mark - PB3NewVoteRes

@interface PB3NewVoteRes : GPBMessage

@end

#pragma mark - PB3NewVoteRecordReq

typedef GPB_ENUM(PB3NewVoteRecordReq_FieldNumber) {
  PB3NewVoteRecordReq_FieldNumber_RelId = 1,
  PB3NewVoteRecordReq_FieldNumber_PlayerId = 2,
  PB3NewVoteRecordReq_FieldNumber_StartTime = 3,
  PB3NewVoteRecordReq_FieldNumber_EndTime = 4,
  PB3NewVoteRecordReq_FieldNumber_Page = 5,
  PB3NewVoteRecordReq_FieldNumber_PageSize = 6,
};

/**
 * 获取自己的投票记录
 **/
@interface PB3NewVoteRecordReq : GPBMessage

/** 必填 子活动 */
@property(nonatomic, readwrite) int32_t relId;

/** 人员id 自己对此用户的投票记录  0-自己所有投票记录 */
@property(nonatomic, readwrite) int64_t playerId;

/** 开始时间 */
@property(nonatomic, readwrite) int64_t startTime;

/** 结束时间 */
@property(nonatomic, readwrite) int64_t endTime;

@property(nonatomic, readwrite) int32_t page;

@property(nonatomic, readwrite) int32_t pageSize;

@end

#pragma mark - PB3NewVoteRecordRes

typedef GPB_ENUM(PB3NewVoteRecordRes_FieldNumber) {
  PB3NewVoteRecordRes_FieldNumber_ListArray = 1,
  PB3NewVoteRecordRes_FieldNumber_Total = 2,
};

@interface PB3NewVoteRecordRes : GPBMessage

/** 投票记录 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3VoteRecord*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

/** 总数 */
@property(nonatomic, readwrite) int64_t total;

@end

#pragma mark - PB3NewVoteResultReq

typedef GPB_ENUM(PB3NewVoteResultReq_FieldNumber) {
  PB3NewVoteResultReq_FieldNumber_ActId = 1,
  PB3NewVoteResultReq_FieldNumber_RelId = 2,
  PB3NewVoteResultReq_FieldNumber_Type = 3,
  PB3NewVoteResultReq_FieldNumber_Page = 4,
  PB3NewVoteResultReq_FieldNumber_PageSize = 5,
};

/**
 * 投票结果
 **/
@interface PB3NewVoteResultReq : GPBMessage

@property(nonatomic, readwrite) int32_t actId;

@property(nonatomic, readwrite) int32_t relId;

/** 结果类型 0-积分 按积分大小返回 1-排名 只返回有排名的数据 */
@property(nonatomic, readwrite) int32_t type;

@property(nonatomic, readwrite) int32_t page;

@property(nonatomic, readwrite) int32_t pageSize;

@end

#pragma mark - PB3NewVoteResultRes

typedef GPB_ENUM(PB3NewVoteResultRes_FieldNumber) {
  PB3NewVoteResultRes_FieldNumber_ListArray = 1,
  PB3NewVoteResultRes_FieldNumber_Total = 2,
  PB3NewVoteResultRes_FieldNumber_SelfTicketsNum = 3,
};

@interface PB3NewVoteResultRes : GPBMessage

/** 投票结果 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3VoteResult*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

/** 总数 */
@property(nonatomic, readwrite) int64_t total;

/** 自身票数 */
@property(nonatomic, readwrite) int32_t selfTicketsNum;

@end

#pragma mark - PB3GetNewVoteResultListReq

typedef GPB_ENUM(PB3GetNewVoteResultListReq_FieldNumber) {
  PB3GetNewVoteResultListReq_FieldNumber_ActId = 1,
  PB3GetNewVoteResultListReq_FieldNumber_RelId = 2,
  PB3GetNewVoteResultListReq_FieldNumber_Page = 3,
  PB3GetNewVoteResultListReq_FieldNumber_PageSize = 4,
  PB3GetNewVoteResultListReq_FieldNumber_PlayerId = 5,
};

/**
 * 获得投票结果
 **/
@interface PB3GetNewVoteResultListReq : GPBMessage

/** 活动ID */
@property(nonatomic, readwrite) int32_t actId;

/**  子活动ID */
@property(nonatomic, readwrite) int32_t relId;

/**  页数 */
@property(nonatomic, readwrite) int32_t page;

/** 页面大小 */
@property(nonatomic, readwrite) int32_t pageSize;

/** 玩家ID */
@property(nonatomic, readwrite) int64_t playerId;

@end

#pragma mark - PB3GetNewVoteResultListRes

typedef GPB_ENUM(PB3GetNewVoteResultListRes_FieldNumber) {
  PB3GetNewVoteResultListRes_FieldNumber_ListArray = 1,
  PB3GetNewVoteResultListRes_FieldNumber_Total = 2,
  PB3GetNewVoteResultListRes_FieldNumber_SelfTicketsNum = 3,
};

@interface PB3GetNewVoteResultListRes : GPBMessage

/** 投票结果 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3VoteResult*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

/** 总数 */
@property(nonatomic, readwrite) int64_t total;

/** 自身票数 */
@property(nonatomic, readwrite) int32_t selfTicketsNum;

@end

#pragma mark - PB3ReceiveVoteAwardReq

typedef GPB_ENUM(PB3ReceiveVoteAwardReq_FieldNumber) {
  PB3ReceiveVoteAwardReq_FieldNumber_ActId = 1,
  PB3ReceiveVoteAwardReq_FieldNumber_ConfVoteAwardId = 2,
};

/**
 * 投票领奖
 **/
@interface PB3ReceiveVoteAwardReq : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 投票奖励id */
@property(nonatomic, readwrite) int32_t confVoteAwardId;

@end

#pragma mark - PB3ReceiveVoteAwardRes

typedef GPB_ENUM(PB3ReceiveVoteAwardRes_FieldNumber) {
  PB3ReceiveVoteAwardRes_FieldNumber_AwardArray = 1,
};

@interface PB3ReceiveVoteAwardRes : GPBMessage

/** 奖励 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3NewAward*> *awardArray;
/** The number of items in @c awardArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger awardArray_Count;

@end

#pragma mark - PB3ListMyVoteAwardReq

typedef GPB_ENUM(PB3ListMyVoteAwardReq_FieldNumber) {
  PB3ListMyVoteAwardReq_FieldNumber_ActId = 1,
};

/**
 * 获取投票奖励信息
 **/
@interface PB3ListMyVoteAwardReq : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int32_t actId;

@end

#pragma mark - PB3ListMyVoteAwardRes

typedef GPB_ENUM(PB3ListMyVoteAwardRes_FieldNumber) {
  PB3ListMyVoteAwardRes_FieldNumber_ListArray = 1,
};

@interface PB3ListMyVoteAwardRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3VoteAwardInfo*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3VoteAwardInfo

typedef GPB_ENUM(PB3VoteAwardInfo_FieldNumber) {
  PB3VoteAwardInfo_FieldNumber_ConfVoteAwardId = 1,
  PB3VoteAwardInfo_FieldNumber_ActId = 2,
  PB3VoteAwardInfo_FieldNumber_Status = 3,
};

/**
 * 投票奖励信息
 **/
@interface PB3VoteAwardInfo : GPBMessage

@property(nonatomic, readwrite) int32_t confVoteAwardId;

@property(nonatomic, readwrite) int32_t actId;

/** 1-不可领取 2-可领取 3-已领取 */
@property(nonatomic, readwrite) int32_t status;

@end

#pragma mark - PB3GetAllRewarderTotalReq

typedef GPB_ENUM(PB3GetAllRewarderTotalReq_FieldNumber) {
  PB3GetAllRewarderTotalReq_FieldNumber_ActId = 1,
  PB3GetAllRewarderTotalReq_FieldNumber_VoteAwardId = 2,
};

@interface PB3GetAllRewarderTotalReq : GPBMessage

@property(nonatomic, readwrite) int32_t actId;

/** 奖励id  如果奖励id为空，则读取所有的数据 */
@property(nonatomic, readwrite) int32_t voteAwardId;

@end

#pragma mark - PB3GetAllRewarderTotalRes

typedef GPB_ENUM(PB3GetAllRewarderTotalRes_FieldNumber) {
  PB3GetAllRewarderTotalRes_FieldNumber_List = 1,
};

@interface PB3GetAllRewarderTotalRes : GPBMessage

/** 投票奖励id， 投票中奖人数 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Int32Dictionary *list;
/** The number of items in @c list without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger list_Count;

@end

#pragma mark - PB3ReadCultivateDataReq

typedef GPB_ENUM(PB3ReadCultivateDataReq_FieldNumber) {
  PB3ReadCultivateDataReq_FieldNumber_RelId = 1,
};

/**
 * 个人养成数据
 **/
@interface PB3ReadCultivateDataReq : GPBMessage

/** 子活动id */
@property(nonatomic, readwrite) int32_t relId;

@end

#pragma mark - PB3ReadCultivateDataRes

typedef GPB_ENUM(PB3ReadCultivateDataRes_FieldNumber) {
  PB3ReadCultivateDataRes_FieldNumber_Data_p = 1,
};

@interface PB3ReadCultivateDataRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3Cultivate *data_p;
/** Test to see if @c data_p has been set. */
@property(nonatomic, readwrite) BOOL hasData_p;

@end

#pragma mark - PB3UpgradeCultivateReq

typedef GPB_ENUM(PB3UpgradeCultivateReq_FieldNumber) {
  PB3UpgradeCultivateReq_FieldNumber_RelId = 1,
  PB3UpgradeCultivateReq_FieldNumber_UpgradeType = 2,
  PB3UpgradeCultivateReq_FieldNumber_GiftId = 3,
  PB3UpgradeCultivateReq_FieldNumber_Num = 4,
};

/**
 * 养成升级
 **/
@interface PB3UpgradeCultivateReq : GPBMessage

/** 子活动 */
@property(nonatomic, readwrite) int32_t relId;

/** 升级方式 1-消耗物品 */
@property(nonatomic, readwrite) int32_t upgradeType;

/** 如果是消耗物品，则填写对应的礼物id */
@property(nonatomic, readwrite) int32_t giftId;

/** 要升多少级 不传默认为1 */
@property(nonatomic, readwrite) int32_t num;

@end

#pragma mark - PB3UpgradeCultivateRes

@interface PB3UpgradeCultivateRes : GPBMessage

@end

#pragma mark - PB3ListLogCultivateReq

typedef GPB_ENUM(PB3ListLogCultivateReq_FieldNumber) {
  PB3ListLogCultivateReq_FieldNumber_RelId = 1,
  PB3ListLogCultivateReq_FieldNumber_PlayerId = 2,
  PB3ListLogCultivateReq_FieldNumber_StartTime = 3,
  PB3ListLogCultivateReq_FieldNumber_EndTime = 4,
};

/**
 * 养成记录
 **/
@interface PB3ListLogCultivateReq : GPBMessage

@property(nonatomic, readwrite) int32_t relId;

@property(nonatomic, readwrite) int64_t playerId;

@property(nonatomic, readwrite) int64_t startTime;

@property(nonatomic, readwrite) int64_t endTime;

@end

#pragma mark - PB3ListLogCultivateRes

typedef GPB_ENUM(PB3ListLogCultivateRes_FieldNumber) {
  PB3ListLogCultivateRes_FieldNumber_ListArray = 1,
};

@interface PB3ListLogCultivateRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3LogCultivate*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3ReceiveGiftFeedbackAwardReq

typedef GPB_ENUM(PB3ReceiveGiftFeedbackAwardReq_FieldNumber) {
  PB3ReceiveGiftFeedbackAwardReq_FieldNumber_RelId = 1,
  PB3ReceiveGiftFeedbackAwardReq_FieldNumber_GiftFeedbackId = 2,
  PB3ReceiveGiftFeedbackAwardReq_FieldNumber_GiftFeedbackType = 3,
  PB3ReceiveGiftFeedbackAwardReq_FieldNumber_RelatedId = 4,
  PB3ReceiveGiftFeedbackAwardReq_FieldNumber_Open = 5,
};

/**
 * 领取礼物馈赠奖励
 **/
@interface PB3ReceiveGiftFeedbackAwardReq : GPBMessage

@property(nonatomic, readwrite) int32_t relId;

/** 礼物馈赠id */
@property(nonatomic, readwrite) int32_t giftFeedbackId;

/** 1-送礼 2-养成奖励 */
@property(nonatomic, readwrite) int32_t giftFeedbackType;

/** 关联id  养成奖励类型 填养成奖励id,可以不填礼物馈赠id */
@property(nonatomic, readwrite) int32_t relatedId;

@property(nonatomic, readwrite) BOOL open;

@end

#pragma mark - PB3ReceiveGiftFeedbackAwardRes

typedef GPB_ENUM(PB3ReceiveGiftFeedbackAwardRes_FieldNumber) {
  PB3ReceiveGiftFeedbackAwardRes_FieldNumber_AwardArray = 1,
};

@interface PB3ReceiveGiftFeedbackAwardRes : GPBMessage

/** 奖励 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3NewAward*> *awardArray;
/** The number of items in @c awardArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger awardArray_Count;

@end

#pragma mark - PB3ReadPlayerGoldBackReq

typedef GPB_ENUM(PB3ReadPlayerGoldBackReq_FieldNumber) {
  PB3ReadPlayerGoldBackReq_FieldNumber_RelId = 1,
  PB3ReadPlayerGoldBackReq_FieldNumber_Cate = 2,
};

/**
 * 读取当前返现
 **/
@interface PB3ReadPlayerGoldBackReq : GPBMessage

@property(nonatomic, readwrite) int32_t relId;

@property(nonatomic, readwrite) int32_t cate;

@end

#pragma mark - PB3ReadPlayerGoldBackRes

typedef GPB_ENUM(PB3ReadPlayerGoldBackRes_FieldNumber) {
  PB3ReadPlayerGoldBackRes_FieldNumber_Data_p = 1,
};

@interface PB3ReadPlayerGoldBackRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3GoldBackData *data_p;
/** Test to see if @c data_p has been set. */
@property(nonatomic, readwrite) BOOL hasData_p;

@end

#pragma mark - PB3ReceivePlayerGoldBackReq

typedef GPB_ENUM(PB3ReceivePlayerGoldBackReq_FieldNumber) {
  PB3ReceivePlayerGoldBackReq_FieldNumber_RelId = 1,
  PB3ReceivePlayerGoldBackReq_FieldNumber_Cate = 2,
};

/**
 * 领取当前返现
 **/
@interface PB3ReceivePlayerGoldBackReq : GPBMessage

@property(nonatomic, readwrite) int32_t relId;

/** 1-排行榜 2-充值 */
@property(nonatomic, readwrite) int32_t cate;

@end

#pragma mark - PB3GetGoldBackLogReq

typedef GPB_ENUM(PB3GetGoldBackLogReq_FieldNumber) {
  PB3GetGoldBackLogReq_FieldNumber_RelId = 1,
};

/**
 * 获取返现记录 请求参数
 **/
@interface PB3GetGoldBackLogReq : GPBMessage

/** 子活动id */
@property(nonatomic, readwrite) int32_t relId;

@end

#pragma mark - PB3GetGoldBackLogRes

typedef GPB_ENUM(PB3GetGoldBackLogRes_FieldNumber) {
  PB3GetGoldBackLogRes_FieldNumber_GoldBackLogListArray = 1,
};

/**
 * 获取返现记录 响应 返回100条
 **/
@interface PB3GetGoldBackLogRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3GoldBackLog*> *goldBackLogListArray;
/** The number of items in @c goldBackLogListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger goldBackLogListArray_Count;

@end

#pragma mark - PB3ReceivePlayerGoldBackRes

typedef GPB_ENUM(PB3ReceivePlayerGoldBackRes_FieldNumber) {
  PB3ReceivePlayerGoldBackRes_FieldNumber_Data_p = 1,
};

@interface PB3ReceivePlayerGoldBackRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3GoldBackData *data_p;
/** Test to see if @c data_p has been set. */
@property(nonatomic, readwrite) BOOL hasData_p;

@end

#pragma mark - PB3SortSumPointReq

typedef GPB_ENUM(PB3SortSumPointReq_FieldNumber) {
  PB3SortSumPointReq_FieldNumber_RelId = 1,
};

@interface PB3SortSumPointReq : GPBMessage

@property(nonatomic, readwrite) int32_t relId;

@end

#pragma mark - PB3SortSumPointRes

typedef GPB_ENUM(PB3SortSumPointRes_FieldNumber) {
  PB3SortSumPointRes_FieldNumber_CountPoint = 1,
  PB3SortSumPointRes_FieldNumber_PlayerPoint = 2,
};

@interface PB3SortSumPointRes : GPBMessage

/** 总积分 */
@property(nonatomic, readwrite) int64_t countPoint;

/** 个人总积分 */
@property(nonatomic, readwrite) int64_t playerPoint;

@end

#pragma mark - PB3SendNoticeHandleReq

typedef GPB_ENUM(PB3SendNoticeHandleReq_FieldNumber) {
  PB3SendNoticeHandleReq_FieldNumber_RelId = 1,
  PB3SendNoticeHandleReq_FieldNumber_TriggerId = 2,
  PB3SendNoticeHandleReq_FieldNumber_ToPlayerIdArray = 3,
};

@interface PB3SendNoticeHandleReq : GPBMessage

@property(nonatomic, readwrite) int32_t relId;

@property(nonatomic, readwrite) int32_t triggerId;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *toPlayerIdArray;
/** The number of items in @c toPlayerIdArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger toPlayerIdArray_Count;

@end

#pragma mark - PB3SendNoticeHandleRes

@interface PB3SendNoticeHandleRes : GPBMessage

@end

#pragma mark - PB3CompoundReq

typedef GPB_ENUM(PB3CompoundReq_FieldNumber) {
  PB3CompoundReq_FieldNumber_RelId = 1,
  PB3CompoundReq_FieldNumber_CompoundId = 2,
  PB3CompoundReq_FieldNumber_AssetArray = 3,
  PB3CompoundReq_FieldNumber_LotteryId = 4,
};

/**
 * 合成
 **/
@interface PB3CompoundReq : GPBMessage

@property(nonatomic, readwrite) int32_t relId;

@property(nonatomic, readwrite) int32_t compoundId;

/** 物品id，物品数量 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3CompoundAsset*> *assetArray;
/** The number of items in @c assetArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger assetArray_Count;

/** 抽奖id */
@property(nonatomic, readwrite) int32_t lotteryId;

@end

#pragma mark - PB3CompoundRes

typedef GPB_ENUM(PB3CompoundRes_FieldNumber) {
  PB3CompoundRes_FieldNumber_Status = 1,
  PB3CompoundRes_FieldNumber_AwardsArray = 2,
  PB3CompoundRes_FieldNumber_ConsumeAssetArray = 3,
};

@interface PB3CompoundRes : GPBMessage

/** 合成成功还是失败 */
@property(nonatomic, readwrite) BOOL status;

/** 奖品列表 失败成功都可能有 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3NewAward*> *awardsArray;
/** The number of items in @c awardsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger awardsArray_Count;

/** 消耗物品 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3CompoundAsset*> *consumeAssetArray;
/** The number of items in @c consumeAssetArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger consumeAssetArray_Count;

@end

#pragma mark - PB3CompoundRecordReq

typedef GPB_ENUM(PB3CompoundRecordReq_FieldNumber) {
  PB3CompoundRecordReq_FieldNumber_RelId = 1,
};

@interface PB3CompoundRecordReq : GPBMessage

@property(nonatomic, readwrite) int32_t relId;

@end

#pragma mark - PB3CompoundRecordRes

typedef GPB_ENUM(PB3CompoundRecordRes_FieldNumber) {
  PB3CompoundRecordRes_FieldNumber_ListArray = 1,
};

@interface PB3CompoundRecordRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3LogCompound*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3DrawCardCheckReq

typedef GPB_ENUM(PB3DrawCardCheckReq_FieldNumber) {
  PB3DrawCardCheckReq_FieldNumber_RelId = 1,
};

/**
 * 检车抽卡
 **/
@interface PB3DrawCardCheckReq : GPBMessage

@property(nonatomic, readwrite) int32_t relId;

@end

#pragma mark - PB3DrawCardCheckRes

@interface PB3DrawCardCheckRes : GPBMessage

@end

#pragma mark - PB3DrawCardReq

typedef GPB_ENUM(PB3DrawCardReq_FieldNumber) {
  PB3DrawCardReq_FieldNumber_RelId = 1,
  PB3DrawCardReq_FieldNumber_ConfDrawCardId = 2,
  PB3DrawCardReq_FieldNumber_Timestamp = 3,
};

/**
 * 抽卡
 **/
@interface PB3DrawCardReq : GPBMessage

@property(nonatomic, readwrite) int32_t relId;

/** 抽卡配置id */
@property(nonatomic, readwrite) int32_t confDrawCardId;

/** 时间戳 */
@property(nonatomic, readwrite) int64_t timestamp;

@end

#pragma mark - PB3DrawCardRes

typedef GPB_ENUM(PB3DrawCardRes_FieldNumber) {
  PB3DrawCardRes_FieldNumber_AwardArray = 1,
  PB3DrawCardRes_FieldNumber_Win = 2,
  PB3DrawCardRes_FieldNumber_LuckNumber = 3,
};

@interface PB3DrawCardRes : GPBMessage

/** 奖励 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3NewAward*> *awardArray;
/** The number of items in @c awardArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger awardArray_Count;

/** 是否抽中 */
@property(nonatomic, readwrite) BOOL win;

/** 幸运号码 */
@property(nonatomic, readwrite) int32_t luckNumber;

@end

#pragma mark - PB3DrawCardRecordReq

typedef GPB_ENUM(PB3DrawCardRecordReq_FieldNumber) {
  PB3DrawCardRecordReq_FieldNumber_RelId = 1,
  PB3DrawCardRecordReq_FieldNumber_ConfDrawCardId = 2,
  PB3DrawCardRecordReq_FieldNumber_Page = 3,
  PB3DrawCardRecordReq_FieldNumber_PageSize = 4,
};

/**
 * 抽卡记录 100条
 **/
@interface PB3DrawCardRecordReq : GPBMessage

@property(nonatomic, readwrite) int32_t relId;

/** 抽卡配置id 0表示获取所有 */
@property(nonatomic, readwrite) int32_t confDrawCardId;

@property(nonatomic, readwrite) int32_t page;

/** 分页数  默认20 */
@property(nonatomic, readwrite) int32_t pageSize;

@end

#pragma mark - PB3DrawCardRecordRes

typedef GPB_ENUM(PB3DrawCardRecordRes_FieldNumber) {
  PB3DrawCardRecordRes_FieldNumber_RecordArray = 1,
};

@interface PB3DrawCardRecordRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3LogDrawCard*> *recordArray;
/** The number of items in @c recordArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger recordArray_Count;

@end

#pragma mark - PB3GetPlayerChargeReq

typedef GPB_ENUM(PB3GetPlayerChargeReq_FieldNumber) {
  PB3GetPlayerChargeReq_FieldNumber_PlayerId = 1,
};

/**
 * 获取用户充值金额
 **/
@interface PB3GetPlayerChargeReq : GPBMessage

/** 人员id */
@property(nonatomic, readwrite) int64_t playerId;

@end

#pragma mark - PB3GetPlayerChargeRes

typedef GPB_ENUM(PB3GetPlayerChargeRes_FieldNumber) {
  PB3GetPlayerChargeRes_FieldNumber_Charge = 1,
};

@interface PB3GetPlayerChargeRes : GPBMessage

/** 0-表示未充值，其他表示充值金额 */
@property(nonatomic, readwrite) int64_t charge;

@end

#pragma mark - PB3TakeGoldReq

typedef GPB_ENUM(PB3TakeGoldReq_FieldNumber) {
  PB3TakeGoldReq_FieldNumber_ActId = 1,
  PB3TakeGoldReq_FieldNumber_RelId = 2,
  PB3TakeGoldReq_FieldNumber_TakeOutNum = 3,
};

/**
 * 提现请求参数
 **/
@interface PB3TakeGoldReq : GPBMessage

/** 主活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relId;

/** 提现数量 */
@property(nonatomic, readwrite) int32_t takeOutNum;

@end

#pragma mark - PB3TakeGoldRes

@interface PB3TakeGoldRes : GPBMessage

@end

#pragma mark - PB3GetTakeGoldLogReq

typedef GPB_ENUM(PB3GetTakeGoldLogReq_FieldNumber) {
  PB3GetTakeGoldLogReq_FieldNumber_RelId = 1,
  PB3GetTakeGoldLogReq_FieldNumber_Page = 2,
};

/**
 * 获取提现记录 请求参数
 **/
@interface PB3GetTakeGoldLogReq : GPBMessage

/** 子活动id */
@property(nonatomic, readwrite) int32_t relId;

/** 页码 可不传 默认1 默认每页20条 */
@property(nonatomic, readwrite) int32_t page;

@end

#pragma mark - PB3GetTakeGoldLogRes

typedef GPB_ENUM(PB3GetTakeGoldLogRes_FieldNumber) {
  PB3GetTakeGoldLogRes_FieldNumber_TakeGoldLogListArray = 1,
};

/**
 * 获取提现记录 响应
 **/
@interface PB3GetTakeGoldLogRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3TakeGoldLog*> *takeGoldLogListArray;
/** The number of items in @c takeGoldLogListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger takeGoldLogListArray_Count;

@end

#pragma mark - PB3GetTakeGoldGiftConfReq

typedef GPB_ENUM(PB3GetTakeGoldGiftConfReq_FieldNumber) {
  PB3GetTakeGoldGiftConfReq_FieldNumber_RelId = 1,
  PB3GetTakeGoldGiftConfReq_FieldNumber_TakeOutNum = 2,
};

/**
 * 获取提现物品信息 请求
 **/
@interface PB3GetTakeGoldGiftConfReq : GPBMessage

/** 子活动id */
@property(nonatomic, readwrite) int32_t relId;

/** 提现数量 */
@property(nonatomic, readwrite) int32_t takeOutNum;

@end

#pragma mark - PB3GetTakeGoldGiftConfRes

typedef GPB_ENUM(PB3GetTakeGoldGiftConfRes_FieldNumber) {
  PB3GetTakeGoldGiftConfRes_FieldNumber_TakeGoldGiftConf = 1,
};

/**
 * 获取提现物品信息 响应
 **/
@interface PB3GetTakeGoldGiftConfRes : GPBMessage

/** 配置信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3TakeGoldGiftConf *takeGoldGiftConf;
/** Test to see if @c takeGoldGiftConf has been set. */
@property(nonatomic, readwrite) BOOL hasTakeGoldGiftConf;

@end

#pragma mark - PB3TakeGoldTemPointReq

typedef GPB_ENUM(PB3TakeGoldTemPointReq_FieldNumber) {
  PB3TakeGoldTemPointReq_FieldNumber_RelId = 1,
};

@interface PB3TakeGoldTemPointReq : GPBMessage

@property(nonatomic, readwrite) int32_t relId;

@end

#pragma mark - PB3TakeGoldTemPointRes

typedef GPB_ENUM(PB3TakeGoldTemPointRes_FieldNumber) {
  PB3TakeGoldTemPointRes_FieldNumber_Gold = 1,
};

@interface PB3TakeGoldTemPointRes : GPBMessage

@property(nonatomic, readwrite) int64_t gold;

@end

#pragma mark - PB3TakeGoldTemPointRecordReq

typedef GPB_ENUM(PB3TakeGoldTemPointRecordReq_FieldNumber) {
  PB3TakeGoldTemPointRecordReq_FieldNumber_RelId = 1,
};

/**
 * 返回前100的订单
 **/
@interface PB3TakeGoldTemPointRecordReq : GPBMessage

@property(nonatomic, readwrite) int32_t relId;

@end

#pragma mark - PB3TakeGoldTemPointRecordRes

typedef GPB_ENUM(PB3TakeGoldTemPointRecordRes_FieldNumber) {
  PB3TakeGoldTemPointRecordRes_FieldNumber_ListArray = 1,
};

@interface PB3TakeGoldTemPointRecordRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3TemPointRecord*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3CheckLimitReq

typedef GPB_ENUM(PB3CheckLimitReq_FieldNumber) {
  PB3CheckLimitReq_FieldNumber_ActId = 1,
  PB3CheckLimitReq_FieldNumber_RelId = 2,
  PB3CheckLimitReq_FieldNumber_ConfId = 3,
  PB3CheckLimitReq_FieldNumber_Type = 4,
};

@interface PB3CheckLimitReq : GPBMessage

/** 活动id，必须传 */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relId;

/** 详细的配置id 例如抽奖配置id */
@property(nonatomic, readwrite) int32_t confId;

/** 1-抽卡 */
@property(nonatomic, readwrite) int32_t type;

@end

#pragma mark - PB3CheckLimitRes

typedef GPB_ENUM(PB3CheckLimitRes_FieldNumber) {
  PB3CheckLimitRes_FieldNumber_Num = 1,
  PB3CheckLimitRes_FieldNumber_Status = 2,
  PB3CheckLimitRes_FieldNumber_Tips = 3,
};

@interface PB3CheckLimitRes : GPBMessage

/** 若有限制次数，返回剩余次数 */
@property(nonatomic, readwrite) int32_t num;

/** 0-失败 1-成功 */
@property(nonatomic, readwrite) int32_t status;

/** 提示语 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tips;

@end

#pragma mark - PB3SignInReq

typedef GPB_ENUM(PB3SignInReq_FieldNumber) {
  PB3SignInReq_FieldNumber_RelActId = 1,
  PB3SignInReq_FieldNumber_PlayerId = 2,
  PB3SignInReq_FieldNumber_SignDay = 3,
};

/**
 * 签到请求
 **/
@interface PB3SignInReq : GPBMessage

/** 子活动 */
@property(nonatomic, readwrite) int32_t relActId;

/** 人员id */
@property(nonatomic, readwrite) int64_t playerId;

/** 签到日期时间戳 */
@property(nonatomic, readwrite) int64_t signDay;

@end

#pragma mark - PB3SignInRes

/**
 * 签到响应
 **/
@interface PB3SignInRes : GPBMessage

@end

#pragma mark - PB3SignInLogReq

typedef GPB_ENUM(PB3SignInLogReq_FieldNumber) {
  PB3SignInLogReq_FieldNumber_ActId = 1,
  PB3SignInLogReq_FieldNumber_RelActId = 2,
};

/**
 * 签到记录请求参数
 **/
@interface PB3SignInLogReq : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActId;

@end

#pragma mark - PB3SignInLogRes

typedef GPB_ENUM(PB3SignInLogRes_FieldNumber) {
  PB3SignInLogRes_FieldNumber_LogsArray = 1,
};

/**
 * 签到记录响应
 **/
@interface PB3SignInLogRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SignInLog*> *logsArray;
/** The number of items in @c logsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger logsArray_Count;

@end

#pragma mark - PB3SignInLog

typedef GPB_ENUM(PB3SignInLog_FieldNumber) {
  PB3SignInLog_FieldNumber_DayTime = 1,
  PB3SignInLog_FieldNumber_Type = 2,
};

@interface PB3SignInLog : GPBMessage

/** 签到时间 */
@property(nonatomic, readwrite) int64_t dayTime;

/** 签到类型 1签到  2补签 */
@property(nonatomic, readwrite) int32_t type;

@end

#pragma mark - PB3UnbindCpReq

typedef GPB_ENUM(PB3UnbindCpReq_FieldNumber) {
  PB3UnbindCpReq_FieldNumber_RelId = 1,
  PB3UnbindCpReq_FieldNumber_Msg = 2,
  PB3UnbindCpReq_FieldNumber_URL = 3,
};

/**
 * 解绑cp请求
 **/
@interface PB3UnbindCpReq : GPBMessage

/** 关联id */
@property(nonatomic, readwrite) int32_t relId;

/** 邀请信息 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;

/** 跳转链接 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

@end

#pragma mark - PB3UnbindCpRes

/**
 * 解绑cp响应
 **/
@interface PB3UnbindCpRes : GPBMessage

@end

#pragma mark - PB3UnbindCpReplyReq

typedef GPB_ENUM(PB3UnbindCpReplyReq_FieldNumber) {
  PB3UnbindCpReplyReq_FieldNumber_RelId = 1,
  PB3UnbindCpReplyReq_FieldNumber_PlayerId = 2,
  PB3UnbindCpReplyReq_FieldNumber_Accept = 3,
  PB3UnbindCpReplyReq_FieldNumber_Msg = 4,
  PB3UnbindCpReplyReq_FieldNumber_URL = 5,
};

/**
 * 回复解绑cp请求
 **/
@interface PB3UnbindCpReplyReq : GPBMessage

/** 关联id */
@property(nonatomic, readwrite) int32_t relId;

/** 邀请人id */
@property(nonatomic, readwrite) int64_t playerId;

/** 是否接受 0 拒绝  1接受 */
@property(nonatomic, readwrite) BOOL accept;

/** 回复信息 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;

/** 跳转链接 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

@end

#pragma mark - PB3UnbindCpReplyRes

/**
 * 回复解绑cp响应
 **/
@interface PB3UnbindCpReplyRes : GPBMessage

@end

#pragma mark - PB3ActSendGiftReq

typedef GPB_ENUM(PB3ActSendGiftReq_FieldNumber) {
  PB3ActSendGiftReq_FieldNumber_RelId = 1,
  PB3ActSendGiftReq_FieldNumber_GiftId = 2,
  PB3ActSendGiftReq_FieldNumber_TargetId = 3,
  PB3ActSendGiftReq_FieldNumber_Num = 4,
};

/**
 * 投票送礼
 **/
@interface PB3ActSendGiftReq : GPBMessage

@property(nonatomic, readwrite) int32_t relId;

@property(nonatomic, readwrite) int32_t giftId;

@property(nonatomic, readwrite) int64_t targetId;

@property(nonatomic, readwrite) int32_t num;

@end

#pragma mark - PB3ActSendGiftRes

@interface PB3ActSendGiftRes : GPBMessage

@end

#pragma mark - PB3ActHeartBeatReq

typedef GPB_ENUM(PB3ActHeartBeatReq_FieldNumber) {
  PB3ActHeartBeatReq_FieldNumber_RelActId = 1,
  PB3ActHeartBeatReq_FieldNumber_Millisecond = 2,
};

/**
 * 心跳活动参数
 **/
@interface PB3ActHeartBeatReq : GPBMessage

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActId;

/** 松手时的计时毫秒数 比如7.7秒=7700毫秒 */
@property(nonatomic, readwrite) int32_t millisecond;

@end

#pragma mark - PB3ActHeartBeatRes

/**
 * 心跳活动响应
 **/
@interface PB3ActHeartBeatRes : GPBMessage

@end

#pragma mark - PB3ShowHeartBeatExcellentNumReq

typedef GPB_ENUM(PB3ShowHeartBeatExcellentNumReq_FieldNumber) {
  PB3ShowHeartBeatExcellentNumReq_FieldNumber_RelActId = 1,
};

/**
 * 显示心跳游戏用户的优秀成绩次数
 **/
@interface PB3ShowHeartBeatExcellentNumReq : GPBMessage

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActId;

@end

#pragma mark - PB3ShowHeartBeatExcellentNumRes

typedef GPB_ENUM(PB3ShowHeartBeatExcellentNumRes_FieldNumber) {
  PB3ShowHeartBeatExcellentNumRes_FieldNumber_Num = 1,
};

@interface PB3ShowHeartBeatExcellentNumRes : GPBMessage

/** 次数 */
@property(nonatomic, readwrite) int32_t num;

@end

#pragma mark - PB3BetGiftReq

typedef GPB_ENUM(PB3BetGiftReq_FieldNumber) {
  PB3BetGiftReq_FieldNumber_ActId = 1,
  PB3BetGiftReq_FieldNumber_RelActId = 2,
  PB3BetGiftReq_FieldNumber_GiftId = 3,
  PB3BetGiftReq_FieldNumber_GiftNum = 4,
};

/**
 * 夺宝投注
 **/
@interface PB3BetGiftReq : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActId;

/** 投注的物品id */
@property(nonatomic, readwrite) int32_t giftId;

/** 投注的物品数量 */
@property(nonatomic, readwrite) int32_t giftNum;

@end

#pragma mark - PB3BetGiftRes

@interface PB3BetGiftRes : GPBMessage

@end

#pragma mark - PB3TreasureInfoListReq

typedef GPB_ENUM(PB3TreasureInfoListReq_FieldNumber) {
  PB3TreasureInfoListReq_FieldNumber_ActId = 1,
  PB3TreasureInfoListReq_FieldNumber_RelActId = 2,
  PB3TreasureInfoListReq_FieldNumber_TreasureId = 3,
  PB3TreasureInfoListReq_FieldNumber_Page = 5,
  PB3TreasureInfoListReq_FieldNumber_PageSize = 6,
};

@interface PB3TreasureInfoListReq : GPBMessage

@property(nonatomic, readwrite) int32_t actId;

@property(nonatomic, readwrite) int32_t relActId;

/** 夺宝配置id */
@property(nonatomic, readwrite) int32_t treasureId;

/**    int32 num = 4; //查询数量 废弃 */
@property(nonatomic, readwrite) int32_t page;

/** 数量 */
@property(nonatomic, readwrite) int32_t pageSize;

@end

#pragma mark - PB3TreasureInfoListRes

typedef GPB_ENUM(PB3TreasureInfoListRes_FieldNumber) {
  PB3TreasureInfoListRes_FieldNumber_InfoListArray = 1,
};

/**
 * 获取夺宝信息
 **/
@interface PB3TreasureInfoListRes : GPBMessage

/** 夺宝信息 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3TreasureInfo*> *infoListArray;
/** The number of items in @c infoListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger infoListArray_Count;

@end

#pragma mark - PB3TreasureInfo

typedef GPB_ENUM(PB3TreasureInfo_FieldNumber) {
  PB3TreasureInfo_FieldNumber_TreasureId = 1,
  PB3TreasureInfo_FieldNumber_PeriodNum = 2,
  PB3TreasureInfo_FieldNumber_PrizeId = 3,
  PB3TreasureInfo_FieldNumber_PoolSize = 4,
  PB3TreasureInfo_FieldNumber_Stock = 5,
  PB3TreasureInfo_FieldNumber_CountPlayer = 8,
  PB3TreasureInfo_FieldNumber_GiftId = 9,
  PB3TreasureInfo_FieldNumber_GiftNum = 10,
  PB3TreasureInfo_FieldNumber_Status = 11,
  PB3TreasureInfo_FieldNumber_StartTime = 12,
  PB3TreasureInfo_FieldNumber_EndTime = 13,
  PB3TreasureInfo_FieldNumber_PlayerListArray = 14,
  PB3TreasureInfo_FieldNumber_WinnersArray = 15,
};

/**
 * 夺宝信息
 **/
@interface PB3TreasureInfo : GPBMessage

/** 夺宝配置id */
@property(nonatomic, readwrite) int32_t treasureId;

/** 期号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *periodNum;

/** 奖品id */
@property(nonatomic, readwrite) int32_t prizeId;

/** 池大小 */
@property(nonatomic, readwrite) int32_t poolSize;

/** 库存大小 */
@property(nonatomic, readwrite) int32_t stock;

/**
 *    repeated LuckyDogInfo winners = 6; //得奖用户信息
 *    repeated int64 player_list = 7; // 投注人列表
 **/
@property(nonatomic, readwrite) int64_t countPlayer;

/** 投注物品id */
@property(nonatomic, readwrite) int32_t giftId;

/** 一注需要的物品数量 */
@property(nonatomic, readwrite) int32_t giftNum;

/** 状态 0未开始 1进行中 2已开奖 3未达到开奖条件关闭 */
@property(nonatomic, readwrite) int32_t status;

/** 开始时间 */
@property(nonatomic, readwrite) int64_t startTime;

/** 结束时间 */
@property(nonatomic, readwrite) int64_t endTime;

/** 投注用户列表 默认10个 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3TreasurePlayerInfo*> *playerListArray;
/** The number of items in @c playerListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger playerListArray_Count;

/** 得奖用户信息 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3TreasurePlayerInfo*> *winnersArray;
/** The number of items in @c winnersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger winnersArray_Count;

@end

#pragma mark - PB3TreasurePlayerInfo

typedef GPB_ENUM(PB3TreasurePlayerInfo_FieldNumber) {
  PB3TreasurePlayerInfo_FieldNumber_PlayerId = 1,
  PB3TreasurePlayerInfo_FieldNumber_Code = 2,
  PB3TreasurePlayerInfo_FieldNumber_NickName = 3,
  PB3TreasurePlayerInfo_FieldNumber_Picture = 4,
};

/**
 * 夺宝得奖人信息
 **/
@interface PB3TreasurePlayerInfo : GPBMessage

/** 中奖用户id */
@property(nonatomic, readwrite) int64_t playerId;

/** 中奖码 */
@property(nonatomic, readwrite) int64_t code;

/** 用户昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;

/** 用户头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *picture;

@end

#pragma mark - PB3PlayerBetNumReq

typedef GPB_ENUM(PB3PlayerBetNumReq_FieldNumber) {
  PB3PlayerBetNumReq_FieldNumber_TreasureId = 1,
  PB3PlayerBetNumReq_FieldNumber_PeriodNum = 2,
};

/**
 * 获取用户投注数量
 **/
@interface PB3PlayerBetNumReq : GPBMessage

/** 夺宝配置id */
@property(nonatomic, readwrite) int32_t treasureId;

/** 夺宝期号 不传，获取当期投注量 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *periodNum;

@end

#pragma mark - PB3PlayerBetNumRes

typedef GPB_ENUM(PB3PlayerBetNumRes_FieldNumber) {
  PB3PlayerBetNumRes_FieldNumber_BetNum = 1,
};

@interface PB3PlayerBetNumRes : GPBMessage

/** 用户投注数量 */
@property(nonatomic, readwrite) int64_t betNum;

@end

#pragma mark - PB3PlayerBetOrderListReq

typedef GPB_ENUM(PB3PlayerBetOrderListReq_FieldNumber) {
  PB3PlayerBetOrderListReq_FieldNumber_TreasureId = 1,
  PB3PlayerBetOrderListReq_FieldNumber_PeriodNum = 2,
  PB3PlayerBetOrderListReq_FieldNumber_Page = 3,
  PB3PlayerBetOrderListReq_FieldNumber_PageSize = 4,
};

@interface PB3PlayerBetOrderListReq : GPBMessage

/** 夺宝配置id */
@property(nonatomic, readwrite) int32_t treasureId;

/** 夺宝期号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *periodNum;

/** 页码 */
@property(nonatomic, readwrite) int32_t page;

/** 每页显示的数量 */
@property(nonatomic, readwrite) int32_t pageSize;

@end

#pragma mark - PB3PlayerBetOrderListRes

typedef GPB_ENUM(PB3PlayerBetOrderListRes_FieldNumber) {
  PB3PlayerBetOrderListRes_FieldNumber_OrderListArray = 1,
};

@interface PB3PlayerBetOrderListRes : GPBMessage

/** 订单列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3PlayerBetOrder*> *orderListArray;
/** The number of items in @c orderListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger orderListArray_Count;

@end

#pragma mark - PB3PlayerBetOrder

typedef GPB_ENUM(PB3PlayerBetOrder_FieldNumber) {
  PB3PlayerBetOrder_FieldNumber_PeriodNum = 1,
  PB3PlayerBetOrder_FieldNumber_ConfGiftId = 2,
  PB3PlayerBetOrder_FieldNumber_BetGiftId = 3,
  PB3PlayerBetOrder_FieldNumber_BetGiftNum = 4,
  PB3PlayerBetOrder_FieldNumber_BetNum = 5,
  PB3PlayerBetOrder_FieldNumber_PrizeId = 6,
  PB3PlayerBetOrder_FieldNumber_Created = 7,
};

@interface PB3PlayerBetOrder : GPBMessage

/** 期号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *periodNum;

/** 夺宝礼物id */
@property(nonatomic, readwrite) int32_t confGiftId;

/** 投注物品id */
@property(nonatomic, readwrite) int32_t betGiftId;

/** 投注物品数量 */
@property(nonatomic, readwrite) int32_t betGiftNum;

/** 投注数 */
@property(nonatomic, readwrite) int32_t betNum;

/** 奖品id */
@property(nonatomic, readwrite) int32_t prizeId;

/** 创建时间 */
@property(nonatomic, readwrite) int64_t created;

@end

#pragma mark - PB3PlayerTreasureRecordReq

typedef GPB_ENUM(PB3PlayerTreasureRecordReq_FieldNumber) {
  PB3PlayerTreasureRecordReq_FieldNumber_Page = 1,
  PB3PlayerTreasureRecordReq_FieldNumber_PageSize = 2,
  PB3PlayerTreasureRecordReq_FieldNumber_TreasureId = 3,
};

/**
 * 用户夺宝记录请求
 **/
@interface PB3PlayerTreasureRecordReq : GPBMessage

/** 页码 */
@property(nonatomic, readwrite) int32_t page;

/** 每页显示数量 */
@property(nonatomic, readwrite) int32_t pageSize;

/** 夺宝配置id */
@property(nonatomic, readwrite) int32_t treasureId;

@end

#pragma mark - PB3PlayerTreasureRecordRes

typedef GPB_ENUM(PB3PlayerTreasureRecordRes_FieldNumber) {
  PB3PlayerTreasureRecordRes_FieldNumber_RecordListArray = 1,
};

/**
 * 用户夺宝记录响应
 **/
@interface PB3PlayerTreasureRecordRes : GPBMessage

/** 用户夺宝记录列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3PlayerTreasureRecordInfo*> *recordListArray;
/** The number of items in @c recordListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger recordListArray_Count;

@end

#pragma mark - PB3PlayerTreasureRecordInfo

typedef GPB_ENUM(PB3PlayerTreasureRecordInfo_FieldNumber) {
  PB3PlayerTreasureRecordInfo_FieldNumber_Id_p = 1,
  PB3PlayerTreasureRecordInfo_FieldNumber_TreasureId = 2,
  PB3PlayerTreasureRecordInfo_FieldNumber_PeriodNum = 3,
  PB3PlayerTreasureRecordInfo_FieldNumber_PlayerId = 4,
  PB3PlayerTreasureRecordInfo_FieldNumber_BetNumCount = 5,
  PB3PlayerTreasureRecordInfo_FieldNumber_PrizeId = 6,
  PB3PlayerTreasureRecordInfo_FieldNumber_Status = 7,
  PB3PlayerTreasureRecordInfo_FieldNumber_GiftListArray = 9,
  PB3PlayerTreasureRecordInfo_FieldNumber_WinnerListArray = 10,
  PB3PlayerTreasureRecordInfo_FieldNumber_PeriodStatus = 11,
};

@interface PB3PlayerTreasureRecordInfo : GPBMessage

@property(nonatomic, readwrite) int32_t id_p;

@property(nonatomic, readwrite) int32_t treasureId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *periodNum;

@property(nonatomic, readwrite) int64_t playerId;

/** 用户本期投注总数 */
@property(nonatomic, readwrite) int32_t betNumCount;

/** 奖品id */
@property(nonatomic, readwrite) int32_t prizeId;

/** 0未中奖 1中奖 */
@property(nonatomic, readwrite) int32_t status;

/**    repeated LuckyDogInfo winner_list = 8; // 中奖人列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3GiftInfo*> *giftListArray;
/** The number of items in @c giftListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger giftListArray_Count;

/** 中奖人列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3TreasurePlayerInfo*> *winnerListArray;
/** The number of items in @c winnerListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger winnerListArray_Count;

/** 本期开奖状态 0未开始 1进行中 2已开奖 3池未满，关闭 */
@property(nonatomic, readwrite) int32_t periodStatus;

@end

#pragma mark - PB3GiftInfo

typedef GPB_ENUM(PB3GiftInfo_FieldNumber) {
  PB3GiftInfo_FieldNumber_GiftId = 1,
  PB3GiftInfo_FieldNumber_GiftNum = 2,
  PB3GiftInfo_FieldNumber_AwardId = 3,
};

@interface PB3GiftInfo : GPBMessage

/** 奖励id */
@property(nonatomic, readwrite) int32_t giftId;

/** 奖励数量 */
@property(nonatomic, readwrite) int32_t giftNum;

/** 奖励id */
@property(nonatomic, readwrite) int32_t awardId;

@end

#pragma mark - PB3ActFormRecordReq

typedef GPB_ENUM(PB3ActFormRecordReq_FieldNumber) {
  PB3ActFormRecordReq_FieldNumber_ActId = 1,
  PB3ActFormRecordReq_FieldNumber_RelActId = 2,
  PB3ActFormRecordReq_FieldNumber_CarrierId = 3,
  PB3ActFormRecordReq_FieldNumber_PlayerId = 4,
  PB3ActFormRecordReq_FieldNumber_PlayerName = 5,
  PB3ActFormRecordReq_FieldNumber_Page = 6,
  PB3ActFormRecordReq_FieldNumber_PageSize = 7,
  PB3ActFormRecordReq_FieldNumber_UseGroup = 8,
  PB3ActFormRecordReq_FieldNumber_SortType = 9,
};

@interface PB3ActFormRecordReq : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActId;

/** 载体id */
@property(nonatomic, readwrite) int32_t carrierId;

/** 用户id */
@property(nonatomic, readwrite) int64_t playerId;

/** 用户名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerName;

/** 分页页码 */
@property(nonatomic, readwrite) int32_t page;

/** 每页显示多少条数据 */
@property(nonatomic, readwrite) int32_t pageSize;

/** 是否分组查询 (flag分组) */
@property(nonatomic, readwrite) BOOL useGroup;

/** 结果排序 0默认 1优先按照点赞数排序再按时间排序 2仅按照时间排序 */
@property(nonatomic, readwrite) int32_t sortType;

@end

#pragma mark - PB3ActFormRecord

typedef GPB_ENUM(PB3ActFormRecord_FieldNumber) {
  PB3ActFormRecord_FieldNumber_Data_p = 1,
  PB3ActFormRecord_FieldNumber_Remark = 2,
  PB3ActFormRecord_FieldNumber_Created = 3,
  PB3ActFormRecord_FieldNumber_Flag = 4,
  PB3ActFormRecord_FieldNumber_RecordId = 5,
  PB3ActFormRecord_FieldNumber_CarrierId = 6,
  PB3ActFormRecord_FieldNumber_LikeCount = 7,
  PB3ActFormRecord_FieldNumber_IsMyLike = 8,
  PB3ActFormRecord_FieldNumber_Status = 9,
};

@interface PB3ActFormRecord : GPBMessage

/** 用户填写的数据 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *data_p;

/** 备注 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *remark;

/** 创建时间 */
@property(nonatomic, readwrite) int64_t created;

/** 标签 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *flag;

/** 用户填写记录id */
@property(nonatomic, readwrite) int32_t recordId;

/** 载体id */
@property(nonatomic, readwrite) int32_t carrierId;

/** 点赞数量 */
@property(nonatomic, readwrite) int64_t likeCount;

/** 本人是否已点赞 */
@property(nonatomic, readwrite) BOOL isMyLike;

/** 审核状态 0待审核 1审核通过 2审核不通过 */
@property(nonatomic, readwrite) int32_t status;

@end

#pragma mark - PB3ActFormResult

typedef GPB_ENUM(PB3ActFormResult_FieldNumber) {
  PB3ActFormResult_FieldNumber_Flag = 1,
  PB3ActFormResult_FieldNumber_RecordsArray = 2,
};

@interface PB3ActFormResult : GPBMessage

/** 标签 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *flag;

/** 用户填写记录列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ActFormRecord*> *recordsArray;
/** The number of items in @c recordsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger recordsArray_Count;

@end

#pragma mark - PB3ActFormRecordRes

typedef GPB_ENUM(PB3ActFormRecordRes_FieldNumber) {
  PB3ActFormRecordRes_FieldNumber_ResultListArray = 1,
  PB3ActFormRecordRes_FieldNumber_Total = 2,
  PB3ActFormRecordRes_FieldNumber_PlayerRecordArray = 3,
};

@interface PB3ActFormRecordRes : GPBMessage

/** 结果集 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ActFormResult*> *resultListArray;
/** The number of items in @c resultListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger resultListArray_Count;

/** 记录总条数 */
@property(nonatomic, readwrite) int32_t total;

/** 当前用户在当前载体，是否有记录存在，最新5条 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ActFormRecord*> *playerRecordArray;
/** The number of items in @c playerRecordArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger playerRecordArray_Count;

@end

#pragma mark - PB3SaleForBetGiftReq

typedef GPB_ENUM(PB3SaleForBetGiftReq_FieldNumber) {
  PB3SaleForBetGiftReq_FieldNumber_ActId = 1,
  PB3SaleForBetGiftReq_FieldNumber_RelActId = 2,
  PB3SaleForBetGiftReq_FieldNumber_ExchangeId = 3,
  PB3SaleForBetGiftReq_FieldNumber_GiftInfoListArray = 4,
  PB3SaleForBetGiftReq_FieldNumber_Num = 5,
  PB3SaleForBetGiftReq_FieldNumber_Remark = 6,
};

@interface PB3SaleForBetGiftReq : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActId;

/** 兑换配置id */
@property(nonatomic, readwrite) int32_t exchangeId;

/** 要兑换的礼物 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SaleGiftItem*> *giftInfoListArray;
/** The number of items in @c giftInfoListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger giftInfoListArray_Count;

/** 兑换个数 */
@property(nonatomic, readwrite) int32_t num;

/** 备注，活动兑换填子活动id 或者活动id 字段废弃 */
@property(nonatomic, readwrite) int32_t remark;

@end

#pragma mark - PB3SaleForBetGiftRes

typedef GPB_ENUM(PB3SaleForBetGiftRes_FieldNumber) {
  PB3SaleForBetGiftRes_FieldNumber_SaleGiftListArray = 1,
  PB3SaleForBetGiftRes_FieldNumber_GainGiftListArray = 2,
  PB3SaleForBetGiftRes_FieldNumber_LossGift = 3,
};

@interface PB3SaleForBetGiftRes : GPBMessage

/** 卖出物品 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SaleGiftItem*> *saleGiftListArray;
/** The number of items in @c saleGiftListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger saleGiftListArray_Count;

/** 获取物品 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SaleGiftItem*> *gainGiftListArray;
/** The number of items in @c gainGiftListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger gainGiftListArray_Count;

/** 投注扣除的物品 */
@property(nonatomic, readwrite, strong, null_resettable) PB3SaleGiftItem *lossGift;
/** Test to see if @c lossGift has been set. */
@property(nonatomic, readwrite) BOOL hasLossGift;

@end

#pragma mark - PB3SaleGiftItem

typedef GPB_ENUM(PB3SaleGiftItem_FieldNumber) {
  PB3SaleGiftItem_FieldNumber_GiftId = 1,
  PB3SaleGiftItem_FieldNumber_GiftNum = 2,
  PB3SaleGiftItem_FieldNumber_Price = 3,
};

@interface PB3SaleGiftItem : GPBMessage

/** 礼物id */
@property(nonatomic, readwrite) int32_t giftId;

/** 礼物数量 */
@property(nonatomic, readwrite) int64_t giftNum;

/** 物品单价 */
@property(nonatomic, readwrite) uint32_t price;

@end

#pragma mark - PB3DrawCardWithGoldReq

typedef GPB_ENUM(PB3DrawCardWithGoldReq_FieldNumber) {
  PB3DrawCardWithGoldReq_FieldNumber_ActId = 1,
  PB3DrawCardWithGoldReq_FieldNumber_RelActId = 2,
  PB3DrawCardWithGoldReq_FieldNumber_SelectNumsArray = 3,
  PB3DrawCardWithGoldReq_FieldNumber_ConfDrawCardId = 4,
  PB3DrawCardWithGoldReq_FieldNumber_Timestamp = 5,
};

/**
 * 金币抽卡请求参数
 **/
@interface PB3DrawCardWithGoldReq : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActId;

/** 选中的卡牌号码数组 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *selectNumsArray;
/** The number of items in @c selectNumsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger selectNumsArray_Count;

/** 抽卡配置id */
@property(nonatomic, readwrite) int32_t confDrawCardId;

/** 时间戳 */
@property(nonatomic, readwrite) int64_t timestamp;

@end

#pragma mark - PB3SaveActFormRecordReq

typedef GPB_ENUM(PB3SaveActFormRecordReq_FieldNumber) {
  PB3SaveActFormRecordReq_FieldNumber_ActId = 1,
  PB3SaveActFormRecordReq_FieldNumber_RelActId = 2,
  PB3SaveActFormRecordReq_FieldNumber_CarrierId = 3,
  PB3SaveActFormRecordReq_FieldNumber_RecordData = 4,
};

/**
 * 动态表单-新增用户填写记录 请求参数
 **/
@interface PB3SaveActFormRecordReq : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActId;

/** 载体id */
@property(nonatomic, readwrite) int32_t carrierId;

/** 新的记录数据，json序列化成字符串 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *recordData;

@end

#pragma mark - PB3SaveActFormRecordRes

@interface PB3SaveActFormRecordRes : GPBMessage

@end

#pragma mark - PB3UpdateActFormRecordReq

typedef GPB_ENUM(PB3UpdateActFormRecordReq_FieldNumber) {
  PB3UpdateActFormRecordReq_FieldNumber_RecordId = 1,
  PB3UpdateActFormRecordReq_FieldNumber_RecordData = 2,
  PB3UpdateActFormRecordReq_FieldNumber_ActId = 3,
  PB3UpdateActFormRecordReq_FieldNumber_RelActId = 4,
  PB3UpdateActFormRecordReq_FieldNumber_CarrierId = 5,
};

/**
 * 动态表单-修改用户填写记录 请求参数
 **/
@interface PB3UpdateActFormRecordReq : GPBMessage

/** 需要修改记录id */
@property(nonatomic, readwrite) int32_t recordId;

/** 修改后的记录数据，json序列化成字符串 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *recordData;

/** 活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActId;

/** 载体id */
@property(nonatomic, readwrite) int32_t carrierId;

@end

#pragma mark - PB3UpdateActFormRecordRes

@interface PB3UpdateActFormRecordRes : GPBMessage

@end

#pragma mark - PB3SendInviteCodeReq

typedef GPB_ENUM(PB3SendInviteCodeReq_FieldNumber) {
  PB3SendInviteCodeReq_FieldNumber_ActId = 1,
  PB3SendInviteCodeReq_FieldNumber_RelActId = 2,
  PB3SendInviteCodeReq_FieldNumber_InviteCode = 3,
};

/**
 * 绑定邀请人邀请码
 **/
@interface PB3SendInviteCodeReq : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActId;

/** 邀请码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *inviteCode;

@end

#pragma mark - PB3SendInviteCodeRes

@interface PB3SendInviteCodeRes : GPBMessage

@end

#pragma mark - PB3ListInviteCodeRecordReq

typedef GPB_ENUM(PB3ListInviteCodeRecordReq_FieldNumber) {
  PB3ListInviteCodeRecordReq_FieldNumber_ActId = 1,
  PB3ListInviteCodeRecordReq_FieldNumber_RelActId = 2,
  PB3ListInviteCodeRecordReq_FieldNumber_Page = 3,
  PB3ListInviteCodeRecordReq_FieldNumber_PageSize = 4,
};

/**
 * 邀请码记录
 **/
@interface PB3ListInviteCodeRecordReq : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActId;

/** 页数 */
@property(nonatomic, readwrite) int32_t page;

/** 每页大小 */
@property(nonatomic, readwrite) int32_t pageSize;

@end

#pragma mark - PB3InviteCodeRecord

typedef GPB_ENUM(PB3InviteCodeRecord_FieldNumber) {
  PB3InviteCodeRecord_FieldNumber_PlayerName = 1,
  PB3InviteCodeRecord_FieldNumber_PlayerId = 2,
  PB3InviteCodeRecord_FieldNumber_Created = 3,
};

@interface PB3InviteCodeRecord : GPBMessage

/** 用户名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerName;

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 时间戳 */
@property(nonatomic, readwrite) int64_t created;

@end

#pragma mark - PB3ListInviteCodeRecordRes

typedef GPB_ENUM(PB3ListInviteCodeRecordRes_FieldNumber) {
  PB3ListInviteCodeRecordRes_FieldNumber_RecordListArray = 1,
  PB3ListInviteCodeRecordRes_FieldNumber_TotalNum = 2,
};

@interface PB3ListInviteCodeRecordRes : GPBMessage

/** 邀请码记录 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3InviteCodeRecord*> *recordListArray;
/** The number of items in @c recordListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger recordListArray_Count;

/** 总记录数 */
@property(nonatomic, readwrite) int32_t totalNum;

@end

#pragma mark - PB3RankItem

typedef GPB_ENUM(PB3RankItem_FieldNumber) {
  PB3RankItem_FieldNumber_PlayerId = 1,
  PB3RankItem_FieldNumber_PlayerName = 2,
  PB3RankItem_FieldNumber_PlayerIcon = 3,
  PB3RankItem_FieldNumber_GoldSum = 4,
  PB3RankItem_FieldNumber_PointSum = 5,
  PB3RankItem_FieldNumber_Sort = 6,
  PB3RankItem_FieldNumber_Promotion = 7,
  PB3RankItem_FieldNumber_Cornet = 8,
};

/**
 * 排行榜数据项目
 **/
@interface PB3RankItem : GPBMessage

/** 人员id/房间id */
@property(nonatomic, readwrite) int64_t playerId;

/** 人员/房间名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerName;

/** 人员/房间头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerIcon;

/** 金币总额 */
@property(nonatomic, readwrite) int64_t goldSum;

/** 积分总额 */
@property(nonatomic, readwrite) int64_t pointSum;

/** 排行榜中的排序 */
@property(nonatomic, readwrite) int32_t sort;

/** 晋级标记 */
@property(nonatomic, readwrite, strong, null_resettable) PB3RankPromotion *promotion;
/** Test to see if @c promotion has been set. */
@property(nonatomic, readwrite) BOOL hasPromotion;

/** 人员或房间短号 */
@property(nonatomic, readwrite) int64_t cornet;

@end

#pragma mark - PB3RankPromotion

typedef GPB_ENUM(PB3RankPromotion_FieldNumber) {
  PB3RankPromotion_FieldNumber_RelActId = 1,
};

/**
 * 排行榜晋级
 **/
@interface PB3RankPromotion : GPBMessage

/** 子活动id 晋级的榜 */
@property(nonatomic, readwrite) int32_t relActId;

@end

#pragma mark - PB3RankListReq

typedef GPB_ENUM(PB3RankListReq_FieldNumber) {
  PB3RankListReq_FieldNumber_ActId = 1,
  PB3RankListReq_FieldNumber_RelActId = 2,
  PB3RankListReq_FieldNumber_Page = 3,
  PB3RankListReq_FieldNumber_PageSize = 4,
  PB3RankListReq_FieldNumber_TimeZeroPoint = 5,
};

/**
 * 排行榜请求参数
 **/
@interface PB3RankListReq : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActId;

/** 分页 */
@property(nonatomic, readwrite) int32_t page;

/** 每页数量 */
@property(nonatomic, readwrite) int32_t pageSize;

/** 查询过往榜请传对应的(每日,周一)零点时间戳，如果查当前榜单传0即可 */
@property(nonatomic, readwrite) int64_t timeZeroPoint;

@end

#pragma mark - PB3RoomPlayerRankListRes

typedef GPB_ENUM(PB3RoomPlayerRankListRes_FieldNumber) {
  PB3RoomPlayerRankListRes_FieldNumber_RankListArray = 1,
  PB3RoomPlayerRankListRes_FieldNumber_MyRank = 2,
  PB3RoomPlayerRankListRes_FieldNumber_Total = 3,
};

/**
 * 房间贡献榜响应
 **/
@interface PB3RoomPlayerRankListRes : GPBMessage

/** 排行榜 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3RankItem*> *rankListArray;
/** The number of items in @c rankListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger rankListArray_Count;

/** 我的排名 */
@property(nonatomic, readwrite, strong, null_resettable) PB3RankItem *myRank;
/** Test to see if @c myRank has been set. */
@property(nonatomic, readwrite) BOOL hasMyRank;

/** 榜单总数 */
@property(nonatomic, readwrite) uint64_t total;

@end

#pragma mark - PB3RoomPlayerRankListReq

typedef GPB_ENUM(PB3RoomPlayerRankListReq_FieldNumber) {
  PB3RoomPlayerRankListReq_FieldNumber_ActId = 1,
  PB3RoomPlayerRankListReq_FieldNumber_RelActId = 2,
  PB3RoomPlayerRankListReq_FieldNumber_SearchType = 3,
  PB3RoomPlayerRankListReq_FieldNumber_Page = 4,
  PB3RoomPlayerRankListReq_FieldNumber_PageSize = 5,
  PB3RoomPlayerRankListReq_FieldNumber_RoomId = 6,
};

/**
 * 房间贡献榜请求
 **/
@interface PB3RoomPlayerRankListReq : GPBMessage

@property(nonatomic, readwrite) int32_t actId;

@property(nonatomic, readwrite) int32_t relActId;

/** 数据类型 0公会成员收礼榜 1用户在该房间的送礼榜 */
@property(nonatomic, readwrite) uint32_t searchType;

/** 页码 */
@property(nonatomic, readwrite) uint32_t page;

/** 每页显示数量 */
@property(nonatomic, readwrite) uint32_t pageSize;

/** 房间id 查询指定房间id的贡献榜，如果是当前房间的贡献榜传0 */
@property(nonatomic, readwrite) int64_t roomId;

@end

#pragma mark - PB3PlayerRankListRes

typedef GPB_ENUM(PB3PlayerRankListRes_FieldNumber) {
  PB3PlayerRankListRes_FieldNumber_RankListArray = 1,
  PB3PlayerRankListRes_FieldNumber_MyRank = 2,
  PB3PlayerRankListRes_FieldNumber_Total = 3,
};

/**
 * 人员排行榜响应
 **/
@interface PB3PlayerRankListRes : GPBMessage

/** 排行榜 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3RankItem*> *rankListArray;
/** The number of items in @c rankListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger rankListArray_Count;

/** 我的排名 */
@property(nonatomic, readwrite, strong, null_resettable) PB3RankItem *myRank;
/** Test to see if @c myRank has been set. */
@property(nonatomic, readwrite) BOOL hasMyRank;

/** 榜单总数 */
@property(nonatomic, readwrite) uint64_t total;

@end

#pragma mark - PB3RoomRankItem

typedef GPB_ENUM(PB3RoomRankItem_FieldNumber) {
  PB3RoomRankItem_FieldNumber_Rank = 1,
  PB3RoomRankItem_FieldNumber_GuildMemberListArray = 2,
};

/**
 * 房间排行榜项
 **/
@interface PB3RoomRankItem : GPBMessage

/** 排行榜 */
@property(nonatomic, readwrite, strong, null_resettable) PB3RankItem *rank;
/** Test to see if @c rank has been set. */
@property(nonatomic, readwrite) BOOL hasRank;

/** 公会成员贡献榜 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3RankItem*> *guildMemberListArray;
/** The number of items in @c guildMemberListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger guildMemberListArray_Count;

@end

#pragma mark - PB3RoomRankListRes

typedef GPB_ENUM(PB3RoomRankListRes_FieldNumber) {
  PB3RoomRankListRes_FieldNumber_RankListArray = 1,
  PB3RoomRankListRes_FieldNumber_MyRank = 2,
  PB3RoomRankListRes_FieldNumber_Total = 3,
};

/**
 * 房间排行榜响应
 **/
@interface PB3RoomRankListRes : GPBMessage

/** 排行榜 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3RoomRankItem*> *rankListArray;
/** The number of items in @c rankListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger rankListArray_Count;

/** 我的排名 */
@property(nonatomic, readwrite, strong, null_resettable) PB3RankItem *myRank;
/** Test to see if @c myRank has been set. */
@property(nonatomic, readwrite) BOOL hasMyRank;

/** 榜单总数 */
@property(nonatomic, readwrite) uint64_t total;

@end

#pragma mark - PB3BannerDetonatedBox

typedef GPB_ENUM(PB3BannerDetonatedBox_FieldNumber) {
  PB3BannerDetonatedBox_FieldNumber_PlayerId = 1,
  PB3BannerDetonatedBox_FieldNumber_RoomId = 2,
  PB3BannerDetonatedBox_FieldNumber_DetonatedTime = 3,
  PB3BannerDetonatedBox_FieldNumber_EndTime = 4,
};

/**
 * 引爆宝箱的数据
 **/
@interface PB3BannerDetonatedBox : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

@property(nonatomic, readwrite) int64_t roomId;

/** 引爆宝箱的时间戳 单位秒 */
@property(nonatomic, readwrite) int64_t detonatedTime;

/** 宝箱消失的时间戳 单位秒 */
@property(nonatomic, readwrite) int64_t endTime;

@end

#pragma mark - PB3BannerDetonatedBoxReq

typedef GPB_ENUM(PB3BannerDetonatedBoxReq_FieldNumber) {
  PB3BannerDetonatedBoxReq_FieldNumber_ActId = 1,
  PB3BannerDetonatedBoxReq_FieldNumber_RelActId = 2,
  PB3BannerDetonatedBoxReq_FieldNumber_RoomIdListArray = 3,
};

/**
 * 获取引爆宝箱数据请求
 **/
@interface PB3BannerDetonatedBoxReq : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActId;

/** 要查询引爆数据的房间id列表 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *roomIdListArray;
/** The number of items in @c roomIdListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger roomIdListArray_Count;

@end

#pragma mark - PB3BannerDetonatedBoxRes

typedef GPB_ENUM(PB3BannerDetonatedBoxRes_FieldNumber) {
  PB3BannerDetonatedBoxRes_FieldNumber_DetonatedBoxListArray = 1,
};

/**
 * 获取引爆宝箱数据响应
 **/
@interface PB3BannerDetonatedBoxRes : GPBMessage

/** 被引爆的宝箱列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3BannerDetonatedBox*> *detonatedBoxListArray;
/** The number of items in @c detonatedBoxListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger detonatedBoxListArray_Count;

@end

#pragma mark - PB3SurplusBannerBoxInfo

typedef GPB_ENUM(PB3SurplusBannerBoxInfo_FieldNumber) {
  PB3SurplusBannerBoxInfo_FieldNumber_RoomId = 1,
  PB3SurplusBannerBoxInfo_FieldNumber_SurplusBoxNum = 2,
  PB3SurplusBannerBoxInfo_FieldNumber_DetonatedBox = 3,
};

/**
 * 剩余宝箱信息
 **/
@interface PB3SurplusBannerBoxInfo : GPBMessage

/** 房间id */
@property(nonatomic, readwrite) int64_t roomId;

/** 剩余宝箱数量 */
@property(nonatomic, readwrite) int32_t surplusBoxNum;

/** 引爆宝箱信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3BannerDetonatedBox *detonatedBox;
/** Test to see if @c detonatedBox has been set. */
@property(nonatomic, readwrite) BOOL hasDetonatedBox;

@end

#pragma mark - PB3SurplusBannerBoxRes

typedef GPB_ENUM(PB3SurplusBannerBoxRes_FieldNumber) {
  PB3SurplusBannerBoxRes_FieldNumber_SurplusBoxListArray = 1,
};

/**
 * 获取剩余宝箱信息响应
 **/
@interface PB3SurplusBannerBoxRes : GPBMessage

/** 房间剩余宝箱信息列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SurplusBannerBoxInfo*> *surplusBoxListArray;
/** The number of items in @c surplusBoxListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger surplusBoxListArray_Count;

@end

#pragma mark - PB3LogTreasureSaleGiftReq

typedef GPB_ENUM(PB3LogTreasureSaleGiftReq_FieldNumber) {
  PB3LogTreasureSaleGiftReq_FieldNumber_TreasureId = 1,
  PB3LogTreasureSaleGiftReq_FieldNumber_PeriodNum = 2,
  PB3LogTreasureSaleGiftReq_FieldNumber_Page = 3,
  PB3LogTreasureSaleGiftReq_FieldNumber_PageSize = 4,
};

/**
 * 夺宝售卖物品记录-请求参数
 **/
@interface PB3LogTreasureSaleGiftReq : GPBMessage

/** 夺宝配置id */
@property(nonatomic, readwrite) int32_t treasureId;

/** 期号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *periodNum;

/** 分页页码 */
@property(nonatomic, readwrite) int32_t page;

/** 每页显示的数据量 */
@property(nonatomic, readwrite) int32_t pageSize;

@end

#pragma mark - PB3LogTreasureSaleGift

typedef GPB_ENUM(PB3LogTreasureSaleGift_FieldNumber) {
  PB3LogTreasureSaleGift_FieldNumber_SaleGiftListArray = 1,
  PB3LogTreasureSaleGift_FieldNumber_BetGift = 2,
  PB3LogTreasureSaleGift_FieldNumber_Created = 3,
};

/**
 * 夺宝售卖物品记录
 **/
@interface PB3LogTreasureSaleGift : GPBMessage

/** 售卖的物品json */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SaleGiftItem*> *saleGiftListArray;
/** The number of items in @c saleGiftListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger saleGiftListArray_Count;

/** 投注的物品json */
@property(nonatomic, readwrite, strong, null_resettable) PB3SaleGiftItem *betGift;
/** Test to see if @c betGift has been set. */
@property(nonatomic, readwrite) BOOL hasBetGift;

/** 创建时间 */
@property(nonatomic, readwrite) int64_t created;

@end

#pragma mark - PB3LogTreasureSaleGiftRes

typedef GPB_ENUM(PB3LogTreasureSaleGiftRes_FieldNumber) {
  PB3LogTreasureSaleGiftRes_FieldNumber_LogListArray = 1,
};

/**
 * 夺宝售卖物品记录-响应
 **/
@interface PB3LogTreasureSaleGiftRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3LogTreasureSaleGift*> *logListArray;
/** The number of items in @c logListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger logListArray_Count;

@end

#pragma mark - PB3MyTreasureLotteryRecordReq

typedef GPB_ENUM(PB3MyTreasureLotteryRecordReq_FieldNumber) {
  PB3MyTreasureLotteryRecordReq_FieldNumber_TreasureId = 1,
  PB3MyTreasureLotteryRecordReq_FieldNumber_PeriodNum = 2,
};

/**
 * 夺宝用户得奖情况
 **/
@interface PB3MyTreasureLotteryRecordReq : GPBMessage

/** 夺宝配置id */
@property(nonatomic, readwrite) int32_t treasureId;

/** 期号 如果传空字符串，系统会选择最新一期返回 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *periodNum;

@end

#pragma mark - PB3MyTreasureLotteryRecordRes

typedef GPB_ENUM(PB3MyTreasureLotteryRecordRes_FieldNumber) {
  PB3MyTreasureLotteryRecordRes_FieldNumber_Record = 1,
};

@interface PB3MyTreasureLotteryRecordRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3PlayerTreasureRecordInfo *record;
/** Test to see if @c record has been set. */
@property(nonatomic, readwrite) BOOL hasRecord;

@end

#pragma mark - PB3ExchangeGiftReq

typedef GPB_ENUM(PB3ExchangeGiftReq_FieldNumber) {
  PB3ExchangeGiftReq_FieldNumber_ActId = 1,
  PB3ExchangeGiftReq_FieldNumber_RelActId = 2,
  PB3ExchangeGiftReq_FieldNumber_ExchangeId = 3,
  PB3ExchangeGiftReq_FieldNumber_Num = 4,
  PB3ExchangeGiftReq_FieldNumber_PremiumsId = 5,
};

/**
 * 礼物兑换
 **/
@interface PB3ExchangeGiftReq : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActId;

/** 兑换配置id */
@property(nonatomic, readwrite) int32_t exchangeId;

/** 兑换个数 */
@property(nonatomic, readwrite) int32_t num;

/** 额外奖励id */
@property(nonatomic, readwrite) int32_t premiumsId;

@end

#pragma mark - PB3ExchangeGiftRes

typedef GPB_ENUM(PB3ExchangeGiftRes_FieldNumber) {
  PB3ExchangeGiftRes_FieldNumber_ExchangeNum = 1,
};

/**
 * 礼物兑换响应数据
 **/
@interface PB3ExchangeGiftRes : GPBMessage

/** 兑换数量 */
@property(nonatomic, readwrite) int32_t exchangeNum;

@end

#pragma mark - PB3ActPlayerCommentReq

typedef GPB_ENUM(PB3ActPlayerCommentReq_FieldNumber) {
  PB3ActPlayerCommentReq_FieldNumber_ActId = 1,
  PB3ActPlayerCommentReq_FieldNumber_RelActId = 2,
  PB3ActPlayerCommentReq_FieldNumber_CommentStr = 3,
};

/**
 * 用户评论请求
 **/
@interface PB3ActPlayerCommentReq : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActId;

/** 评论内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *commentStr;

@end

#pragma mark - PB3ActPlayerCommentRes

/**
 * 用户评论返回
 **/
@interface PB3ActPlayerCommentRes : GPBMessage

@end

#pragma mark - PB3ListActPlayerCommentReq

typedef GPB_ENUM(PB3ListActPlayerCommentReq_FieldNumber) {
  PB3ListActPlayerCommentReq_FieldNumber_ActId = 1,
  PB3ListActPlayerCommentReq_FieldNumber_RelActId = 2,
};

/**
 * 用户评论列表请求
 **/
@interface PB3ListActPlayerCommentReq : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActId;

@end

#pragma mark - PB3PlayerCommentInfo

typedef GPB_ENUM(PB3PlayerCommentInfo_FieldNumber) {
  PB3PlayerCommentInfo_FieldNumber_PlayerId = 1,
  PB3PlayerCommentInfo_FieldNumber_PlayerName = 2,
  PB3PlayerCommentInfo_FieldNumber_PlayerIcon = 3,
  PB3PlayerCommentInfo_FieldNumber_CommentStr = 4,
};

/**
 * 用户评论信息
 **/
@interface PB3PlayerCommentInfo : GPBMessage

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 人员名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerName;

/** 人员icon */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerIcon;

/** 用户评论 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *commentStr;

@end

#pragma mark - PB3ListActPlayerCommentRes

typedef GPB_ENUM(PB3ListActPlayerCommentRes_FieldNumber) {
  PB3ListActPlayerCommentRes_FieldNumber_CommentListArray = 1,
};

/**
 * 用户评论列表返回
 **/
@interface PB3ListActPlayerCommentRes : GPBMessage

/** 评论数据 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3PlayerCommentInfo*> *commentListArray;
/** The number of items in @c commentListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger commentListArray_Count;

@end

#pragma mark - PB3SearchByVotePlayerReq

typedef GPB_ENUM(PB3SearchByVotePlayerReq_FieldNumber) {
  PB3SearchByVotePlayerReq_FieldNumber_ActId = 1,
  PB3SearchByVotePlayerReq_FieldNumber_RelActId = 2,
  PB3SearchByVotePlayerReq_FieldNumber_SearchPlayerId = 3,
};

/**
 * 被投票人查询请求
 **/
@interface PB3SearchByVotePlayerReq : GPBMessage

/** 活动ID */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动ID */
@property(nonatomic, readwrite) int32_t relActId;

/** 被查询用户ID */
@property(nonatomic, readwrite) int64_t searchPlayerId;

@end

#pragma mark - PB3SearchByVotePlayerRes

typedef GPB_ENUM(PB3SearchByVotePlayerRes_FieldNumber) {
  PB3SearchByVotePlayerRes_FieldNumber_ByVoteInfo = 1,
};

/**
 * 被投票人查询返回
 **/
@interface PB3SearchByVotePlayerRes : GPBMessage

/** 被查询用户信息返回 */
@property(nonatomic, readwrite, strong, null_resettable) PB3VoteResult *byVoteInfo;
/** Test to see if @c byVoteInfo has been set. */
@property(nonatomic, readwrite) BOOL hasByVoteInfo;

@end

#pragma mark - PB3ComponentConfReq

typedef GPB_ENUM(PB3ComponentConfReq_FieldNumber) {
  PB3ComponentConfReq_FieldNumber_ActId = 1,
  PB3ComponentConfReq_FieldNumber_RelActId = 2,
};

/**
 * 活动组件 请求
 **/
@interface PB3ComponentConfReq : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActId;

@end

#pragma mark - PB3ComponentConfRes

typedef GPB_ENUM(PB3ComponentConfRes_FieldNumber) {
  PB3ComponentConfRes_FieldNumber_Id_p = 1,
  PB3ComponentConfRes_FieldNumber_ActId = 2,
  PB3ComponentConfRes_FieldNumber_RelActId = 3,
  PB3ComponentConfRes_FieldNumber_Name = 4,
  PB3ComponentConfRes_FieldNumber_Conf = 5,
};

/**
 * 活动组件 响应数据
 **/
@interface PB3ComponentConfRes : GPBMessage

/** 活动组件配置id */
@property(nonatomic, readwrite) int32_t id_p;

/** 活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActId;

/** 活动组件配置名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 活动组件配置 json字符串 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *conf;

@end

#pragma mark - PB3DrawSeqLotteryReq

typedef GPB_ENUM(PB3DrawSeqLotteryReq_FieldNumber) {
  PB3DrawSeqLotteryReq_FieldNumber_ActId = 1,
  PB3DrawSeqLotteryReq_FieldNumber_RelActId = 2,
  PB3DrawSeqLotteryReq_FieldNumber_SeqLotteryId = 3,
  PB3DrawSeqLotteryReq_FieldNumber_AssignAwardId = 4,
  PB3DrawSeqLotteryReq_FieldNumber_DrawNum = 6,
  PB3DrawSeqLotteryReq_FieldNumber_IsAutoBuy = 7,
};

/**
 * 序列抽奖请求
 **/
@interface PB3DrawSeqLotteryReq : GPBMessage

/** h活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActId;

/** 序列抽奖配置id */
@property(nonatomic, readwrite) int32_t seqLotteryId;

/** 指定抽奖的奖励id */
@property(nonatomic, readwrite) int32_t assignAwardId;

/** 抽奖次数 */
@property(nonatomic, readwrite) int32_t drawNum;

/** 是否自动购买 */
@property(nonatomic, readwrite) BOOL isAutoBuy;

@end

#pragma mark - PB3DrawSeqLotteryRes

typedef GPB_ENUM(PB3DrawSeqLotteryRes_FieldNumber) {
  PB3DrawSeqLotteryRes_FieldNumber_PrizeListArray = 1,
};

/**
 * 序列抽奖响应
 **/
@interface PB3DrawSeqLotteryRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SeqLotteryPrize*> *prizeListArray;
/** The number of items in @c prizeListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger prizeListArray_Count;

@end

#pragma mark - PB3SeqLotteryPrize

typedef GPB_ENUM(PB3SeqLotteryPrize_FieldNumber) {
  PB3SeqLotteryPrize_FieldNumber_GiftId = 1,
  PB3SeqLotteryPrize_FieldNumber_AwardId = 2,
  PB3SeqLotteryPrize_FieldNumber_Num = 3,
};

/**
 * 序列抽奖奖品
 **/
@interface PB3SeqLotteryPrize : GPBMessage

@property(nonatomic, readwrite) int32_t giftId;

@property(nonatomic, readwrite) int32_t awardId;

@property(nonatomic, readwrite) int64_t num;

@end

#pragma mark - PB3GetSaveCpsInviteeReq

typedef GPB_ENUM(PB3GetSaveCpsInviteeReq_FieldNumber) {
  PB3GetSaveCpsInviteeReq_FieldNumber_InviterIdSign = 1,
  PB3GetSaveCpsInviteeReq_FieldNumber_PhoneNum = 2,
};

/**
 * cps邀请记录请求数据
 **/
@interface PB3GetSaveCpsInviteeReq : GPBMessage

/** 战队id加密串 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *inviterIdSign;

/** 受邀人手机号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *phoneNum;

@end

#pragma mark - PB3GetSaveCpsInviteeRes

/**
 * 保存cps邀请记录响应
 **/
@interface PB3GetSaveCpsInviteeRes : GPBMessage

@end

#pragma mark - PB3ShowCpsInviterSignReq

/**
 * cps邀请人信息加密串
 **/
@interface PB3ShowCpsInviterSignReq : GPBMessage

@end

#pragma mark - PB3ShowCpsInviterSignRes

typedef GPB_ENUM(PB3ShowCpsInviterSignRes_FieldNumber) {
  PB3ShowCpsInviterSignRes_FieldNumber_Sign = 1,
};

/**
 * cps邀请人信息加密串响应
 **/
@interface PB3ShowCpsInviterSignRes : GPBMessage

/** 邀请人加密串 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sign;

@end

#pragma mark - PB3CheckCpsPlayerRoleReq

/**
 * 检测CPS角色
 **/
@interface PB3CheckCpsPlayerRoleReq : GPBMessage

@end

#pragma mark - PB3CheckCpsPlayerRoleRes

typedef GPB_ENUM(PB3CheckCpsPlayerRoleRes_FieldNumber) {
  PB3CheckCpsPlayerRoleRes_FieldNumber_Role = 1,
};

/**
 * 检测CPS角色-响应
 **/
@interface PB3CheckCpsPlayerRoleRes : GPBMessage

/** 用户角色 */
@property(nonatomic, readwrite) PB3CpsPlayerRoleEnum role;

@end

/**
 * Fetches the raw value of a @c PB3CheckCpsPlayerRoleRes's @c role property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3CheckCpsPlayerRoleRes_Role_RawValue(PB3CheckCpsPlayerRoleRes *message);
/**
 * Sets the raw value of an @c PB3CheckCpsPlayerRoleRes's @c role property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3CheckCpsPlayerRoleRes_Role_RawValue(PB3CheckCpsPlayerRoleRes *message, int32_t value);

#pragma mark - PB3FindCpsInviteeListReq

typedef GPB_ENUM(PB3FindCpsInviteeListReq_FieldNumber) {
  PB3FindCpsInviteeListReq_FieldNumber_PlayerId = 1,
  PB3FindCpsInviteeListReq_FieldNumber_Page = 2,
  PB3FindCpsInviteeListReq_FieldNumber_PageSize = 3,
};

/**
 * 查询我的邀请人列表
 **/
@interface PB3FindCpsInviteeListReq : GPBMessage

/** 受邀人id */
@property(nonatomic, readwrite) int64_t playerId;

@property(nonatomic, readwrite) int32_t page;

@property(nonatomic, readwrite) int32_t pageSize;

@end

#pragma mark - PB3FindCpsInviteeListRes

typedef GPB_ENUM(PB3FindCpsInviteeListRes_FieldNumber) {
  PB3FindCpsInviteeListRes_FieldNumber_CpsInviteeInfoListArray = 1,
  PB3FindCpsInviteeListRes_FieldNumber_Total = 2,
};

/**
 * 查询我的邀请人列表-响应
 **/
@interface PB3FindCpsInviteeListRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3CpsInviteeInfo*> *cpsInviteeInfoListArray;
/** The number of items in @c cpsInviteeInfoListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger cpsInviteeInfoListArray_Count;

/** 数据总量 */
@property(nonatomic, readwrite) int64_t total;

@end

#pragma mark - PB3CpsInviteeInfo

typedef GPB_ENUM(PB3CpsInviteeInfo_FieldNumber) {
  PB3CpsInviteeInfo_FieldNumber_PlayerId = 1,
  PB3CpsInviteeInfo_FieldNumber_RegistTime = 2,
  PB3CpsInviteeInfo_FieldNumber_Status = 3,
};

@interface PB3CpsInviteeInfo : GPBMessage

/** 受邀人账号 */
@property(nonatomic, readwrite) int64_t playerId;

/** 受邀人注册时间 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *registTime;

/** 状态 1未充值 2已充值 */
@property(nonatomic, readwrite) int32_t status;

@end

#pragma mark - PB3FindCpsInviteeRechargeLogReq

typedef GPB_ENUM(PB3FindCpsInviteeRechargeLogReq_FieldNumber) {
  PB3FindCpsInviteeRechargeLogReq_FieldNumber_StartTime = 1,
  PB3FindCpsInviteeRechargeLogReq_FieldNumber_EndTime = 2,
  PB3FindCpsInviteeRechargeLogReq_FieldNumber_Page = 3,
  PB3FindCpsInviteeRechargeLogReq_FieldNumber_PageSize = 4,
};

/**
 * 查询我的受邀人充值记录
 **/
@interface PB3FindCpsInviteeRechargeLogReq : GPBMessage

/** 查询时间段 开始时间 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *startTime;

/** 查询时间段 结束时间 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *endTime;

@property(nonatomic, readwrite) int32_t page;

@property(nonatomic, readwrite) int32_t pageSize;

@end

#pragma mark - PB3CpsInviteeRechargeLog

typedef GPB_ENUM(PB3CpsInviteeRechargeLog_FieldNumber) {
  PB3CpsInviteeRechargeLog_FieldNumber_PlayerId = 1,
  PB3CpsInviteeRechargeLog_FieldNumber_CreateDay = 2,
  PB3CpsInviteeRechargeLog_FieldNumber_Gold = 3,
};

@interface PB3CpsInviteeRechargeLog : GPBMessage

/** 充值人员账号 */
@property(nonatomic, readwrite) int64_t playerId;

/** 充值日期 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *createDay;

/** 充值金额 */
@property(nonatomic, readwrite) int64_t gold;

@end

#pragma mark - PB3FindCpsInviteeRechargeLogRes

typedef GPB_ENUM(PB3FindCpsInviteeRechargeLogRes_FieldNumber) {
  PB3FindCpsInviteeRechargeLogRes_FieldNumber_LogsArray = 1,
  PB3FindCpsInviteeRechargeLogRes_FieldNumber_TotalGold = 2,
  PB3FindCpsInviteeRechargeLogRes_FieldNumber_Total = 3,
};

/**
 * 查询我的受邀人充值记录
 **/
@interface PB3FindCpsInviteeRechargeLogRes : GPBMessage

/** 充值记录 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3CpsInviteeRechargeLog*> *logsArray;
/** The number of items in @c logsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger logsArray_Count;

/** 好友总充值数量 */
@property(nonatomic, readwrite) int64_t totalGold;

/** 数据总数量 */
@property(nonatomic, readwrite) int64_t total;

@end

#pragma mark - PB3FindCpsClanInviteeLogReq

typedef GPB_ENUM(PB3FindCpsClanInviteeLogReq_FieldNumber) {
  PB3FindCpsClanInviteeLogReq_FieldNumber_InviterId = 1,
  PB3FindCpsClanInviteeLogReq_FieldNumber_InviteStartTime = 2,
  PB3FindCpsClanInviteeLogReq_FieldNumber_InviteEndTime = 3,
  PB3FindCpsClanInviteeLogReq_FieldNumber_RechargeStartTime = 4,
  PB3FindCpsClanInviteeLogReq_FieldNumber_RechargeEndTime = 5,
  PB3FindCpsClanInviteeLogReq_FieldNumber_Page = 6,
  PB3FindCpsClanInviteeLogReq_FieldNumber_PageSize = 7,
};

/**
 * 获取我战队成员的记录
 **/
@interface PB3FindCpsClanInviteeLogReq : GPBMessage

/** 邀请人id */
@property(nonatomic, readwrite) int64_t inviterId;

/** 邀请时间段 开始时间 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *inviteStartTime;

/** 邀请时间段 结束 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *inviteEndTime;

/** 充值时间段 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *rechargeStartTime;

/** 充值时间段 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *rechargeEndTime;

@property(nonatomic, readwrite) int32_t page;

@property(nonatomic, readwrite) int32_t pageSize;

@end

#pragma mark - PB3CpsClanInviteeLogInfo

typedef GPB_ENUM(PB3CpsClanInviteeLogInfo_FieldNumber) {
  PB3CpsClanInviteeLogInfo_FieldNumber_InviterId = 1,
  PB3CpsClanInviteeLogInfo_FieldNumber_InviteeId = 2,
  PB3CpsClanInviteeLogInfo_FieldNumber_RegistTime = 3,
  PB3CpsClanInviteeLogInfo_FieldNumber_Status = 4,
  PB3CpsClanInviteeLogInfo_FieldNumber_Gold = 5,
  PB3CpsClanInviteeLogInfo_FieldNumber_RechargeDay = 6,
};

@interface PB3CpsClanInviteeLogInfo : GPBMessage

/** 邀请人id */
@property(nonatomic, readwrite) int64_t inviterId;

/** 被邀请人id */
@property(nonatomic, readwrite) int64_t inviteeId;

/** 注册时间 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *registTime;

/** 好友动态 1未充值 2已充值 */
@property(nonatomic, readwrite) int32_t status;

/** 充值金额 */
@property(nonatomic, readwrite) int64_t gold;

/** 充值日期 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *rechargeDay;

@end

#pragma mark - PB3FindCpsClanInviteeLogRes

typedef GPB_ENUM(PB3FindCpsClanInviteeLogRes_FieldNumber) {
  PB3FindCpsClanInviteeLogRes_FieldNumber_LogsArray = 1,
  PB3FindCpsClanInviteeLogRes_FieldNumber_Total = 2,
  PB3FindCpsClanInviteeLogRes_FieldNumber_GoldSum = 3,
  PB3FindCpsClanInviteeLogRes_FieldNumber_InviteeCount = 4,
};

/**
 * 获取我战队成员的邀请记录
 **/
@interface PB3FindCpsClanInviteeLogRes : GPBMessage

/** 战队成员记录 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3CpsClanInviteeLogInfo*> *logsArray;
/** The number of items in @c logsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger logsArray_Count;

/** 数据总量 */
@property(nonatomic, readwrite) int64_t total;

/** 总金额 */
@property(nonatomic, readwrite) int64_t goldSum;

/** 总邀请人数 */
@property(nonatomic, readwrite) int64_t inviteeCount;

@end

#pragma mark - PB3GetInviteeUrlRes

typedef GPB_ENUM(PB3GetInviteeUrlRes_FieldNumber) {
  PB3GetInviteeUrlRes_FieldNumber_URL = 1,
};

@interface PB3GetInviteeUrlRes : GPBMessage

/** 下载连接 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

@end

#pragma mark - PB3WelfareRankInfo

typedef GPB_ENUM(PB3WelfareRankInfo_FieldNumber) {
  PB3WelfareRankInfo_FieldNumber_PlayerId = 1,
  PB3WelfareRankInfo_FieldNumber_PlayerName = 2,
  PB3WelfareRankInfo_FieldNumber_PlayerIcon = 3,
};

@interface PB3WelfareRankInfo : GPBMessage

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 用户名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerName;

/** 用户头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerIcon;

@end

#pragma mark - PB3ListWelfareCompleteRankReq

typedef GPB_ENUM(PB3ListWelfareCompleteRankReq_FieldNumber) {
  PB3ListWelfareCompleteRankReq_FieldNumber_WelfareId = 1,
};

/**
 * 获取某一福利完成排行请求
 **/
@interface PB3ListWelfareCompleteRankReq : GPBMessage

/** 福利ID */
@property(nonatomic, readwrite) int32_t welfareId;

@end

#pragma mark - PB3ListWelfareCompleteRankRes

typedef GPB_ENUM(PB3ListWelfareCompleteRankRes_FieldNumber) {
  PB3ListWelfareCompleteRankRes_FieldNumber_WelfareListArray = 1,
};

/**
 * 获取某一福利完成排行请求
 **/
@interface PB3ListWelfareCompleteRankRes : GPBMessage

/** 福利列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3WelfareRankInfo*> *welfareListArray;
/** The number of items in @c welfareListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger welfareListArray_Count;

@end

#pragma mark - PB3TransferAwardPlayer

typedef GPB_ENUM(PB3TransferAwardPlayer_FieldNumber) {
  PB3TransferAwardPlayer_FieldNumber_PlayerId = 1,
  PB3TransferAwardPlayer_FieldNumber_PlayerIcon = 2,
  PB3TransferAwardPlayer_FieldNumber_PlayerNickName = 3,
  PB3TransferAwardPlayer_FieldNumber_PlayerId2 = 4,
};

@interface PB3TransferAwardPlayer : GPBMessage

/** 玩家ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 用户头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerIcon;

/** 用户昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerNickName;

/** 用户靓号 */
@property(nonatomic, readwrite) int64_t playerId2;

@end

#pragma mark - PB3ListTransferAwardPlayerReq

typedef GPB_ENUM(PB3ListTransferAwardPlayerReq_FieldNumber) {
  PB3ListTransferAwardPlayerReq_FieldNumber_ActId = 1,
  PB3ListTransferAwardPlayerReq_FieldNumber_RelActId = 2,
  PB3ListTransferAwardPlayerReq_FieldNumber_PlayerIdArray = 3,
};

/**
 * 搜索可赠送用户列表请求
 **/
@interface PB3ListTransferAwardPlayerReq : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActId;

/** 用户ID */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *playerIdArray;
/** The number of items in @c playerIdArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger playerIdArray_Count;

@end

#pragma mark - PB3ListTransferAwardPlayerRes

typedef GPB_ENUM(PB3ListTransferAwardPlayerRes_FieldNumber) {
  PB3ListTransferAwardPlayerRes_FieldNumber_ListInfoArray = 1,
};

/**
 * 搜索可赠送用户列表返回
 **/
@interface PB3ListTransferAwardPlayerRes : GPBMessage

/** 返回列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3TransferAwardPlayer*> *listInfoArray;
/** The number of items in @c listInfoArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listInfoArray_Count;

@end

#pragma mark - PB3TransferAwardToOtherReq

typedef GPB_ENUM(PB3TransferAwardToOtherReq_FieldNumber) {
  PB3TransferAwardToOtherReq_FieldNumber_ActId = 1,
  PB3TransferAwardToOtherReq_FieldNumber_RelActId = 2,
  PB3TransferAwardToOtherReq_FieldNumber_ToPlayerId = 3,
  PB3TransferAwardToOtherReq_FieldNumber_AwardNum = 4,
};

/**
 * 转移自己的奖励给其他人请求
 **/
@interface PB3TransferAwardToOtherReq : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActId;

/** 转移给其他人的ID */
@property(nonatomic, readwrite) int64_t toPlayerId;

/** 奖励数量 */
@property(nonatomic, readwrite) int32_t awardNum;

@end

#pragma mark - PB3TransferAwardToOtherRes

/**
 * 转移自己的奖励给其他人返回
 **/
@interface PB3TransferAwardToOtherRes : GPBMessage

@end

#pragma mark - PB3TransferAwardRank

typedef GPB_ENUM(PB3TransferAwardRank_FieldNumber) {
  PB3TransferAwardRank_FieldNumber_PlayerId = 1,
  PB3TransferAwardRank_FieldNumber_PlayerIcon = 2,
  PB3TransferAwardRank_FieldNumber_PlayerNickName = 3,
  PB3TransferAwardRank_FieldNumber_AwardNum = 4,
  PB3TransferAwardRank_FieldNumber_Rank = 5,
  PB3TransferAwardRank_FieldNumber_LessScore = 6,
  PB3TransferAwardRank_FieldNumber_PlayerId2 = 7,
};

/**
 * 可赠送奖励排行信息
 **/
@interface PB3TransferAwardRank : GPBMessage

/** 玩家ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 用户头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerIcon;

/** 用户昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerNickName;

/** 奖励数 */
@property(nonatomic, readwrite) int64_t awardNum;

/** 排名 */
@property(nonatomic, readwrite) int32_t rank;

/** 距离上一名分差 */
@property(nonatomic, readwrite) int32_t lessScore;

/** 玩家靓号 */
@property(nonatomic, readwrite) int64_t playerId2;

@end

#pragma mark - PB3ListTransferAwardRankReq

typedef GPB_ENUM(PB3ListTransferAwardRankReq_FieldNumber) {
  PB3ListTransferAwardRankReq_FieldNumber_ActId = 1,
  PB3ListTransferAwardRankReq_FieldNumber_RelActId = 2,
  PB3ListTransferAwardRankReq_FieldNumber_Page = 3,
  PB3ListTransferAwardRankReq_FieldNumber_PageSize = 4,
};

/**
 * 可赠送奖励排行请求
 **/
@interface PB3ListTransferAwardRankReq : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActId;

/** 页数 */
@property(nonatomic, readwrite) int32_t page;

/** 翻页大小 */
@property(nonatomic, readwrite) int32_t pageSize;

@end

#pragma mark - PB3ListTransferAwardRankRes

typedef GPB_ENUM(PB3ListTransferAwardRankRes_FieldNumber) {
  PB3ListTransferAwardRankRes_FieldNumber_ListInfoArray = 1,
  PB3ListTransferAwardRankRes_FieldNumber_Total = 2,
};

/**
 * 搜索可赠送用户列表返回
 **/
@interface PB3ListTransferAwardRankRes : GPBMessage

/** 排行榜信息 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3TransferAwardRank*> *listInfoArray;
/** The number of items in @c listInfoArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listInfoArray_Count;

/** 总数 */
@property(nonatomic, readwrite) int32_t total;

@end

#pragma mark - PB3TransferAwardPlayerRankReq

typedef GPB_ENUM(PB3TransferAwardPlayerRankReq_FieldNumber) {
  PB3TransferAwardPlayerRankReq_FieldNumber_ActId = 1,
  PB3TransferAwardPlayerRankReq_FieldNumber_RelActId = 2,
  PB3TransferAwardPlayerRankReq_FieldNumber_PlayerId = 3,
};

/**
 * 用户可赠送奖励排行信息请求
 **/
@interface PB3TransferAwardPlayerRankReq : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActId;

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId;

@end

#pragma mark - PB3TransferAwardPlayerRankRes

typedef GPB_ENUM(PB3TransferAwardPlayerRankRes_FieldNumber) {
  PB3TransferAwardPlayerRankRes_FieldNumber_RankInfo = 1,
};

/**
 * 用户可赠送奖励排行信息返回
 **/
@interface PB3TransferAwardPlayerRankRes : GPBMessage

/** 用户排行榜信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3TransferAwardRank *rankInfo;
/** Test to see if @c rankInfo has been set. */
@property(nonatomic, readwrite) BOOL hasRankInfo;

@end

#pragma mark - PB3TransferAwardRankRoomIdReq

typedef GPB_ENUM(PB3TransferAwardRankRoomIdReq_FieldNumber) {
  PB3TransferAwardRankRoomIdReq_FieldNumber_ActId = 1,
  PB3TransferAwardRankRoomIdReq_FieldNumber_RelActId = 2,
};

/**
 * 获得可转移奖励活动房间ID请求
 **/
@interface PB3TransferAwardRankRoomIdReq : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActId;

@end

#pragma mark - PB3TransferAwardRankRoomIdRes

typedef GPB_ENUM(PB3TransferAwardRankRoomIdRes_FieldNumber) {
  PB3TransferAwardRankRoomIdRes_FieldNumber_RoomId = 1,
};

/**
 * 获得可转移奖励活动房间ID返回
 **/
@interface PB3TransferAwardRankRoomIdRes : GPBMessage

/** 房间id */
@property(nonatomic, readwrite) int64_t roomId;

@end

#pragma mark - PB3CpsPlayerCountSortReq

typedef GPB_ENUM(PB3CpsPlayerCountSortReq_FieldNumber) {
  PB3CpsPlayerCountSortReq_FieldNumber_Page = 1,
  PB3CpsPlayerCountSortReq_FieldNumber_PageSize = 2,
};

/**
 * cps-战队成员邀请人数量排行榜
 **/
@interface PB3CpsPlayerCountSortReq : GPBMessage

/** 页码 */
@property(nonatomic, readwrite) int32_t page;

/** 每页显示多少条 */
@property(nonatomic, readwrite) int32_t pageSize;

@end

#pragma mark - PB3CpsPlayerCountSortRes

typedef GPB_ENUM(PB3CpsPlayerCountSortRes_FieldNumber) {
  PB3CpsPlayerCountSortRes_FieldNumber_SortListArray = 1,
  PB3CpsPlayerCountSortRes_FieldNumber_MySort = 2,
  PB3CpsPlayerCountSortRes_FieldNumber_Total = 3,
};

/**
 * cps-战队成员邀请人数量排行榜
 **/
@interface PB3CpsPlayerCountSortRes : GPBMessage

/** 排行榜 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3CpsPlayerCountSort*> *sortListArray;
/** The number of items in @c sortListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger sortListArray_Count;

/** 我的排名 */
@property(nonatomic, readwrite, strong, null_resettable) PB3CpsPlayerCountSort *mySort;
/** Test to see if @c mySort has been set. */
@property(nonatomic, readwrite) BOOL hasMySort;

/** 总数 */
@property(nonatomic, readwrite) int32_t total;

@end

#pragma mark - PB3CpsPlayerCountSort

typedef GPB_ENUM(PB3CpsPlayerCountSort_FieldNumber) {
  PB3CpsPlayerCountSort_FieldNumber_Sort = 1,
  PB3CpsPlayerCountSort_FieldNumber_InviterId = 2,
  PB3CpsPlayerCountSort_FieldNumber_InviteeNum = 3,
};

/**
 * cps-战队成员邀请人数量排行榜
 **/
@interface PB3CpsPlayerCountSort : GPBMessage

/** 排行榜序号 */
@property(nonatomic, readwrite) int32_t sort;

/** 邀请人id */
@property(nonatomic, readwrite) int64_t inviterId;

/** 被邀请人数量 */
@property(nonatomic, readwrite) int32_t inviteeNum;

@end

#pragma mark - PB3CpsPlayerGoldSortReq

typedef GPB_ENUM(PB3CpsPlayerGoldSortReq_FieldNumber) {
  PB3CpsPlayerGoldSortReq_FieldNumber_Page = 1,
  PB3CpsPlayerGoldSortReq_FieldNumber_PageSize = 2,
};

/**
 * cps-战队成员邀请人充值金币数排行榜
 **/
@interface PB3CpsPlayerGoldSortReq : GPBMessage

/** 页码 */
@property(nonatomic, readwrite) int32_t page;

/** 每页显示多少条 */
@property(nonatomic, readwrite) int32_t pageSize;

@end

#pragma mark - PB3CpsPlayerGoldSortRes

typedef GPB_ENUM(PB3CpsPlayerGoldSortRes_FieldNumber) {
  PB3CpsPlayerGoldSortRes_FieldNumber_SortListArray = 1,
  PB3CpsPlayerGoldSortRes_FieldNumber_MySort = 2,
  PB3CpsPlayerGoldSortRes_FieldNumber_Total = 3,
};

/**
 * cps-战队成员邀请人充值金币数排行榜
 **/
@interface PB3CpsPlayerGoldSortRes : GPBMessage

/** 排行榜 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3CpsPlayerGoldSort*> *sortListArray;
/** The number of items in @c sortListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger sortListArray_Count;

/** 当前用户排名 */
@property(nonatomic, readwrite, strong, null_resettable) PB3CpsPlayerGoldSort *mySort;
/** Test to see if @c mySort has been set. */
@property(nonatomic, readwrite) BOOL hasMySort;

/** 总数量 */
@property(nonatomic, readwrite) int32_t total;

@end

#pragma mark - PB3CpsPlayerGoldSort

typedef GPB_ENUM(PB3CpsPlayerGoldSort_FieldNumber) {
  PB3CpsPlayerGoldSort_FieldNumber_Sort = 1,
  PB3CpsPlayerGoldSort_FieldNumber_InviterId = 2,
  PB3CpsPlayerGoldSort_FieldNumber_Gold = 3,
};

/**
 * cps-战队成员邀请人充值金币排行榜
 **/
@interface PB3CpsPlayerGoldSort : GPBMessage

/** 排行榜序号 */
@property(nonatomic, readwrite) int32_t sort;

/** 用户id */
@property(nonatomic, readwrite) int64_t inviterId;

/** 金币数量 */
@property(nonatomic, readwrite) int64_t gold;

@end

#pragma mark - PB3NewActFormRecordReq

typedef GPB_ENUM(PB3NewActFormRecordReq_FieldNumber) {
  PB3NewActFormRecordReq_FieldNumber_ActId = 1,
  PB3NewActFormRecordReq_FieldNumber_RelActId = 2,
  PB3NewActFormRecordReq_FieldNumber_CarrierId = 3,
  PB3NewActFormRecordReq_FieldNumber_PlayerIdsArray = 4,
  PB3NewActFormRecordReq_FieldNumber_PlayerName = 5,
  PB3NewActFormRecordReq_FieldNumber_Page = 6,
  PB3NewActFormRecordReq_FieldNumber_PageSize = 7,
  PB3NewActFormRecordReq_FieldNumber_UseGroup = 8,
  PB3NewActFormRecordReq_FieldNumber_UseShuffle = 9,
  PB3NewActFormRecordReq_FieldNumber_WeightLimit = 10,
  PB3NewActFormRecordReq_FieldNumber_SortType = 11,
  PB3NewActFormRecordReq_FieldNumber_IsSingleSearch = 12,
  PB3NewActFormRecordReq_FieldNumber_IsVerify = 13,
};

/**
 * 新表单数据查询
 **/
@interface PB3NewActFormRecordReq : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActId;

/** 载体id */
@property(nonatomic, readwrite) int32_t carrierId;

/** 用户id */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *playerIdsArray;
/** The number of items in @c playerIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger playerIdsArray_Count;

/** 用户名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerName;

/** 分页页码 */
@property(nonatomic, readwrite) int32_t page;

/** 每页显示多少条数据 */
@property(nonatomic, readwrite) int32_t pageSize;

/** 是否分组查询 (flag分组) */
@property(nonatomic, readwrite) BOOL useGroup;

/** 是否打乱数据 */
@property(nonatomic, readwrite) BOOL useShuffle;

/** 权重值限制 - 0为不限制，否则限制权重值在数值之上 */
@property(nonatomic, readwrite) int32_t weightLimit;

/** 结果排序 0默认 1优先按照点赞数排序再按时间排序 2仅按照时间排序 */
@property(nonatomic, readwrite) int32_t sortType;

/** 是否单体查询，若是，则查询传入playerIds中每个ID的pageSize条数据；默认否， */
@property(nonatomic, readwrite) BOOL isSingleSearch;

/** 审核状态 0待审核 1审核通过 2审核不通过 3全部 */
@property(nonatomic, readwrite) int32_t isVerify;

@end

#pragma mark - PB3NewSearchByVotePlayerReq

typedef GPB_ENUM(PB3NewSearchByVotePlayerReq_FieldNumber) {
  PB3NewSearchByVotePlayerReq_FieldNumber_ActId = 1,
  PB3NewSearchByVotePlayerReq_FieldNumber_RelActId = 2,
  PB3NewSearchByVotePlayerReq_FieldNumber_SearchPlayerIdArray = 3,
  PB3NewSearchByVotePlayerReq_FieldNumber_SearchPlayerName = 4,
};

/**
 * (新)被投票人查询请求
 **/
@interface PB3NewSearchByVotePlayerReq : GPBMessage

/** 活动ID */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动ID */
@property(nonatomic, readwrite) int32_t relActId;

/** 被查询用户ID */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *searchPlayerIdArray;
/** The number of items in @c searchPlayerIdArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger searchPlayerIdArray_Count;

/** 被查询用户昵称（模糊匹配） */
@property(nonatomic, readwrite, copy, null_resettable) NSString *searchPlayerName;

@end

#pragma mark - PB3NewSearchByVotePlayerRes

typedef GPB_ENUM(PB3NewSearchByVotePlayerRes_FieldNumber) {
  PB3NewSearchByVotePlayerRes_FieldNumber_ByVoteInfoArray = 1,
};

/**
 * 被投票人查询返回
 **/
@interface PB3NewSearchByVotePlayerRes : GPBMessage

/** 被查询用户信息返回 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3VoteResult*> *byVoteInfoArray;
/** The number of items in @c byVoteInfoArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger byVoteInfoArray_Count;

@end

#pragma mark - PB3SearchVoteResultReq

typedef GPB_ENUM(PB3SearchVoteResultReq_FieldNumber) {
  PB3SearchVoteResultReq_FieldNumber_ActId = 1,
  PB3SearchVoteResultReq_FieldNumber_RelId = 2,
  PB3SearchVoteResultReq_FieldNumber_Type = 3,
  PB3SearchVoteResultReq_FieldNumber_Page = 4,
  PB3SearchVoteResultReq_FieldNumber_PageSize = 5,
  PB3SearchVoteResultReq_FieldNumber_PlayerIdsArray = 6,
  PB3SearchVoteResultReq_FieldNumber_PlayerName = 7,
};

/**
 * （新）投票结果 - 支持用户id列表，用户昵称查询
 **/
@interface PB3SearchVoteResultReq : GPBMessage

@property(nonatomic, readwrite) int32_t actId;

@property(nonatomic, readwrite) int32_t relId;

/** 结果类型 0-积分 按积分大小返回 1-排名 只返回有排名的数据 */
@property(nonatomic, readwrite) int32_t type;

@property(nonatomic, readwrite) int32_t page;

@property(nonatomic, readwrite) int32_t pageSize;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *playerIdsArray;
/** The number of items in @c playerIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger playerIdsArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *playerName;

@end

#pragma mark - PB3FindSelfTicketsNumReq

typedef GPB_ENUM(PB3FindSelfTicketsNumReq_FieldNumber) {
  PB3FindSelfTicketsNumReq_FieldNumber_RelId = 1,
};

/**
 * 获取剩余投票次数
 **/
@interface PB3FindSelfTicketsNumReq : GPBMessage

/** 子活动id */
@property(nonatomic, readwrite) int32_t relId;

@end

#pragma mark - PB3FindSelfTicketsNumRes

typedef GPB_ENUM(PB3FindSelfTicketsNumRes_FieldNumber) {
  PB3FindSelfTicketsNumRes_FieldNumber_SelfTicketsNum = 1,
};

@interface PB3FindSelfTicketsNumRes : GPBMessage

/** 自身票数 */
@property(nonatomic, readwrite) int32_t selfTicketsNum;

@end

#pragma mark - PB3FansSupportReq

typedef GPB_ENUM(PB3FansSupportReq_FieldNumber) {
  PB3FansSupportReq_FieldNumber_ActId = 1,
  PB3FansSupportReq_FieldNumber_RelId = 2,
};

/**
 * 粉丝应援
 **/
@interface PB3FansSupportReq : GPBMessage

/** 活动ID */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动ID */
@property(nonatomic, readwrite) int32_t relId;

@end

#pragma mark - PB3FansSupportRes

/**
 * 粉丝应援返回
 **/
@interface PB3FansSupportRes : GPBMessage

@end

#pragma mark - PB3FindFansSupportNumReq

typedef GPB_ENUM(PB3FindFansSupportNumReq_FieldNumber) {
  PB3FindFansSupportNumReq_FieldNumber_ActId = 1,
  PB3FindFansSupportNumReq_FieldNumber_RelId = 2,
};

/**
 * 获取粉丝应援值
 **/
@interface PB3FindFansSupportNumReq : GPBMessage

/** 活动ID */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动ID */
@property(nonatomic, readwrite) int32_t relId;

@end

#pragma mark - PB3FindFansSupportNumRes

typedef GPB_ENUM(PB3FindFansSupportNumRes_FieldNumber) {
  PB3FindFansSupportNumRes_FieldNumber_SupportNum = 1,
  PB3FindFansSupportNumRes_FieldNumber_SelfSupportNum = 2,
  PB3FindFansSupportNumRes_FieldNumber_SelfSendNum = 3,
};

/**
 * 粉丝应援返回
 **/
@interface PB3FindFansSupportNumRes : GPBMessage

/** 总应援值 */
@property(nonatomic, readwrite) int64_t supportNum;

/** 自己的应援值 */
@property(nonatomic, readwrite) int64_t selfSupportNum;

/** 自己的已投入的应援值 */
@property(nonatomic, readwrite) int64_t selfSendNum;

@end

#pragma mark - PB3FindRoomMaxHotScoreReq

typedef GPB_ENUM(PB3FindRoomMaxHotScoreReq_FieldNumber) {
  PB3FindRoomMaxHotScoreReq_FieldNumber_ActId = 1,
  PB3FindRoomMaxHotScoreReq_FieldNumber_RelId = 2,
  PB3FindRoomMaxHotScoreReq_FieldNumber_RoomId = 3,
  PB3FindRoomMaxHotScoreReq_FieldNumber_DataType = 4,
};

/**
 * 获取房间最高热度
 **/
@interface PB3FindRoomMaxHotScoreReq : GPBMessage

/** 活动ID */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动ID */
@property(nonatomic, readwrite) int32_t relId;

/** 房间热度 */
@property(nonatomic, readwrite) int64_t roomId;

/** 请求数据类型 0真实在线人数 1显示在线人数 2活跃度 */
@property(nonatomic, readwrite) int32_t dataType;

@end

#pragma mark - PB3FindRoomMaxHotScoreRes

typedef GPB_ENUM(PB3FindRoomMaxHotScoreRes_FieldNumber) {
  PB3FindRoomMaxHotScoreRes_FieldNumber_HotScore = 1,
};

/**
 * 粉丝应援返回
 **/
@interface PB3FindRoomMaxHotScoreRes : GPBMessage

/** 房间热度值 */
@property(nonatomic, readwrite) int64_t hotScore;

@end

#pragma mark - PB3WelfareLogData

typedef GPB_ENUM(PB3WelfareLogData_FieldNumber) {
  PB3WelfareLogData_FieldNumber_LogTime = 1,
  PB3WelfareLogData_FieldNumber_WelfareId = 2,
  PB3WelfareLogData_FieldNumber_WelfareName = 3,
  PB3WelfareLogData_FieldNumber_AwardId = 4,
  PB3WelfareLogData_FieldNumber_AwardNum = 5,
};

/**
 * 福利日志数据
 **/
@interface PB3WelfareLogData : GPBMessage

/** 福利时间 */
@property(nonatomic, readwrite) int32_t logTime;

/** 福利ID */
@property(nonatomic, readwrite) int32_t welfareId;

/** 福利名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *welfareName;

/** 福利奖励ID */
@property(nonatomic, readwrite) int32_t awardId;

/** 福利奖励数 */
@property(nonatomic, readwrite) int32_t awardNum;

@end

#pragma mark - PB3FindPlayerWelfareLogReq

typedef GPB_ENUM(PB3FindPlayerWelfareLogReq_FieldNumber) {
  PB3FindPlayerWelfareLogReq_FieldNumber_ActId = 1,
  PB3FindPlayerWelfareLogReq_FieldNumber_RelId = 2,
  PB3FindPlayerWelfareLogReq_FieldNumber_Page = 3,
  PB3FindPlayerWelfareLogReq_FieldNumber_PageSize = 4,
};

/**
 * 获取个人福利记录
 **/
@interface PB3FindPlayerWelfareLogReq : GPBMessage

/** 活动ID */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动ID */
@property(nonatomic, readwrite) int32_t relId;

/** 页数 */
@property(nonatomic, readwrite) int32_t page;

/** 页数大小 */
@property(nonatomic, readwrite) int32_t pageSize;

@end

#pragma mark - PB3FindPlayerWelfareLogRes

typedef GPB_ENUM(PB3FindPlayerWelfareLogRes_FieldNumber) {
  PB3FindPlayerWelfareLogRes_FieldNumber_LogListArray = 1,
};

/**
 * 获取个人福利记录返回
 **/
@interface PB3FindPlayerWelfareLogRes : GPBMessage

/** 日志记录 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3WelfareLogData*> *logListArray;
/** The number of items in @c logListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger logListArray_Count;

@end

#pragma mark - PB3ShowRandomRoomRes

typedef GPB_ENUM(PB3ShowRandomRoomRes_FieldNumber) {
  PB3ShowRandomRoomRes_FieldNumber_RoomIdArray = 1,
};

/**
 * 获取随机房间响应
 **/
@interface PB3ShowRandomRoomRes : GPBMessage

/** 获取随机房间id */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *roomIdArray;
/** The number of items in @c roomIdArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger roomIdArray_Count;

@end

#pragma mark - PB3ShowRandomRoomReq

typedef GPB_ENUM(PB3ShowRandomRoomReq_FieldNumber) {
  PB3ShowRandomRoomReq_FieldNumber_ActId = 1,
  PB3ShowRandomRoomReq_FieldNumber_RelActId = 2,
  PB3ShowRandomRoomReq_FieldNumber_UserStintId = 3,
  PB3ShowRandomRoomReq_FieldNumber_ReqNum = 4,
};

/**
 * 获取随机房间请求
 **/
@interface PB3ShowRandomRoomReq : GPBMessage

@property(nonatomic, readwrite) int32_t actId;

@property(nonatomic, readwrite) int32_t relActId;

/** 用户限制配置id */
@property(nonatomic, readwrite) int32_t userStintId;

/** 请求数量 */
@property(nonatomic, readwrite) int32_t reqNum;

@end

#pragma mark - PB3GainOnTimeWelfareReq

typedef GPB_ENUM(PB3GainOnTimeWelfareReq_FieldNumber) {
  PB3GainOnTimeWelfareReq_FieldNumber_ConfId = 1,
  PB3GainOnTimeWelfareReq_FieldNumber_ActId = 2,
  PB3GainOnTimeWelfareReq_FieldNumber_RelActId = 3,
  PB3GainOnTimeWelfareReq_FieldNumber_GainIndex = 4,
};

/**
 * 开启定时福利请求
 **/
@interface PB3GainOnTimeWelfareReq : GPBMessage

/** 配置ID */
@property(nonatomic, readwrite) int64_t confId;

/** 活动ID */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动ID */
@property(nonatomic, readwrite) int32_t relActId;

/** 定时福利索引 */
@property(nonatomic, readwrite) int32_t gainIndex;

@end

#pragma mark - PB3GainOnTimeWelfareRes

typedef GPB_ENUM(PB3GainOnTimeWelfareRes_FieldNumber) {
  PB3GainOnTimeWelfareRes_FieldNumber_RewardListArray = 1,
};

/**
 * 开启定时福利返回
 **/
@interface PB3GainOnTimeWelfareRes : GPBMessage

/** 奖励列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3EventBoxReward*> *rewardListArray;
/** The number of items in @c rewardListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger rewardListArray_Count;

@end

#pragma mark - PB3FindOnTimeWelfareLogReq

typedef GPB_ENUM(PB3FindOnTimeWelfareLogReq_FieldNumber) {
  PB3FindOnTimeWelfareLogReq_FieldNumber_ConfId = 1,
  PB3FindOnTimeWelfareLogReq_FieldNumber_ActId = 2,
  PB3FindOnTimeWelfareLogReq_FieldNumber_RelActId = 3,
};

/**
 * 开启定时福利请求
 **/
@interface PB3FindOnTimeWelfareLogReq : GPBMessage

/** 配置ID */
@property(nonatomic, readwrite) int64_t confId;

/** 活动ID */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动ID */
@property(nonatomic, readwrite) int32_t relActId;

@end

#pragma mark - PB3FindOnTimeWelfareLogRes

typedef GPB_ENUM(PB3FindOnTimeWelfareLogRes_FieldNumber) {
  PB3FindOnTimeWelfareLogRes_FieldNumber_GainIndex = 1,
  PB3FindOnTimeWelfareLogRes_FieldNumber_RewardListArray = 2,
};

/**
 * 开启定时福利返回
 **/
@interface PB3FindOnTimeWelfareLogRes : GPBMessage

/** 定时福利索引 */
@property(nonatomic, readwrite) int32_t gainIndex;

/** 奖励列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3EventBoxReward*> *rewardListArray;
/** The number of items in @c rewardListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger rewardListArray_Count;

@end

#pragma mark - PB3ActBoxGameRank

typedef GPB_ENUM(PB3ActBoxGameRank_FieldNumber) {
  PB3ActBoxGameRank_FieldNumber_PlayerId = 1,
  PB3ActBoxGameRank_FieldNumber_PlayerId2 = 2,
  PB3ActBoxGameRank_FieldNumber_PlayerName = 3,
  PB3ActBoxGameRank_FieldNumber_PlayerIcon = 4,
  PB3ActBoxGameRank_FieldNumber_GameScore = 5,
};

/**
 * 宝箱游戏排行数据
 **/
@interface PB3ActBoxGameRank : GPBMessage

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 用户靓号 */
@property(nonatomic, readwrite) int64_t playerId2;

/** 用户昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerName;

/** 用户头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerIcon;

/** 游戏分数 */
@property(nonatomic, readwrite) int32_t gameScore;

@end

#pragma mark - PB3ActBoxGameSelLog

typedef GPB_ENUM(PB3ActBoxGameSelLog_FieldNumber) {
  PB3ActBoxGameSelLog_FieldNumber_TimeStr = 1,
  PB3ActBoxGameSelLog_FieldNumber_GameScore = 2,
  PB3ActBoxGameSelLog_FieldNumber_RewardListArray = 3,
};

/**
 * 宝箱游戏自己的日志数据
 **/
@interface PB3ActBoxGameSelLog : GPBMessage

/** 记录时间 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *timeStr;

/** 游戏分数 */
@property(nonatomic, readwrite) int32_t gameScore;

/** 奖励列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3EventBoxReward*> *rewardListArray;
/** The number of items in @c rewardListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger rewardListArray_Count;

@end

#pragma mark - PB3FindActBoxGameRankReq

typedef GPB_ENUM(PB3FindActBoxGameRankReq_FieldNumber) {
  PB3FindActBoxGameRankReq_FieldNumber_ActId = 1,
  PB3FindActBoxGameRankReq_FieldNumber_RelId = 2,
  PB3FindActBoxGameRankReq_FieldNumber_DayDot = 3,
  PB3FindActBoxGameRankReq_FieldNumber_Page = 4,
  PB3FindActBoxGameRankReq_FieldNumber_PageSize = 5,
};

/**
 * 获取宝箱游戏排行请求
 **/
@interface PB3FindActBoxGameRankReq : GPBMessage

/** 活动ID */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动ID */
@property(nonatomic, readwrite) int32_t relId;

/** 当日零点时间戳 */
@property(nonatomic, readwrite) int32_t dayDot;

/** 页数 */
@property(nonatomic, readwrite) int32_t page;

/** 页数大小 */
@property(nonatomic, readwrite) int32_t pageSize;

@end

#pragma mark - PB3FindActBoxGameRankRes

typedef GPB_ENUM(PB3FindActBoxGameRankRes_FieldNumber) {
  PB3FindActBoxGameRankRes_FieldNumber_RankListArray = 1,
};

/**
 * 获取宝箱游戏排行返回
 **/
@interface PB3FindActBoxGameRankRes : GPBMessage

/** 排行列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ActBoxGameRank*> *rankListArray;
/** The number of items in @c rankListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger rankListArray_Count;

@end

#pragma mark - PB3FindActBoxGameSelfLogReq

typedef GPB_ENUM(PB3FindActBoxGameSelfLogReq_FieldNumber) {
  PB3FindActBoxGameSelfLogReq_FieldNumber_ActId = 1,
  PB3FindActBoxGameSelfLogReq_FieldNumber_RelId = 2,
  PB3FindActBoxGameSelfLogReq_FieldNumber_Page = 4,
  PB3FindActBoxGameSelfLogReq_FieldNumber_PageSize = 5,
};

/**
 * 获取宝箱游戏自己记录请求
 **/
@interface PB3FindActBoxGameSelfLogReq : GPBMessage

/** 活动ID */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动ID */
@property(nonatomic, readwrite) int32_t relId;

/** 页数 */
@property(nonatomic, readwrite) int32_t page;

/** 页数大小 */
@property(nonatomic, readwrite) int32_t pageSize;

@end

#pragma mark - PB3FindActBoxGameSelfLogRes

typedef GPB_ENUM(PB3FindActBoxGameSelfLogRes_FieldNumber) {
  PB3FindActBoxGameSelfLogRes_FieldNumber_LogListArray = 1,
};

/**
 * 获取宝箱游戏自己记录返回
 **/
@interface PB3FindActBoxGameSelfLogRes : GPBMessage

/** 排行列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ActBoxGameSelLog*> *logListArray;
/** The number of items in @c logListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger logListArray_Count;

@end

#pragma mark - PB3FindPlayerGiftAskOrSendReq

typedef GPB_ENUM(PB3FindPlayerGiftAskOrSendReq_FieldNumber) {
  PB3FindPlayerGiftAskOrSendReq_FieldNumber_ActId = 1,
  PB3FindPlayerGiftAskOrSendReq_FieldNumber_RelActId = 2,
  PB3FindPlayerGiftAskOrSendReq_FieldNumber_AskOrSend = 3,
  PB3FindPlayerGiftAskOrSendReq_FieldNumber_UniqueStr = 4,
};

/**
 * 查看是否有用户赠送或索取物品请求
 **/
@interface PB3FindPlayerGiftAskOrSendReq : GPBMessage

/** 活动ID */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动ID */
@property(nonatomic, readwrite) int32_t relActId;

/** 1请求链接 2赠送链接 */
@property(nonatomic, readwrite) int32_t askOrSend;

/** 唯一字串 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *uniqueStr;

@end

#pragma mark - PB3FindPlayerGiftAskOrSendRes

typedef GPB_ENUM(PB3FindPlayerGiftAskOrSendRes_FieldNumber) {
  PB3FindPlayerGiftAskOrSendRes_FieldNumber_RetStatus = 1,
};

/**
 * 查看是否有用户赠送或索取物品返回
 **/
@interface PB3FindPlayerGiftAskOrSendRes : GPBMessage

/** 0未操作 1已领取 2已赠送 3已拒绝 4活动已结束 */
@property(nonatomic, readwrite) PB3StockGiftRetStatus retStatus;

@end

/**
 * Fetches the raw value of a @c PB3FindPlayerGiftAskOrSendRes's @c retStatus property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3FindPlayerGiftAskOrSendRes_RetStatus_RawValue(PB3FindPlayerGiftAskOrSendRes *message);
/**
 * Sets the raw value of an @c PB3FindPlayerGiftAskOrSendRes's @c retStatus property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3FindPlayerGiftAskOrSendRes_RetStatus_RawValue(PB3FindPlayerGiftAskOrSendRes *message, int32_t value);

#pragma mark - PB3AskForFriendGiftReq

typedef GPB_ENUM(PB3AskForFriendGiftReq_FieldNumber) {
  PB3AskForFriendGiftReq_FieldNumber_ActId = 1,
  PB3AskForFriendGiftReq_FieldNumber_RelActId = 2,
  PB3AskForFriendGiftReq_FieldNumber_FriendId = 3,
  PB3AskForFriendGiftReq_FieldNumber_GiftId = 4,
  PB3AskForFriendGiftReq_FieldNumber_GiftNum = 5,
  PB3AskForFriendGiftReq_FieldNumber_AskURL = 6,
  PB3AskForFriendGiftReq_FieldNumber_UniqueStr = 7,
};

/**
 * 向好友索要物品请求
 **/
@interface PB3AskForFriendGiftReq : GPBMessage

/** 活动ID */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动ID */
@property(nonatomic, readwrite) int32_t relActId;

/** 用户ID */
@property(nonatomic, readwrite) int64_t friendId;

/** 物品ID */
@property(nonatomic, readwrite) int32_t giftId;

/** 物品数量 */
@property(nonatomic, readwrite) int32_t giftNum;

/** 请求物品路由 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *askURL;

/** 路由唯一标识 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *uniqueStr;

@end

#pragma mark - PB3AskForFriendGiftRes

/**
 * 向好友索要物品返回
 **/
@interface PB3AskForFriendGiftRes : GPBMessage

@end

#pragma mark - PB3SendFriendGiftReq

typedef GPB_ENUM(PB3SendFriendGiftReq_FieldNumber) {
  PB3SendFriendGiftReq_FieldNumber_ActId = 1,
  PB3SendFriendGiftReq_FieldNumber_RelActId = 2,
  PB3SendFriendGiftReq_FieldNumber_FriendId = 3,
  PB3SendFriendGiftReq_FieldNumber_GiftId = 4,
  PB3SendFriendGiftReq_FieldNumber_GiftNum = 5,
  PB3SendFriendGiftReq_FieldNumber_SendURL = 6,
  PB3SendFriendGiftReq_FieldNumber_UniqueStr = 7,
};

/**
 * 赠送好友物品请求
 **/
@interface PB3SendFriendGiftReq : GPBMessage

/** 活动ID */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动ID */
@property(nonatomic, readwrite) int32_t relActId;

/** 用户ID */
@property(nonatomic, readwrite) int64_t friendId;

/** 物品ID */
@property(nonatomic, readwrite) int32_t giftId;

/** 物品数量 */
@property(nonatomic, readwrite) int32_t giftNum;

/** 请求物品路由 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sendURL;

/** 路由唯一标识 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *uniqueStr;

@end

#pragma mark - PB3SendFriendGiftRes

/**
 * 赠送好友物品返回
 **/
@interface PB3SendFriendGiftRes : GPBMessage

@end

#pragma mark - PB3ReceiveFriendGiftReq

typedef GPB_ENUM(PB3ReceiveFriendGiftReq_FieldNumber) {
  PB3ReceiveFriendGiftReq_FieldNumber_ActId = 1,
  PB3ReceiveFriendGiftReq_FieldNumber_RelActId = 2,
  PB3ReceiveFriendGiftReq_FieldNumber_UniqueStr = 3,
};

/**
 * 领取好友物品请求
 **/
@interface PB3ReceiveFriendGiftReq : GPBMessage

/** 活动ID */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动ID */
@property(nonatomic, readwrite) int32_t relActId;

/** 路由唯一标识 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *uniqueStr;

@end

#pragma mark - PB3ReceiveFriendGiftRes

/**
 * 领取好友物品返回
 **/
@interface PB3ReceiveFriendGiftRes : GPBMessage

@end

#pragma mark - PB3RefuseFriendAskForGiftReq

typedef GPB_ENUM(PB3RefuseFriendAskForGiftReq_FieldNumber) {
  PB3RefuseFriendAskForGiftReq_FieldNumber_ActId = 1,
  PB3RefuseFriendAskForGiftReq_FieldNumber_RelActId = 2,
  PB3RefuseFriendAskForGiftReq_FieldNumber_UniqueStr = 3,
};

/**
 * 拒绝好友索要请求
 **/
@interface PB3RefuseFriendAskForGiftReq : GPBMessage

/** 活动ID */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动ID */
@property(nonatomic, readwrite) int32_t relActId;

/** 路由唯一标识 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *uniqueStr;

@end

#pragma mark - PB3RefuseFriendAskForGiftRes

/**
 * 拒绝好友索要返回
 **/
@interface PB3RefuseFriendAskForGiftRes : GPBMessage

@end

#pragma mark - PB3AcceptSendFriendAskForGiftReq

typedef GPB_ENUM(PB3AcceptSendFriendAskForGiftReq_FieldNumber) {
  PB3AcceptSendFriendAskForGiftReq_FieldNumber_ActId = 1,
  PB3AcceptSendFriendAskForGiftReq_FieldNumber_RelActId = 2,
  PB3AcceptSendFriendAskForGiftReq_FieldNumber_UniqueStr = 3,
};

/**
 * 同意赠送好友索要请求
 **/
@interface PB3AcceptSendFriendAskForGiftReq : GPBMessage

/** 活动ID */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动ID */
@property(nonatomic, readwrite) int32_t relActId;

/** 路由唯一标识 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *uniqueStr;

@end

#pragma mark - PB3AcceptSendFriendAskForGiftRes

/**
 * 同意赠送好友索要返回
 **/
@interface PB3AcceptSendFriendAskForGiftRes : GPBMessage

@end

#pragma mark - PB3ListFriendGiftSortReq

typedef GPB_ENUM(PB3ListFriendGiftSortReq_FieldNumber) {
  PB3ListFriendGiftSortReq_FieldNumber_ActId = 1,
  PB3ListFriendGiftSortReq_FieldNumber_RelActId = 2,
  PB3ListFriendGiftSortReq_FieldNumber_DayDot = 3,
  PB3ListFriendGiftSortReq_FieldNumber_FriendIdListArray = 4,
};

/**
 * 获取好友排行请求
 **/
@interface PB3ListFriendGiftSortReq : GPBMessage

/** 活动ID */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动ID */
@property(nonatomic, readwrite) int32_t relActId;

/** 当日零点时间戳，传0时为总榜 */
@property(nonatomic, readwrite) int32_t dayDot;

/** 好友列表 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *friendIdListArray;
/** The number of items in @c friendIdListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger friendIdListArray_Count;

@end

#pragma mark - PB3StockGiftSortResult

typedef GPB_ENUM(PB3StockGiftSortResult_FieldNumber) {
  PB3StockGiftSortResult_FieldNumber_Sort = 1,
  PB3StockGiftSortResult_FieldNumber_Id_p = 2,
  PB3StockGiftSortResult_FieldNumber_Id2 = 3,
  PB3StockGiftSortResult_FieldNumber_Name = 4,
  PB3StockGiftSortResult_FieldNumber_Icon = 5,
  PB3StockGiftSortResult_FieldNumber_Point = 6,
  PB3StockGiftSortResult_FieldNumber_SendStatus = 7,
  PB3StockGiftSortResult_FieldNumber_AskStatus = 8,
};

/**
 * 库存礼物好友排行信息
 **/
@interface PB3StockGiftSortResult : GPBMessage

@property(nonatomic, readwrite) int64_t sort;

/** 按请求 roomid或playerid */
@property(nonatomic, readwrite) int64_t id_p;

/** 靓号 //如果靓号不为空则显示靓号 */
@property(nonatomic, readwrite) int64_t id2;

/** 同上 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 积分 */
@property(nonatomic, readwrite) int64_t point;

/** 礼物赠送状态 0可以赠送 1上限 */
@property(nonatomic, readwrite) int32_t sendStatus;

/** 礼物索要状态 0可以索取 1上限 */
@property(nonatomic, readwrite) int32_t askStatus;

@end

#pragma mark - PB3ListFriendGiftSortRes

typedef GPB_ENUM(PB3ListFriendGiftSortRes_FieldNumber) {
  PB3ListFriendGiftSortRes_FieldNumber_ListArray = 1,
  PB3ListFriendGiftSortRes_FieldNumber_Player = 2,
};

/**
 * 获取好友排行返回
 **/
@interface PB3ListFriendGiftSortRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3StockGiftSortResult*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) PB3StockGiftSortResult *player;
/** Test to see if @c player has been set. */
@property(nonatomic, readwrite) BOOL hasPlayer;

@end

#pragma mark - PB3ActGiftLogData

typedef GPB_ENUM(PB3ActGiftLogData_FieldNumber) {
  PB3ActGiftLogData_FieldNumber_RelateType = 1,
  PB3ActGiftLogData_FieldNumber_OptType = 2,
  PB3ActGiftLogData_FieldNumber_RelateName = 3,
  PB3ActGiftLogData_FieldNumber_CreatedTime = 4,
  PB3ActGiftLogData_FieldNumber_RewardData = 5,
};

@interface PB3ActGiftLogData : GPBMessage

/** 物品日志关联类型 */
@property(nonatomic, readwrite) PB3StockGiftRelateType relateType;

/** 物品减少或增加日志 */
@property(nonatomic, readwrite) PB3StockGiftOptType optType;

/** 获得途径名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *relateName;

/** 记录时间 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *createdTime;

/** 奖励 */
@property(nonatomic, readwrite, strong, null_resettable) PB3EventBoxReward *rewardData;
/** Test to see if @c rewardData has been set. */
@property(nonatomic, readwrite) BOOL hasRewardData;

@end

/**
 * Fetches the raw value of a @c PB3ActGiftLogData's @c relateType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ActGiftLogData_RelateType_RawValue(PB3ActGiftLogData *message);
/**
 * Sets the raw value of an @c PB3ActGiftLogData's @c relateType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ActGiftLogData_RelateType_RawValue(PB3ActGiftLogData *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3ActGiftLogData's @c optType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ActGiftLogData_OptType_RawValue(PB3ActGiftLogData *message);
/**
 * Sets the raw value of an @c PB3ActGiftLogData's @c optType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ActGiftLogData_OptType_RawValue(PB3ActGiftLogData *message, int32_t value);

#pragma mark - PB3FindPlayerActGiftLogReq

typedef GPB_ENUM(PB3FindPlayerActGiftLogReq_FieldNumber) {
  PB3FindPlayerActGiftLogReq_FieldNumber_ActId = 1,
  PB3FindPlayerActGiftLogReq_FieldNumber_RelActIdArray = 2,
  PB3FindPlayerActGiftLogReq_FieldNumber_Page = 3,
  PB3FindPlayerActGiftLogReq_FieldNumber_PageSize = 4,
};

/**
 * 获取用户活动物品记录请求
 **/
@interface PB3FindPlayerActGiftLogReq : GPBMessage

/** 活动ID */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动ID */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *relActIdArray;
/** The number of items in @c relActIdArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger relActIdArray_Count;

@property(nonatomic, readwrite) int32_t page;

@property(nonatomic, readwrite) int32_t pageSize;

@end

#pragma mark - PB3FindPlayerActGiftLogRes

typedef GPB_ENUM(PB3FindPlayerActGiftLogRes_FieldNumber) {
  PB3FindPlayerActGiftLogRes_FieldNumber_LogListArray = 1,
};

/**
 * 获取用户活动物品记录返回
 **/
@interface PB3FindPlayerActGiftLogRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ActGiftLogData*> *logListArray;
/** The number of items in @c logListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger logListArray_Count;

@end

#pragma mark - PB3PlayerActGiftCollectStatusReq

typedef GPB_ENUM(PB3PlayerActGiftCollectStatusReq_FieldNumber) {
  PB3PlayerActGiftCollectStatusReq_FieldNumber_ActId = 1,
  PB3PlayerActGiftCollectStatusReq_FieldNumber_RelActId = 2,
};

/**
 * 查看用户是否已集齐卡片请求
 **/
@interface PB3PlayerActGiftCollectStatusReq : GPBMessage

/** 活动ID */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动ID */
@property(nonatomic, readwrite) int32_t relActId;

@end

#pragma mark - PB3PlayerActGiftCollectStatusRes

typedef GPB_ENUM(PB3PlayerActGiftCollectStatusRes_FieldNumber) {
  PB3PlayerActGiftCollectStatusRes_FieldNumber_IsFirst = 1,
  PB3PlayerActGiftCollectStatusRes_FieldNumber_CollectRank = 2,
  PB3PlayerActGiftCollectStatusRes_FieldNumber_IsCollectAll = 3,
};

/**
 * 查看用户是否已集齐卡片返回
 **/
@interface PB3PlayerActGiftCollectStatusRes : GPBMessage

/** 是否是第一次集齐 0是 1不是 */
@property(nonatomic, readwrite) int32_t isFirst;

/** 集齐排名 */
@property(nonatomic, readwrite) int32_t collectRank;

/** 是否已集齐 */
@property(nonatomic, readwrite) BOOL isCollectAll;

@end

#pragma mark - PB3CollectAllActGiftPlayerNumReq

typedef GPB_ENUM(PB3CollectAllActGiftPlayerNumReq_FieldNumber) {
  PB3CollectAllActGiftPlayerNumReq_FieldNumber_ActId = 1,
  PB3CollectAllActGiftPlayerNumReq_FieldNumber_RelActId = 2,
};

/**
 * 查看当前已有多少人集齐卡片
 **/
@interface PB3CollectAllActGiftPlayerNumReq : GPBMessage

/** 活动ID */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动ID */
@property(nonatomic, readwrite) int32_t relActId;

@end

#pragma mark - PB3CollectAllActGiftPlayerNumRes

typedef GPB_ENUM(PB3CollectAllActGiftPlayerNumRes_FieldNumber) {
  PB3CollectAllActGiftPlayerNumRes_FieldNumber_CollectRankNum = 1,
};

/**
 * 查看当前已有多少人集齐卡片
 **/
@interface PB3CollectAllActGiftPlayerNumRes : GPBMessage

/** 当前已有多少人集齐 */
@property(nonatomic, readwrite) int32_t collectRankNum;

@end

#pragma mark - PB3FindPlayerTotalSortReq

typedef GPB_ENUM(PB3FindPlayerTotalSortReq_FieldNumber) {
  PB3FindPlayerTotalSortReq_FieldNumber_ActId = 1,
  PB3FindPlayerTotalSortReq_FieldNumber_RelId = 2,
  PB3FindPlayerTotalSortReq_FieldNumber_Page = 4,
  PB3FindPlayerTotalSortReq_FieldNumber_PageSize = 5,
};

/**
 * 获取排行榜总榜数据请求
 **/
@interface PB3FindPlayerTotalSortReq : GPBMessage

/** 活动ID */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动ID */
@property(nonatomic, readwrite) int32_t relId;

/** 页数 */
@property(nonatomic, readwrite) int32_t page;

/** 页数大小 */
@property(nonatomic, readwrite) int32_t pageSize;

@end

#pragma mark - PB3FindPlayerTotalSortRes

typedef GPB_ENUM(PB3FindPlayerTotalSortRes_FieldNumber) {
  PB3FindPlayerTotalSortRes_FieldNumber_ListArray = 1,
  PB3FindPlayerTotalSortRes_FieldNumber_Total = 2,
};

/**
 * 获取排行榜总榜数据返回
 **/
@interface PB3FindPlayerTotalSortRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SortResult*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

/** 总数 */
@property(nonatomic, readwrite) int64_t total;

@end

#pragma mark - PB3ActFormLikeReq

typedef GPB_ENUM(PB3ActFormLikeReq_FieldNumber) {
  PB3ActFormLikeReq_FieldNumber_RecordId = 1,
  PB3ActFormLikeReq_FieldNumber_CarrierId = 2,
};

/**
 * 表单点赞请求
 **/
@interface PB3ActFormLikeReq : GPBMessage

/** 点赞的记录id */
@property(nonatomic, readwrite) int32_t recordId;

/** 载体id */
@property(nonatomic, readwrite) int32_t carrierId;

@end

#pragma mark - PB3ActFormLikeRes

typedef GPB_ENUM(PB3ActFormLikeRes_FieldNumber) {
  PB3ActFormLikeRes_FieldNumber_IsSetLiked = 1,
};

/**
 * 表单点赞响应
 **/
@interface PB3ActFormLikeRes : GPBMessage

/** 是否已经点赞 */
@property(nonatomic, readwrite) BOOL isSetLiked;

@end

#pragma mark - PB3FindPlayerActFormDataReq

typedef GPB_ENUM(PB3FindPlayerActFormDataReq_FieldNumber) {
  PB3FindPlayerActFormDataReq_FieldNumber_ActId = 1,
  PB3FindPlayerActFormDataReq_FieldNumber_RelActId = 2,
  PB3FindPlayerActFormDataReq_FieldNumber_CarrierId = 3,
  PB3FindPlayerActFormDataReq_FieldNumber_PlayerIdArray = 4,
  PB3FindPlayerActFormDataReq_FieldNumber_Page = 5,
  PB3FindPlayerActFormDataReq_FieldNumber_PageSize = 6,
  PB3FindPlayerActFormDataReq_FieldNumber_IsVerify = 7,
  PB3FindPlayerActFormDataReq_FieldNumber_IsSingleSearch = 8,
};

/**
 * 获取用户表单数据
 **/
@interface PB3FindPlayerActFormDataReq : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relActId;

/** 载体id */
@property(nonatomic, readwrite) int32_t carrierId;

/** 用户id */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *playerIdArray;
/** The number of items in @c playerIdArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger playerIdArray_Count;

/** 分页页码 */
@property(nonatomic, readwrite) int32_t page;

/** 每页显示多少条数据 */
@property(nonatomic, readwrite) int32_t pageSize;

/** 审核状态 0待审核 1审核通过 2审核不通过 3全部 */
@property(nonatomic, readwrite) int32_t isVerify;

/** 是否单体查询，若是，则查询传入playerIds中每个ID的pageSize条数据；默认否， */
@property(nonatomic, readwrite) BOOL isSingleSearch;

@end

#pragma mark - PB3FindPlayerActFormDataRes

typedef GPB_ENUM(PB3FindPlayerActFormDataRes_FieldNumber) {
  PB3FindPlayerActFormDataRes_FieldNumber_RecordListArray = 1,
};

/**
 * 获取用户表单数据
 **/
@interface PB3FindPlayerActFormDataRes : GPBMessage

/** 用户表单数据 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ActFormRecord*> *recordListArray;
/** The number of items in @c recordListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger recordListArray_Count;

@end

#pragma mark - PB3SendGiftPlayer

typedef GPB_ENUM(PB3SendGiftPlayer_FieldNumber) {
  PB3SendGiftPlayer_FieldNumber_Id_p = 1,
  PB3SendGiftPlayer_FieldNumber_Id2 = 2,
  PB3SendGiftPlayer_FieldNumber_Name = 3,
  PB3SendGiftPlayer_FieldNumber_Icon = 4,
};

/**
 * 送礼人员信息
 **/
@interface PB3SendGiftPlayer : GPBMessage

/** playerid */
@property(nonatomic, readwrite) int64_t id_p;

/** 靓号 //如果靓号不为空则显示靓号 */
@property(nonatomic, readwrite) int64_t id2;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

@end

#pragma mark - PB3FindSendGiftListReq

typedef GPB_ENUM(PB3FindSendGiftListReq_FieldNumber) {
  PB3FindSendGiftListReq_FieldNumber_RelActId = 1,
  PB3FindSendGiftListReq_FieldNumber_PlayerId = 2,
  PB3FindSendGiftListReq_FieldNumber_GiftId = 3,
  PB3FindSendGiftListReq_FieldNumber_Page = 4,
  PB3FindSendGiftListReq_FieldNumber_PageSize = 5,
};

/**
 * 获取送礼的人员列表
 **/
@interface PB3FindSendGiftListReq : GPBMessage

@property(nonatomic, readwrite) int32_t relActId;

/** 收礼人 */
@property(nonatomic, readwrite) int64_t playerId;

@property(nonatomic, readwrite) int32_t giftId;

@property(nonatomic, readwrite) int32_t page;

@property(nonatomic, readwrite) int64_t pageSize;

@end

#pragma mark - PB3FindSendGiftListRes

typedef GPB_ENUM(PB3FindSendGiftListRes_FieldNumber) {
  PB3FindSendGiftListRes_FieldNumber_PlayerId = 1,
  PB3FindSendGiftListRes_FieldNumber_GiftId = 2,
  PB3FindSendGiftListRes_FieldNumber_ListArray = 3,
  PB3FindSendGiftListRes_FieldNumber_Total = 4,
};

/**
 * 获取送礼的人员列表
 **/
@interface PB3FindSendGiftListRes : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

@property(nonatomic, readwrite) int32_t giftId;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SendGiftPlayer*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

/** 总数 */
@property(nonatomic, readwrite) int64_t total;

@end

#pragma mark - PB3CheckSendGiftReq

typedef GPB_ENUM(PB3CheckSendGiftReq_FieldNumber) {
  PB3CheckSendGiftReq_FieldNumber_RelActId = 1,
  PB3CheckSendGiftReq_FieldNumber_GiftId = 2,
  PB3CheckSendGiftReq_FieldNumber_PlayerIdsArray = 3,
};

/**
 * 获取指定人员是否送礼
 **/
@interface PB3CheckSendGiftReq : GPBMessage

@property(nonatomic, readwrite) int32_t relActId;

@property(nonatomic, readwrite) int32_t giftId;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *playerIdsArray;
/** The number of items in @c playerIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger playerIdsArray_Count;

@end

#pragma mark - PB3CheckSendGiftRes

typedef GPB_ENUM(PB3CheckSendGiftRes_FieldNumber) {
  PB3CheckSendGiftRes_FieldNumber_PlayerIdsArray = 1,
};

@interface PB3CheckSendGiftRes : GPBMessage

/** 返回送过礼的人员列表 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *playerIdsArray;
/** The number of items in @c playerIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger playerIdsArray_Count;

@end

#pragma mark - PB3FindActScoreReq

typedef GPB_ENUM(PB3FindActScoreReq_FieldNumber) {
  PB3FindActScoreReq_FieldNumber_ActId = 1,
  PB3FindActScoreReq_FieldNumber_RelActId = 2,
};

/**
 * 获取调整后的活动总积分
 **/
@interface PB3FindActScoreReq : GPBMessage

@property(nonatomic, readwrite) int32_t actId;

@property(nonatomic, readwrite) int32_t relActId;

@end

#pragma mark - PB3FindActScoreRes

typedef GPB_ENUM(PB3FindActScoreRes_FieldNumber) {
  PB3FindActScoreRes_FieldNumber_Score = 1,
};

@interface PB3FindActScoreRes : GPBMessage

/** 调整后的总积分 */
@property(nonatomic, readwrite) int64_t score;

@end

#pragma mark - PB3FindReceiveGiftScoreReq

typedef GPB_ENUM(PB3FindReceiveGiftScoreReq_FieldNumber) {
  PB3FindReceiveGiftScoreReq_FieldNumber_RelActId = 1,
};

/**
 * 查看自己的收礼总积分
 **/
@interface PB3FindReceiveGiftScoreReq : GPBMessage

@property(nonatomic, readwrite) int32_t relActId;

@end

#pragma mark - PB3FindReceiveGiftScoreRes

typedef GPB_ENUM(PB3FindReceiveGiftScoreRes_FieldNumber) {
  PB3FindReceiveGiftScoreRes_FieldNumber_Score = 1,
  PB3FindReceiveGiftScoreRes_FieldNumber_HasReceiveGift = 2,
};

@interface PB3FindReceiveGiftScoreRes : GPBMessage

/** 积分 */
@property(nonatomic, readwrite) int64_t score;

/** 是否收到过礼 */
@property(nonatomic, readwrite) BOOL hasReceiveGift;

@end

#pragma mark - PB3FindBuildingBattleResultReq

typedef GPB_ENUM(PB3FindBuildingBattleResultReq_FieldNumber) {
  PB3FindBuildingBattleResultReq_FieldNumber_RelActId = 1,
  PB3FindBuildingBattleResultReq_FieldNumber_Floor = 2,
};

/**
 * 查看盖楼的战斗结果
 **/
@interface PB3FindBuildingBattleResultReq : GPBMessage

@property(nonatomic, readwrite) int32_t relActId;

/** 当前楼层 */
@property(nonatomic, readwrite) int64_t floor;

@end

#pragma mark - PB3FindBuildingBattleResultRes

typedef GPB_ENUM(PB3FindBuildingBattleResultRes_FieldNumber) {
  PB3FindBuildingBattleResultRes_FieldNumber_Id_p = 1,
  PB3FindBuildingBattleResultRes_FieldNumber_Id2 = 2,
  PB3FindBuildingBattleResultRes_FieldNumber_Name = 3,
  PB3FindBuildingBattleResultRes_FieldNumber_Icon = 4,
  PB3FindBuildingBattleResultRes_FieldNumber_Floor = 5,
};

/**
 * 查看盖楼的战斗结果
 **/
@interface PB3FindBuildingBattleResultRes : GPBMessage

/** playerid 最近无记录则playerId为0 */
@property(nonatomic, readwrite) int64_t id_p;

/** 靓号 //如果靓号不为空则显示靓号 */
@property(nonatomic, readwrite) int64_t id2;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 该用户盖楼或炸楼的层数 (正数为盖楼；负数为炸楼) */
@property(nonatomic, readwrite) int64_t floor;

@end

#pragma mark - PB3ActivityUser

typedef GPB_ENUM(PB3ActivityUser_FieldNumber) {
  PB3ActivityUser_FieldNumber_UserId = 1,
  PB3ActivityUser_FieldNumber_UserType = 2,
  PB3ActivityUser_FieldNumber_NickName = 3,
  PB3ActivityUser_FieldNumber_Avatar = 4,
};

@interface PB3ActivityUser : GPBMessage

/** user_id == "0" 和 user_type == 0 表示为系统用户，例如问卷是后台创建的，那创建者就是系统用户 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@property(nonatomic, readwrite) PB3ActivityUserType userType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *avatar;

@end

/**
 * Fetches the raw value of a @c PB3ActivityUser's @c userType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ActivityUser_UserType_RawValue(PB3ActivityUser *message);
/**
 * Sets the raw value of an @c PB3ActivityUser's @c userType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ActivityUser_UserType_RawValue(PB3ActivityUser *message, int32_t value);

#pragma mark - PB3GetActivityUserInfoReq

typedef GPB_ENUM(PB3GetActivityUserInfoReq_FieldNumber) {
  PB3GetActivityUserInfoReq_FieldNumber_UserId = 1,
  PB3GetActivityUserInfoReq_FieldNumber_UserType = 2,
  PB3GetActivityUserInfoReq_FieldNumber_Token = 3,
  PB3GetActivityUserInfoReq_FieldNumber_AppId = 4,
};

/**
 * 获取活动用户信息
 **/
@interface PB3GetActivityUserInfoReq : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@property(nonatomic, readwrite) PB3ActivityUserType userType;

/** 授权token */
@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

@property(nonatomic, readwrite, copy, null_resettable) NSString *appId;

@end

/**
 * Fetches the raw value of a @c PB3GetActivityUserInfoReq's @c userType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3GetActivityUserInfoReq_UserType_RawValue(PB3GetActivityUserInfoReq *message);
/**
 * Sets the raw value of an @c PB3GetActivityUserInfoReq's @c userType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3GetActivityUserInfoReq_UserType_RawValue(PB3GetActivityUserInfoReq *message, int32_t value);

#pragma mark - PB3GetActivityUserInfoRes

typedef GPB_ENUM(PB3GetActivityUserInfoRes_FieldNumber) {
  PB3GetActivityUserInfoRes_FieldNumber_User = 1,
};

@interface PB3GetActivityUserInfoRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3ActivityUser *user;
/** Test to see if @c user has been set. */
@property(nonatomic, readwrite) BOOL hasUser;

@end

#pragma mark - PB3QuizQuestionOption

typedef GPB_ENUM(PB3QuizQuestionOption_FieldNumber) {
  PB3QuizQuestionOption_FieldNumber_OptId = 1,
  PB3QuizQuestionOption_FieldNumber_OptVal = 2,
  PB3QuizQuestionOption_FieldNumber_IsAnswer = 3,
  PB3QuizQuestionOption_FieldNumber_Score = 4,
};

/**
 * 问题选项
 **/
@interface PB3QuizQuestionOption : GPBMessage

/** 选项ID */
@property(nonatomic, readwrite) int32_t optId;

/** 选项内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *optVal;

/** 是否是正确答案 */
@property(nonatomic, readwrite) BOOL isAnswer;

/** 分数 （选择题的单项分数） */
@property(nonatomic, readwrite) int32_t score;

@end

#pragma mark - PB3QuizQuestion

typedef GPB_ENUM(PB3QuizQuestion_FieldNumber) {
  PB3QuizQuestion_FieldNumber_Id_p = 1,
  PB3QuizQuestion_FieldNumber_QuestType = 2,
  PB3QuizQuestion_FieldNumber_Title = 3,
  PB3QuizQuestion_FieldNumber_OptionsArray = 4,
  PB3QuizQuestion_FieldNumber_Score = 5,
};

/**
 * 问题信息
 **/
@interface PB3QuizQuestion : GPBMessage

/** 问题ID */
@property(nonatomic, readwrite) int32_t id_p;

/** 问题类型 1、判断题，2、选择题 */
@property(nonatomic, readwrite) int32_t questType;

/** 问题内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** 考试问题选项信息 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3QuizQuestionOption*> *optionsArray;
/** The number of items in @c optionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger optionsArray_Count;

/** 问题得分 */
@property(nonatomic, readwrite) int32_t score;

@end

#pragma mark - PB3QuizPlayerQuestionOption

typedef GPB_ENUM(PB3QuizPlayerQuestionOption_FieldNumber) {
  PB3QuizPlayerQuestionOption_FieldNumber_OptId = 1,
  PB3QuizPlayerQuestionOption_FieldNumber_IsAnswer = 2,
};

/**
 * 用户选择的选项
 **/
@interface PB3QuizPlayerQuestionOption : GPBMessage

@property(nonatomic, readwrite) int32_t optId;

/** 是否是正确答案 */
@property(nonatomic, readwrite) BOOL isAnswer;

@end

#pragma mark - PB3QuizPlayerQuestion

typedef GPB_ENUM(PB3QuizPlayerQuestion_FieldNumber) {
  PB3QuizPlayerQuestion_FieldNumber_QuestionId = 1,
  PB3QuizPlayerQuestion_FieldNumber_OptionsArray = 2,
};

/**
 * 用户上传的问题
 **/
@interface PB3QuizPlayerQuestion : GPBMessage

@property(nonatomic, readwrite) int32_t questionId;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3QuizPlayerQuestionOption*> *optionsArray;
/** The number of items in @c optionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger optionsArray_Count;

@end

#pragma mark - PB3QuizAnswer

typedef GPB_ENUM(PB3QuizAnswer_FieldNumber) {
  PB3QuizAnswer_FieldNumber_QuestionId = 1,
  PB3QuizAnswer_FieldNumber_OptionIdsArray = 2,
};

/**
 * 上报的答案
 **/
@interface PB3QuizAnswer : GPBMessage

@property(nonatomic, readwrite) int32_t questionId;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *optionIdsArray;
/** The number of items in @c optionIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger optionIdsArray_Count;

@end

#pragma mark - PB3QuizRankPlayer

typedef GPB_ENUM(PB3QuizRankPlayer_FieldNumber) {
  PB3QuizRankPlayer_FieldNumber_Rank = 1,
  PB3QuizRankPlayer_FieldNumber_Score = 2,
  PB3QuizRankPlayer_FieldNumber_Player = 3,
};

/**
 * 答题排行榜用户数据
 **/
@interface PB3QuizRankPlayer : GPBMessage

@property(nonatomic, readwrite) int32_t rank;

@property(nonatomic, readwrite) int32_t score;

@property(nonatomic, readwrite, strong, null_resettable) PB3ActivityUser *player;
/** Test to see if @c player has been set. */
@property(nonatomic, readwrite) BOOL hasPlayer;

@end

#pragma mark - PB3QuizPaper

typedef GPB_ENUM(PB3QuizPaper_FieldNumber) {
  PB3QuizPaper_FieldNumber_PaperId = 1,
  PB3QuizPaper_FieldNumber_CreatorId = 2,
  PB3QuizPaper_FieldNumber_CreatorType = 3,
  PB3QuizPaper_FieldNumber_CalcType = 4,
  PB3QuizPaper_FieldNumber_QuestionsArray = 5,
  PB3QuizPaper_FieldNumber_MaxScore = 6,
};

/**
 * 问卷
 **/
@interface PB3QuizPaper : GPBMessage

@property(nonatomic, readwrite) int32_t paperId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *creatorId;

@property(nonatomic, readwrite) PB3ActivityUserType creatorType;

/** 试卷分数计算方式 1: 默认； 2:总分+随机0-9 */
@property(nonatomic, readwrite) int32_t calcType;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3QuizQuestion*> *questionsArray;
/** The number of items in @c questionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger questionsArray_Count;

@property(nonatomic, readwrite) int32_t maxScore;

@end

/**
 * Fetches the raw value of a @c PB3QuizPaper's @c creatorType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3QuizPaper_CreatorType_RawValue(PB3QuizPaper *message);
/**
 * Sets the raw value of an @c PB3QuizPaper's @c creatorType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3QuizPaper_CreatorType_RawValue(PB3QuizPaper *message, int32_t value);

#pragma mark - PB3GetCheckIfCreateQuizReq

typedef GPB_ENUM(PB3GetCheckIfCreateQuizReq_FieldNumber) {
  PB3GetCheckIfCreateQuizReq_FieldNumber_ActId = 1,
  PB3GetCheckIfCreateQuizReq_FieldNumber_RelActId = 2,
  PB3GetCheckIfCreateQuizReq_FieldNumber_PlayerId = 3,
  PB3GetCheckIfCreateQuizReq_FieldNumber_UserType = 4,
};

/**
 * 获取是否已有试题
 **/
@interface PB3GetCheckIfCreateQuizReq : GPBMessage

@property(nonatomic, readwrite) int32_t actId;

@property(nonatomic, readwrite) int32_t relActId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *playerId;

@property(nonatomic, readwrite) PB3ActivityUserType userType;

@end

/**
 * Fetches the raw value of a @c PB3GetCheckIfCreateQuizReq's @c userType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3GetCheckIfCreateQuizReq_UserType_RawValue(PB3GetCheckIfCreateQuizReq *message);
/**
 * Sets the raw value of an @c PB3GetCheckIfCreateQuizReq's @c userType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3GetCheckIfCreateQuizReq_UserType_RawValue(PB3GetCheckIfCreateQuizReq *message, int32_t value);

#pragma mark - PB3GetCheckIfCreateQuizRes

typedef GPB_ENUM(PB3GetCheckIfCreateQuizRes_FieldNumber) {
  PB3GetCheckIfCreateQuizRes_FieldNumber_PaperId = 1,
};

@interface PB3GetCheckIfCreateQuizRes : GPBMessage

/** 0表示没有试题 */
@property(nonatomic, readwrite) int32_t paperId;

@end

#pragma mark - PB3GetQuizQuestionsReq

typedef GPB_ENUM(PB3GetQuizQuestionsReq_FieldNumber) {
  PB3GetQuizQuestionsReq_FieldNumber_ActId = 1,
  PB3GetQuizQuestionsReq_FieldNumber_RelActId = 2,
  PB3GetQuizQuestionsReq_FieldNumber_PlayerId = 3,
  PB3GetQuizQuestionsReq_FieldNumber_UserType = 4,
  PB3GetQuizQuestionsReq_FieldNumber_Count = 5,
  PB3GetQuizQuestionsReq_FieldNumber_ChosenArray = 6,
};

/**
 * 从题库获取试题用于创建问卷
 **/
@interface PB3GetQuizQuestionsReq : GPBMessage

@property(nonatomic, readwrite) int32_t actId;

@property(nonatomic, readwrite) int32_t relActId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *playerId;

@property(nonatomic, readwrite) PB3ActivityUserType userType;

/** 一次请求试题数量 */
@property(nonatomic, readwrite) int32_t count;

/** 已经选好的题目ID */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *chosenArray;
/** The number of items in @c chosenArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger chosenArray_Count;

@end

/**
 * Fetches the raw value of a @c PB3GetQuizQuestionsReq's @c userType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3GetQuizQuestionsReq_UserType_RawValue(PB3GetQuizQuestionsReq *message);
/**
 * Sets the raw value of an @c PB3GetQuizQuestionsReq's @c userType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3GetQuizQuestionsReq_UserType_RawValue(PB3GetQuizQuestionsReq *message, int32_t value);

#pragma mark - PB3GetQuizQuestionsRes

typedef GPB_ENUM(PB3GetQuizQuestionsRes_FieldNumber) {
  PB3GetQuizQuestionsRes_FieldNumber_QuestionsArray = 1,
};

@interface PB3GetQuizQuestionsRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3QuizQuestion*> *questionsArray;
/** The number of items in @c questionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger questionsArray_Count;

@end

#pragma mark - PB3GetCreateQuizPaperReq

typedef GPB_ENUM(PB3GetCreateQuizPaperReq_FieldNumber) {
  PB3GetCreateQuizPaperReq_FieldNumber_ActId = 1,
  PB3GetCreateQuizPaperReq_FieldNumber_RelActId = 2,
  PB3GetCreateQuizPaperReq_FieldNumber_PlayerId = 3,
  PB3GetCreateQuizPaperReq_FieldNumber_UserType = 4,
  PB3GetCreateQuizPaperReq_FieldNumber_PaperCalcType = 5,
  PB3GetCreateQuizPaperReq_FieldNumber_QuestionsArray = 6,
};

/**
 * 创建问卷
 **/
@interface PB3GetCreateQuizPaperReq : GPBMessage

@property(nonatomic, readwrite) int32_t actId;

@property(nonatomic, readwrite) int32_t relActId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *playerId;

@property(nonatomic, readwrite) PB3ActivityUserType userType;

/** 试卷分数计算方式 1: 默认； 2:总分+随机0-9 */
@property(nonatomic, readwrite) int32_t paperCalcType;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3QuizPlayerQuestion*> *questionsArray;
/** The number of items in @c questionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger questionsArray_Count;

@end

/**
 * Fetches the raw value of a @c PB3GetCreateQuizPaperReq's @c userType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3GetCreateQuizPaperReq_UserType_RawValue(PB3GetCreateQuizPaperReq *message);
/**
 * Sets the raw value of an @c PB3GetCreateQuizPaperReq's @c userType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3GetCreateQuizPaperReq_UserType_RawValue(PB3GetCreateQuizPaperReq *message, int32_t value);

#pragma mark - PB3GetCreateQuizPaperRes

typedef GPB_ENUM(PB3GetCreateQuizPaperRes_FieldNumber) {
  PB3GetCreateQuizPaperRes_FieldNumber_PaperId = 1,
};

@interface PB3GetCreateQuizPaperRes : GPBMessage

@property(nonatomic, readwrite) int32_t paperId;

@end

#pragma mark - PB3GetQuizPaperReq

typedef GPB_ENUM(PB3GetQuizPaperReq_FieldNumber) {
  PB3GetQuizPaperReq_FieldNumber_ActId = 1,
  PB3GetQuizPaperReq_FieldNumber_RelActId = 2,
  PB3GetQuizPaperReq_FieldNumber_CreatorId = 3,
  PB3GetQuizPaperReq_FieldNumber_CreatorType = 4,
  PB3GetQuizPaperReq_FieldNumber_PaperId = 5,
};

/**
 * 获取问卷
 **/
@interface PB3GetQuizPaperReq : GPBMessage

@property(nonatomic, readwrite) int32_t actId;

@property(nonatomic, readwrite) int32_t relActId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *creatorId;

@property(nonatomic, readwrite) PB3ActivityUserType creatorType;

/** 问卷ID （可以指定，默认为0） */
@property(nonatomic, readwrite) int32_t paperId;

@end

/**
 * Fetches the raw value of a @c PB3GetQuizPaperReq's @c creatorType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3GetQuizPaperReq_CreatorType_RawValue(PB3GetQuizPaperReq *message);
/**
 * Sets the raw value of an @c PB3GetQuizPaperReq's @c creatorType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3GetQuizPaperReq_CreatorType_RawValue(PB3GetQuizPaperReq *message, int32_t value);

#pragma mark - PB3GetQuizPaperRes

typedef GPB_ENUM(PB3GetQuizPaperRes_FieldNumber) {
  PB3GetQuizPaperRes_FieldNumber_Paper = 1,
};

@interface PB3GetQuizPaperRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3QuizPaper *paper;
/** Test to see if @c paper has been set. */
@property(nonatomic, readwrite) BOOL hasPaper;

@end

#pragma mark - PB3SubmitQuizResultReq

typedef GPB_ENUM(PB3SubmitQuizResultReq_FieldNumber) {
  PB3SubmitQuizResultReq_FieldNumber_ActId = 1,
  PB3SubmitQuizResultReq_FieldNumber_RelActId = 2,
  PB3SubmitQuizResultReq_FieldNumber_PlayerId = 3,
  PB3SubmitQuizResultReq_FieldNumber_UserType = 4,
  PB3SubmitQuizResultReq_FieldNumber_Score = 5,
};

/**
 * 提交答题结果
 **/
@interface PB3SubmitQuizResultReq : GPBMessage

@property(nonatomic, readwrite) int32_t actId;

@property(nonatomic, readwrite) int32_t relActId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *playerId;

@property(nonatomic, readwrite) PB3ActivityUserType userType;

/** 分数 （目前只有老板来电支持） */
@property(nonatomic, readwrite) int32_t score;

@end

/**
 * Fetches the raw value of a @c PB3SubmitQuizResultReq's @c userType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SubmitQuizResultReq_UserType_RawValue(PB3SubmitQuizResultReq *message);
/**
 * Sets the raw value of an @c PB3SubmitQuizResultReq's @c userType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SubmitQuizResultReq_UserType_RawValue(PB3SubmitQuizResultReq *message, int32_t value);

#pragma mark - PB3SubmitQuizResultRes

@interface PB3SubmitQuizResultRes : GPBMessage

@end

#pragma mark - PB3GetSubmitQuizResultReq

typedef GPB_ENUM(PB3GetSubmitQuizResultReq_FieldNumber) {
  PB3GetSubmitQuizResultReq_FieldNumber_ActId = 1,
  PB3GetSubmitQuizResultReq_FieldNumber_RelActId = 2,
  PB3GetSubmitQuizResultReq_FieldNumber_PlayerId = 3,
  PB3GetSubmitQuizResultReq_FieldNumber_UserType = 4,
  PB3GetSubmitQuizResultReq_FieldNumber_PaperId = 5,
  PB3GetSubmitQuizResultReq_FieldNumber_AnswersArray = 6,
};

/**
 * 提交答题结果
 **/
@interface PB3GetSubmitQuizResultReq : GPBMessage

@property(nonatomic, readwrite) int32_t actId;

@property(nonatomic, readwrite) int32_t relActId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *playerId;

/** 平台 */
@property(nonatomic, readwrite) PB3ActivityUserType userType;

/** 问卷ID 必须上传 */
@property(nonatomic, readwrite) int32_t paperId;

/** 上报的答案 （后端验证计算分数） */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3QuizAnswer*> *answersArray;
/** The number of items in @c answersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger answersArray_Count;

@end

/**
 * Fetches the raw value of a @c PB3GetSubmitQuizResultReq's @c userType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3GetSubmitQuizResultReq_UserType_RawValue(PB3GetSubmitQuizResultReq *message);
/**
 * Sets the raw value of an @c PB3GetSubmitQuizResultReq's @c userType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3GetSubmitQuizResultReq_UserType_RawValue(PB3GetSubmitQuizResultReq *message, int32_t value);

#pragma mark - PB3GetSubmitQuizResultRes

@interface PB3GetSubmitQuizResultRes : GPBMessage

@end

#pragma mark - PB3GetQuizResultReq

typedef GPB_ENUM(PB3GetQuizResultReq_FieldNumber) {
  PB3GetQuizResultReq_FieldNumber_ActId = 1,
  PB3GetQuizResultReq_FieldNumber_RelActId = 2,
  PB3GetQuizResultReq_FieldNumber_PlayerId = 3,
  PB3GetQuizResultReq_FieldNumber_UserType = 4,
  PB3GetQuizResultReq_FieldNumber_CreatorId = 5,
  PB3GetQuizResultReq_FieldNumber_CreatorType = 6,
};

/**
 * 查询答题结果
 **/
@interface PB3GetQuizResultReq : GPBMessage

@property(nonatomic, readwrite) int32_t actId;

@property(nonatomic, readwrite) int32_t relActId;

/** 查询人ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerId;

@property(nonatomic, readwrite) PB3ActivityUserType userType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *creatorId;

@property(nonatomic, readwrite) PB3ActivityUserType creatorType;

@end

/**
 * Fetches the raw value of a @c PB3GetQuizResultReq's @c userType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3GetQuizResultReq_UserType_RawValue(PB3GetQuizResultReq *message);
/**
 * Sets the raw value of an @c PB3GetQuizResultReq's @c userType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3GetQuizResultReq_UserType_RawValue(PB3GetQuizResultReq *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3GetQuizResultReq's @c creatorType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3GetQuizResultReq_CreatorType_RawValue(PB3GetQuizResultReq *message);
/**
 * Sets the raw value of an @c PB3GetQuizResultReq's @c creatorType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3GetQuizResultReq_CreatorType_RawValue(PB3GetQuizResultReq *message, int32_t value);

#pragma mark - PB3GetQuizResultRes

typedef GPB_ENUM(PB3GetQuizResultRes_FieldNumber) {
  PB3GetQuizResultRes_FieldNumber_HasSubmit = 1,
  PB3GetQuizResultRes_FieldNumber_Score = 2,
  PB3GetQuizResultRes_FieldNumber_Creator = 3,
  PB3GetQuizResultRes_FieldNumber_Comment = 4,
};

@interface PB3GetQuizResultRes : GPBMessage

/** 是否答过题 */
@property(nonatomic, readwrite) BOOL hasSubmit;

/** 分数 */
@property(nonatomic, readwrite) int32_t score;

/** 问卷创建者 */
@property(nonatomic, readwrite, strong, null_resettable) PB3ActivityUser *creator;
/** Test to see if @c creator has been set. */
@property(nonatomic, readwrite) BOOL hasCreator;

/** 问卷评语 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *comment;

@end

#pragma mark - PB3GetQuizRankReq

typedef GPB_ENUM(PB3GetQuizRankReq_FieldNumber) {
  PB3GetQuizRankReq_FieldNumber_ActId = 1,
  PB3GetQuizRankReq_FieldNumber_RelActId = 2,
  PB3GetQuizRankReq_FieldNumber_CreatorId = 3,
  PB3GetQuizRankReq_FieldNumber_CreatorType = 4,
  PB3GetQuizRankReq_FieldNumber_Page = 5,
  PB3GetQuizRankReq_FieldNumber_PageSize = 6,
};

/**
 * 问卷排行榜
 **/
@interface PB3GetQuizRankReq : GPBMessage

@property(nonatomic, readwrite) int32_t actId;

@property(nonatomic, readwrite) int32_t relActId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *creatorId;

@property(nonatomic, readwrite) PB3ActivityUserType creatorType;

@property(nonatomic, readwrite) int32_t page;

@property(nonatomic, readwrite) int32_t pageSize;

@end

/**
 * Fetches the raw value of a @c PB3GetQuizRankReq's @c creatorType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3GetQuizRankReq_CreatorType_RawValue(PB3GetQuizRankReq *message);
/**
 * Sets the raw value of an @c PB3GetQuizRankReq's @c creatorType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3GetQuizRankReq_CreatorType_RawValue(PB3GetQuizRankReq *message, int32_t value);

#pragma mark - PB3GetQuizRankRes

typedef GPB_ENUM(PB3GetQuizRankRes_FieldNumber) {
  PB3GetQuizRankRes_FieldNumber_Creator = 1,
  PB3GetQuizRankRes_FieldNumber_RanksArray = 2,
  PB3GetQuizRankRes_FieldNumber_Total = 3,
};

@interface PB3GetQuizRankRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3ActivityUser *creator;
/** Test to see if @c creator has been set. */
@property(nonatomic, readwrite) BOOL hasCreator;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3QuizRankPlayer*> *ranksArray;
/** The number of items in @c ranksArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger ranksArray_Count;

@property(nonatomic, readwrite) int32_t total;

@end

#pragma mark - PB3GetWechatJSSDKSignatureReq

typedef GPB_ENUM(PB3GetWechatJSSDKSignatureReq_FieldNumber) {
  PB3GetWechatJSSDKSignatureReq_FieldNumber_AppId = 1,
  PB3GetWechatJSSDKSignatureReq_FieldNumber_URL = 2,
};

/**
 * 生成微信JSSDK签名
 **/
@interface PB3GetWechatJSSDKSignatureReq : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *appId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

@end

#pragma mark - PB3GetWechatJSSDKSignatureRes

typedef GPB_ENUM(PB3GetWechatJSSDKSignatureRes_FieldNumber) {
  PB3GetWechatJSSDKSignatureRes_FieldNumber_Timestamp = 1,
  PB3GetWechatJSSDKSignatureRes_FieldNumber_NonceStr = 2,
  PB3GetWechatJSSDKSignatureRes_FieldNumber_Signature = 3,
};

@interface PB3GetWechatJSSDKSignatureRes : GPBMessage

/** 生成签名的时间戳 */
@property(nonatomic, readwrite) int64_t timestamp;

/** 生成签名的随机串 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nonceStr;

/** 签名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *signature;

@end

#pragma mark - PB3FindBlindLotteryInfoReq

typedef GPB_ENUM(PB3FindBlindLotteryInfoReq_FieldNumber) {
  PB3FindBlindLotteryInfoReq_FieldNumber_ActId = 1,
  PB3FindBlindLotteryInfoReq_FieldNumber_RelActId = 2,
  PB3FindBlindLotteryInfoReq_FieldNumber_LotteryId = 3,
};

/**
 * 获取盲盒抽奖状态信息
 **/
@interface PB3FindBlindLotteryInfoReq : GPBMessage

/** 活动ID */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动ID */
@property(nonatomic, readwrite) int32_t relActId;

/** 抽奖ID */
@property(nonatomic, readwrite) int32_t lotteryId;

@end

#pragma mark - PB3FindBlindLotteryInfoRes

typedef GPB_ENUM(PB3FindBlindLotteryInfoRes_FieldNumber) {
  PB3FindBlindLotteryInfoRes_FieldNumber_RemainTime = 1,
  PB3FindBlindLotteryInfoRes_FieldNumber_LuckNum = 2,
  PB3FindBlindLotteryInfoRes_FieldNumber_OpenedInfoArray = 3,
  PB3FindBlindLotteryInfoRes_FieldNumber_HaveUnusual = 4,
  PB3FindBlindLotteryInfoRes_FieldNumber_UnusualGiftName = 5,
  PB3FindBlindLotteryInfoRes_FieldNumber_ConfLuckNum = 6,
  PB3FindBlindLotteryInfoRes_FieldNumber_RoomId = 7,
  PB3FindBlindLotteryInfoRes_FieldNumber_RoomName = 8,
  PB3FindBlindLotteryInfoRes_FieldNumber_CantLottery = 9,
};

/**
 * 获取盲盒抽奖状态信息
 **/
@interface PB3FindBlindLotteryInfoRes : GPBMessage

/** 本轮剩余时间 */
@property(nonatomic, readwrite) int32_t remainTime;

/** 幸运值 */
@property(nonatomic, readwrite) int32_t luckNum;

/** 盲盒开启信息 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3BlindAwardInfo*> *openedInfoArray;
/** The number of items in @c openedInfoArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger openedInfoArray_Count;

/** 是否存在稀有 */
@property(nonatomic, readwrite) int32_t haveUnusual;

/** 稀有奖励名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *unusualGiftName;

/** 配置幸运值 */
@property(nonatomic, readwrite) int32_t confLuckNum;

/** 抽奖房间ID */
@property(nonatomic, readwrite) int64_t roomId;

/** 抽奖房间名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomName;

/** 是否有资格参与活动 0有资格 1没资格 */
@property(nonatomic, readwrite) int32_t cantLottery;

@end

#pragma mark - PB3DrawBlindLotteryReq

typedef GPB_ENUM(PB3DrawBlindLotteryReq_FieldNumber) {
  PB3DrawBlindLotteryReq_FieldNumber_ActId = 1,
  PB3DrawBlindLotteryReq_FieldNumber_RelActId = 2,
  PB3DrawBlindLotteryReq_FieldNumber_LotteryId = 3,
  PB3DrawBlindLotteryReq_FieldNumber_DrawTimes = 4,
};

/**
 * 请求开启盲盒
 **/
@interface PB3DrawBlindLotteryReq : GPBMessage

/** 活动ID */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动ID */
@property(nonatomic, readwrite) int32_t relActId;

/** 抽奖ID */
@property(nonatomic, readwrite) int32_t lotteryId;

/** 盲盒开启次数 */
@property(nonatomic, readwrite) int32_t drawTimes;

@end

#pragma mark - PB3DrawBlindLotteryRes

typedef GPB_ENUM(PB3DrawBlindLotteryRes_FieldNumber) {
  PB3DrawBlindLotteryRes_FieldNumber_RetAwardArray = 1,
};

/**
 * 请求开启盲盒返回
 **/
@interface PB3DrawBlindLotteryRes : GPBMessage

/** 盲盒奖励返回 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ActivityAwardInfo*> *retAwardArray;
/** The number of items in @c retAwardArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger retAwardArray_Count;

@end

#pragma mark - PB3ListBlindLotteryRecordReq

typedef GPB_ENUM(PB3ListBlindLotteryRecordReq_FieldNumber) {
  PB3ListBlindLotteryRecordReq_FieldNumber_ActId = 1,
  PB3ListBlindLotteryRecordReq_FieldNumber_RelId = 2,
  PB3ListBlindLotteryRecordReq_FieldNumber_WeightArray = 3,
  PB3ListBlindLotteryRecordReq_FieldNumber_Page = 4,
  PB3ListBlindLotteryRecordReq_FieldNumber_PageSize = 5,
  PB3ListBlindLotteryRecordReq_FieldNumber_ConfId = 6,
  PB3ListBlindLotteryRecordReq_FieldNumber_PlayerId = 7,
};

/**
 * //抽奖记录
 **/
@interface PB3ListBlindLotteryRecordReq : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relId;

/** 礼物类型 1-小奖 2-中奖 3- 大奖 4稀有 0-所有 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *weightArray;
/** The number of items in @c weightArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger weightArray_Count;

/** 分页 */
@property(nonatomic, readwrite) int32_t page;

/** 分页数  默认20 */
@property(nonatomic, readwrite) int32_t pageSize;

/** 抽奖配置id */
@property(nonatomic, readwrite) int32_t confId;

/** 用户Id */
@property(nonatomic, readwrite) int64_t playerId;

@end

#pragma mark - PB3ListBlindLotteryRecordRes

typedef GPB_ENUM(PB3ListBlindLotteryRecordRes_FieldNumber) {
  PB3ListBlindLotteryRecordRes_FieldNumber_ListArray = 1,
  PB3ListBlindLotteryRecordRes_FieldNumber_Total = 2,
};

@interface PB3ListBlindLotteryRecordRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3LotteryRecord*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

/** 总数 */
@property(nonatomic, readwrite) int32_t total;

@end

#pragma mark - PB3FindBlindLotteryRoomListReq

typedef GPB_ENUM(PB3FindBlindLotteryRoomListReq_FieldNumber) {
  PB3FindBlindLotteryRoomListReq_FieldNumber_ActId = 1,
  PB3FindBlindLotteryRoomListReq_FieldNumber_RelId = 2,
  PB3FindBlindLotteryRoomListReq_FieldNumber_ConfLotteryId = 3,
  PB3FindBlindLotteryRoomListReq_FieldNumber_Page = 4,
  PB3FindBlindLotteryRoomListReq_FieldNumber_PageSize = 5,
};

@interface PB3FindBlindLotteryRoomListReq : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t relId;

/** 抽奖id */
@property(nonatomic, readwrite) int32_t confLotteryId;

@property(nonatomic, readwrite) int32_t page;

@property(nonatomic, readwrite) int32_t pageSize;

@end

#pragma mark - PB3FindBlindLotteryRoomListRes

typedef GPB_ENUM(PB3FindBlindLotteryRoomListRes_FieldNumber) {
  PB3FindBlindLotteryRoomListRes_FieldNumber_RoomListArray = 1,
};

@interface PB3FindBlindLotteryRoomListRes : GPBMessage

/** 幸运值 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3BlindRoomInfo*> *roomListArray;
/** The number of items in @c roomListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger roomListArray_Count;

@end

#pragma mark - PB3FindCustomAwardConfReq

typedef GPB_ENUM(PB3FindCustomAwardConfReq_FieldNumber) {
  PB3FindCustomAwardConfReq_FieldNumber_AwardIdsArray = 1,
};

@interface PB3FindCustomAwardConfReq : GPBMessage

/** 奖励ID */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *awardIdsArray;
/** The number of items in @c awardIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger awardIdsArray_Count;

@end

#pragma mark - PB3FindCustomAwardConfRes

typedef GPB_ENUM(PB3FindCustomAwardConfRes_FieldNumber) {
  PB3FindCustomAwardConfRes_FieldNumber_ConfListArray = 1,
};

@interface PB3FindCustomAwardConfRes : GPBMessage

/** 奖励数据 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ConfNewAwardCustomAward*> *confListArray;
/** The number of items in @c confListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger confListArray_Count;

@end

#pragma mark - PB3StudentSort

typedef GPB_ENUM(PB3StudentSort_FieldNumber) {
  PB3StudentSort_FieldNumber_Sort = 1,
  PB3StudentSort_FieldNumber_PlayerId = 2,
  PB3StudentSort_FieldNumber_PlayerName = 3,
  PB3StudentSort_FieldNumber_PlayerIcon = 4,
  PB3StudentSort_FieldNumber_Point = 5,
};

/**
 * 排行榜通用返回结果
 **/
@interface PB3StudentSort : GPBMessage

@property(nonatomic, readwrite) int32_t sort;

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 人员名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerName;

/** 人员icon */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerIcon;

/** 贡献的积分 */
@property(nonatomic, readwrite) int64_t point;

@end

#pragma mark - PB3FindTeacherStudentGiftSortReq

typedef GPB_ENUM(PB3FindTeacherStudentGiftSortReq_FieldNumber) {
  PB3FindTeacherStudentGiftSortReq_FieldNumber_RelActId = 1,
  PB3FindTeacherStudentGiftSortReq_FieldNumber_TeacherId = 2,
  PB3FindTeacherStudentGiftSortReq_FieldNumber_Size = 3,
};

/**
 * 获取师徒榜的徒弟收礼排行
 **/
@interface PB3FindTeacherStudentGiftSortReq : GPBMessage

@property(nonatomic, readwrite) int32_t relActId;

@property(nonatomic, readwrite) int64_t teacherId;

/** 最大值为6 */
@property(nonatomic, readwrite) int32_t size;

@end

#pragma mark - PB3FindTeacherStudentGiftSortRes

typedef GPB_ENUM(PB3FindTeacherStudentGiftSortRes_FieldNumber) {
  PB3FindTeacherStudentGiftSortRes_FieldNumber_StudentsArray = 1,
};

@interface PB3FindTeacherStudentGiftSortRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3StudentSort*> *studentsArray;
/** The number of items in @c studentsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger studentsArray_Count;

@end

#pragma mark - PB3IntegralReq

typedef GPB_ENUM(PB3IntegralReq_FieldNumber) {
  PB3IntegralReq_FieldNumber_Lang = 1,
};

@interface PB3IntegralReq : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *lang;

@end

#pragma mark - PB3IntegralRes

typedef GPB_ENUM(PB3IntegralRes_FieldNumber) {
  PB3IntegralRes_FieldNumber_Integral = 1,
};

@interface PB3IntegralRes : GPBMessage

/** 积分 */
@property(nonatomic, readwrite) int32_t integral;

@end

#pragma mark - PB3GetIntegralBonusListReq

typedef GPB_ENUM(PB3GetIntegralBonusListReq_FieldNumber) {
  PB3GetIntegralBonusListReq_FieldNumber_Lang = 1,
};

@interface PB3GetIntegralBonusListReq : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *lang;

@end

#pragma mark - PB3IntegralBonusItem

typedef GPB_ENUM(PB3IntegralBonusItem_FieldNumber) {
  PB3IntegralBonusItem_FieldNumber_Icon = 1,
  PB3IntegralBonusItem_FieldNumber_BonusText = 2,
  PB3IntegralBonusItem_FieldNumber_ConditionText = 3,
  PB3IntegralBonusItem_FieldNumber_Status = 4,
  PB3IntegralBonusItem_FieldNumber_Id_p = 5,
  PB3IntegralBonusItem_FieldNumber_Condition = 6,
};

@interface PB3IntegralBonusItem : GPBMessage

/** 图标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 奖励说明 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bonusText;

/** 条件说明 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *conditionText;

/** 领取状态 true 代表已领取 */
@property(nonatomic, readwrite) BOOL status;

@property(nonatomic, readwrite) int32_t id_p;

@property(nonatomic, readwrite) int32_t condition;

@end

#pragma mark - PB3GetIntegralBonusListRes

typedef GPB_ENUM(PB3GetIntegralBonusListRes_FieldNumber) {
  PB3GetIntegralBonusListRes_FieldNumber_ListArray = 1,
};

@interface PB3GetIntegralBonusListRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3IntegralBonusItem*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3GetIntegralMissionListReq

typedef GPB_ENUM(PB3GetIntegralMissionListReq_FieldNumber) {
  PB3GetIntegralMissionListReq_FieldNumber_Lang = 1,
};

@interface PB3GetIntegralMissionListReq : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *lang;

@end

#pragma mark - PB3IntegralMissionItem

typedef GPB_ENUM(PB3IntegralMissionItem_FieldNumber) {
  PB3IntegralMissionItem_FieldNumber_Icon = 1,
  PB3IntegralMissionItem_FieldNumber_BonusText = 2,
  PB3IntegralMissionItem_FieldNumber_MissionText = 3,
  PB3IntegralMissionItem_FieldNumber_Total = 4,
  PB3IntegralMissionItem_FieldNumber_Progress = 5,
  PB3IntegralMissionItem_FieldNumber_Status = 6,
  PB3IntegralMissionItem_FieldNumber_Id_p = 7,
};

@interface PB3IntegralMissionItem : GPBMessage

/** 任务图标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 奖励说明 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bonusText;

/** 任务说明 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *missionText;

/** 总数 */
@property(nonatomic, readwrite) int32_t total;

/** 当前进度，如果当前进度大于等于总数，则达成领取条件 */
@property(nonatomic, readwrite) int32_t progress;

/** 任务状态，true 代表已领取 */
@property(nonatomic, readwrite) BOOL status;

/** 任务id */
@property(nonatomic, readwrite) int32_t id_p;

@end

#pragma mark - PB3GetIntegralMissionListRes

typedef GPB_ENUM(PB3GetIntegralMissionListRes_FieldNumber) {
  PB3GetIntegralMissionListRes_FieldNumber_ListArray = 1,
};

@interface PB3GetIntegralMissionListRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3IntegralMissionItem*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3ReceiveIntegralMissionBonusReq

typedef GPB_ENUM(PB3ReceiveIntegralMissionBonusReq_FieldNumber) {
  PB3ReceiveIntegralMissionBonusReq_FieldNumber_MissionId = 1,
  PB3ReceiveIntegralMissionBonusReq_FieldNumber_Lang = 2,
};

@interface PB3ReceiveIntegralMissionBonusReq : GPBMessage

@property(nonatomic, readwrite) int32_t missionId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *lang;

@end

#pragma mark - PB3ReceiveIntegralMissionBonusRes

typedef GPB_ENUM(PB3ReceiveIntegralMissionBonusRes_FieldNumber) {
  PB3ReceiveIntegralMissionBonusRes_FieldNumber_Integral = 1,
};

@interface PB3ReceiveIntegralMissionBonusRes : GPBMessage

/** 返回累计积分 */
@property(nonatomic, readwrite) int32_t integral;

@end

#pragma mark - PB3ReceiveIntegralBonusReq

typedef GPB_ENUM(PB3ReceiveIntegralBonusReq_FieldNumber) {
  PB3ReceiveIntegralBonusReq_FieldNumber_BonusId = 1,
  PB3ReceiveIntegralBonusReq_FieldNumber_Lang = 2,
};

@interface PB3ReceiveIntegralBonusReq : GPBMessage

/** 获取奖励id */
@property(nonatomic, readwrite) int32_t bonusId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *lang;

@end

#pragma mark - PB3ReceiveIntegralBonusRes

@interface PB3ReceiveIntegralBonusRes : GPBMessage

@end

#pragma mark - PB3FetchUserQuizQuestionsReq

typedef GPB_ENUM(PB3FetchUserQuizQuestionsReq_FieldNumber) {
  PB3FetchUserQuizQuestionsReq_FieldNumber_ActId = 1,
  PB3FetchUserQuizQuestionsReq_FieldNumber_RelActId = 2,
};

@interface PB3FetchUserQuizQuestionsReq : GPBMessage

@property(nonatomic, readwrite) int32_t actId;

@property(nonatomic, readwrite) int32_t relActId;

@end

#pragma mark - PB3FetchUserQuizQuestionsRes

typedef GPB_ENUM(PB3FetchUserQuizQuestionsRes_FieldNumber) {
  PB3FetchUserQuizQuestionsRes_FieldNumber_ListArray = 1,
  PB3FetchUserQuizQuestionsRes_FieldNumber_Done = 2,
  PB3FetchUserQuizQuestionsRes_FieldNumber_BankName = 3,
  PB3FetchUserQuizQuestionsRes_FieldNumber_BankRemark = 4,
  PB3FetchUserQuizQuestionsRes_FieldNumber_TypeListArray = 5,
};

@interface PB3FetchUserQuizQuestionsRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3UserQuizQuestion*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

/** 是否已提交 */
@property(nonatomic, readwrite) BOOL done;

/** 题库名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bankName;

/** 题库描述 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bankRemark;

/** 题型多语言 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3QuizTypeData*> *typeListArray;
/** The number of items in @c typeListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger typeListArray_Count;

@end

#pragma mark - PB3UserQuizQuestion

typedef GPB_ENUM(PB3UserQuizQuestion_FieldNumber) {
  PB3UserQuizQuestion_FieldNumber_QuesId = 1,
  PB3UserQuizQuestion_FieldNumber_QuizType = 2,
  PB3UserQuizQuestion_FieldNumber_Title = 3,
  PB3UserQuizQuestion_FieldNumber_OptionsArray = 4,
  PB3UserQuizQuestion_FieldNumber_MaxSelect = 5,
  PB3UserQuizQuestion_FieldNumber_MinSelect = 6,
  PB3UserQuizQuestion_FieldNumber_HasOther = 7,
};

@interface PB3UserQuizQuestion : GPBMessage

/** 问题ID */
@property(nonatomic, readwrite) int32_t quesId;

/** 问题类型 */
@property(nonatomic, readwrite) PB3QuizType quizType;

/** 问题内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** 问题选项信息 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3UserQuizOption*> *optionsArray;
/** The number of items in @c optionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger optionsArray_Count;

/** 多选数量限制 */
@property(nonatomic, readwrite) int32_t maxSelect;

/** 多选数量限制 */
@property(nonatomic, readwrite) int32_t minSelect;

/** 是否有其他选项 */
@property(nonatomic, readwrite) BOOL hasOther;

@end

/**
 * Fetches the raw value of a @c PB3UserQuizQuestion's @c quizType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3UserQuizQuestion_QuizType_RawValue(PB3UserQuizQuestion *message);
/**
 * Sets the raw value of an @c PB3UserQuizQuestion's @c quizType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3UserQuizQuestion_QuizType_RawValue(PB3UserQuizQuestion *message, int32_t value);

#pragma mark - PB3QuizTypeData

typedef GPB_ENUM(PB3QuizTypeData_FieldNumber) {
  PB3QuizTypeData_FieldNumber_QuizType = 1,
  PB3QuizTypeData_FieldNumber_TypeName = 2,
};

@interface PB3QuizTypeData : GPBMessage

/** 问题类型 */
@property(nonatomic, readwrite) PB3QuizType quizType;

/** 类型名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *typeName;

@end

/**
 * Fetches the raw value of a @c PB3QuizTypeData's @c quizType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3QuizTypeData_QuizType_RawValue(PB3QuizTypeData *message);
/**
 * Sets the raw value of an @c PB3QuizTypeData's @c quizType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3QuizTypeData_QuizType_RawValue(PB3QuizTypeData *message, int32_t value);

#pragma mark - PB3UserQuizOption

typedef GPB_ENUM(PB3UserQuizOption_FieldNumber) {
  PB3UserQuizOption_FieldNumber_OptId = 1,
  PB3UserQuizOption_FieldNumber_OptVal = 2,
  PB3UserQuizOption_FieldNumber_OptType = 3,
};

@interface PB3UserQuizOption : GPBMessage

/** 选项ID */
@property(nonatomic, readwrite) int32_t optId;

/** 选项内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *optVal;

/** 选项类型 */
@property(nonatomic, readwrite) PB3OptType optType;

@end

/**
 * Fetches the raw value of a @c PB3UserQuizOption's @c optType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3UserQuizOption_OptType_RawValue(PB3UserQuizOption *message);
/**
 * Sets the raw value of an @c PB3UserQuizOption's @c optType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3UserQuizOption_OptType_RawValue(PB3UserQuizOption *message, int32_t value);

#pragma mark - PB3SubmitUserQuizReq

typedef GPB_ENUM(PB3SubmitUserQuizReq_FieldNumber) {
  PB3SubmitUserQuizReq_FieldNumber_ActId = 1,
  PB3SubmitUserQuizReq_FieldNumber_RelActId = 2,
  PB3SubmitUserQuizReq_FieldNumber_ListArray = 3,
};

@interface PB3SubmitUserQuizReq : GPBMessage

@property(nonatomic, readwrite) int32_t actId;

@property(nonatomic, readwrite) int32_t relActId;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3UserQuizAns*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3SubmitUserQuizRes

@interface PB3SubmitUserQuizRes : GPBMessage

@end

#pragma mark - PB3ScratchOffLotteryStatusReq

typedef GPB_ENUM(PB3ScratchOffLotteryStatusReq_FieldNumber) {
  PB3ScratchOffLotteryStatusReq_FieldNumber_ActId = 1,
  PB3ScratchOffLotteryStatusReq_FieldNumber_ActRelId = 2,
};

@interface PB3ScratchOffLotteryStatusReq : GPBMessage

/** 主活动id */
@property(nonatomic, readwrite) uint32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) uint32_t actRelId;

@end

#pragma mark - PB3ScratchOffLotteryStatusRes

typedef GPB_ENUM(PB3ScratchOffLotteryStatusRes_FieldNumber) {
  PB3ScratchOffLotteryStatusRes_FieldNumber_TotalWinGold = 1,
};

@interface PB3ScratchOffLotteryStatusRes : GPBMessage

/** 累计胜利金币 */
@property(nonatomic, readwrite) uint64_t totalWinGold;

@end

#pragma mark - PB3PartitionRecordsReq

typedef GPB_ENUM(PB3PartitionRecordsReq_FieldNumber) {
  PB3PartitionRecordsReq_FieldNumber_ActId = 1,
  PB3PartitionRecordsReq_FieldNumber_ActRelId = 2,
  PB3PartitionRecordsReq_FieldNumber_Page = 3,
  PB3PartitionRecordsReq_FieldNumber_PageSize = 4,
  PB3PartitionRecordsReq_FieldNumber_IsAll = 5,
};

@interface PB3PartitionRecordsReq : GPBMessage

/** 主活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t actRelId;

@property(nonatomic, readwrite) int32_t page;

@property(nonatomic, readwrite) int32_t pageSize;

/** 所有人 */
@property(nonatomic, readwrite) BOOL isAll;

@end

#pragma mark - PB3PartitionRecordsRes

typedef GPB_ENUM(PB3PartitionRecordsRes_FieldNumber) {
  PB3PartitionRecordsRes_FieldNumber_ListArray = 1,
  PB3PartitionRecordsRes_FieldNumber_Total = 2,
};

@interface PB3PartitionRecordsRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3PartitionData*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@property(nonatomic, readwrite) int32_t total;

@end

#pragma mark - PB3SlotMachineBetConfigItem

typedef GPB_ENUM(PB3SlotMachineBetConfigItem_FieldNumber) {
  PB3SlotMachineBetConfigItem_FieldNumber_BetId = 1,
  PB3SlotMachineBetConfigItem_FieldNumber_BetImg = 2,
  PB3SlotMachineBetConfigItem_FieldNumber_BetName = 3,
  PB3SlotMachineBetConfigItem_FieldNumber_BetMultiples = 4,
  PB3SlotMachineBetConfigItem_FieldNumber_Description_p = 5,
  PB3SlotMachineBetConfigItem_FieldNumber_BetMaxNum = 6,
};

/**
 * SlotMachineBetConfigItem 投注配置项
 **/
@interface PB3SlotMachineBetConfigItem : GPBMessage

/** 投注配置id */
@property(nonatomic, readwrite) uint32_t betId;

/** 图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *betImg;

/** 名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *betName;

/** 倍数 */
@property(nonatomic, readwrite) float betMultiples;

/** 描述 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

/** 单轮最大下注次数 */
@property(nonatomic, readwrite) uint32_t betMaxNum;

@end

#pragma mark - PB3SlotMachinePriceItem

typedef GPB_ENUM(PB3SlotMachinePriceItem_FieldNumber) {
  PB3SlotMachinePriceItem_FieldNumber_PriceId = 1,
  PB3SlotMachinePriceItem_FieldNumber_PriceType = 2,
  PB3SlotMachinePriceItem_FieldNumber_PriceNum = 3,
  PB3SlotMachinePriceItem_FieldNumber_PriceImg = 4,
  PB3SlotMachinePriceItem_FieldNumber_PriceInvalidImg = 5,
  PB3SlotMachinePriceItem_FieldNumber_GoodsId = 6,
};

/**
 * SlotMachinePriceItem 价格配置项
 **/
@interface PB3SlotMachinePriceItem : GPBMessage

/** 价格配置id */
@property(nonatomic, readwrite) uint32_t priceId;

/** 价格类型 */
@property(nonatomic, readwrite) PB3DeiceGridRewardType priceType;

/** 价格数 */
@property(nonatomic, readwrite) uint64_t priceNum;

/** 价格图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *priceImg;

/** 价格无效图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *priceInvalidImg;

/** 物品id */
@property(nonatomic, readwrite) uint32_t goodsId;

@end

/**
 * Fetches the raw value of a @c PB3SlotMachinePriceItem's @c priceType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SlotMachinePriceItem_PriceType_RawValue(PB3SlotMachinePriceItem *message);
/**
 * Sets the raw value of an @c PB3SlotMachinePriceItem's @c priceType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SlotMachinePriceItem_PriceType_RawValue(PB3SlotMachinePriceItem *message, int32_t value);

#pragma mark - PB3SlotMachineBetItem

typedef GPB_ENUM(PB3SlotMachineBetItem_FieldNumber) {
  PB3SlotMachineBetItem_FieldNumber_BetId = 1,
  PB3SlotMachineBetItem_FieldNumber_BetNum = 2,
  PB3SlotMachineBetItem_FieldNumber_BetGold = 3,
};

@interface PB3SlotMachineBetItem : GPBMessage

/** 投注配置id */
@property(nonatomic, readwrite) uint32_t betId;

/** 投注次数 */
@property(nonatomic, readwrite) uint32_t betNum;

/** 投注金额数据 */
@property(nonatomic, readwrite) uint64_t betGold;

@end

#pragma mark - PB3SlotMachineDataReq

typedef GPB_ENUM(PB3SlotMachineDataReq_FieldNumber) {
  PB3SlotMachineDataReq_FieldNumber_ActId = 1,
  PB3SlotMachineDataReq_FieldNumber_ActRelId = 2,
};

@interface PB3SlotMachineDataReq : GPBMessage

/** 主活动id */
@property(nonatomic, readwrite) uint32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) uint32_t actRelId;

@end

#pragma mark - PB3SlotMachineDataRes

typedef GPB_ENUM(PB3SlotMachineDataRes_FieldNumber) {
  PB3SlotMachineDataRes_FieldNumber_RoundId = 1,
  PB3SlotMachineDataRes_FieldNumber_CountDown = 2,
  PB3SlotMachineDataRes_FieldNumber_Status = 3,
  PB3SlotMachineDataRes_FieldNumber_BetConfigDataArray = 4,
  PB3SlotMachineDataRes_FieldNumber_PriceDataArray = 5,
  PB3SlotMachineDataRes_FieldNumber_BetData = 6,
  PB3SlotMachineDataRes_FieldNumber_RoundTime = 7,
};

@interface PB3SlotMachineDataRes : GPBMessage

/** 当前轮次id */
@property(nonatomic, readwrite) uint64_t roundId;

/** 剩余时间(倒计时. 单位s) */
@property(nonatomic, readwrite) uint32_t countDown;

/** 状态 */
@property(nonatomic, readwrite) PB3BetStatusType status;

/** 投注数据 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SlotMachineBetConfigItem*> *betConfigDataArray;
/** The number of items in @c betConfigDataArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger betConfigDataArray_Count;

/** 价格数据 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SlotMachinePriceItem*> *priceDataArray;
/** The number of items in @c priceDataArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger priceDataArray_Count;

/** 已投注数据(只有`status`= BetStatusTypeBet || `status` = BetStatusTypeWaitResult, 并且已经下注了, 才会有数据) */
@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32ObjectDictionary<PB3SlotMachineBetItem*> *betData;
/** The number of items in @c betData without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger betData_Count;

/** 轮次时间 */
@property(nonatomic, readwrite) int64_t roundTime;

@end

/**
 * Fetches the raw value of a @c PB3SlotMachineDataRes's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SlotMachineDataRes_Status_RawValue(PB3SlotMachineDataRes *message);
/**
 * Sets the raw value of an @c PB3SlotMachineDataRes's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SlotMachineDataRes_Status_RawValue(PB3SlotMachineDataRes *message, int32_t value);

#pragma mark - PB3SlotMachineBetPriceItem

typedef GPB_ENUM(PB3SlotMachineBetPriceItem_FieldNumber) {
  PB3SlotMachineBetPriceItem_FieldNumber_PriceData = 1,
};

@interface PB3SlotMachineBetPriceItem : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32UInt32Dictionary *priceData;
/** The number of items in @c priceData without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger priceData_Count;

@end

#pragma mark - PB3SlotMachineOpenRecordItem

typedef GPB_ENUM(PB3SlotMachineOpenRecordItem_FieldNumber) {
  PB3SlotMachineOpenRecordItem_FieldNumber_BetData = 1,
};

@interface PB3SlotMachineOpenRecordItem : GPBMessage

/** 开奖投注数据 */
@property(nonatomic, readwrite, strong, null_resettable) PB3SlotMachineBetConfigItem *betData;
/** Test to see if @c betData has been set. */
@property(nonatomic, readwrite) BOOL hasBetData;

@end

#pragma mark - PB3SlotMachineBetRecordItem

typedef GPB_ENUM(PB3SlotMachineBetRecordItem_FieldNumber) {
  PB3SlotMachineBetRecordItem_FieldNumber_RoundId = 1,
  PB3SlotMachineBetRecordItem_FieldNumber_BetTime = 2,
  PB3SlotMachineBetRecordItem_FieldNumber_ChoseBetListArray = 3,
  PB3SlotMachineBetRecordItem_FieldNumber_ResultBet = 4,
  PB3SlotMachineBetRecordItem_FieldNumber_GetNum = 5,
  PB3SlotMachineBetRecordItem_FieldNumber_SpendNum = 6,
};

@interface PB3SlotMachineBetRecordItem : GPBMessage

@property(nonatomic, readwrite) uint64_t roundId;

@property(nonatomic, readwrite) int64_t betTime;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SlotMachineBetConfigItem*> *choseBetListArray;
/** The number of items in @c choseBetListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger choseBetListArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) PB3SlotMachineBetConfigItem *resultBet;
/** Test to see if @c resultBet has been set. */
@property(nonatomic, readwrite) BOOL hasResultBet;

@property(nonatomic, readwrite) uint64_t getNum;

@property(nonatomic, readwrite) uint64_t spendNum;

@end

#pragma mark - PB3SlotMachineBetReq

typedef GPB_ENUM(PB3SlotMachineBetReq_FieldNumber) {
  PB3SlotMachineBetReq_FieldNumber_ActId = 1,
  PB3SlotMachineBetReq_FieldNumber_ActRelId = 2,
  PB3SlotMachineBetReq_FieldNumber_BetLit = 3,
};

@interface PB3SlotMachineBetReq : GPBMessage

/** 主活动id */
@property(nonatomic, readwrite) uint32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) uint32_t actRelId;

/** 投注信息 */
@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32ObjectDictionary<PB3SlotMachineBetPriceItem*> *betLit;
/** The number of items in @c betLit without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger betLit_Count;

@end

#pragma mark - PB3SlotMachineBetRes

@interface PB3SlotMachineBetRes : GPBMessage

@end

#pragma mark - PB3SlotMachineOpenRecordsReq

typedef GPB_ENUM(PB3SlotMachineOpenRecordsReq_FieldNumber) {
  PB3SlotMachineOpenRecordsReq_FieldNumber_ActId = 1,
  PB3SlotMachineOpenRecordsReq_FieldNumber_ActRelId = 2,
  PB3SlotMachineOpenRecordsReq_FieldNumber_Page = 3,
  PB3SlotMachineOpenRecordsReq_FieldNumber_PageSize = 4,
};

@interface PB3SlotMachineOpenRecordsReq : GPBMessage

/** 主活动id */
@property(nonatomic, readwrite) uint32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) uint32_t actRelId;

@property(nonatomic, readwrite) uint32_t page;

@property(nonatomic, readwrite) uint32_t pageSize;

@end

#pragma mark - PB3SlotMachineOpenRecordsRes

typedef GPB_ENUM(PB3SlotMachineOpenRecordsRes_FieldNumber) {
  PB3SlotMachineOpenRecordsRes_FieldNumber_ListArray = 1,
  PB3SlotMachineOpenRecordsRes_FieldNumber_Total = 2,
};

@interface PB3SlotMachineOpenRecordsRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SlotMachineOpenRecordItem*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@property(nonatomic, readwrite) uint32_t total;

@end

#pragma mark - PB3SlotMachineBetRecordsReq

typedef GPB_ENUM(PB3SlotMachineBetRecordsReq_FieldNumber) {
  PB3SlotMachineBetRecordsReq_FieldNumber_ActId = 1,
  PB3SlotMachineBetRecordsReq_FieldNumber_ActRelId = 2,
  PB3SlotMachineBetRecordsReq_FieldNumber_Page = 3,
  PB3SlotMachineBetRecordsReq_FieldNumber_PageSize = 4,
  PB3SlotMachineBetRecordsReq_FieldNumber_RoundId = 5,
};

@interface PB3SlotMachineBetRecordsReq : GPBMessage

/** 主活动id */
@property(nonatomic, readwrite) uint32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) uint32_t actRelId;

@property(nonatomic, readwrite) uint32_t page;

@property(nonatomic, readwrite) uint32_t pageSize;

@property(nonatomic, readwrite) uint64_t roundId;

@end

#pragma mark - PB3SlotMachineBetRecordsRes

typedef GPB_ENUM(PB3SlotMachineBetRecordsRes_FieldNumber) {
  PB3SlotMachineBetRecordsRes_FieldNumber_ListArray = 1,
  PB3SlotMachineBetRecordsRes_FieldNumber_Total = 2,
};

@interface PB3SlotMachineBetRecordsRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SlotMachineBetRecordItem*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@property(nonatomic, readwrite) uint32_t total;

@end

#pragma mark - PB3UserQuizAns

typedef GPB_ENUM(PB3UserQuizAns_FieldNumber) {
  PB3UserQuizAns_FieldNumber_QuesId = 1,
  PB3UserQuizAns_FieldNumber_AnswerListArray = 2,
};

@interface PB3UserQuizAns : GPBMessage

/** 问题ID */
@property(nonatomic, readwrite) int32_t quesId;

/** 选项ID | 内容 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *answerListArray;
/** The number of items in @c answerListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger answerListArray_Count;

@end

#pragma mark - PB3LuckFunGoodsListReq

typedef GPB_ENUM(PB3LuckFunGoodsListReq_FieldNumber) {
  PB3LuckFunGoodsListReq_FieldNumber_ActId = 1,
  PB3LuckFunGoodsListReq_FieldNumber_ActRelId = 2,
  PB3LuckFunGoodsListReq_FieldNumber_FunType = 3,
};

@interface PB3LuckFunGoodsListReq : GPBMessage

/** 主活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t actRelId;

/** 列表类型 */
@property(nonatomic, readwrite) PB3LuckFunType funType;

@end

/**
 * Fetches the raw value of a @c PB3LuckFunGoodsListReq's @c funType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3LuckFunGoodsListReq_FunType_RawValue(PB3LuckFunGoodsListReq *message);
/**
 * Sets the raw value of an @c PB3LuckFunGoodsListReq's @c funType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3LuckFunGoodsListReq_FunType_RawValue(PB3LuckFunGoodsListReq *message, int32_t value);

#pragma mark - PB3LuckFunGoods

typedef GPB_ENUM(PB3LuckFunGoods_FieldNumber) {
  PB3LuckFunGoods_FieldNumber_Name = 1,
  PB3LuckFunGoods_FieldNumber_ResidualNum = 2,
  PB3LuckFunGoods_FieldNumber_CurReachNum = 3,
  PB3LuckFunGoods_FieldNumber_TotalReachNum = 4,
  PB3LuckFunGoods_FieldNumber_ParticipationNum = 5,
  PB3LuckFunGoods_FieldNumber_GoodsImg = 6,
  PB3LuckFunGoods_FieldNumber_GoodsId = 7,
  PB3LuckFunGoods_FieldNumber_RoundId = 8,
  PB3LuckFunGoods_FieldNumber_StoreId = 9,
  PB3LuckFunGoods_FieldNumber_FunType = 10,
  PB3LuckFunGoods_FieldNumber_RewardType = 11,
  PB3LuckFunGoods_FieldNumber_Weight = 12,
  PB3LuckFunGoods_FieldNumber_Gold = 13,
  PB3LuckFunGoods_FieldNumber_IsShow = 14,
  PB3LuckFunGoods_FieldNumber_ZoneType = 15,
  PB3LuckFunGoods_FieldNumber_WealthLevel = 16,
  PB3LuckFunGoods_FieldNumber_TimesLimit = 17,
};

@interface PB3LuckFunGoods : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 剩余库存数量   当为0，则代表已夺完 */
@property(nonatomic, readwrite) int32_t residualNum;

/** 当前达成数量 */
@property(nonatomic, readwrite) int64_t curReachNum;

/** 总需要达成数量 */
@property(nonatomic, readwrite) int64_t totalReachNum;

/** 参与数量 */
@property(nonatomic, readwrite) int64_t participationNum;

@property(nonatomic, readwrite, copy, null_resettable) NSString *goodsImg;

@property(nonatomic, readwrite) int32_t goodsId;

@property(nonatomic, readwrite) int32_t roundId;

/** 商城商品id */
@property(nonatomic, readwrite) int32_t storeId;

/** 列表类型 */
@property(nonatomic, readwrite) PB3LuckFunType funType;

/** 奖励类型 */
@property(nonatomic, readwrite) PB3DeiceGridRewardType rewardType;

/** 权重 */
@property(nonatomic, readwrite) int32_t weight;

/** 价值 */
@property(nonatomic, readwrite) uint64_t gold;

/** 是否显示 */
@property(nonatomic, readwrite) BOOL isShow;

/** 专区 */
@property(nonatomic, readwrite) PB3LuckFunZoneType zoneType;

/** 财富等级 */
@property(nonatomic, readwrite) int64_t wealthLevel;

/** 次数限制 */
@property(nonatomic, readwrite) int64_t timesLimit;

@end

/**
 * Fetches the raw value of a @c PB3LuckFunGoods's @c funType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3LuckFunGoods_FunType_RawValue(PB3LuckFunGoods *message);
/**
 * Sets the raw value of an @c PB3LuckFunGoods's @c funType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3LuckFunGoods_FunType_RawValue(PB3LuckFunGoods *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3LuckFunGoods's @c rewardType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3LuckFunGoods_RewardType_RawValue(PB3LuckFunGoods *message);
/**
 * Sets the raw value of an @c PB3LuckFunGoods's @c rewardType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3LuckFunGoods_RewardType_RawValue(PB3LuckFunGoods *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3LuckFunGoods's @c zoneType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3LuckFunGoods_ZoneType_RawValue(PB3LuckFunGoods *message);
/**
 * Sets the raw value of an @c PB3LuckFunGoods's @c zoneType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3LuckFunGoods_ZoneType_RawValue(PB3LuckFunGoods *message, int32_t value);

#pragma mark - PB3LuckFunGoodsListRes

typedef GPB_ENUM(PB3LuckFunGoodsListRes_FieldNumber) {
  PB3LuckFunGoodsListRes_FieldNumber_ListArray = 1,
  PB3LuckFunGoodsListRes_FieldNumber_WinListArray = 2,
};

@interface PB3LuckFunGoodsListRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3LuckFunGoods*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

/** 实物中奖列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3LuckFunWinGoodsInfoData*> *winListArray;
/** The number of items in @c winListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger winListArray_Count;

@end

#pragma mark - PB3LuckFunSnatchTreasureReq

typedef GPB_ENUM(PB3LuckFunSnatchTreasureReq_FieldNumber) {
  PB3LuckFunSnatchTreasureReq_FieldNumber_ActId = 1,
  PB3LuckFunSnatchTreasureReq_FieldNumber_ActRelId = 2,
  PB3LuckFunSnatchTreasureReq_FieldNumber_SnatchNum = 3,
  PB3LuckFunSnatchTreasureReq_FieldNumber_GoodsId = 4,
};

@interface PB3LuckFunSnatchTreasureReq : GPBMessage

/** 主活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t actRelId;

/** 夺宝次数 */
@property(nonatomic, readwrite) int32_t snatchNum;

/** 夺宝物品id(不是，道具id) */
@property(nonatomic, readwrite) int32_t goodsId;

@end

#pragma mark - PB3LuckFunSnatchTreasureRes

typedef GPB_ENUM(PB3LuckFunSnatchTreasureRes_FieldNumber) {
  PB3LuckFunSnatchTreasureRes_FieldNumber_IsOver = 1,
};

@interface PB3LuckFunSnatchTreasureRes : GPBMessage

@property(nonatomic, readwrite) BOOL isOver;

@end

#pragma mark - PB3LuckFunRankItem

typedef GPB_ENUM(PB3LuckFunRankItem_FieldNumber) {
  PB3LuckFunRankItem_FieldNumber_PlayerData = 1,
  PB3LuckFunRankItem_FieldNumber_Num = 2,
  PB3LuckFunRankItem_FieldNumber_Index = 3,
  PB3LuckFunRankItem_FieldNumber_AwardListArray = 4,
};

@interface PB3LuckFunRankItem : GPBMessage

/** 玩家个人数据 */
@property(nonatomic, readwrite, strong, null_resettable) PB3PlayerSortMsg *playerData;
/** Test to see if @c playerData has been set. */
@property(nonatomic, readwrite) BOOL hasPlayerData;

/** 榜单值 */
@property(nonatomic, readwrite) uint32_t num;

/** 排名值 */
@property(nonatomic, readwrite) uint32_t index;

/** 奖励列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3BoxAward*> *awardListArray;
/** The number of items in @c awardListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger awardListArray_Count;

@end

#pragma mark - PB3BoxAward

typedef GPB_ENUM(PB3BoxAward_FieldNumber) {
  PB3BoxAward_FieldNumber_GiftId = 1,
  PB3BoxAward_FieldNumber_GiftName = 2,
  PB3BoxAward_FieldNumber_GiftNum = 3,
  PB3BoxAward_FieldNumber_GiftURL = 4,
  PB3BoxAward_FieldNumber_Gold = 5,
};

@interface PB3BoxAward : GPBMessage

/** 礼物id */
@property(nonatomic, readwrite) int32_t giftId;

/** 礼物名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *giftName;

/** 礼物数量 */
@property(nonatomic, readwrite) int32_t giftNum;

/** 图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *giftURL;

@property(nonatomic, readwrite) uint64_t gold;

@end

#pragma mark - PB3LuckFunRankListReq

typedef GPB_ENUM(PB3LuckFunRankListReq_FieldNumber) {
  PB3LuckFunRankListReq_FieldNumber_ActId = 1,
  PB3LuckFunRankListReq_FieldNumber_ActRelId = 2,
  PB3LuckFunRankListReq_FieldNumber_Page = 3,
  PB3LuckFunRankListReq_FieldNumber_PageSize = 4,
};

@interface PB3LuckFunRankListReq : GPBMessage

/** 主活动id */
@property(nonatomic, readwrite) uint32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) uint32_t actRelId;

@property(nonatomic, readwrite) uint32_t page;

@property(nonatomic, readwrite) uint32_t pageSize;

@end

#pragma mark - PB3LuckFunRankListRes

typedef GPB_ENUM(PB3LuckFunRankListRes_FieldNumber) {
  PB3LuckFunRankListRes_FieldNumber_ListArray = 1,
  PB3LuckFunRankListRes_FieldNumber_MyRank = 2,
  PB3LuckFunRankListRes_FieldNumber_Total = 3,
};

@interface PB3LuckFunRankListRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3LuckFunRankItem*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) PB3LuckFunRankItem *myRank;
/** Test to see if @c myRank has been set. */
@property(nonatomic, readwrite) BOOL hasMyRank;

@property(nonatomic, readwrite) uint32_t total;

@end

#pragma mark - PB3LuckFunOpenRecordReq

typedef GPB_ENUM(PB3LuckFunOpenRecordReq_FieldNumber) {
  PB3LuckFunOpenRecordReq_FieldNumber_ActId = 1,
  PB3LuckFunOpenRecordReq_FieldNumber_ActRelId = 2,
  PB3LuckFunOpenRecordReq_FieldNumber_Page = 3,
  PB3LuckFunOpenRecordReq_FieldNumber_PageSize = 4,
  PB3LuckFunOpenRecordReq_FieldNumber_IsFilterMyself = 5,
  PB3LuckFunOpenRecordReq_FieldNumber_GoodsId = 6,
};

@interface PB3LuckFunOpenRecordReq : GPBMessage

/** 主活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t actRelId;

@property(nonatomic, readwrite) int32_t page;

@property(nonatomic, readwrite) int32_t pageSize;

/** 是否过滤自己 */
@property(nonatomic, readwrite) BOOL isFilterMyself;

/** 夺宝物品id(不是，道具id) */
@property(nonatomic, readwrite) int32_t goodsId;

@end

#pragma mark - PB3LuckFunOpenRecordRes

typedef GPB_ENUM(PB3LuckFunOpenRecordRes_FieldNumber) {
  PB3LuckFunOpenRecordRes_FieldNumber_ListArray = 1,
  PB3LuckFunOpenRecordRes_FieldNumber_Total = 2,
};

@interface PB3LuckFunOpenRecordRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3WinGoodsRecord*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@property(nonatomic, readwrite) int32_t total;

@end

#pragma mark - PB3LuckFunWinGoodsInfoData

typedef GPB_ENUM(PB3LuckFunWinGoodsInfoData_FieldNumber) {
  PB3LuckFunWinGoodsInfoData_FieldNumber_Name = 1,
  PB3LuckFunWinGoodsInfoData_FieldNumber_GoodsImg = 2,
};

@interface PB3LuckFunWinGoodsInfoData : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *goodsImg;

@end

#pragma mark - PB3LuckFunWinGoodsInfo

typedef GPB_ENUM(PB3LuckFunWinGoodsInfo_FieldNumber) {
  PB3LuckFunWinGoodsInfo_FieldNumber_ListArray = 1,
};

@interface PB3LuckFunWinGoodsInfo : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3LuckFunWinGoodsInfoData*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3LuckFunReadMsgReq

typedef GPB_ENUM(PB3LuckFunReadMsgReq_FieldNumber) {
  PB3LuckFunReadMsgReq_FieldNumber_ActId = 1,
  PB3LuckFunReadMsgReq_FieldNumber_ActRelId = 2,
};

@interface PB3LuckFunReadMsgReq : GPBMessage

/** 主活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t actRelId;

@end

#pragma mark - PB3LuckFunReadMsgRes

@interface PB3LuckFunReadMsgRes : GPBMessage

@end

#pragma mark - PB3WinGoodsRecordsReq

typedef GPB_ENUM(PB3WinGoodsRecordsReq_FieldNumber) {
  PB3WinGoodsRecordsReq_FieldNumber_ActId = 1,
  PB3WinGoodsRecordsReq_FieldNumber_ActRelId = 2,
  PB3WinGoodsRecordsReq_FieldNumber_Page = 3,
  PB3WinGoodsRecordsReq_FieldNumber_PageSize = 4,
  PB3WinGoodsRecordsReq_FieldNumber_IsGetAll = 5,
  PB3WinGoodsRecordsReq_FieldNumber_GoodsId = 6,
};

@interface PB3WinGoodsRecordsReq : GPBMessage

/** 主活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t actRelId;

@property(nonatomic, readwrite) int32_t page;

@property(nonatomic, readwrite) int32_t pageSize;

/** 是否获取所有人，（false: 只获取自己） */
@property(nonatomic, readwrite) BOOL isGetAll;

/** 夺宝物品id(不是，道具id) */
@property(nonatomic, readwrite) int32_t goodsId;

@end

#pragma mark - PB3WinGoodsRecord

typedef GPB_ENUM(PB3WinGoodsRecord_FieldNumber) {
  PB3WinGoodsRecord_FieldNumber_PlayerId = 1,
  PB3WinGoodsRecord_FieldNumber_PlayerName = 2,
  PB3WinGoodsRecord_FieldNumber_GoodsName = 3,
  PB3WinGoodsRecord_FieldNumber_Num = 4,
  PB3WinGoodsRecord_FieldNumber_GiftId = 5,
  PB3WinGoodsRecord_FieldNumber_GoodNumType = 6,
  PB3WinGoodsRecord_FieldNumber_RewardType = 7,
  PB3WinGoodsRecord_FieldNumber_CreatedTime = 8,
};

@interface PB3WinGoodsRecord : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *playerName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *goodsName;

@property(nonatomic, readwrite) int64_t num;

@property(nonatomic, readwrite) int32_t giftId;

@property(nonatomic, readwrite) PB3NumType goodNumType;

/** 奖励类型 */
@property(nonatomic, readwrite) PB3DeiceGridRewardType rewardType;

@property(nonatomic, readwrite) int64_t createdTime;

@end

/**
 * Fetches the raw value of a @c PB3WinGoodsRecord's @c goodNumType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3WinGoodsRecord_GoodNumType_RawValue(PB3WinGoodsRecord *message);
/**
 * Sets the raw value of an @c PB3WinGoodsRecord's @c goodNumType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3WinGoodsRecord_GoodNumType_RawValue(PB3WinGoodsRecord *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3WinGoodsRecord's @c rewardType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3WinGoodsRecord_RewardType_RawValue(PB3WinGoodsRecord *message);
/**
 * Sets the raw value of an @c PB3WinGoodsRecord's @c rewardType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3WinGoodsRecord_RewardType_RawValue(PB3WinGoodsRecord *message, int32_t value);

#pragma mark - PB3WinGoodsRecordsRes

typedef GPB_ENUM(PB3WinGoodsRecordsRes_FieldNumber) {
  PB3WinGoodsRecordsRes_FieldNumber_ListArray = 1,
  PB3WinGoodsRecordsRes_FieldNumber_Total = 2,
};

@interface PB3WinGoodsRecordsRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3WinGoodsRecord*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@property(nonatomic, readwrite) int32_t total;

@end

#pragma mark - PB3PartitionData

typedef GPB_ENUM(PB3PartitionData_FieldNumber) {
  PB3PartitionData_FieldNumber_PlayerId = 1,
  PB3PartitionData_FieldNumber_Num = 2,
  PB3PartitionData_FieldNumber_CreateTime = 3,
  PB3PartitionData_FieldNumber_PlayerData = 4,
  PB3PartitionData_FieldNumber_ActId = 5,
  PB3PartitionData_FieldNumber_ActRelId = 6,
  PB3PartitionData_FieldNumber_Remark = 7,
};

@interface PB3PartitionData : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

@property(nonatomic, readwrite) int64_t num;

@property(nonatomic, readwrite) int64_t createTime;

@property(nonatomic, readwrite, strong, null_resettable) PB3Player *playerData;
/** Test to see if @c playerData has been set. */
@property(nonatomic, readwrite) BOOL hasPlayerData;

@property(nonatomic, readwrite) int32_t actId;

@property(nonatomic, readwrite) int32_t actRelId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *remark;

@end

#pragma mark - PB3SportCarRefreshListReq

typedef GPB_ENUM(PB3SportCarRefreshListReq_FieldNumber) {
  PB3SportCarRefreshListReq_FieldNumber_ActId = 1,
  PB3SportCarRefreshListReq_FieldNumber_ActRelId = 2,
};

@interface PB3SportCarRefreshListReq : GPBMessage

/** 主活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t actRelId;

@end

#pragma mark - PB3SportCarRefreshInfo

typedef GPB_ENUM(PB3SportCarRefreshInfo_FieldNumber) {
  PB3SportCarRefreshInfo_FieldNumber_RefreshTime = 1,
  PB3SportCarRefreshInfo_FieldNumber_GiftPrice1 = 2,
  PB3SportCarRefreshInfo_FieldNumber_GiftRate1 = 3,
  PB3SportCarRefreshInfo_FieldNumber_GiftPrice2 = 4,
  PB3SportCarRefreshInfo_FieldNumber_GiftRate2 = 5,
};

@interface PB3SportCarRefreshInfo : GPBMessage

/** 刷新次数 */
@property(nonatomic, readwrite) int32_t refreshTime;

/** 必得礼物1价格 */
@property(nonatomic, readwrite) int64_t giftPrice1;

/** 必得礼物1概率 */
@property(nonatomic, readwrite) int32_t giftRate1;

/** 必得礼物2价格 */
@property(nonatomic, readwrite) int64_t giftPrice2;

/** 必得礼物2概率 */
@property(nonatomic, readwrite) int32_t giftRate2;

@end

#pragma mark - PB3SportCarRefreshListRes

typedef GPB_ENUM(PB3SportCarRefreshListRes_FieldNumber) {
  PB3SportCarRefreshListRes_FieldNumber_ListArray = 1,
  PB3SportCarRefreshListRes_FieldNumber_Cost = 2,
};

@interface PB3SportCarRefreshListRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SportCarRefreshInfo*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@property(nonatomic, readwrite) int32_t cost;

@end

#pragma mark - PB3SportCarAwardPool

typedef GPB_ENUM(PB3SportCarAwardPool_FieldNumber) {
  PB3SportCarAwardPool_FieldNumber_Stage = 1,
  PB3SportCarAwardPool_FieldNumber_GiftId = 2,
  PB3SportCarAwardPool_FieldNumber_Num = 3,
  PB3SportCarAwardPool_FieldNumber_Image = 4,
  PB3SportCarAwardPool_FieldNumber_Price = 5,
  PB3SportCarAwardPool_FieldNumber_Name = 6,
  PB3SportCarAwardPool_FieldNumber_PoolId = 7,
};

@interface PB3SportCarAwardPool : GPBMessage

/** 类型 */
@property(nonatomic, readwrite) int32_t stage;

/** 礼物id */
@property(nonatomic, readwrite) int64_t giftId;

/** 数量 */
@property(nonatomic, readwrite) int32_t num;

/** 图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *image;

/** 价格 */
@property(nonatomic, readwrite) int64_t price;

/** 名字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite) int32_t poolId;

@end

#pragma mark - PB3SportCarPlayerRefreshInfoRes

typedef GPB_ENUM(PB3SportCarPlayerRefreshInfoRes_FieldNumber) {
  PB3SportCarPlayerRefreshInfoRes_FieldNumber_RefreshTime = 1,
  PB3SportCarPlayerRefreshInfoRes_FieldNumber_RefreshTotal = 2,
  PB3SportCarPlayerRefreshInfoRes_FieldNumber_Grand = 3,
  PB3SportCarPlayerRefreshInfoRes_FieldNumber_AwardListArray = 4,
  PB3SportCarPlayerRefreshInfoRes_FieldNumber_NextCost = 5,
  PB3SportCarPlayerRefreshInfoRes_FieldNumber_LastUpdated = 6,
};

@interface PB3SportCarPlayerRefreshInfoRes : GPBMessage

/** 当前刷新次数 */
@property(nonatomic, readwrite) int32_t refreshTime;

/** 总刷新次数 */
@property(nonatomic, readwrite) int32_t refreshTotal;

/** 是否使用大奖 0不使用 1使用 */
@property(nonatomic, readwrite) int32_t grand;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SportCarAwardPool*> *awardListArray;
/** The number of items in @c awardListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger awardListArray_Count;

/** 下次刷新花费 */
@property(nonatomic, readwrite) int32_t nextCost;

/** 最后刷新时间 */
@property(nonatomic, readwrite) int64_t lastUpdated;

@end

#pragma mark - PB3SportCarPlayerGrandRes

@interface PB3SportCarPlayerGrandRes : GPBMessage

@end

#pragma mark - PB3SportCarDrawLotteryReq

typedef GPB_ENUM(PB3SportCarDrawLotteryReq_FieldNumber) {
  PB3SportCarDrawLotteryReq_FieldNumber_ActId = 1,
  PB3SportCarDrawLotteryReq_FieldNumber_ActRelId = 2,
  PB3SportCarDrawLotteryReq_FieldNumber_Num = 3,
};

@interface PB3SportCarDrawLotteryReq : GPBMessage

/** 主活动id */
@property(nonatomic, readwrite) int32_t actId;

/** 子活动id */
@property(nonatomic, readwrite) int32_t actRelId;

/** 次数 */
@property(nonatomic, readwrite) uint32_t num;

@end

#pragma mark - PB3SportCarDrawLotteryRes

typedef GPB_ENUM(PB3SportCarDrawLotteryRes_FieldNumber) {
  PB3SportCarDrawLotteryRes_FieldNumber_AwardListArray = 1,
  PB3SportCarDrawLotteryRes_FieldNumber_GetTime = 2,
  PB3SportCarDrawLotteryRes_FieldNumber_Cost = 3,
};

@interface PB3SportCarDrawLotteryRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SportCarAwardPool*> *awardListArray;
/** The number of items in @c awardListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger awardListArray_Count;

/** 获取时间 */
@property(nonatomic, readwrite) int64_t getTime;

/** 总花费 */
@property(nonatomic, readwrite) int64_t cost;

@end

#pragma mark - PB3SportCarDrawLogRes

typedef GPB_ENUM(PB3SportCarDrawLogRes_FieldNumber) {
  PB3SportCarDrawLogRes_FieldNumber_ListArray = 1,
};

@interface PB3SportCarDrawLogRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SportCarDrawLotteryRes*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
