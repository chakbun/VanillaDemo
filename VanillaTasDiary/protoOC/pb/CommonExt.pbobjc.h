// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pb/common.ext.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class PB3AuthInfo;
@class PB3BillPlayerCard;
@class PB3BoosBag;
@class PB3Certif;
@class PB3ClanInfo;
@class PB3DecorateSignFrame;
@class PB3Effect;
@class PB3EffectBanner;
@class PB3EffectChairCountTheme;
@class PB3EffectExpand;
@class PB3EffectTeacherMedal;
@class PB3EmojiChatMsg;
@class PB3GiftCollectLevelInfo;
@class PB3GiftValidDate;
@class PB3IMCPDialog;
@class PB3ImageChatMsg;
@class PB3IndexTips;
@class PB3MaskIcon;
@class PB3MaskInfo;
@class PB3MobaTeamGameSetting;
@class PB3PkData;
@class PB3Player;
@class PB3PlayerGiftRank;
@class PB3PlayerLabel;
@class PB3RankShow;
@class PB3SimplePlayer;
@class PB3TextChatMsg;
@class PB3UserInfo;
GPB_ENUM_FWD_DECLARE(PB3ClanIconType);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum PB3AppId

typedef GPB_ENUM(PB3AppId) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3AppId_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 小呼吸 */
  PB3AppId_AppIdXiaohuxi = 0,

  /** 咪爪 */
  PB3AppId_AppIdMizhua = 1,

  /** 菜鸡 */
  PB3AppId_AppIdCaiji = 2,
};

GPBEnumDescriptor *PB3AppId_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3AppId_IsValidValue(int32_t value);

#pragma mark - Enum PB3SubInfoActivityType

typedef GPB_ENUM(PB3SubInfoActivityType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3SubInfoActivityType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3SubInfoActivityType_SbiatZero = 0,

  /** 春节红包活动 */
  PB3SubInfoActivityType_SbiatRedEnvelope = 1,

  /** 靓号机 */
  PB3SubInfoActivityType_SbiatRandomId2 = 2,

  /** PK排行 */
  PB3SubInfoActivityType_SbiatPkRank = 3,
};

GPBEnumDescriptor *PB3SubInfoActivityType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3SubInfoActivityType_IsValidValue(int32_t value);

#pragma mark - Enum PB3IntimateFansTargetType

/** 亲密粉丝任务类型 */
typedef GPB_ENUM(PB3IntimateFansTargetType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3IntimateFansTargetType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不使用 */
  PB3IntimateFansTargetType_IfttNone = 0,

  /** 房间收听主播 */
  PB3IntimateFansTargetType_IfttRoomListenInHost = 1,

  /** 在房间收听时长 */
  PB3IntimateFansTargetType_IfttRoomListenInHostDuration = 2,

  /** 主播房间送礼 */
  PB3IntimateFansTargetType_IfttRoomGiftToHost = 3,

  /** 房间发送公屏 */
  PB3IntimateFansTargetType_IfttRoomChat = 4,

  /** 评论主播动态 */
  PB3IntimateFansTargetType_IfttHostZoneCommenting = 5,

  /** 主播空间写印象 */
  PB3IntimateFansTargetType_IfttHostZoneImpression = 6,
};

GPBEnumDescriptor *PB3IntimateFansTargetType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3IntimateFansTargetType_IsValidValue(int32_t value);

#pragma mark - Enum PB3CommonErr

typedef GPB_ENUM(PB3CommonErr) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3CommonErr_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3CommonErr_ErrCodeNone = 0,

  /** 系统繁忙  redis错误用系统繁忙替代 */
  PB3CommonErr_ErrCodeRedis = 10001,

  /** 系统繁忙  mysql错误用系统繁忙替代 */
  PB3CommonErr_ErrCodeMysql = 10002,

  /** 请求过于频繁 */
  PB3CommonErr_ErrCodeFrequency = 10003,

  /** 参数错误 */
  PB3CommonErr_ErrCodeParam = 10004,

  /** 调用对象不匹配 */
  PB3CommonErr_ErrCodeNoMatchObj = 10005,

  /** 系统繁忙 一些极少出现，且不适合返回的错误 */
  PB3CommonErr_ErrCodeBusy = 10006,

  /** 服务器维护 */
  PB3CommonErr_ErrCodeMaintain = 16666,
  PB3CommonErr_ErrCodeUnavailable = 11006,
  PB3CommonErr_ErrCodeLimit = 11007,
};

GPBEnumDescriptor *PB3CommonErr_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3CommonErr_IsValidValue(int32_t value);

#pragma mark - Enum PB3SexType

typedef GPB_ENUM(PB3SexType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3SexType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3SexType_Unknown = 0,
  PB3SexType_Mail = 1,
  PB3SexType_Femail = 2,
};

GPBEnumDescriptor *PB3SexType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3SexType_IsValidValue(int32_t value);

#pragma mark - Enum PB3RoomType

/** 房间类型 */
typedef GPB_ENUM(PB3RoomType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3RoomType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 公会 */
  PB3RoomType_RtGuild = 0,

  /** 个人 */
  PB3RoomType_RtPersonal = 1,

  /** 返利房 */
  PB3RoomType_RtReward = 2,
};

GPBEnumDescriptor *PB3RoomType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3RoomType_IsValidValue(int32_t value);

#pragma mark - Enum PB3RoomPattern

/** 房间模式 6.3.5及之后版本不再使用 */
typedef GPB_ENUM(PB3RoomPattern) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3RoomPattern_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 开黑 */
  PB3RoomPattern_RpGame = 0,

  /** 娱乐美音 */
  PB3RoomPattern_RpStandard = 1,

  /** 天籁之音 */
  PB3RoomPattern_RpHighQuality = 2,

  /** 个人模式 */
  PB3RoomPattern_RpPersonal = 20,

  /** 陪伴模式 (挚友模式) */
  PB3RoomPattern_RpIntimate = 21,

  /** 表演模式 */
  PB3RoomPattern_NpShow = 22,

  /** 交友 */
  PB3RoomPattern_RpMate = 60,

  /** 表演模式 */
  PB3RoomPattern_RpPerformMode = 63,

  /** 交友模式 */
  PB3RoomPattern_RpMakingFriend = 64,

  /** 派单模式 */
  PB3RoomPattern_RpSendOrder = 80,

  /** 游戏模式 */
  PB3RoomPattern_RpGamePlatform = 81,

  /** 拍卖模式 */
  PB3RoomPattern_NpAuction = 82,

  /** 个播模式 */
  PB3RoomPattern_RpSingleLive = 83,

  /** 游戏开黑模式 */
  PB3RoomPattern_RpMobaTeam = 85,

  /** 游戏开黑派单模式 */
  PB3RoomPattern_RpOrganizeMobaTeam = 86,

  /** 房间直播模式 */
  PB3RoomPattern_RpLive = 87,

  /** 小圈模式 */
  PB3RoomPattern_RpClub = 88,

  /** 个播2.0 */
  PB3RoomPattern_RpSingleLiveVsn2 = 89,

  /** 云蹦迪 */
  PB3RoomPattern_RpCloudDisco = 90,
};

GPBEnumDescriptor *PB3RoomPattern_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3RoomPattern_IsValidValue(int32_t value);

#pragma mark - Enum PB3NewRoomPattern

/** 新房间模式 6.3.5及之后版本使用 */
typedef GPB_ENUM(PB3NewRoomPattern) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3NewRoomPattern_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 开黑 */
  PB3NewRoomPattern_NrpGame = 0,

  /** 常规模式 */
  PB3NewRoomPattern_NrpStandard = 1,

  /** 个人模式 */
  PB3NewRoomPattern_NrpPersonal = 20,

  /** 陪伴模式 (挚友模式) */
  PB3NewRoomPattern_NrpIntimate = 21,

  /** 表演模式 */
  PB3NewRoomPattern_NrpShow = 22,

  /** 交友 */
  PB3NewRoomPattern_NrpMate = 60,

  /** 派单模式 */
  PB3NewRoomPattern_NrpSendOrder = 80,

  /** 游戏模式 */
  PB3NewRoomPattern_NrpGamePlatform = 81,

  /** 拍卖模式 */
  PB3NewRoomPattern_NrpAuction = 82,

  /** 个播模式 */
  PB3NewRoomPattern_NrpSingleLive = 83,

  /** 未知 */
  PB3NewRoomPattern_NrpNoinit = 84,

  /** 游戏开黑模式 */
  PB3NewRoomPattern_NrpMobaTeam = 85,

  /** 游戏开黑派单模式 */
  PB3NewRoomPattern_NrpOrganizeMobaTeam = 86,

  /** 房间直播模式 */
  PB3NewRoomPattern_NrpLive = 87,

  /** 小圈模式 */
  PB3NewRoomPattern_NrpClub = 88,

  /** 个播2.0 */
  PB3NewRoomPattern_NrpSingleLiveVsn2 = 89,

  /** 云蹦迪 */
  PB3NewRoomPattern_NrpCloudDisco = 90,

  /** 互动模式 */
  PB3NewRoomPattern_NrpInteraction = 200,

  /** 交友2.0 */
  PB3NewRoomPattern_NrpMate2 = 201,

  /** 小窝模式 */
  PB3NewRoomPattern_NrpFossa = 202,
};

GPBEnumDescriptor *PB3NewRoomPattern_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3NewRoomPattern_IsValidValue(int32_t value);

#pragma mark - Enum PB3AuctionType

/** 拍卖类型 */
typedef GPB_ENUM(PB3AuctionType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3AuctionType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3AuctionType_AtDefault = 0,

  /** 服务拍卖 */
  PB3AuctionType_AtService = 1,

  /** 礼物拍卖 */
  PB3AuctionType_AtGift = 2,
};

GPBEnumDescriptor *PB3AuctionType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3AuctionType_IsValidValue(int32_t value);

#pragma mark - Enum PB3RoomVoice

typedef GPB_ENUM(PB3RoomVoice) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3RoomVoice_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3RoomVoice_RvZero = 0,

  /** 娱乐音质 */
  PB3RoomVoice_RvStandard = 1,

  /** 天籁音质 */
  PB3RoomVoice_RvHighQuality = 2,
};

GPBEnumDescriptor *PB3RoomVoice_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3RoomVoice_IsValidValue(int32_t value);

#pragma mark - Enum PB3SceneType

/** 场景类型 */
typedef GPB_ENUM(PB3SceneType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3SceneType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3SceneType_StZero = 0,

  /** 直播房间 */
  PB3SceneType_StHome = 1,
};

GPBEnumDescriptor *PB3SceneType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3SceneType_IsValidValue(int32_t value);

#pragma mark - Enum PB3ChannelType

/** 聊天频道 */
typedef GPB_ENUM(PB3ChannelType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ChannelType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 默认房间频道(兼容旧版本) */
  PB3ChannelType_CtRoom = 0,

  /** 传闻(匿名) */
  PB3ChannelType_CtAnonymous = 1,

  /** 家族 */
  PB3ChannelType_CtClan = 2,

  /** 世界 */
  PB3ChannelType_CtGlobal = 3,

  /** 全部频道 */
  PB3ChannelType_CtAllChannel = 4,

  /** 广场 */
  PB3ChannelType_CtSquare = 5,
};

GPBEnumDescriptor *PB3ChannelType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ChannelType_IsValidValue(int32_t value);

#pragma mark - Enum PB3RoomAdminType

/** 房间管理员类型 */
typedef GPB_ENUM(PB3RoomAdminType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3RoomAdminType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 不属于本场景 */
  PB3RoomAdminType_RatGuest = 0,

  /** 普通成员 */
  PB3RoomAdminType_RatNormal = 10,

  /** 管理员 */
  PB3RoomAdminType_RatAdmin = 20,

  /** 房主 */
  PB3RoomAdminType_RatOwner = 30,

  /** 超级管理员 */
  PB3RoomAdminType_RatSuperAdmin = 40,

  /** 黑名单 */
  PB3RoomAdminType_RatBlack = -5,

  /** 临时管理员 */
  PB3RoomAdminType_RatTempAdmin = 21,
};

GPBEnumDescriptor *PB3RoomAdminType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3RoomAdminType_IsValidValue(int32_t value);

#pragma mark - Enum PB3OnlineStateType

typedef GPB_ENUM(PB3OnlineStateType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3OnlineStateType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 离线 */
  PB3OnlineStateType_OstOffline = 0,

  /** 连接断开 */
  PB3OnlineStateType_OstDisconnected = 20,

  /** 后台在线 */
  PB3OnlineStateType_OstBackground = 80,

  /** 在线 */
  PB3OnlineStateType_OstOnline = 100,
};

GPBEnumDescriptor *PB3OnlineStateType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3OnlineStateType_IsValidValue(int32_t value);

#pragma mark - Enum PB3ChatMsgType

typedef GPB_ENUM(PB3ChatMsgType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ChatMsgType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3ChatMsgType_CmtZero = 0,

  /** 文本 */
  PB3ChatMsgType_CmtText = 1,

  /** 图片 */
  PB3ChatMsgType_CmtImage = 2,

  /** 表情 */
  PB3ChatMsgType_CmtEmoji = 3,
};

GPBEnumDescriptor *PB3ChatMsgType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ChatMsgType_IsValidValue(int32_t value);

#pragma mark - Enum PB3DeviceType

/** 所使用客户端类型 */
typedef GPB_ENUM(PB3DeviceType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3DeviceType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3DeviceType_DtUnknown = 0,
  PB3DeviceType_DtFlashplayer = 1,
  PB3DeviceType_DtIosPhone = 40,

  /** 助手 */
  PB3DeviceType_DtWindowsAssistant = 80,

  /** PC */
  PB3DeviceType_DtWindowsPc = 90,
  PB3DeviceType_DtRobot = 100,

  /** 微信公众号登录 */
  PB3DeviceType_DtWechatSubscription = 110,

  /** QQ小程序登录 */
  PB3DeviceType_DtQqSmallProgram = 120,

  /** 微信小程序登录 */
  PB3DeviceType_DtWxMiniProgram = 130,
};

GPBEnumDescriptor *PB3DeviceType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3DeviceType_IsValidValue(int32_t value);

#pragma mark - Enum PB3InteractionType

/** 房间互动类型 */
typedef GPB_ENUM(PB3InteractionType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3InteractionType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3InteractionType_IatDefault = 0,

  /** 炸档 */
  PB3InteractionType_IatZhaDang = 1,

  /** 爆音 */
  PB3InteractionType_IatBaoYin = 2,

  /** 点歌 */
  PB3InteractionType_IatChooseSong = 3,

  /** 合唱 */
  PB3InteractionType_IatChorus = 4,

  /** 表白 */
  PB3InteractionType_IatConfession = 5,

  /** 互动 */
  PB3InteractionType_IatInteraction = 6,

  /** 撒娇 */
  PB3InteractionType_IatCoquetry = 7,
};

GPBEnumDescriptor *PB3InteractionType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3InteractionType_IsValidValue(int32_t value);

#pragma mark - Enum PB3TranslateType

/** 翻译类型 */
typedef GPB_ENUM(PB3TranslateType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3TranslateType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3TranslateType_TtNormal = 0,

  /** 复数可变化 */
  PB3TranslateType_TtPlural = 1,
};

GPBEnumDescriptor *PB3TranslateType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3TranslateType_IsValidValue(int32_t value);

#pragma mark - Enum PB3AccountFlags

typedef GPB_ENUM(PB3AccountFlags) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3AccountFlags_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3AccountFlags_AfZero = 0,

  /** 手机号码是否验证 */
  PB3AccountFlags_AfPhoneVerified = 1,

  /** 是否绑定了设备 */
  PB3AccountFlags_AfBindDevice = 2,
};

GPBEnumDescriptor *PB3AccountFlags_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3AccountFlags_IsValidValue(int32_t value);

#pragma mark - Enum PB3RoomFlags

/**
 * Room.flags按位存储，
 * 常量值表示对应位存储的内容
 * 不是具体值
 **/
typedef GPB_ENUM(PB3RoomFlags) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3RoomFlags_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3RoomFlags_RfZero = 0,

  /** 天使庇护第1/2/3 改为 1个 */
  PB3RoomFlags_RfGuard1 = 1,

  /** 爱的庇护 */
  PB3RoomFlags_RfEvent520 = 4,

  /** 周星房间 */
  PB3RoomFlags_RfWeekstarroom = 5,
};

GPBEnumDescriptor *PB3RoomFlags_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3RoomFlags_IsValidValue(int32_t value);

#pragma mark - Enum PB3PlayerFlags

/**
 * [M] Player.flags按位存储，
 * 常量值表示对应位存储的内容
 * 不是具体值
 **/
typedef GPB_ENUM(PB3PlayerFlags) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3PlayerFlags_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3PlayerFlags_PfZero = 0,

  /** 是否领取任意充值礼包 */
  PB3PlayerFlags_PfCharge0Gift = 1,

  /** 是否已领取了新年礼包 */
  PB3PlayerFlags_PfNewyearBag = 2,

  /** 是否绑定码云 */
  PB3PlayerFlags_PfBindMali = 3,

  /** 是否邀请功能 */
  PB3PlayerFlags_PfInvite = 5,

  /** 周星擂主 */
  PB3PlayerFlags_PfWeekstar0 = 18,

  /** 周星第1 */
  PB3PlayerFlags_PfWeekstar1 = 6,

  /** 周星第2 */
  PB3PlayerFlags_PfWeekstar2 = 7,

  /** 周星第3 */
  PB3PlayerFlags_PfWeekstar3 = 8,

  /** 声音大赛银话筒 */
  PB3PlayerFlags_PfVoiceSilver = 9,

  /** 声音大赛金话筒 */
  PB3PlayerFlags_PfVoiceGold = 10,

  /** 是否陪玩认证 */
  PB3PlayerFlags_PfCertif = 11,

  /** 天使第1 */
  PB3PlayerFlags_PfGuardPlayer1 = 12,

  /** 天使第2 */
  PB3PlayerFlags_PfGuardPlayer2 = 13,

  /** 天使第3 */
  PB3PlayerFlags_PfGuardPlayer3 = 14,

  /** 守护第1 */
  PB3PlayerFlags_PfGuardFans1 = 15,

  /** 守护第2 */
  PB3PlayerFlags_PfGuardFans2 = 16,

  /** 守护第3 */
  PB3PlayerFlags_PfGuardFans3 = 17,

  /** 520尾灯，魅力 */
  PB3PlayerFlags_PfEvent520LightCharm = 19,

  /** 520尾灯，财富 */
  PB3PlayerFlags_PfEvent520LightWealth = 20,

  /** 520上坑特效，魅力 */
  PB3PlayerFlags_PfEvent520ChairCharm = 21,

  /** 520上坑特效，财富 */
  PB3PlayerFlags_PfEvent520ChairWealth = 22,

  /** 520进场背景，魅力第一 */
  PB3PlayerFlags_PfEvent520SceneCharm1 = 23,

  /** 520进场背景，魅力第二 */
  PB3PlayerFlags_PfEvent520SceneCharm2 = 24,

  /** 520进场背景，魅力第三 */
  PB3PlayerFlags_PfEvent520SceneCharm3 = 25,

  /** 520进场背景，财富 */
  PB3PlayerFlags_PfEvent520SceneWealth = 26,

  /** 小队长尾灯 */
  PB3PlayerFlags_PfEvent61Small = 27,

  /** 中队长尾灯 */
  PB3PlayerFlags_PfEvent61Medium = 28,

  /** 大队长尾灯 */
  PB3PlayerFlags_PfEvent61Big = 29,

  /** 超队长尾灯 */
  PB3PlayerFlags_PfEvent61Super = 31,

  /** 新贵 */
  PB3PlayerFlags_PfChargeFirst = 32,

  /** 官方指导员 */
  PB3PlayerFlags_PfOfficialGuide = 30,

  /** 优质认证 */
  PB3PlayerFlags_PfHighQuality = 35,

  /** 歌手认证 */
  PB3PlayerFlags_PfSinger = 36,

  /** 是否接引人 */
  PB3PlayerFlags_PfGreet = 37,

  /** 是否实名认证 */
  PB3PlayerFlags_PfCertification = 38,

  /** 是否接单主播 */
  PB3PlayerFlags_PfBillOrder = 39,

  /** 是否菜鸡用户 */
  PB3PlayerFlags_PfCaijiUser = 40,

  /** 动态超管 */
  PB3PlayerFlags_PfCommunityManager = 41,
};

GPBEnumDescriptor *PB3PlayerFlags_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3PlayerFlags_IsValidValue(int32_t value);

#pragma mark - Enum PB3PlayerFlags2

typedef GPB_ENUM(PB3PlayerFlags2) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3PlayerFlags2_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3PlayerFlags2_Pf2Zero = 0,

  /** 世界杯铜牌尾灯 */
  PB3PlayerFlags2_PfWorldcupBronze = 1,

  /** 世界杯银牌尾灯 */
  PB3PlayerFlags2_PfWorldcupSilver = 2,

  /** 世界杯金牌尾灯 */
  PB3PlayerFlags2_PfWorldcupGold = 3,

  /** 世界杯第1尾灯 */
  PB3PlayerFlags2_PfWorldcup1 = 5,

  /** 世界杯第2尾灯 */
  PB3PlayerFlags2_PfWorldcup2 = 6,

  /** 世界杯第3尾灯 */
  PB3PlayerFlags2_PfWorldcup3 = 7,

  /** 世界杯中国尾灯 */
  PB3PlayerFlags2_PfWorldcupChina = 8,

  /** 世界杯巴西尾灯 */
  PB3PlayerFlags2_PfWorldcupBrazil = 9,

  /** 世界杯德国尾灯 */
  PB3PlayerFlags2_PfWorldcupGermany = 10,

  /** 世界杯阿根廷尾灯 */
  PB3PlayerFlags2_PfWorldcupArgentina = 11,

  /** 世界杯西班牙尾灯 */
  PB3PlayerFlags2_PfWorldcupSpain = 12,

  /** 砸蛋喵球 */
  PB3PlayerFlags2_PfCrackeggBall = 13,

  /** 小鸡吃米尾灯 */
  PB3PlayerFlags2_PfChickenRice = 14,

  /** 凤凰尾灯 */
  PB3PlayerFlags2_PfPhoenix = 15,

  /** 咪爪周年尾灯 */
  PB3PlayerFlags2_PfMizhuaAnnual = 16,

  /** 最具影响力进场特效 */
  PB3PlayerFlags2_PfSceneInfluential = 17,

  /** 最具影响力上麦特效 */
  PB3PlayerFlags2_PfChairInfluential = 18,

  /** 月饼 */
  PB3PlayerFlags2_PfMoonFestivalCake = 19,

  /** 兔子 */
  PB3PlayerFlags2_PfMoonFestivalRabbit = 20,

  /** 中秋名片 */
  PB3PlayerFlags2_PfMoonFestivalCard = 21,

  /** 小可爱尾灯 */
  PB3PlayerFlags2_PfDeLovely = 22,

  /** 上坑特效 */
  PB3PlayerFlags2_PfThePit = 23,

  /** 名片特效 */
  PB3PlayerFlags2_PfCallingCard = 24,

  /** 蛋蛋菌尾灯 */
  PB3PlayerFlags2_PfDandanjun = 25,

  /** 双十一魅力尾灯 */
  PB3PlayerFlags2_PfEvent11LightCharm = 26,

  /** 双十一魅力名片 */
  PB3PlayerFlags2_PfEvent11CharmCard = 27,

  /** 双十一魅力上坑特效 */
  PB3PlayerFlags2_PfEvent11ChairCharm = 28,

  /** 双旦上坑特效 */
  PB3PlayerFlags2_PfEventDoubledenierChairCharm = 30,

  /** 最佳cp尾灯 */
  PB3PlayerFlags2_PfEventDoubledenierOptimumCpLight = 31,

  /** cp尾灯 */
  PB3PlayerFlags2_PfEventDoubledenierCpLight = 32,

  /** 咪爪第一携手进场特效 */
  PB3PlayerFlags2_PfEventDoubledenierInfluential1 = 34,

  /** 咪爪第二携手进场特效 */
  PB3PlayerFlags2_PfEventDoubledenierInfluential2 = 35,

  /** 咪爪第三携手进场特效 */
  PB3PlayerFlags2_PfEventDoubledenierInfluential3 = 36,
};

GPBEnumDescriptor *PB3PlayerFlags2_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3PlayerFlags2_IsValidValue(int32_t value);

#pragma mark - Enum PB3PlayerFlags3

/** 自己可见,别的玩家不可见 */
typedef GPB_ENUM(PB3PlayerFlags3) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3PlayerFlags3_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3PlayerFlags3_Pf3Zero = 0,

  /** 送礼不增加甜豆 */
  PB3PlayerFlags3_PfNoTicket = 1,

  /** 注册后是否设置过性别、密码 */
  PB3PlayerFlags3_PfSetSexPasswd = 2,

  /** 是否绑定大陆(银联)银行卡 */
  PB3PlayerFlags3_PfBindChinaBank = 3,

  /** 是否绑定香港银行卡 */
  PB3PlayerFlags3_PfBindHongkongBank = 4,

  /** 是否绑定马来西亚银行卡 */
  PB3PlayerFlags3_PfBindMalaysiaBank = 5,

  /** 是否绑定印度银行卡 */
  PB3PlayerFlags3_PfBindIndiaBank = 6,

  /** 是否绑定美国银行卡 */
  PB3PlayerFlags3_PfBindUsaBank = 7,

  /** 是否绑定加拿大银行卡 */
  PB3PlayerFlags3_PfBindCanadaBank = 8,

  /** 是否绑定印度尼西亚银行卡 */
  PB3PlayerFlags3_PfBindIndonesiaBank = 9,

  /** 是否绑定台湾银行卡 */
  PB3PlayerFlags3_PfBindTaiwanBank = 10,

  /** 是否绑定Paypal */
  PB3PlayerFlags3_PfBindPaypal = 11,

  /** 是否绑定新加坡银行卡 */
  PB3PlayerFlags3_PfBindSingaporeBank = 12,

  /** 是否绑定其它银行卡 */
  PB3PlayerFlags3_PfBindOtherBank = 13,
};

GPBEnumDescriptor *PB3PlayerFlags3_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3PlayerFlags3_IsValidValue(int32_t value);

#pragma mark - Enum PB3OnOffType

/** KG类型 */
typedef GPB_ENUM(PB3OnOffType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3OnOffType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不能使用 */
  PB3OnOffType_YearBag = 0,

  /** 砸蛋 */
  PB3OnOffType_CrackEgg = 1,

  /** GZF */
  PB3OnOffType_Gp = 5,

  /** AZF */
  PB3OnOffType_Iapp = 6,

  /** 邀请 */
  PB3OnOffType_Invite = 7,

  /** 首页分类屏蔽, */
  PB3OnOffType_IndexCategory = 8,

  /** 认证开关, */
  PB3OnOffType_Ioxinbao = 9,

  /** 守护天使 */
  PB3OnOffType_Guard = 10,

  /** 周星 */
  PB3OnOffType_WeekStar = 11,

  /** 520活动开关 */
  PB3OnOffType_Event520 = 12,

  /** 世界杯活动开关 */
  PB3OnOffType_WorldCup = 13,

  /** 实名认证开关 */
  PB3OnOffType_RealIdentity = 14,

  /** 周年庆开关 */
  PB3OnOffType_Anniversary = 16,

  /** 新版新手礼包开关 */
  PB3OnOffType_NoviceGift = 17,

  /** 推荐用户设置开关 */
  PB3OnOffType_TjUser = 18,

  /** 推荐优质个人设置开关 */
  PB3OnOffType_TjPersonal = 19,

  /** 中秋节开关 */
  PB3OnOffType_MoonFestival = 20,

  /** 咪窝财富栏开关 */
  PB3OnOffType_MiwoWealth = 21,

  /** 小可爱开关 */
  PB3OnOffType_DeLovely = 22,

  /** 双十一活动开关 */
  PB3OnOffType_Event11 = 23,

  /** 推荐最新设置开关 */
  PB3OnOffType_TjNew = 24,

  /** 推荐自定义设置开关 */
  PB3OnOffType_TjUserdefine = 25,

  /** 房间标签设置开关 */
  PB3OnOffType_RoomTip = 26,

  /** 奖金池开关 */
  PB3OnOffType_BonusPool = 27,

  /** 靓号库开关 */
  PB3OnOffType_ShortId = 28,

  /** 倒计时 */
  PB3OnOffType_TimeCount = 29,

  /** 广播交友头条开关 */
  PB3OnOffType_HeadLine = 30,

  /** 跳跳发言开关 */
  PB3OnOffType_TiaoTiao = 31,

  /** ios马甲包审核开关 */
  PB3OnOffType_Ioxinbao2 = 32,

  /** 跳跳界面开关 */
  PB3OnOffType_TiaoTiaoScreen = 33,

  /** 进入房间开关，客户端无需接入 */
  PB3OnOffType_RoomEnter = 34,

  /** 房间天籁开关，客户端无需接入 */
  PB3OnOffType_RoomPatternHighQuality = 35,

  /** ios马甲包banner开关 */
  PB3OnOffType_Ioxinbao2Banner = 36,

  /** 注册填写密码开关 */
  PB3OnOffType_RegisterPassword = 37,

  /** 认证登录开关 */
  PB3OnOffType_AuthLoginUi = 38,

  /** 热门歌曲开关 */
  PB3OnOffType_HotSong = 39,

  /** 挚友经验开关 */
  PB3OnOffType_IntimateExp = 40,

  /** 用户资料修改开关 */
  PB3OnOffType_UserDataEdit = 41,

  /** 活动人员开关 */
  PB3OnOffType_ActivityType = 42,

  /** 活动开关 */
  PB3OnOffType_Activity = 43,

  /** PC限制登录 */
  PB3OnOffType_PcLimitLogin = 44,

  /** 公会入口开关 */
  PB3OnOffType_Clan = 45,

  /** 绑定手机号开关 */
  PB3OnOffType_BindPhone = 46,

  /** 旧的绑定手机流程对老版本（6.4.5之前的版本）的开关 */
  PB3OnOffType_LoginBindPhone = 47,

  /** IOS必定闪退 */
  PB3OnOffType_Tc = 48,

  /** 实名认证总开关 */
  PB3OnOffType_Certification = 49,

  /** 实名认证房间弹窗 */
  PB3OnOffType_CertificationRoomShow = 50,

  /** 实名认证房间弹窗是否可关闭 */
  PB3OnOffType_CertificationRoomWinOpenClose = 51,

  /** 打字实名开关 */
  PB3OnOffType_CertifyWord = 52,

  /** 上麦实名开关 */
  PB3OnOffType_CertifyChair = 53,

  /** 修改个人资料实名开关 */
  PB3OnOffType_CertifyUpdateUserInfo = 54,

  /** 广播交友实名 */
  PB3OnOffType_CertifyBroadcastFriend = 55,

  /** 发头条要实名 */
  PB3OnOffType_CertifyHeadLine = 56,

  /** 发跳跳要实名 */
  PB3OnOffType_CertifyTiaoTiao = 57,

  /** 青少年模式 */
  PB3OnOffType_YoungModel = 58,

  /** 房主进房间实名弹窗 */
  PB3OnOffType_CertifyOwnweEnterRoom = 59,

  /** 接单开关 */
  PB3OnOffType_BillOrder = 60,

  /** 摇号抽奖开关 */
  PB3OnOffType_RoomLuckyDraw = 61,

  /** PC活动开关 */
  PB3OnOffType_PcActivity = 62,

  /** 点单:新手单(一元点单)开关 */
  PB3OnOffType_BillOrderNewPlayer = 63,

  /** 房间管控，上麦批准 */
  PB3OnOffType_ChairManager = 64,

  /** 云片短信验证屏蔽 */
  PB3OnOffType_YunpianSms = 65,

  /** 海外ip限制开关 */
  PB3OnOffType_OverseasIpLimit = 66,

  /** 历史名字屏蔽开关 */
  PB3OnOffType_OldNameLimit = 67,

  /** 【个人】页，【帮助与反馈】 */
  PB3OnOffType_HelpFeedback = 68,

  /** 派单开关 */
  PB3OnOffType_SendBill = 69,

  /** 接单榜开关 */
  PB3OnOffType_OrderRank = 70,

  /** 位置信息开关 */
  PB3OnOffType_OrderLocation = 71,

  /** 首页接引弹窗开关 */
  PB3OnOffType_ReceiveWindow = 72,

  /** 上8坑付费引导弹窗开关 */
  PB3OnOffType_ChargeGuide = 73,

  /** 获取房间聊天记录开关 */
  PB3OnOffType_RoomChatLog = 74,

  /** 麦序魅力值开关 */
  PB3OnOffType_OnChairCharm = 75,

  /** 龙珠开关 */
  PB3OnOffType_DragonBall = 76,

  /** 砸蛋私信屏蔽开关 */
  PB3OnOffType_CrackSelfMsg = 77,

  /** 派单弹窗开关 */
  PB3OnOffType_DispatchWindow = 78,

  /** 账号注销开关 */
  PB3OnOffType_DeleteAccount = 79,

  /** 点单不开始服务自动冻结 */
  PB3OnOffType_BillNotApplyFreeze = 80,

  /** 砸蛋主题开关 */
  PB3OnOffType_ThemeCrack = 81,

  /** 首充提示推送开关(针对用户) */
  PB3OnOffType_FirstChargeTipsPush = 84,

  /** 最近访客开关(针对用户) */
  PB3OnOffType_RecentVisitor = 85,

  /** 头像上传接入oss开关 */
  PB3OnOffType_UploadAccessOss = 86,

  /** 新的绑定手机流程的开关 */
  PB3OnOffType_BindPhoneV2 = 87,

  /** 鲸鱼活动 预告 开关 */
  PB3OnOffType_WhaleActivityNotice = 88,

  /** 鲸鱼活动 提示 开关 */
  PB3OnOffType_WhaleActivityTips = 89,

  /** 旧的绑定手机流程对新版本（6.4.5版本）的开关 */
  PB3OnOffType_BindPhoneLogin = 90,

  /** 版本内容弹窗 开关 */
  PB3OnOffType_VersionContent = 91,

  /** 清除聊天记录 */
  PB3OnOffType_ClearImRecords = 92,

  /** 跳转到QQ客服 */
  PB3OnOffType_JumpToQq = 93,

  /** 氧吧功能 */
  PB3OnOffType_OxygenBar = 94,

  /** 隐私设置开关 */
  PB3OnOffType_PrivacySetting = 95,

  /** 氧吧仅对公会成员可见 */
  PB3OnOffType_OxygenBarClanMemberOnly = 96,

  /** 氧吧gif动态开关 */
  PB3OnOffType_OxygenBarTrendGif = 97,

  /** 资料审核开关 */
  PB3OnOffType_DataAudit = 98,

  /** 点单推送开关 */
  PB3OnOffType_BillPush = 99,

  /** 挚友头衔修改开关 */
  PB3OnOffType_IntimateTitleChange = 100,

  /** 安卓支付宝内购 */
  PB3OnOffType_InnerAli = 101,

  /** 安卓微信内购 */
  PB3OnOffType_InnerTec = 102,

  /** 招行大额充值 */
  PB3OnOffType_CmbVip = 103,

  /** 房间广播交友开关 */
  PB3OnOffType_RoomBroadcastFriend = 110,

  /** 启动新点单 */
  PB3OnOffType_BillOrderNew = 111,

  /** 点单: 浏览通知显示开关 */
  PB3OnOffType_BillPlayerVisitVisible = 112,

  /** 广播交友文字过滤开关 */
  PB3OnOffType_TextFilterBroadcastFriend = 113,

  /** 私聊文字过滤开关 */
  PB3OnOffType_TextFilterPrivateChat = 114,

  /** 爵位总开关 */
  PB3OnOffType_Nobility = 115,

  /** ios购买爵位金币开关 */
  PB3OnOffType_BuyNobilityGold = 116,

  /** 个人：爵位特权，专属客服开关 */
  PB3OnOffType_ExclusiveService = 117,

  /** 个人：名人堂开关 */
  PB3OnOffType_NobilityFamous = 118,

  /** 未成年人保护开关 */
  PB3OnOffType_ProtectionOfMinors = 119,

  /** 传闻实名开关 */
  PB3OnOffType_Anonymous = 120,

  /** 性别开关 */
  PB3OnOffType_Gender = 121,

  /** 首页绑定手机号半窗开关 */
  PB3OnOffType_HomepageBindPhone = 122,

  /** 防沉迷开关 */
  PB3OnOffType_AntiAddiction = 200,

  /** ios大额充值开关 */
  PB3OnOffType_IosVipCmb = 210,

  /** 站外金币购买爵位 */
  PB3OnOffType_H5GoldBuyNobility = 212,

  /** 动态头像开关 */
  PB3OnOffType_DynamicIcon = 213,

  /** 充值需要实名认证 */
  PB3OnOffType_CertifyRecharge = 214,

  /** 兑换需要实名认证 */
  PB3OnOffType_CertifyExchange = 215,

  /** 消费金币需要实名认证，如果打开有一定额度限制 */
  PB3OnOffType_CertifyCostCoin = 216,

  /** 大额支付购买爵位 */
  PB3OnOffType_BuyNobilityVip = 230,
  PB3OnOffType_Tg = 240,

  /** 接待语审核开关 */
  PB3OnOffType_GreetContent = 241,

  /** 百万森林跳转入口开关 */
  PB3OnOffType_RootMillionForest = 242,

  /** 底部导航播放器开关 */
  PB3OnOffType_MainTabMediaPlayer = 243,

  /** 兑换码开关入口 */
  PB3OnOffType_ExchangeCode = 244,

  /** 点单大神微信浏览开关入口 */
  PB3OnOffType_WechatVisitor = 245,

  /** 点单大神微信订单开关入口 */
  PB3OnOffType_WechatOrder = 246,

  /** 点单大神微信私聊开关入口 */
  PB3OnOffType_WechatMsg = 247,

  /** 个人红包开关，在房间内是否能看见鲸鱼吐泡泡入口 */
  PB3OnOffType_PersonalRedEnvelope = 248,

  /** 幸运值保底 */
  PB3OnOffType_LuckyValue = 249,

  /** 点单评价开关 */
  PB3OnOffType_BillEvaluation = 250,

  /** 一键绑定手机 */
  PB3OnOffType_OneStepBindPhone = 251,

  /** CHANGE_GAME_PATTERN_BUTTON = 252;         // 房间内切换游戏模式按钮 */
  PB3OnOffType_MultiClientOnline = 253,

  /** 开麦实名开关 */
  PB3OnOffType_CertifyOpenMic = 254,

  /** 点单大神微信派单通知开关入口 */
  PB3OnOffType_WechatBill = 255,

  /**  挚友回馈 */
  PB3OnOffType_IntimateGiveBack = 256,

  /** 荣誉殿堂开关 */
  PB3OnOffType_EffectHonourHeaven = 257,

  /** 荣耀墙开关 */
  PB3OnOffType_EffectHonourWall = 258,

  /** 勋章墙开关 */
  PB3OnOffType_EffectMedalWall = 259,

  /** 首页兴趣导航开关 */
  PB3OnOffType_PhomeInterestNav = 260,

  /** app页登录同意劳务协议开关 */
  PB3OnOffType_AppLoginAgree = 261,

  /** 歌词同步开关 */
  PB3OnOffType_SongLyricSync = 262,

  /** 留言开关 */
  PB3OnOffType_LeaveMessage = 263,

  /** 盛典横幅开关 */
  PB3OnOffType_AnnualRoomBanner = 264,

  /** 房间宝箱开关 */
  PB3OnOffType_RoomBoxReward = 265,

  /** 特效续费开关 */
  PB3OnOffType_EffectRenew = 267,

  /** 秒提开关 */
  PB3OnOffType_FastWithdraw = 268,

  /** 拍卖记录开关 */
  PB3OnOffType_AuctionRecord = 269,

  /** 亲密粉丝权限开关 */
  PB3OnOffType_IntimateFans = 270,

  /** 亲密粉丝入口开关 */
  PB3OnOffType_IntimateFansEntry = 271,

  /** 小程序下载开关 */
  PB3OnOffType_MiniDownload = 280,

  /** 充值验证开关 */
  PB3OnOffType_ChargeVerify = 281,

  /** 登录ip限制功能开关 */
  PB3OnOffType_LoginIpLimit = 282,

  /** 登录ip限制功能白名单开关 */
  PB3OnOffType_LoginIpLimitWhite = 283,

  /** 活动额外奖励开关 */
  PB3OnOffType_ActPremiums = 284,

  /** 氧吧文字限制动态开关 */
  PB3OnOffType_CommunityPicture = 290,

  /** 默认头像库开关 */
  PB3OnOffType_DefaultIcon = 292,

  /** 底部导航栏开关 */
  PB3OnOffType_MainTabMessage = 300,

  /** 根据名称搜索房间开关 */
  PB3OnOffType_SearchRoomName = 301,

  /** 黄金水滴开关 */
  PB3OnOffType_CrackEggGold = 307,

  /** 违规示例开关 */
  PB3OnOffType_ViolationExample = 308,

  /** 捞鲸老板开关 */
  PB3OnOffType_WhaleBoss = 309,

  /** 打开通知权限提醒 */
  PB3OnOffType_OpenNoticePowerTips = 320,

  /** 身份证资料开关 */
  PB3OnOffType_CertifySource = 330,

  /** 语音打招呼开关 */
  PB3OnOffType_VoiceGreeting = 400,

  /** PC房间欢迎语个人开关 */
  PB3OnOffType_PcRoomGreetingPersonal = 401,

  /** 网易易盾开关，不用鉴权 */
  PB3OnOffType_YiDun = 403,

  /** 公屏快速发言 */
  PB3OnOffType_PublicScreenFastSpeak = 404,

  /** 礼物图鉴收集 */
  PB3OnOffType_GiftCollect = 405,

  /** 粉丝召回开关 */
  PB3OnOffType_PlayerFansRecall = 407,

  /** PC冷启动自动上传歌单开关 */
  PB3OnOffType_PcAutoUploadSong = 408,

  /** 移动端互动电子歌单开关 */
  PB3OnOffType_MobileOrderSong = 409,

  /** 背包特效入口 */
  PB3OnOffType_EffectBagPutOn = 410,

  /** PC端互动电子歌单开关 */
  PB3OnOffType_PcOrderSong = 411,

  /** 视频划卡底部按钮 */
  PB3OnOffType_VideoButton = 412,

  /** 点单大神入口 */
  PB3OnOffType_BillOrderMaster = 413,

  /** 成为点单大神入口 */
  PB3OnOffType_BillOrderOpenEntry = 415,

  /** 首页划卡功能 */
  PB3OnOffType_MainTabSwipe = 417,

  /** 腾讯实名 */
  PB3OnOffType_TencentCertify = 420,

  /** 小游戏订阅推送 */
  PB3OnOffType_GameChannelPush = 421,

  /** 动态加载订阅推送 */
  PB3OnOffType_DynamicLoadPush = 422,

  /** 视频划卡底部按钮走配置 */
  PB3OnOffType_VideoButtonConf = 423,

  /** phome上传洞察事件开关 */
  PB3OnOffType_PhomeReport = 424,

  /** 定时在线福利灰度开关 */
  PB3OnOffType_OnTimeWelfare = 425,

  /** 登录人数限制开关 */
  PB3OnOffType_LoginLimit = 426,

  /** 关注限制 */
  PB3OnOffType_ConcernLimit = 427,

  /** 私聊文案过滤走本地 */
  PB3OnOffType_ChatTextFilter = 428,

  /** 添加小号 */
  PB3OnOffType_AddSubsidiary = 429,

  /** 视频划卡私聊自动发消息开关 */
  PB3OnOffType_VideoImOnOff = 430,

  /** 来电功能开关 */
  PB3OnOffType_FirstPayCpBoss = 431,

  /** 来电陪玩开关 */
  PB3OnOffType_FirstPayCpOrder = 432,

  /** 来电通知设置显示开关 */
  PB3OnOffType_FirstPayCpOnOffShow = 433,

  /** 广播交友订阅推送 */
  PB3OnOffType_BroadcastMakeFriendPush = 435,

  /** 活动房间角标通知订阅推送开关 */
  PB3OnOffType_ActivityNoticePush = 436,

  /** H5推送走订阅方式开关 */
  PB3OnOffType_ActivityPush = 437,

  /** IM送礼开关 */
  PB3OnOffType_ImPresentGift = 438,

  /** 撩妹提示开关 */
  PB3OnOffType_ImImFlirtTips = 441,

  /** 礼物重构开关 */
  PB3OnOffType_GiftRefactoring = 443,

  /** 视频入选通知开关 */
  PB3OnOffType_VideoNoticeOnOff = 450,

  /** 动态审核转心网开关 */
  PB3OnOffType_TrendToXwOnOff = 455,

  /** IM送礼弹窗开关 */
  PB3OnOffType_ImPresentWindows = 451,

  /** 师徒关系显示开关 */
  PB3OnOffType_TeacherStudentOnOff = 456,

  /** 礼物图鉴特典收藏开关 */
  PB3OnOffType_GiftCollectActGift = 457,

  /** CP挂件未付费用户显示 */
  PB3OnOffType_PendantCpUnpaid = 458,

  /** IM互动技能开关 */
  PB3OnOffType_VideoImInteractive = 460,

  /** 开黑广播订阅推送开关 */
  PB3OnOffType_GameGangUp = 461,

  /** IM送礼设置开关是否显示 */
  PB3OnOffType_ImPresentGiftSetting = 462,

  /** IM-1v1通话离线通知 */
  PB3OnOffType_ImChatCpOfflinePush = 463,

  /** ios iap支付1元 */
  PB3OnOffType_IosOneYuan = 465,

  /** 首充有礼开关 */
  PB3OnOffType_FirstPayGift = 466,

  /** 通过elasticsearch搜索用户和房间 */
  PB3OnOffType_SearchPlayerOrRoomByEs = 467,

  /** IM主播代聊开关 */
  PB3OnOffType_ImAutoChat = 468,

  /** 名片任务栏显示开关 */
  PB3OnOffType_CardTask = 470,

  /** 浇花2.0模式 */
  PB3OnOffType_CrackeggVsn2 = 471,

  /** IOS拉取CP曝光日志开关 */
  PB3OnOffType_IosGrabCpConfLog = 472,

  /** 个播主持白名单 */
  PB3OnOffType_SingleLiveHostWhiteList = 474,

  /** 优惠券开关 */
  PB3OnOffType_Coupon = 475,

  /** CP弹窗强弹开关 */
  PB3OnOffType_CpWindowsShow = 476,

  /** 亲密粉丝权限2.0开关 */
  PB3OnOffType_IntimateFansVsn2 = 477,

  /** 我的亲密粉丝徽章入口开关 */
  PB3OnOffType_IntimateFansEnteryVsn2 = 478,

  /** 鲸喜盲盒开关 */
  PB3OnOffType_ChatCpBlackWhale = 479,

  /** IM 语音开关 */
  PB3OnOffType_ImAudio = 480,

  /** 礼物明细-其他tab显示开关 */
  PB3OnOffType_IntimateTicketShow = 481,

  /** 上月兑换金币等级奖励开关 */
  PB3OnOffType_ExchangeCoinLevel = 482,

  /** 新货币开关 */
  PB3OnOffType_NewWorthToken = 484,

  /** 密码异地登录无需短信验证开关 */
  PB3OnOffType_AnomalyWhile = 485,

  /** 钻石水滴购买开关，开启后，3级以上的用户可以直接购买钻石水滴参与浇花活动 */
  PB3OnOffType_HammerDo = 486,

  /** 黑金水滴购买开关，开启后，3级以上的用户可以直接购买黑金水滴参与浇花活动 */
  PB3OnOffType_HammerBlackGold = 487,

  /** 个人佣金提现开关 */
  PB3OnOffType_PlayerDepositSwitch = 488,

  /** 进房播放PK开始动画开关 */
  PB3OnOffType_PkStartSvgaShow = 489,

  /** 推广员系统召回任务开关 */
  PB3OnOffType_PromoterRecall = 490,

  /** CP列表性别筛选开关 */
  PB3OnOffType_CpSexSelect = 491,

  /** CP同城标签开关 */
  PB3OnOffType_CpSameCity = 492,

  /** 佣金转换免冻结白名单开关 */
  PB3OnOffType_DepositWhite = 493,

  /** 用户行为提醒(勿动) */
  PB3OnOffType_BehaviorGiveAlarm = 494,

  /** 礼物榜开关 */
  PB3OnOffType_GiftRankDialog = 495,

  /** IM骚扰投诉开关 */
  PB3OnOffType_ImHarassComplaints = 496,

  /** 房间佣金提现开关 */
  PB3OnOffType_RoomDepositSwitch = 497,

  /** 家族佣金提现开关 */
  PB3OnOffType_FamilyDepositSwitch = 498,

  /** 前端展示营收热度值 */
  PB3OnOffType_ShowRevenueHeatValue = 499,

  /** miko 新加开关 */
  PB3OnOffType_IdLogin = 500,

  /** Facebook登录入口开关 */
  PB3OnOffType_FacebookLogin = 501,

  /** Twitter登录入口开关 */
  PB3OnOffType_TwitterLogin = 502,

  /**
   * SINGLE_LIVE = 500;                          // 个播灰度开关
   * PLAYER_INFO_PK_DATA = 501;                  // 用户信息PK榜单数据
   **/
  PB3OnOffType_AliBonus = 503,

  /** 半糖-安卓支付宝充值内购 */
  PB3OnOffType_InnerAliFish = 507,

  /** 半糖-安卓微信充值内购 */
  PB3OnOffType_InnerTecFish = 508,

  /** 异地账密登录验证 */
  PB3OnOffType_RemoteLogin = 504,

  /** 非常用设备多次密码错误登录验证 */
  PB3OnOffType_RemoteProtect = 505,

  /** 综合搜索开关 */
  PB3OnOffType_CompositeSearch = 509,

  /** 综合搜索 搜索文本开关 打开可以搜文本 关闭不能搜文本 */
  PB3OnOffType_CompositeTextSearch = 510,

  /** 公会签约成员实名限制 */
  PB3OnOffType_ClanSignMemberCertify = 511,

  /** 图鉴等级开关 */
  PB3OnOffType_GiftCollectLevel = 506,

  /** 排行榜分级展示开关 */
  PB3OnOffType_RankShow = 512,

  /** 热点火力值排行榜灰度开关 */
  PB3OnOffType_HotFirepowerRank = 514,

  /** 关闭动态发布 */
  PB3OnOffType_CloseCommentPublish = 516,

  /** 热点空间动态入口显示 */
  PB3OnOffType_HotPointSpaceShow = 518,

  /** 资料页IP地区显示 */
  PB3OnOffType_UserIpAreaShow = 519,

  /** 动态IP地区显示 */
  PB3OnOffType_TrendsIpAreaShow = 520,

  /** 首页礼物总排行榜展示开关 */
  PB3OnOffType_IndexGiftRank = 521,

  /** IM界面弹窗 */
  PB3OnOffType_ImCpDialog = 522,

  /** 榜单积分修改与相关榜单规则展示开关 */
  PB3OnOffType_RankHideRule = 525,

  /** 个人空间挚友开关 */
  PB3OnOffType_ZoneIntimateTab = 526,

  /** breathing 新加开关 */
  PB3OnOffType_InviteAward = 600,

  /** 账号注销开关 */
  PB3OnOffType_CancelAccount = 601,

  /** 钻石兑换金币开关 */
  PB3OnOffType_ExchangeDiamondToGold = 602,

  /** Google in-app billing 内购开关 */
  PB3OnOffType_GoogleIab = 603,

  /** Apple in-app purchase 内购开关 */
  PB3OnOffType_AppleIap = 604,

  /** TL_SOUND_MODE = 605;                        // 天籁模式 */
  PB3OnOffType_GiveAwayDiamond = 606,
};

GPBEnumDescriptor *PB3OnOffType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3OnOffType_IsValidValue(int32_t value);

#pragma mark - Enum PB3EffectType

/** 特效类型 */
typedef GPB_ENUM(PB3EffectType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3EffectType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3EffectType_EffectTypeNone = 0,

  /** 尾灯 */
  PB3EffectType_EffectTypeChatLight = 1,

  /** 进场特效 */
  PB3EffectType_EffectTypeEnterEffect = 2,

  /** 上麦特效 */
  PB3EffectType_EffectTypeChairEffect = 3,

  /** 进场尾灯 */
  PB3EffectType_EffectTypeEnterLight = 4,

  /** 个人名片 */
  PB3EffectType_EffectTypeUserCard = 5,

  /** 礼物之王 */
  PB3EffectType_EffectTypeGiftKing = 6,

  /** 渠道前缀 */
  PB3EffectType_EffectTypeChanPrefix = 7,

  /** 勋章 */
  PB3EffectType_EffectTypeMedal = 8,

  /** 麦位特效 */
  PB3EffectType_EffectTypeOnChair = 9,

  /** 麦位气泡 */
  PB3EffectType_EffectTypeChairChat = 10,

  /** 座驾 */
  PB3EffectType_EffectTypeDriver = 11,

  /** 名片边框 */
  PB3EffectType_EffectTypeNewPlayerCard = 12,

  /** 进场横幅爵位 */
  PB3EffectType_EffectTypeBanner = 13,

  /** 进场活动横幅 */
  PB3EffectType_EffectTypeActivityBanner = 14,

  /** 荣耀 */
  PB3EffectType_EffectTypeHonour = 15,

  /** 心情 */
  PB3EffectType_EffectTypeMood = 16,

  /** IM聊天背景 */
  PB3EffectType_EffectTypeImbackground = 17,

  /** 师徒勋章 */
  PB3EffectType_EffectTypeTeacherMedal = 18,

  /** 活动认证 */
  PB3EffectType_EffectTypeActivityCertification = 19,

  /** 心动通话特效 */
  PB3EffectType_EffectTypeCpchat = 20,
};

GPBEnumDescriptor *PB3EffectType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3EffectType_IsValidValue(int32_t value);

#pragma mark - Enum PB3EffectTimeType

/** 300 */
typedef GPB_ENUM(PB3EffectTimeType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3EffectTimeType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /**  一直计时 */
  PB3EffectTimeType_EffectTimeTypeAwary = 0,

  /**  使用 */
  PB3EffectTimeType_EffectTimeTypeUse = 1,
};

GPBEnumDescriptor *PB3EffectTimeType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3EffectTimeType_IsValidValue(int32_t value);

#pragma mark - Enum PB3EffectTipsType

/** 300 */
typedef GPB_ENUM(PB3EffectTipsType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3EffectTipsType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /**  获得提示 */
  PB3EffectTipsType_EffectTipsTypeGain = 0,

  /**  临时提示 */
  PB3EffectTipsType_EffectTipsTypeTimeout = 1,
};

GPBEnumDescriptor *PB3EffectTipsType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3EffectTipsType_IsValidValue(int32_t value);

#pragma mark - Enum PB3EffectMedalWall

/** 未点亮勋章墙显示 */
typedef GPB_ENUM(PB3EffectMedalWall) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3EffectMedalWall_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 隐藏 */
  PB3EffectMedalWall_Hide = 0,

  /** 显示 */
  PB3EffectMedalWall_Show = 1,
};

GPBEnumDescriptor *PB3EffectMedalWall_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3EffectMedalWall_IsValidValue(int32_t value);

#pragma mark - Enum PB3EffectSubType

typedef GPB_ENUM(PB3EffectSubType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3EffectSubType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 无 */
  PB3EffectSubType_EffectSubTypeNull = 0,

  /** 普通尾灯 */
  PB3EffectSubType_TailLightNormal = 1,

  /** 礼物之王尾灯 */
  PB3EffectSubType_TailGiftKing = 2,
};

GPBEnumDescriptor *PB3EffectSubType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3EffectSubType_IsValidValue(int32_t value);

#pragma mark - Enum PB3EffectMedalType

/** 勋章类型 */
typedef GPB_ENUM(PB3EffectMedalType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3EffectMedalType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3EffectMedalType_EmtNone = 0,

  /** 师徒勋章 */
  PB3EffectMedalType_EmtTeacher = 1,
};

GPBEnumDescriptor *PB3EffectMedalType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3EffectMedalType_IsValidValue(int32_t value);

#pragma mark - Enum PB3EffectGroupType

/** 特效分组类型 */
typedef GPB_ENUM(PB3EffectGroupType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3EffectGroupType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3EffectGroupType_EgtNone = 0,

  /** 师徒勋章分组 */
  PB3EffectGroupType_EgtTeacher = 1,
};

GPBEnumDescriptor *PB3EffectGroupType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3EffectGroupType_IsValidValue(int32_t value);

#pragma mark - Enum PB3EffectExpandType

/** 特效拓展类型 */
typedef GPB_ENUM(PB3EffectExpandType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3EffectExpandType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3EffectExpandType_ExpandTypeZero = 0,

  /** 聊天特效资源 */
  PB3EffectExpandType_ChatEffectResource = 1,
};

GPBEnumDescriptor *PB3EffectExpandType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3EffectExpandType_IsValidValue(int32_t value);

#pragma mark - Enum PB3RoomPanelShowType

typedef GPB_ENUM(PB3RoomPanelShowType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3RoomPanelShowType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 固定显示 */
  PB3RoomPanelShowType_RpstAll = 0,

  /** 拥有显示（库存显示） */
  PB3RoomPanelShowType_RpstOwner = 1,

  /** 固定不显示 */
  PB3RoomPanelShowType_RpstNot = 2,
};

GPBEnumDescriptor *PB3RoomPanelShowType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3RoomPanelShowType_IsValidValue(int32_t value);

#pragma mark - Enum PB3CertifType

/** 认证类型 */
typedef GPB_ENUM(PB3CertifType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3CertifType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 声优陪聊 */
  PB3CertifType_CtVoice = 0,

  /** 游戏陪玩 */
  PB3CertifType_CtGame = 1,

  /** 挂机陪聊 */
  PB3CertifType_CtChat = 255,
};

GPBEnumDescriptor *PB3CertifType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3CertifType_IsValidValue(int32_t value);

#pragma mark - Enum PB3ModelOnOffStatus

/** 新开关模式状态 */
typedef GPB_ENUM(PB3ModelOnOffStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ModelOnOffStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 全关 */
  PB3ModelOnOffStatus_AllOff = 0,

  /** 全开 */
  PB3ModelOnOffStatus_AllOn = 1,

  /** 白名单 */
  PB3ModelOnOffStatus_Whitelist = 2,
};

GPBEnumDescriptor *PB3ModelOnOffStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ModelOnOffStatus_IsValidValue(int32_t value);

#pragma mark - Enum PB3RankType

typedef GPB_ENUM(PB3RankType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3RankType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位，不使用 */
  PB3RankType_RtZero = 0,

  /** 魅力榜 */
  PB3RankType_RtCharm = 1,

  /** 财富榜 */
  PB3RankType_RtWealth = 2,

  /** 礼物榜 */
  PB3RankType_RtGift = 3,

  /** 接单榜 */
  PB3RankType_RtOrder = 4,

  /** 每小时魅力榜 */
  PB3RankType_RtCharmHour = 5,

  /** 每小时财富榜 */
  PB3RankType_RtWealthHour = 6,
};

GPBEnumDescriptor *PB3RankType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3RankType_IsValidValue(int32_t value);

#pragma mark - Enum PB3LoadClickType

typedef GPB_ENUM(PB3LoadClickType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3LoadClickType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不使用 */
  PB3LoadClickType_LctZero = 0,

  /** 挚友详情 */
  PB3LoadClickType_LctIntimateDetail = 1,

  /** 挚友商城 */
  PB3LoadClickType_LctIntimateStore = 2,

  /** 挚友头衔 */
  PB3LoadClickType_LctIntimateTitle = 3,
};

GPBEnumDescriptor *PB3LoadClickType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3LoadClickType_IsValidValue(int32_t value);

#pragma mark - Enum PB3OwnerInRoom

/** 房主是否在自己的房间 1在 0不在 */
typedef GPB_ENUM(PB3OwnerInRoom) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3OwnerInRoom_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 不在 */
  PB3OwnerInRoom_NotInSelfRoom = 0,

  /** 在 */
  PB3OwnerInRoom_InSelfRoom = 1,
};

GPBEnumDescriptor *PB3OwnerInRoom_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3OwnerInRoom_IsValidValue(int32_t value);

#pragma mark - Enum PB3UploadType

/** 上传类型(需跟中台的UploadType同步更新) */
typedef GPB_ENUM(PB3UploadType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3UploadType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3UploadType_TypeZero = 0,

  /** 房间头像 (不用，只是为兼容咪呀) */
  PB3UploadType_HeadAlbumImg = 1,

  /** 用户头像 */
  PB3UploadType_HeadIconImg = 2,

  /** 咪窝(动态)图片 */
  PB3UploadType_DynamicsImg = 3,

  /** 客户端日志 */
  PB3UploadType_ClientLog = 4,

  /** 举报 */
  PB3UploadType_TipOffsImg = 5,

  /** 身份证 */
  PB3UploadType_Indetity = 6,

  /** 私聊/公屏图片，(有生命周期，私聊消息需要前端保存在本地) */
  PB3UploadType_Pmmedia = 7,

  /** 声音 */
  PB3UploadType_Voice = 8,

  /** 接单声音 */
  PB3UploadType_BillVoice = 9,

  /** 接单图片 */
  PB3UploadType_BillPicture = 10,

  /** 安利与吐槽单张图片 */
  PB3UploadType_CmsSingleImg = 11,

  /** 安利与吐槽多张图片 */
  PB3UploadType_CmsCombineImg = 12,

  /** 社区动态图片 */
  PB3UploadType_CommunityImg = 13,

  /** 社区动态视频 */
  PB3UploadType_CommunityVideo = 14,

  /** 社区动态声音 */
  PB3UploadType_CommunityAudio = 15,

  /** 社区圈子相片 */
  PB3UploadType_CommunityGroupImg = 16,

  /** 个人封面图 */
  PB3UploadType_ZoneCover = 17,

  /** 用户资料声音 */
  PB3UploadType_UserVoice = 18,

  /** 主播审核图片 */
  PB3UploadType_AnchorImg = 19,

  /** 主播审核视频 */
  PB3UploadType_AnchorVideo = 20,

  /** 实人认证图片 */
  PB3UploadType_FaceIdimg = 21,

  /** 实人认证视频 */
  PB3UploadType_FaceIdvideo = 22,

  /** 个人背景图 */
  PB3UploadType_BackgroundImg = 23,

  /** 频道图标 */
  PB3UploadType_ChannelIcon = 24,

  /** 微信机器人登录二维码 */
  PB3UploadType_WxrobotQrcode = 25,

  /** 打招呼语音 */
  PB3UploadType_GreetVoice = 26,

  /** 歌单图片 */
  PB3UploadType_SongLibraryImg = 27,

  /** 社区标签图片 */
  PB3UploadType_CommunityTagImg = 28,

  /** 个人标签 */
  PB3UploadType_PersonLabelImg = 29,

  /** 官网音乐 */
  PB3UploadType_OfficialWebMusic = 30,

  /** 客服视频 */
  PB3UploadType_KefuVideo = 31,

  /** 客服视频封面图 */
  PB3UploadType_KefuVideoImg = 32,

  /** 非鉴权上传 */
  PB3UploadType_NoAuthUplgpoad = 33,

  /** 活动非鉴权上传 */
  PB3UploadType_ActivityNoAuthUpload = 34,

  /** 节目单图片 */
  PB3UploadType_RoomProgramPic = 35,

  /** 节目单项目封面图 */
  PB3UploadType_RoomProgramShowCover = 36,

  /** 官网音乐，存放在项目私有的 bucket 中 */
  PB3UploadType_OfficialMusic = 37,

  /** 身份证信息 */
  PB3UploadType_CertifyImg = 38,

  /** 家族入驻图 公会入驻 */
  PB3UploadType_ClanApply = 39,

  /** 签名 */
  PB3UploadType_Autograph = 40,

  /** 协议文件 */
  PB3UploadType_Protocol = 41,

  /** 欢迎语音 */
  PB3UploadType_WelcomeVoice = 42,
};

GPBEnumDescriptor *PB3UploadType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3UploadType_IsValidValue(int32_t value);

#pragma mark - Enum PB3UploadSubType

typedef GPB_ENUM(PB3UploadSubType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3UploadSubType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 保留位 */
  PB3UploadSubType_UstNone = 0,

  /** 身份证正面 */
  PB3UploadSubType_UstCertifyImgIdCardFront = 1,

  /** 身份证反面 */
  PB3UploadSubType_UstCertifyImgIdCardReverse = 2,

  /** 省份证签名 */
  PB3UploadSubType_UstAutographIdCard = 3,

  /** 自由职业签约 */
  PB3UploadSubType_UstAutographFreelance = 4,

  /** 提领签名 */
  PB3UploadSubType_UstAutographWithdrawal = 5,

  /** 提领确认签名 */
  PB3UploadSubType_UstAutographWithdrawalConfirmation = 6,
};

GPBEnumDescriptor *PB3UploadSubType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3UploadSubType_IsValidValue(int32_t value);

#pragma mark - Enum PB3VisitorInfoState

/** 最近访客信息 */
typedef GPB_ENUM(PB3VisitorInfoState) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3VisitorInfoState_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3VisitorInfoState_VisNormal = 0,

  /** 隐藏 */
  PB3VisitorInfoState_VisHide = 1,

  /** 隐身 */
  PB3VisitorInfoState_VisInvisible = 2,

  /** 已删除 */
  PB3VisitorInfoState_VisDelete = 3,
};

GPBEnumDescriptor *PB3VisitorInfoState_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3VisitorInfoState_IsValidValue(int32_t value);

#pragma mark - Enum PB3VisitorOptType

typedef GPB_ENUM(PB3VisitorOptType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3VisitorOptType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3VisitorOptType_VotNormal = 0,

  /** 隐藏 */
  PB3VisitorOptType_VotHide = 1,

  /** 取消隐藏 */
  PB3VisitorOptType_VotUnHide = 2,

  /** 隐身 */
  PB3VisitorOptType_VotInvisible = 3,

  /** 取消隐身 */
  PB3VisitorOptType_VotUnInvisible = 4,

  /** 删除 */
  PB3VisitorOptType_VotDelete = 5,
};

GPBEnumDescriptor *PB3VisitorOptType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3VisitorOptType_IsValidValue(int32_t value);

#pragma mark - Enum PB3VisitorOptLimitType

/** 最近访客操作限制类型 */
typedef GPB_ENUM(PB3VisitorOptLimitType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3VisitorOptLimitType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3VisitorOptLimitType_NoneLimit = 0,
  PB3VisitorOptLimitType_WealthLv = 1,
  PB3VisitorOptLimitType_CharmLv = 2,
  PB3VisitorOptLimitType_WealthLvOrCharmLv = 3,
  PB3VisitorOptLimitType_CharmLvAndWealthLv = 4,
};

GPBEnumDescriptor *PB3VisitorOptLimitType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3VisitorOptLimitType_IsValidValue(int32_t value);

#pragma mark - Enum PB3DecorateType

/** 房间装饰类型 */
typedef GPB_ENUM(PB3DecorateType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3DecorateType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3DecorateType_DtNone = 0,
  PB3DecorateType_DtRoomBackdrop = 1,
  PB3DecorateType_DtRoomSign = 2,
  PB3DecorateType_DtRoomFrame = 3,
};

GPBEnumDescriptor *PB3DecorateType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3DecorateType_IsValidValue(int32_t value);

#pragma mark - Enum PB3RoomFlagType

/** 房间类型 */
typedef GPB_ENUM(PB3RoomFlagType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3RoomFlagType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 男厅 */
  PB3RoomFlagType_RtManHall = 0,

  /** 女厅 */
  PB3RoomFlagType_RtWomenHall = 1,

  /** 点唱 */
  PB3RoomFlagType_RtOrderSing = 2,

  /** 相亲交友 */
  PB3RoomFlagType_RtMakeFriend = 3,

  /** pia戏 */
  PB3RoomFlagType_RtPia = 4,

  /** 电台 */
  PB3RoomFlagType_RtRadio = 5,

  /** 热门专场 */
  PB3RoomFlagType_RtHeat = 6,

  /** 其他 */
  PB3RoomFlagType_RtOther = 7,
};

GPBEnumDescriptor *PB3RoomFlagType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3RoomFlagType_IsValidValue(int32_t value);

#pragma mark - Enum PB3AuditStatus

typedef GPB_ENUM(PB3AuditStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3AuditStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 默认 审核通过 */
  PB3AuditStatus_AsAuditPass = 0,

  /** 审核中 */
  PB3AuditStatus_AsAuditing = 1,

  /** 审核拒绝 */
  PB3AuditStatus_AsAuditRefuse = 2,
};

GPBEnumDescriptor *PB3AuditStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3AuditStatus_IsValidValue(int32_t value);

#pragma mark - Enum PB3FriendIMType

typedef GPB_ENUM(PB3FriendIMType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3FriendIMType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3FriendIMType_FitNone = 0,
  PB3FriendIMType_FitFollow = 1,
  PB3FriendIMType_FitFriend = 2,
};

GPBEnumDescriptor *PB3FriendIMType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3FriendIMType_IsValidValue(int32_t value);

#pragma mark - Enum PB3EffectUseType

typedef GPB_ENUM(PB3EffectUseType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3EffectUseType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 卸下 */
  PB3EffectUseType_EutUnequip = 0,

  /** 穿戴 */
  PB3EffectUseType_EutEquip = 1,
};

GPBEnumDescriptor *PB3EffectUseType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3EffectUseType_IsValidValue(int32_t value);

#pragma mark - Enum PB3PlayerFlagKey

typedef GPB_ENUM(PB3PlayerFlagKey) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3PlayerFlagKey_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3PlayerFlagKey_PfkNone = 0,

  /** 点单主播权限    对应的value为 enum PFVBillPlayerAuth{} */
  PB3PlayerFlagKey_PfkBillPlayerAuth = 1,

  /** 爵位，对应value为使用的爵位ID */
  PB3PlayerFlagKey_PfkNobility = 2,

  /** 是否未成年 */
  PB3PlayerFlagKey_PfkIsMinors = 3,
};

GPBEnumDescriptor *PB3PlayerFlagKey_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3PlayerFlagKey_IsValidValue(int32_t value);

#pragma mark - Enum PB3PFVBillPlayerAuth

/** PlayerFlagValue... */
typedef GPB_ENUM(PB3PFVBillPlayerAuth) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3PFVBillPlayerAuth_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3PFVBillPlayerAuth_PfvbpaNone = 0,

  /** 不是主播 */
  PB3PFVBillPlayerAuth_PfvbpaNoAuth = 1,

  /** 是主播,权限正常 */
  PB3PFVBillPlayerAuth_PfvbpaAuth = 2,

  /** 是主播,权限已被冻结 */
  PB3PFVBillPlayerAuth_PfvbpaAuthFrozen = 3,
};

GPBEnumDescriptor *PB3PFVBillPlayerAuth_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3PFVBillPlayerAuth_IsValidValue(int32_t value);

#pragma mark - Enum PB3CommonOperType

/** 通用操作 */
typedef GPB_ENUM(PB3CommonOperType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3CommonOperType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3CommonOperType_CmnOperNone = 0,

  /** 增加 */
  PB3CommonOperType_CmnOperAdd = 1,

  /** 删除 */
  PB3CommonOperType_CmnOperDel = 2,
};

GPBEnumDescriptor *PB3CommonOperType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3CommonOperType_IsValidValue(int32_t value);

#pragma mark - Enum PB3ChargeCateType

typedef GPB_ENUM(PB3ChargeCateType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ChargeCateType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 普通充值 */
  PB3ChargeCateType_CctNormal = 0,

  /** 活动抽卡无金币充值 */
  PB3ChargeCateType_CctActCard = 1,
};

GPBEnumDescriptor *PB3ChargeCateType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ChargeCateType_IsValidValue(int32_t value);

#pragma mark - Enum PB3AuthType

/** 歌手、声优认证类型 */
typedef GPB_ENUM(PB3AuthType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3AuthType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 无认证 */
  PB3AuthType_AuthTypeNone = 0,

  /** 歌手认证 */
  PB3AuthType_AuthTypeSinger = 1,

  /** 声优认证 */
  PB3AuthType_AuthTypeVoicer = 2,

  /** 颜值认证 */
  PB3AuthType_AuthTypeSurface = 3,

  /** 是否拥有歌单 */
  PB3AuthType_AuthTypeHaveSong = 4,

  /** 明星认证 */
  PB3AuthType_AuthTypeStar = 5,
};

GPBEnumDescriptor *PB3AuthType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3AuthType_IsValidValue(int32_t value);

#pragma mark - Enum PB3AuthStatus

/** 认证状态 */
typedef GPB_ENUM(PB3AuthStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3AuthStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 未认证 */
  PB3AuthStatus_AosNone = 0,

  /** 已认证 */
  PB3AuthStatus_AosActivate = 1,

  /** 冻结 */
  PB3AuthStatus_AosBlock = 2,
};

GPBEnumDescriptor *PB3AuthStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3AuthStatus_IsValidValue(int32_t value);

#pragma mark - Enum PB3ChannelPrefix

/** 频道功能类型 */
typedef GPB_ENUM(PB3ChannelPrefix) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ChannelPrefix_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3ChannelPrefix_CpZero = 0,

  /** 家族频道 */
  PB3ChannelPrefix_CpFamily = 1,

  /** 游戏频道 */
  PB3ChannelPrefix_CpGame = 2,

  /** 首页动态加载 */
  PB3ChannelPrefix_CpDynamicLoad = 3,

  /** 活动频道 */
  PB3ChannelPrefix_CpActivity = 4,

  /** 首页广播交友 */
  PB3ChannelPrefix_CpBroadcastIndexMakeFriend = 5,

  /** 房间广播交友、广播交友主页 */
  PB3ChannelPrefix_CpBroadcastRoomMakeFriend = 6,

  /** 活动房间角标通知 */
  PB3ChannelPrefix_CpActivityNotice = 7,

  /** 首页开黑广播 */
  PB3ChannelPrefix_CpMobaTeam = 8,

  /** 广场聊天 */
  PB3ChannelPrefix_CpSquare = 9,

  /** 区服 */
  PB3ChannelPrefix_CpRegion = 10,
};

GPBEnumDescriptor *PB3ChannelPrefix_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ChannelPrefix_IsValidValue(int32_t value);

#pragma mark - Enum PB3ChargeFirstGiftType

typedef GPB_ENUM(PB3ChargeFirstGiftType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ChargeFirstGiftType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3ChargeFirstGiftType_CfGiftType = 0,

  /** 特效 */
  PB3ChargeFirstGiftType_CfEffect = 1,

  /** 礼物 */
  PB3ChargeFirstGiftType_CfGift = 2,
};

GPBEnumDescriptor *PB3ChargeFirstGiftType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ChargeFirstGiftType_IsValidValue(int32_t value);

#pragma mark - Enum PB3IMGiftStatus

/** IM限时礼物状态 */
typedef GPB_ENUM(PB3IMGiftStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3IMGiftStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3IMGiftStatus_ImgsZero = 0,

  /** 未领取 */
  PB3IMGiftStatus_ImgsNotReceived = 1,

  /** 已领取 */
  PB3IMGiftStatus_ImgsReceived = 2,

  /** 已过期 */
  PB3IMGiftStatus_ImgsTimeout = 3,

  /** 未过期(服务端用) */
  PB3IMGiftStatus_ImgsNotTimeout = 4,
};

GPBEnumDescriptor *PB3IMGiftStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3IMGiftStatus_IsValidValue(int32_t value);

#pragma mark - Enum PB3SendGiftSource

typedef GPB_ENUM(PB3SendGiftSource) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3SendGiftSource_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 普通送礼 */
  PB3SendGiftSource_SgsDefault = 0,

  /** IM送礼 */
  PB3SendGiftSource_SgsImSend = 1,
};

GPBEnumDescriptor *PB3SendGiftSource_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3SendGiftSource_IsValidValue(int32_t value);

#pragma mark - Enum PB3IMGiftType

typedef GPB_ENUM(PB3IMGiftType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3IMGiftType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3IMGiftType_ImgtZero = 0,

  /** 撩TA */
  PB3IMGiftType_ImgtTeaseTa = 1,

  /** 真心话 */
  PB3IMGiftType_ImgtSincereWord = 2,

  /** 解除代聊送礼 */
  PB3IMGiftType_ImgtAutoChat = 3,
};

GPBEnumDescriptor *PB3IMGiftType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3IMGiftType_IsValidValue(int32_t value);

#pragma mark - Enum PB3SyncOptType

/** 操作类型 */
typedef GPB_ENUM(PB3SyncOptType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3SyncOptType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3SyncOptType_SoptZero = 0,

  /** 开黑-踢出车队 */
  PB3SyncOptType_SoptMobaTeamKickOut = 1,

  /** 开黑-清空车队 */
  PB3SyncOptType_SoptMobaTeamClean = 2,

  /** 开黑-删除车队 */
  PB3SyncOptType_SoptMobaTeamDelete = 3,

  /** 开黑-成为队长 */
  PB3SyncOptType_SoptMobaTeamLeader = 4,

  /** IM限时送礼今日不再提醒 */
  PB3SyncOptType_SoptImpresentpushIgnored = 5,
};

GPBEnumDescriptor *PB3SyncOptType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3SyncOptType_IsValidValue(int32_t value);

#pragma mark - Enum PB3IMAutoChatStatus

typedef GPB_ENUM(PB3IMAutoChatStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3IMAutoChatStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3IMAutoChatStatus_ImAutoChatStatusNone = 0,

  /** 聊天模式正常 */
  PB3IMAutoChatStatus_ImAutoChatStatusNormal = 1,

  /** 代聊状态 */
  PB3IMAutoChatStatus_ImAutoChatStatusChatting = 2,

  /** 需要送礼解锁 */
  PB3IMAutoChatStatus_ImAutoChatStatusGiftUnlock = 3,
};

GPBEnumDescriptor *PB3IMAutoChatStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3IMAutoChatStatus_IsValidValue(int32_t value);

#pragma mark - Enum PB3QuickChatUserType

typedef GPB_ENUM(PB3QuickChatUserType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3QuickChatUserType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3QuickChatUserType_QcutZero = 0,

  /** 新用户 */
  PB3QuickChatUserType_QcutNew = 1,

  /** 老用户 */
  PB3QuickChatUserType_QcutOld = 2,

  /** 大神，陪玩，签约成员 */
  PB3QuickChatUserType_QuctSkill = 3,
};

GPBEnumDescriptor *PB3QuickChatUserType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3QuickChatUserType_IsValidValue(int32_t value);

#pragma mark - Enum PB3CouponJumpType

typedef GPB_ENUM(PB3CouponJumpType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3CouponJumpType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3CouponJumpType_CjtNone = 0,

  /** 1v1 */
  PB3CouponJumpType_Cjt1V1 = 1,

  /** 爵位 */
  PB3CouponJumpType_CjtNobility = 2,
};

GPBEnumDescriptor *PB3CouponJumpType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3CouponJumpType_IsValidValue(int32_t value);

#pragma mark - Enum PB3CouponDiscountType

typedef GPB_ENUM(PB3CouponDiscountType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3CouponDiscountType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3CouponDiscountType_CdtNone = 0,

  /** 抵扣（满减的full_money大于0） */
  PB3CouponDiscountType_CdtDikou = 1,

  /** 折扣 */
  PB3CouponDiscountType_CdtZhekou = 2,

  /** 体验 */
  PB3CouponDiscountType_CdtTiyan = 3,
};

GPBEnumDescriptor *PB3CouponDiscountType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3CouponDiscountType_IsValidValue(int32_t value);

#pragma mark - Enum PB3CouponPackageType

/** 优惠券礼包类型 */
typedef GPB_ENUM(PB3CouponPackageType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3CouponPackageType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3CouponPackageType_CptNone = 0,

  /** 新手福利优惠券礼包 */
  PB3CouponPackageType_CptNewRegister = 1,
};

GPBEnumDescriptor *PB3CouponPackageType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3CouponPackageType_IsValidValue(int32_t value);

#pragma mark - Enum PB3CouponStatus

typedef GPB_ENUM(PB3CouponStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3CouponStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3CouponStatus_CsNone = 0,

  /** 正常 */
  PB3CouponStatus_CsNormal = 1,

  /** 停用 */
  PB3CouponStatus_CsStop = 2,
};

GPBEnumDescriptor *PB3CouponStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3CouponStatus_IsValidValue(int32_t value);

#pragma mark - Enum PB3CpPublicNoticeStatus

typedef GPB_ENUM(PB3CpPublicNoticeStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3CpPublicNoticeStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3CpPublicNoticeStatus_CpnsNone = 0,

  /** 展示CP数据 */
  PB3CpPublicNoticeStatus_CpnsActive = 1,

  /** 虚位以待 */
  PB3CpPublicNoticeStatus_CpnsInActive = 2,

  /** 活动结束，不显示告白位 */
  PB3CpPublicNoticeStatus_CpnsNotShow = 3,
};

GPBEnumDescriptor *PB3CpPublicNoticeStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3CpPublicNoticeStatus_IsValidValue(int32_t value);

#pragma mark - Enum PB3ChatCPType

typedef GPB_ENUM(PB3ChatCPType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ChatCPType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3ChatCPType_CcptZero = 0,

  /** 首充CP */
  PB3ChatCPType_CcptDefault = 1,

  /** IM语音聊天 */
  PB3ChatCPType_CcptIm = 2,

  /** 首页1v1 */
  PB3ChatCPType_CcptHome = 3,

  /** 黑鲸1v1 */
  PB3ChatCPType_CcptBlackWhale = 4,

  /** 名模1v1 */
  PB3ChatCPType_CcptTopModel = 5,

  /** 自定义 */
  PB3ChatCPType_CcptCustom = 6,
};

GPBEnumDescriptor *PB3ChatCPType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ChatCPType_IsValidValue(int32_t value);

#pragma mark - Enum PB3RedEnvelopeStatus

typedef GPB_ENUM(PB3RedEnvelopeStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3RedEnvelopeStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3RedEnvelopeStatus_ResNull = 0,

  /** 新春红包开始 */
  PB3RedEnvelopeStatus_ResBegin = 1,

  /** 新春红包开奖 */
  PB3RedEnvelopeStatus_ResAward = 2,

  /** 通知发奖 */
  PB3RedEnvelopeStatus_ResNoticeAward = 3,

  /** 新春红包结束 */
  PB3RedEnvelopeStatus_ResEnd = 4,
};

GPBEnumDescriptor *PB3RedEnvelopeStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3RedEnvelopeStatus_IsValidValue(int32_t value);

#pragma mark - Enum PB3ActGameConfType

typedef GPB_ENUM(PB3ActGameConfType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ActGameConfType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3ActGameConfType_AgctZero = 0,

  /** 春节红包活动 */
  PB3ActGameConfType_AgctRedEnvelope = 1,

  /** 靓号机 */
  PB3ActGameConfType_AgctRandomId2 = 2,
};

GPBEnumDescriptor *PB3ActGameConfType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ActGameConfType_IsValidValue(int32_t value);

#pragma mark - Enum PB3ClientLoginType

typedef GPB_ENUM(PB3ClientLoginType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ClientLoginType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3ClientLoginType_CltDev = 0,

  /** id密码登录 */
  PB3ClientLoginType_CltNative = 1,
  PB3ClientLoginType_CltQq = 2,
  PB3ClientLoginType_CltWeixin = 3,

  /** 短信登录 */
  PB3ClientLoginType_CltSms = 4,

  /** 一键登录 */
  PB3ClientLoginType_CltQuick = 5,

  /** apple */
  PB3ClientLoginType_CltApple = 6,

  /** facebook */
  PB3ClientLoginType_CltFacebook = 7,

  /** 手机密码登录 */
  PB3ClientLoginType_CltPhonePassword = 8,

  /** 微信公众号登录 */
  PB3ClientLoginType_CltWechatSubscription = 9,

  /** 谷歌登录 */
  PB3ClientLoginType_CltGoogle = 10,

  /** QQ小程序 */
  PB3ClientLoginType_CltQqSmallProgram = 11,

  /** 微信小程序登录 */
  PB3ClientLoginType_CltWxMiniProgram = 12,

  /** QQ第三方登录-网站应用 */
  PB3ClientLoginType_CltQqWeb = 13,

  /** 微信第三方登录-网站应用 */
  PB3ClientLoginType_CltWeixinWeb = 14,

  /** 游客登录 */
  PB3ClientLoginType_CltGuest = 15,

  /** Twitter */
  PB3ClientLoginType_CltTwitter = 16,

  /** 切换账号 */
  PB3ClientLoginType_CltChange = 17,
};

GPBEnumDescriptor *PB3ClientLoginType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ClientLoginType_IsValidValue(int32_t value);

#pragma mark - Enum PB3PkMode

/** 赏金pk模式 */
typedef GPB_ENUM(PB3PkMode) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3PkMode_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3PkMode_PkmZero = 0,

  /** 匹配模式 */
  PB3PkMode_PkmMatch = 1,

  /** 邀请模式 */
  PB3PkMode_PkmInvite = 2,
};

GPBEnumDescriptor *PB3PkMode_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3PkMode_IsValidValue(int32_t value);

#pragma mark - Enum PB3PkRoomLevel

/** pk房间等级 预留前后等级拓展 */
typedef GPB_ENUM(PB3PkRoomLevel) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3PkRoomLevel_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3PkRoomLevel_PkrlZero = 0,

  /** S级 */
  PB3PkRoomLevel_PkrlS = 100,

  /** A级 */
  PB3PkRoomLevel_PkrlA = 101,

  /** B级 */
  PB3PkRoomLevel_PkrlB = 102,

  /** C级 */
  PB3PkRoomLevel_PkrlC = 103,

  /** D级 */
  PB3PkRoomLevel_PkrlD = 104,

  /** E级 */
  PB3PkRoomLevel_PkrlE = 105,

  /** F级 */
  PB3PkRoomLevel_PkrlF = 106,

  /** G级 */
  PB3PkRoomLevel_PkrlG = 107,
};

GPBEnumDescriptor *PB3PkRoomLevel_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3PkRoomLevel_IsValidValue(int32_t value);

#pragma mark - Enum PB3PkSkillType

/** 技能类型 */
typedef GPB_ENUM(PB3PkSkillType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3PkSkillType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3PkSkillType_PksZero = 0,

  /** 秒杀 */
  PB3PkSkillType_PksSeckill = 1,

  /** 嘲讽 */
  PB3PkSkillType_PksTaunt = 2,
};

GPBEnumDescriptor *PB3PkSkillType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3PkSkillType_IsValidValue(int32_t value);

#pragma mark - Enum PB3BoxAwardType

/** 宝箱礼物类型 */
typedef GPB_ENUM(PB3BoxAwardType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3BoxAwardType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3BoxAwardType_AwardZero = 0,

  /** 优惠券 */
  PB3BoxAwardType_AwardCoupon = 1,

  /** 爵位 */
  PB3BoxAwardType_AwardNobility = 2,

  /** 特效 */
  PB3BoxAwardType_AwardEffect = 3,
};

GPBEnumDescriptor *PB3BoxAwardType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3BoxAwardType_IsValidValue(int32_t value);

#pragma mark - Enum PB3Application

typedef GPB_ENUM(PB3Application) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3Application_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3Application_AppNone = 0,

  /** 全部 */
  PB3Application_AppAll = 1,

  /** 氧气 */
  PB3Application_AppOxygen = 3,

  /** 氧气PC */
  PB3Application_AppOxygenPc = 7,

  /** 半糖 */
  PB3Application_AppFish = 8,
};

GPBEnumDescriptor *PB3Application_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3Application_IsValidValue(int32_t value);

#pragma mark - Enum PB3SingleLivePkMode

/** 赏金pk模式 */
typedef GPB_ENUM(PB3SingleLivePkMode) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3SingleLivePkMode_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3SingleLivePkMode_SlPkmZero = 0,

  /** 匹配模式 */
  PB3SingleLivePkMode_SlPkmMatch = 1,

  /** 邀请模式 */
  PB3SingleLivePkMode_SlPkmInvite = 2,
};

GPBEnumDescriptor *PB3SingleLivePkMode_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3SingleLivePkMode_IsValidValue(int32_t value);

#pragma mark - Enum PB3SingleLivePkRoomLevel

/** pk房间等级 预留前后等级拓展 */
typedef GPB_ENUM(PB3SingleLivePkRoomLevel) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3SingleLivePkRoomLevel_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3SingleLivePkRoomLevel_SlPkrlZero = 0,

  /** S级 */
  PB3SingleLivePkRoomLevel_SlPkrlS = 100,

  /** A级 */
  PB3SingleLivePkRoomLevel_SlPkrlA = 101,

  /** B级 */
  PB3SingleLivePkRoomLevel_SlPkrlB = 102,

  /** C级 */
  PB3SingleLivePkRoomLevel_SlPkrlC = 103,

  /** D级 */
  PB3SingleLivePkRoomLevel_SlPkrlD = 104,

  /** E级 */
  PB3SingleLivePkRoomLevel_SlPkrlE = 105,

  /** F级 */
  PB3SingleLivePkRoomLevel_SlPkrlF = 106,

  /** G级 */
  PB3SingleLivePkRoomLevel_SlPkrlG = 107,
};

GPBEnumDescriptor *PB3SingleLivePkRoomLevel_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3SingleLivePkRoomLevel_IsValidValue(int32_t value);

#pragma mark - Enum PB3SingleLivePkSkillType

/** 技能类型 */
typedef GPB_ENUM(PB3SingleLivePkSkillType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3SingleLivePkSkillType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3SingleLivePkSkillType_SlPksZero = 0,

  /** 秒杀 */
  PB3SingleLivePkSkillType_SlPksSeckill = 1,

  /** 嘲讽 */
  PB3SingleLivePkSkillType_SlPksTaunt = 2,
};

GPBEnumDescriptor *PB3SingleLivePkSkillType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3SingleLivePkSkillType_IsValidValue(int32_t value);

#pragma mark - Enum PB3RankShowType

typedef GPB_ENUM(PB3RankShowType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3RankShowType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3RankShowType_RankShowTypeNone = 0,

  /** 首页排行榜展示 */
  PB3RankShowType_RankShowTypeHome = 1,

  /** 房间排行榜展示 */
  PB3RankShowType_RankShowTypeRoom = 2,

  /** 房间排行榜数值展示 */
  PB3RankShowType_RankShowTypeRoomData = 3,
};

GPBEnumDescriptor *PB3RankShowType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3RankShowType_IsValidValue(int32_t value);

#pragma mark - Enum PB3OrAnd

typedef GPB_ENUM(PB3OrAnd) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3OrAnd_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3OrAnd_OrAndTypeNone = 0,

  /** 且 */
  PB3OrAnd_OrAndTypeAnd = 1,

  /** 或 */
  PB3OrAnd_OrAndTypeOr = 2,
};

GPBEnumDescriptor *PB3OrAnd_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3OrAnd_IsValidValue(int32_t value);

#pragma mark - Enum PB3MateChoiceStatus

typedef GPB_ENUM(PB3MateChoiceStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3MateChoiceStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3MateChoiceStatus_McsNone = 0,

  /** 准备环节 */
  PB3MateChoiceStatus_McsReady = 1,

  /** 嘉宾沟通 */
  PB3MateChoiceStatus_McsCommunication = 2,

  /** 心动选择 */
  PB3MateChoiceStatus_McsChoice = 3,

  /** 公布心动 */
  PB3MateChoiceStatus_McsPublishResult = 4,
};

GPBEnumDescriptor *PB3MateChoiceStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3MateChoiceStatus_IsValidValue(int32_t value);

#pragma mark - Enum PB3FriendType

/** 好友类型 */
typedef GPB_ENUM(PB3FriendType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3FriendType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 陌生人 */
  PB3FriendType_FtStranger = 0,

  /** 屏蔽 */
  PB3FriendType_FtBan = -1,

  /** 关注 */
  PB3FriendType_FtFollow = 1,

  /** 互粉 */
  PB3FriendType_FtFriend = 2,

  /** 关注加互粉 */
  PB3FriendType_FtFollowFriend = 3,

  /** 自己 */
  PB3FriendType_FtMyself = 4,

  /** 粉丝 */
  PB3FriendType_FtFans = 5,
};

GPBEnumDescriptor *PB3FriendType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3FriendType_IsValidValue(int32_t value);

#pragma mark - Enum PB3PrivacyType

/** 隐私开关类型 */
typedef GPB_ENUM(PB3PrivacyType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3PrivacyType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不使用 */
  PB3PrivacyType_PrivacyZero = 0,

  /** 隐身浏览开关 */
  PB3PrivacyType_Incognito = 1,

  /** 打开我的访客 */
  PB3PrivacyType_ShowRecentVisit = 2,

  /** 接收push消息通知,默认打开 */
  PB3PrivacyType_RecPushMsg = 3,

  /** 隐藏我的个人房间 */
  PB3PrivacyType_HideRoom = 11,

  /** 显示我的位置 */
  PB3PrivacyType_ShowPosition = 12,

  /** 展示全部动态，默认显示最近6个月 */
  PB3PrivacyType_ShowAllTrends = 13,

  /** 动态更新提醒 */
  PB3PrivacyType_UpdateTrendNotice = 14,

  /** 上线全服通知 */
  PB3PrivacyType_OnlineNotice = 15,

  /** 氧吧互动 后台推送开关 */
  PB3PrivacyType_PushTrendLike = 20,

  /** 评论 */
  PB3PrivacyType_PushTrendComment = 21,

  /** \@ */
  PB3PrivacyType_PushTrendAt = 22,

  /** 关注的人发动态 */
  PB3PrivacyType_PushTrendNoticeNew = 23,

  /** 消息提醒 后台推送开关 */
  PB3PrivacyType_PushNewFans = 24,

  /** 陌生人私聊 */
  PB3PrivacyType_PushStrangerMsg = 25,

  /** 私聊中收到礼物通知 */
  PB3PrivacyType_PushImpresentGift = 26,

  /**
   * -------------  海外游戏 010  -----------------
   * 隐私
   **/
  PB3PrivacyType_AllowViewNew = 27,

  /** 允许陌生人关注我 */
  PB3PrivacyType_AllowConcern = 28,

  /** 允许陌生人向我发起私聊 */
  PB3PrivacyType_AllowNewPm = 29,

  /** 完成成就自动发送动态 */
  PB3PrivacyType_PostNewAchieve = 30,

  /** 消息通知 */
  PB3PrivacyType_PushSysMsg = 31,

  /** 提示新的赞 */
  PB3PrivacyType_GameCommPushTrendLike = 32,

  /** 提示新的评论 */
  PB3PrivacyType_GameCommPushTrend = 33,

  /** 接收游戏邀请 */
  PB3PrivacyType_GameCommAcceptGameInvite = 34,

  /** 关注人的新动态 */
  PB3PrivacyType_PushFocusTrend = 35,

  /** 私聊 */
  PB3PrivacyType_PushIm = 36,
};

GPBEnumDescriptor *PB3PrivacyType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3PrivacyType_IsValidValue(int32_t value);

#pragma mark - Enum PB3UserOnOffType

/** 海外010 开关状态 */
typedef GPB_ENUM(PB3UserOnOffType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3UserOnOffType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不使用 */
  PB3UserOnOffType_UserOnOffZero = 0,
};

GPBEnumDescriptor *PB3UserOnOffType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3UserOnOffType_IsValidValue(int32_t value);

#pragma mark - Enum PB3BanType

/** 处罚类型 */
typedef GPB_ENUM(PB3BanType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3BanType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3BanType_BtZero = 0,

  /** 封号 */
  PB3BanType_BtAccount = 1,

  /** 禁言 */
  PB3BanType_BtSpeak = 2,

  /** 封房间 */
  PB3BanType_BtRoom = 3,

  /** IP */
  PB3BanType_BtIp = 4,

  /** 封设备id */
  PB3BanType_BtDevice = 5,

  /** 踢下线 */
  PB3BanType_BtTakeLeave = 6,

  /** 警告 */
  PB3BanType_BtWarning = 8,

  /** 置顶 */
  PB3BanType_BtTop = 9,

  /** 禁止广播交友 */
  PB3BanType_BtBroadcastFriend = 10,

  /** 提出房间 */
  PB3BanType_BtTickoutRoom = 11,

  /** 封手机号 */
  PB3BanType_BtBanPhone = 12,

  /** 封身份证 */
  PB3BanType_BtBanIdcard = 13,

  /** 禁私聊 */
  PB3BanType_BtBanPm = 14,

  /** 社区:限制发布动态 */
  PB3BanType_BtCommunityPublish = 15,

  /** 社区:限制评论动态 */
  PB3BanType_BtCommunityComment = 16,

  /** 禁修改资料 */
  PB3BanType_BtBanModify = 17,

  /** 通知下线 -- userstatus 实际推送到客户端的处罚类型 */
  PB3BanType_BtForceLogout = 18,

  /** 视频推荐黑名单 */
  PB3BanType_BtBanVideo = 19,
};

GPBEnumDescriptor *PB3BanType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3BanType_IsValidValue(int32_t value);

#pragma mark - Enum PB3AppMissionClass

typedef GPB_ENUM(PB3AppMissionClass) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3AppMissionClass_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3AppMissionClass_AmcZero = 0,

  /** 每日任务 */
  PB3AppMissionClass_AmcDaily = 1,

  /** 生涯任务 */
  PB3AppMissionClass_AmcCareer = 2,
};

GPBEnumDescriptor *PB3AppMissionClass_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3AppMissionClass_IsValidValue(int32_t value);

#pragma mark - Enum PB3MissionType

/** 任务类型 */
typedef GPB_ENUM(PB3MissionType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3MissionType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3MissionType_MissZero = 0,

  /** 游玩任意游戏n次 */
  PB3MissionType_MissPlayGame = 1,

  /** 本日游戏累计时长n分钟 */
  PB3MissionType_MissPlayDuration30 = 2,

  /** 在《你画我歪》中获得前3名n次 */
  PB3MissionType_MissGameNhwwTop3 = 3,

  /** 在《飞行棋》中获得第1名n次 */
  PB3MissionType_MissGameFxqTop1 = 4,

  /** 在《五子棋》中获得胜利n次 */
  PB3MissionType_MissGameWzqWin1 = 5,

  /** 在《百万富翁》中获得前30名n次 */
  PB3MissionType_MissGameBwfwTop30 = 6,

  /** 在《方块大逃亡》中获得前30名n次 */
  PB3MissionType_MissGameFkdtwTop30 = 7,

  /** 对动态进行点赞n次 */
  PB3MissionType_MissTrendLike3 = 8,

  /** 累计签到n次 */
  PB3MissionType_MissCheckin = 9,

  /** 累计获取金币 */
  PB3MissionType_MissGetGold = 10,

  /** 累计获得成就 */
  PB3MissionType_MissGetAchievement = 11,

  /** 绑定第三方账号 */
  PB3MissionType_MissBindThirdPartyAccount = 12,

  /** 绑定手机 */
  PB3MissionType_MissBindPhone = 13,

  /** 更新头像 */
  PB3MissionType_MissUpdateAvatar = 14,

  /** 更新主页背景 */
  PB3MissionType_MissUpdateProfileBackground = 15,

  /** 关注用户 */
  PB3MissionType_MissFollowUser = 16,

  /** 分享app */
  PB3MissionType_MissShareApp = 17,

  /** 更换昵称 */
  PB3MissionType_MissSetNickname = 18,

  /** 玩n款游戏 */
  PB3MissionType_MissTotalGame = 19,
};

GPBEnumDescriptor *PB3MissionType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3MissionType_IsValidValue(int32_t value);

#pragma mark - Enum PB3BonusType

/** 任务奖励类型 */
typedef GPB_ENUM(PB3BonusType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3BonusType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3BonusType_BonusZero = 0,

  /** 金币奖励类型 */
  PB3BonusType_BonusCoin = 1,

  /** 礼盒 */
  PB3BonusType_BonusGiftBox = 2,
};

GPBEnumDescriptor *PB3BonusType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3BonusType_IsValidValue(int32_t value);

#pragma mark - Enum PB3GameViolationType

/** 1:你画我猜-空白作词,2:你画我猜-空白作画,3:用户举报,4:逃跑 */
typedef GPB_ENUM(PB3GameViolationType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3GameViolationType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3GameViolationType_GvtZero = 0,

  /** 你画我猜-空白作词 */
  PB3GameViolationType_GvtBlankWord = 1,

  /** 你画我猜-空白作画 */
  PB3GameViolationType_GvtBlankDraw = 2,

  /** 用户举报 */
  PB3GameViolationType_GvtPlayerInform = 3,

  /** 逃跑 */
  PB3GameViolationType_GvtEscape = 4,
};

GPBEnumDescriptor *PB3GameViolationType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3GameViolationType_IsValidValue(int32_t value);

#pragma mark - Enum PB3QuitType

/** 退出类型 */
typedef GPB_ENUM(PB3QuitType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3QuitType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3QuitType_GqtZero = 0,

  /** 正常结束 */
  PB3QuitType_GqtNormal = 1,

  /** 点击退出按钮 */
  PB3QuitType_GqtPressQuit = 2,

  /** 掉线超时导致退出 */
  PB3QuitType_GqtTimeout = 3,
};

GPBEnumDescriptor *PB3QuitType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3QuitType_IsValidValue(int32_t value);

#pragma mark - Enum PB3PlayMatchType

/** 游玩的匹配类型 */
typedef GPB_ENUM(PB3PlayMatchType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3PlayMatchType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3PlayMatchType_PlmtZero = 0,

  /** 单人匹配 */
  PB3PlayMatchType_PlmtSingle = 1,

  /** 组队匹配 */
  PB3PlayMatchType_PlmtTeam = 2,
};

GPBEnumDescriptor *PB3PlayMatchType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3PlayMatchType_IsValidValue(int32_t value);

#pragma mark - Enum PB3PlayerEventType

/** 用户上报事件类型 */
typedef GPB_ENUM(PB3PlayerEventType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3PlayerEventType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3PlayerEventType_PetNone = 0,

  /** 进入游戏首页 */
  PB3PlayerEventType_PetEnterGameHome = 1,

  /** 游戏匹配 */
  PB3PlayerEventType_PetStartGameMatch = 2,
};

GPBEnumDescriptor *PB3PlayerEventType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3PlayerEventType_IsValidValue(int32_t value);

#pragma mark - Enum PB3PushSourceType

typedef GPB_ENUM(PB3PushSourceType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3PushSourceType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3PushSourceType_PstZero = 0,
  PB3PushSourceType_PstCustom = 1,
  PB3PushSourceType_PstIm = 2,
};

GPBEnumDescriptor *PB3PushSourceType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3PushSourceType_IsValidValue(int32_t value);

#pragma mark - Enum PB3AgentType

/** 金币分发类型，从 MIYA 迁移 */
typedef GPB_ENUM(PB3AgentType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3AgentType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3AgentType_AtNone = 0,

  /** 储值 */
  PB3AgentType_AtCharge = 1,

  /** 发放 */
  PB3AgentType_AtDeliver = 2,

  /** 后台扣发 */
  PB3AgentType_AtAdminDeduct = 3,

  /** 客户端显示使用 */
  PB3AgentType_AtChargePresent = 4,

  /** 发放(赠送金币) */
  PB3AgentType_AtDeliverPresent = 5,

  /** 后台扣发(赠送金币) */
  PB3AgentType_AtAdminDeductPresent = 6,
};

GPBEnumDescriptor *PB3AgentType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3AgentType_IsValidValue(int32_t value);

#pragma mark - Enum PB3MatchRegionType

/** 匹配类型 */
typedef GPB_ENUM(PB3MatchRegionType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3MatchRegionType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3MatchRegionType_MrtNone = 0,

  /** 独服 */
  PB3MatchRegionType_MrtSingle = 1,

  /** 全服 */
  PB3MatchRegionType_MrtFull = 2,
};

GPBEnumDescriptor *PB3MatchRegionType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3MatchRegionType_IsValidValue(int32_t value);

#pragma mark - Enum PB3GiftType

typedef GPB_ENUM(PB3GiftType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3GiftType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3GiftType_GtNone = 0,

  /** 普通道具 */
  PB3GiftType_GtNormal = 1,

  /** 宝石 */
  PB3GiftType_GtStone = 2,

  /** 其他-不能赠送 */
  PB3GiftType_GtCantGive = 3,

  /** 特效道具 */
  PB3GiftType_GtEffect = 4,

  /** 宝箱 */
  PB3GiftType_GtBox = 5,

  /** 魔法礼物 */
  PB3GiftType_GtMagic = 6,

  /** 延迟到账礼物 */
  PB3GiftType_GtDefer = 7,

  /** 祝福礼物 */
  PB3GiftType_GtWish = 8,

  /** 不在客户端显示 */
  PB3GiftType_GtNotShowInApp = 99,

  /**  资产 */
  PB3GiftType_GtAssets = 10,

  /**  通告礼物 */
  PB3GiftType_GtNotice = 11,

  /** 转运礼物 */
  PB3GiftType_GtWealthGift = 12,

  /** 跳转礼物 */
  PB3GiftType_GtJumpGift = 13,

  /** 升级礼物 */
  PB3GiftType_GtUpGift = 14,

  /** 宝盒礼物2.0 */
  PB3GiftType_GtBoxNew = 15,

  /** 抽奖规避礼物 */
  PB3GiftType_GtLotteryEvasion = 16,

  /** 亲密粉丝礼物 */
  PB3GiftType_GtIntimateFans = 19,

  /** 黑金礼物 */
  PB3GiftType_GtBlackGold = 20,

  /** 头条礼物 */
  PB3GiftType_GtTopLine = 21,

  /** 限时礼物 */
  PB3GiftType_GtTimeLimit = 22,

  /** 藏宝礼物 */
  PB3GiftType_GtTreasureBox = 23,

  /** 师徒礼物 */
  PB3GiftType_GtTeacherStudent = 24,
};

GPBEnumDescriptor *PB3GiftType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3GiftType_IsValidValue(int32_t value);

#pragma mark - Enum PB3PresentPlace

typedef GPB_ENUM(PB3PresentPlace) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3PresentPlace_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 在房间中 */
  PB3PresentPlace_PresentPlaceRoom = 0,

  /** 在IM中 */
  PB3PresentPlace_PresentPlaceIm = 1,
};

GPBEnumDescriptor *PB3PresentPlace_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3PresentPlace_IsValidValue(int32_t value);

#pragma mark - Enum PB3IMListTagType

/** IM列表 标签 */
typedef GPB_ENUM(PB3IMListTagType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3IMListTagType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3IMListTagType_ImlttZero = 0,

  /** 心动标签 */
  PB3IMListTagType_ImlttCp = 1,
};

GPBEnumDescriptor *PB3IMListTagType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3IMListTagType_IsValidValue(int32_t value);

#pragma mark - Enum PB3UserBehaviorsType

typedef GPB_ENUM(PB3UserBehaviorsType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3UserBehaviorsType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3UserBehaviorsType_UbtZero = 0,

  /** APP:APP操作屏幕（如果APP在前台，只要用户触摸屏幕，或者滑动屏幕） */
  PB3UserBehaviorsType_UbtAppOperationScreen = 1,

  /** APP:回到前台（如果APP在后台，回到前台的动作） */
  PB3UserBehaviorsType_UbtAppCutBackReception = 2,

  /** PC:操作鼠标（应用在前台：鼠标在应用内划过） */
  PB3UserBehaviorsType_UbtPcOperationMouse = 3,

  /** PC:键盘输入（应用在前台：键盘对应用进行输入） */
  PB3UserBehaviorsType_UbtPcOperationKeyboard = 4,

  /** PC:回到前台（应用回到前台） */
  PB3UserBehaviorsType_UbtPcCutBackReception = 5,

  /** APP:切到后台（APP从前台切到后台） */
  PB3UserBehaviorsType_UbtAppTurnBack = 6,

  /** GME光圈回调，已实现 */
  PB3UserBehaviorsType_UbtGmeVoiceBack = 7,
};

GPBEnumDescriptor *PB3UserBehaviorsType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3UserBehaviorsType_IsValidValue(int32_t value);

#pragma mark - Enum PB3CommonSettingType

typedef GPB_ENUM(PB3CommonSettingType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3CommonSettingType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3CommonSettingType_SettingTypeNone = 0,

  /** 活动中心，ActivityCenterPB */
  PB3CommonSettingType_SettingTypeActivityCenter = 1,

  /**   Setting_Type_TabMenu = 2; // 首页底部tab，TabMenuPB */
  PB3CommonSettingType_SettingTypeRoomWelcomeWords = 3,

  /** 私聊欢迎语 */
  PB3CommonSettingType_SettingTypeChatWelcomeWords = 4,
};

GPBEnumDescriptor *PB3CommonSettingType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3CommonSettingType_IsValidValue(int32_t value);

#pragma mark - PB3CommonExtRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface PB3CommonExtRoot : GPBRootObject
@end

#pragma mark - PB3OnlineStatus

typedef GPB_ENUM(PB3OnlineStatus_FieldNumber) {
  PB3OnlineStatus_FieldNumber_State = 1,
  PB3OnlineStatus_FieldNumber_RoomId = 2,
};

/**
 * *
 * 在线状态
 **/
@interface PB3OnlineStatus : GPBMessage

/** [default=OST_OFFLINE]; */
@property(nonatomic, readwrite) PB3OnlineStateType state;

@property(nonatomic, readwrite) int64_t roomId;

@end

/**
 * Fetches the raw value of a @c PB3OnlineStatus's @c state property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3OnlineStatus_State_RawValue(PB3OnlineStatus *message);
/**
 * Sets the raw value of an @c PB3OnlineStatus's @c state property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3OnlineStatus_State_RawValue(PB3OnlineStatus *message, int32_t value);

#pragma mark - PB3Player

typedef GPB_ENUM(PB3Player_FieldNumber) {
  PB3Player_FieldNumber_Id_p = 1,
  PB3Player_FieldNumber_Nickname = 2,
  PB3Player_FieldNumber_Sex = 3,
  PB3Player_FieldNumber_Id2 = 4,
  PB3Player_FieldNumber_Icon = 5,
  PB3Player_FieldNumber_Flags = 6,
  PB3Player_FieldNumber_Charm = 8,
  PB3Player_FieldNumber_Wealth = 9,
  PB3Player_FieldNumber_OnlineExp = 10,
  PB3Player_FieldNumber_CreateAt = 11,
  PB3Player_FieldNumber_HasPasswd = 12,
  PB3Player_FieldNumber_IsPhone = 13,
  PB3Player_FieldNumber_CharmLevel = 15,
  PB3Player_FieldNumber_Flags2 = 30,
  PB3Player_FieldNumber_WealthLevel = 32,
  PB3Player_FieldNumber_FlowerLevel = 33,
  PB3Player_FieldNumber_Flower = 34,
  PB3Player_FieldNumber_IsOnline = 35,
  PB3Player_FieldNumber_FlagsKv = 36,
  PB3Player_FieldNumber_NewWealth = 37,
  PB3Player_FieldNumber_IsDelete = 38,
  PB3Player_FieldNumber_AuthInfoArray = 39,
  PB3Player_FieldNumber_GuardNum = 40,
  PB3Player_FieldNumber_IntimateFansOnOff = 41,
  PB3Player_FieldNumber_HavePlaylist = 42,
  PB3Player_FieldNumber_ChannelListArray = 43,
  PB3Player_FieldNumber_Region = 44,
  PB3Player_FieldNumber_NeedChangeSex = 45,
  PB3Player_FieldNumber_CallCondition = 46,
  PB3Player_FieldNumber_Flags3 = 47,
  PB3Player_FieldNumber_PlayerLabelArray = 48,
};

/**
 * 玩家信息
 **/
@interface PB3Player : GPBMessage

/** 游客ID<=0 */
@property(nonatomic, readwrite) int64_t id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *nickname;

@property(nonatomic, readwrite) PB3SexType sex;

/** 靓号. ==0时没有 */
@property(nonatomic, readwrite) int64_t id2;

/** 图标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 标志，按位存储。各位表示意思参考FlagsPlayer */
@property(nonatomic, readwrite) int64_t flags;

/** 标志，按位存储。各位表示意思参考PlayerFlags_2 */
@property(nonatomic, readwrite) int64_t flags2;

@property(nonatomic, readwrite) int64_t charm;

/** 魅力等级 */
@property(nonatomic, readwrite) int32_t charmLevel;

/** 财富等级 */
@property(nonatomic, readwrite) int32_t wealthLevel;

/** 财富值 */
@property(nonatomic, readwrite) int32_t wealth;

/** 在线经验 */
@property(nonatomic, readwrite) uint32_t onlineExp;

/** 注册时间 */
@property(nonatomic, readwrite) uint32_t createAt;

/** 是否有密码 */
@property(nonatomic, readwrite) BOOL hasPasswd;

/** 是否是手机号注册 */
@property(nonatomic, readwrite) BOOL isPhone;

/** 浇花等级 */
@property(nonatomic, readwrite) int32_t flowerLevel;

/** 浇花值 */
@property(nonatomic, readwrite) int64_t flower;

/** 是否在线 */
@property(nonatomic, readwrite) BOOL isOnline;

/** 标记, key-value存储, key:参考 enum PlayerFlagKey{}, value:参考key对应的enum{} */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Int32Dictionary *flagsKv;
/** The number of items in @c flagsKv without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger flagsKv_Count;

/** 新财富值 */
@property(nonatomic, readwrite) int64_t newWealth;

/** 账号是否已经注销 */
@property(nonatomic, readwrite) BOOL isDelete;

/** 歌手、声优认证信息 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3AuthInfo*> *authInfoArray;
/** The number of items in @c authInfoArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger authInfoArray_Count;

/** 亲密粉丝守护人数 */
@property(nonatomic, readwrite) int32_t guardNum;

/** 是否有亲密粉丝权限 */
@property(nonatomic, readwrite) BOOL intimateFansOnOff;

/** 是否拥有歌单 */
@property(nonatomic, readwrite) BOOL havePlaylist;

/** 频道筛选列表(勾选的频道) */
// |channelListArray| contains |PB3ChannelType|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *channelListArray;
/** The number of items in @c channelListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger channelListArray_Count;

/** 用户区服 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *region;

/** 修改性别 */
@property(nonatomic, readwrite) BOOL needChangeSex;

/** 后台认证的声鉴卡（文本，仅自己可见） */
@property(nonatomic, readwrite, copy, null_resettable) NSString *callCondition;

/** 标志，按位存储。各位表示意思参考PlayerFlags_3 */
@property(nonatomic, readwrite) int64_t flags3;

/** 用户标签 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3PlayerLabel*> *playerLabelArray;
/** The number of items in @c playerLabelArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger playerLabelArray_Count;

@end

/**
 * Fetches the raw value of a @c PB3Player's @c sex property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3Player_Sex_RawValue(PB3Player *message);
/**
 * Sets the raw value of an @c PB3Player's @c sex property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3Player_Sex_RawValue(PB3Player *message, int32_t value);

#pragma mark - PB3PlayerLabel

typedef GPB_ENUM(PB3PlayerLabel_FieldNumber) {
  PB3PlayerLabel_FieldNumber_LabelIcon = 1,
  PB3PlayerLabel_FieldNumber_ShowInCommunity = 2,
  PB3PlayerLabel_FieldNumber_ShowInSearchPlayer = 3,
  PB3PlayerLabel_FieldNumber_LabelWord = 4,
  PB3PlayerLabel_FieldNumber_DialogImg = 5,
};

@interface PB3PlayerLabel : GPBMessage

/** 认证标识 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *labelIcon;

/** 是否展示在动态 */
@property(nonatomic, readwrite) BOOL showInCommunity;

/** 是否展示在用户搜索页面 */
@property(nonatomic, readwrite) BOOL showInSearchPlayer;

@property(nonatomic, readwrite, copy, null_resettable) NSString *labelWord;

/** 弹窗图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *dialogImg;

@end

#pragma mark - PB3CaijiPlayer

typedef GPB_ENUM(PB3CaijiPlayer_FieldNumber) {
  PB3CaijiPlayer_FieldNumber_Id_p = 1,
  PB3CaijiPlayer_FieldNumber_Name = 2,
  PB3CaijiPlayer_FieldNumber_Icon = 3,
  PB3CaijiPlayer_FieldNumber_Wealth = 4,
  PB3CaijiPlayer_FieldNumber_Charm = 5,
  PB3CaijiPlayer_FieldNumber_WealthLevel = 6,
  PB3CaijiPlayer_FieldNumber_CharmLevel = 7,
  PB3CaijiPlayer_FieldNumber_Sex = 8,
};

/**
 * 菜鸡玩家信息
 **/
@interface PB3CaijiPlayer : GPBMessage

@property(nonatomic, readwrite) int64_t id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 完整的url */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 财富值 */
@property(nonatomic, readwrite) int32_t wealth;

@property(nonatomic, readwrite) int64_t charm;

/** 财富等级 */
@property(nonatomic, readwrite) int32_t wealthLevel;

@property(nonatomic, readwrite) int32_t charmLevel;

/** 性别 */
@property(nonatomic, readwrite) PB3SexType sex;

@end

/**
 * Fetches the raw value of a @c PB3CaijiPlayer's @c sex property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3CaijiPlayer_Sex_RawValue(PB3CaijiPlayer *message);
/**
 * Sets the raw value of an @c PB3CaijiPlayer's @c sex property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3CaijiPlayer_Sex_RawValue(PB3CaijiPlayer *message, int32_t value);

#pragma mark - PB3UserInfo

typedef GPB_ENUM(PB3UserInfo_FieldNumber) {
  PB3UserInfo_FieldNumber_UserId = 1,
  PB3UserInfo_FieldNumber_City = 2,
  PB3UserInfo_FieldNumber_Signature = 3,
  PB3UserInfo_FieldNumber_Birthday = 4,
  PB3UserInfo_FieldNumber_IntimateSlot = 5,
  PB3UserInfo_FieldNumber_Mind = 6,
  PB3UserInfo_FieldNumber_ShortIdSlot = 7,
  PB3UserInfo_FieldNumber_Constellation = 8,
  PB3UserInfo_FieldNumber_VoiceURL = 9,
  PB3UserInfo_FieldNumber_Age = 10,
  PB3UserInfo_FieldNumber_VoiceTime = 11,
  PB3UserInfo_FieldNumber_GenderNum = 12,
  PB3UserInfo_FieldNumber_IsVoiceTag = 13,
  PB3UserInfo_FieldNumber_ConstellationText = 14,
  PB3UserInfo_FieldNumber_BgImage = 15,
};

@interface PB3UserInfo : GPBMessage

@property(nonatomic, readwrite) int64_t userId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *city;

/** 签名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *signature;

/** 生日 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *birthday;

/** 挚友位数 */
@property(nonatomic, readwrite) int32_t intimateSlot;

/** 心声 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *mind;

/** 靓号槽数 */
@property(nonatomic, readwrite) int32_t shortIdSlot;

/** 星座 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *constellation;

@property(nonatomic, readwrite, copy, null_resettable) NSString *voiceURL;

/** 年龄 */
@property(nonatomic, readwrite) int32_t age;

/** 声音时长 */
@property(nonatomic, readwrite) int32_t voiceTime;

/** 修改性别剩余次数 */
@property(nonatomic, readwrite) int32_t genderNum;

/** 是否有声鉴卡标签 */
@property(nonatomic, readwrite) BOOL isVoiceTag;

/** 星座文案 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *constellationText;

/** 主页背景图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bgImage;

@end

#pragma mark - PB3PlayerInfo

typedef GPB_ENUM(PB3PlayerInfo_FieldNumber) {
  PB3PlayerInfo_FieldNumber_Player = 1,
  PB3PlayerInfo_FieldNumber_User = 2,
  PB3PlayerInfo_FieldNumber_EffectArray = 3,
  PB3PlayerInfo_FieldNumber_CertifsArray = 4,
  PB3PlayerInfo_FieldNumber_Clan = 6,
  PB3PlayerInfo_FieldNumber_FansNum = 10,
  PB3PlayerInfo_FieldNumber_RoomId = 11,
  PB3PlayerInfo_FieldNumber_FriendAlias = 12,
  PB3PlayerInfo_FieldNumber_CharmWeekRank = 13,
  PB3PlayerInfo_FieldNumber_WealthWeekRank = 14,
  PB3PlayerInfo_FieldNumber_BillPlayer = 15,
  PB3PlayerInfo_FieldNumber_CaijiId = 16,
  PB3PlayerInfo_FieldNumber_PlayerGiftRankArray = 17,
  PB3PlayerInfo_FieldNumber_RoomName = 18,
  PB3PlayerInfo_FieldNumber_RoomIcon = 19,
  PB3PlayerInfo_FieldNumber_ShowRoomInfo = 20,
  PB3PlayerInfo_FieldNumber_FriendType = 21,
  PB3PlayerInfo_FieldNumber_IsOnChair = 22,
  PB3PlayerInfo_FieldNumber_LogoutAt = 23,
  PB3PlayerInfo_FieldNumber_IsMask = 24,
  PB3PlayerInfo_FieldNumber_ImTimes = 25,
  PB3PlayerInfo_FieldNumber_Status = 26,
  PB3PlayerInfo_FieldNumber_GiftId = 27,
  PB3PlayerInfo_FieldNumber_Pk = 28,
  PB3PlayerInfo_FieldNumber_GiftCollectLevel = 29,
  PB3PlayerInfo_FieldNumber_IpArea = 30,
  PB3PlayerInfo_FieldNumber_ImCpDialogInfo = 31,
  PB3PlayerInfo_FieldNumber_IsBlockUser = 32,
  PB3PlayerInfo_FieldNumber_LanguageCode = 33,
};

/**
 * 玩家信息
 **/
@interface PB3PlayerInfo : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3Player *player;
/** Test to see if @c player has been set. */
@property(nonatomic, readwrite) BOOL hasPlayer;

@property(nonatomic, readwrite, strong, null_resettable) PB3UserInfo *user;
/** Test to see if @c user has been set. */
@property(nonatomic, readwrite) BOOL hasUser;

/** 特效 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3Effect*> *effectArray;
/** The number of items in @c effectArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger effectArray_Count;

/** 认证 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3Certif*> *certifsArray;
/** The number of items in @c certifsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger certifsArray_Count;

/** 公会信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3ClanInfo *clan;
/** Test to see if @c clan has been set. */
@property(nonatomic, readwrite) BOOL hasClan;

/** 粉丝数 */
@property(nonatomic, readwrite) int32_t fansNum;

/** 所在房间id */
@property(nonatomic, readwrite) int64_t roomId;

/** 好友别名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *friendAlias;

/** 明星周榜排名 0:未上榜 */
@property(nonatomic, readwrite) int32_t charmWeekRank;

/** 富豪周榜排名 0:未上榜 */
@property(nonatomic, readwrite) int32_t wealthWeekRank;

/** 点单主播信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3BillPlayerCard *billPlayer;
/** Test to see if @c billPlayer has been set. */
@property(nonatomic, readwrite) BOOL hasBillPlayer;

/** 菜鸡id */
@property(nonatomic, readwrite) int64_t caijiId;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3PlayerGiftRank*> *playerGiftRankArray;
/** The number of items in @c playerGiftRankArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger playerGiftRankArray_Count;

/** 所在房间名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomName;

/** 所在房间图标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomIcon;

/** 空间页面专用字段：是否显示 room_name、room_icon */
@property(nonatomic, readwrite) BOOL showRoomInfo;

/** 好友类型 FriendType （friend.ext.proto 文件中枚举） */
@property(nonatomic, readwrite) int32_t friendType;

/** 是否在麦上 */
@property(nonatomic, readwrite) BOOL isOnChair;

/** 最后登出时间 */
@property(nonatomic, readwrite) int64_t logoutAt;

/** 是否隐身 */
@property(nonatomic, readwrite) BOOL isMask;

/** 撩过Ta的次数 */
@property(nonatomic, readwrite) int32_t imTimes;

@property(nonatomic, readwrite) PB3IMAutoChatStatus status;

/** status=2时，显示该礼物送礼弹窗 */
@property(nonatomic, readwrite) int32_t giftId;

/** PK相关数据 */
@property(nonatomic, readwrite, strong, null_resettable) PB3PkData *pk;
/** Test to see if @c pk has been set. */
@property(nonatomic, readwrite) BOOL hasPk;

/** 礼物图鉴等级 */
@property(nonatomic, readwrite, strong, null_resettable) PB3GiftCollectLevelInfo *giftCollectLevel;
/** Test to see if @c giftCollectLevel has been set. */
@property(nonatomic, readwrite) BOOL hasGiftCollectLevel;

/** 上次登陆ip地区 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *ipArea;

/** IMCP弹窗数据 */
@property(nonatomic, readwrite, strong, null_resettable) PB3IMCPDialog *imCpDialogInfo;
/** Test to see if @c imCpDialogInfo has been set. */
@property(nonatomic, readwrite) BOOL hasImCpDialogInfo;

/** 是否是被封号用户 */
@property(nonatomic, readwrite) BOOL isBlockUser;

/** 用户语言 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *languageCode;

@end

/**
 * Fetches the raw value of a @c PB3PlayerInfo's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3PlayerInfo_Status_RawValue(PB3PlayerInfo *message);
/**
 * Sets the raw value of an @c PB3PlayerInfo's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3PlayerInfo_Status_RawValue(PB3PlayerInfo *message, int32_t value);

#pragma mark - PB3IMCPDialog

typedef GPB_ENUM(PB3IMCPDialog_FieldNumber) {
  PB3IMCPDialog_FieldNumber_Card = 1,
  PB3IMCPDialog_FieldNumber_CardBtn = 2,
  PB3IMCPDialog_FieldNumber_TopDialogTitle = 3,
  PB3IMCPDialog_FieldNumber_TopDialogSubtitle = 4,
};

@interface PB3IMCPDialog : GPBMessage

/** 卡片文案 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *card;

/** 卡片按钮 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *cardBtn;

/** 浮窗标题文案 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *topDialogTitle;

/** 浮窗副标题文案 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *topDialogSubtitle;

@end

#pragma mark - PB3PkData

typedef GPB_ENUM(PB3PkData_FieldNumber) {
  PB3PkData_FieldNumber_Rank = 1,
  PB3PkData_FieldNumber_WinRate = 2,
  PB3PkData_FieldNumber_WinTimes = 3,
};

@interface PB3PkData : GPBMessage

/** 周榜排名 0:不显示，大于99:显示99+ */
@property(nonatomic, readwrite) int32_t rank;

/** PK胜率 60%  字符串长度为0，不显示 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *winRate;

/** 本周胜场 */
@property(nonatomic, readwrite) int32_t winTimes;

@end

#pragma mark - PB3PlayerGiftRank

typedef GPB_ENUM(PB3PlayerGiftRank_FieldNumber) {
  PB3PlayerGiftRank_FieldNumber_GiftId = 1,
  PB3PlayerGiftRank_FieldNumber_GiftIcon = 2,
  PB3PlayerGiftRank_FieldNumber_GiftIconPc = 3,
  PB3PlayerGiftRank_FieldNumber_Ranking = 4,
  PB3PlayerGiftRank_FieldNumber_GiftName = 5,
  PB3PlayerGiftRank_FieldNumber_Weight = 6,
};

@interface PB3PlayerGiftRank : GPBMessage

@property(nonatomic, readwrite) int64_t giftId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *giftIcon;

@property(nonatomic, readwrite, copy, null_resettable) NSString *giftIconPc;

@property(nonatomic, readwrite) int32_t ranking;

@property(nonatomic, readwrite, copy, null_resettable) NSString *giftName;

@property(nonatomic, readwrite) int32_t weight;

@end

#pragma mark - PB3GiftCollectLevelInfo

typedef GPB_ENUM(PB3GiftCollectLevelInfo_FieldNumber) {
  PB3GiftCollectLevelInfo_FieldNumber_Level = 1,
  PB3GiftCollectLevelInfo_FieldNumber_LevelIcon = 2,
};

@interface PB3GiftCollectLevelInfo : GPBMessage

@property(nonatomic, readwrite) int32_t level;

/** 个人名片入口图标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *levelIcon;

@end

#pragma mark - PB3BagItem

typedef GPB_ENUM(PB3BagItem_FieldNumber) {
  PB3BagItem_FieldNumber_GiftId = 1,
  PB3BagItem_FieldNumber_Amount = 2,
  PB3BagItem_FieldNumber_CteateAt = 3,
  PB3BagItem_FieldNumber_ValidGift = 4,
};

@interface PB3BagItem : GPBMessage

/** 礼物id */
@property(nonatomic, readwrite) uint32_t giftId;

/** 数量 */
@property(nonatomic, readwrite) uint32_t amount;

/** 时间 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *cteateAt;

/** 最快过期的礼物 */
@property(nonatomic, readwrite, strong, null_resettable) PB3GiftValidDate *validGift;
/** Test to see if @c validGift has been set. */
@property(nonatomic, readwrite) BOOL hasValidGift;

@end

#pragma mark - PB3GiftValidDate

typedef GPB_ENUM(PB3GiftValidDate_FieldNumber) {
  PB3GiftValidDate_FieldNumber_Amount = 1,
  PB3GiftValidDate_FieldNumber_ValidDate = 2,
};

@interface PB3GiftValidDate : GPBMessage

/** 数量 */
@property(nonatomic, readwrite) uint32_t amount;

/** 结束时间 */
@property(nonatomic, readwrite) int64_t validDate;

@end

#pragma mark - PB3AgodaKey

typedef GPB_ENUM(PB3AgodaKey_FieldNumber) {
  PB3AgodaKey_FieldNumber_PermissionKey = 1,
};

@interface PB3AgodaKey : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *permissionKey;

@end

#pragma mark - PB3OnOffStatus

typedef GPB_ENUM(PB3OnOffStatus_FieldNumber) {
  PB3OnOffStatus_FieldNumber_Status = 1,
  PB3OnOffStatus_FieldNumber_Type = 2,
};

@interface PB3OnOffStatus : GPBMessage

/** 0关，1开 */
@property(nonatomic, readwrite) int32_t status;

@property(nonatomic, readwrite) PB3OnOffType type;

@end

/**
 * Fetches the raw value of a @c PB3OnOffStatus's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3OnOffStatus_Type_RawValue(PB3OnOffStatus *message);
/**
 * Sets the raw value of an @c PB3OnOffStatus's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3OnOffStatus_Type_RawValue(PB3OnOffStatus *message, int32_t value);

#pragma mark - PB3IndexTips

typedef GPB_ENUM(PB3IndexTips_FieldNumber) {
  PB3IndexTips_FieldNumber_Id_p = 1,
  PB3IndexTips_FieldNumber_Color = 2,
  PB3IndexTips_FieldNumber_URL = 3,
  PB3IndexTips_FieldNumber_Msg = 4,
  PB3IndexTips_FieldNumber_RoomDisplay = 5,
  PB3IndexTips_FieldNumber_Name = 6,
};

@interface PB3IndexTips : GPBMessage

/** id */
@property(nonatomic, readwrite) int32_t id_p;

/** 颜色 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *color;

/** url */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

/** 中文说明 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;

/** 默认false 为标签在房间显示，true不显示 */
@property(nonatomic, readwrite) BOOL roomDisplay;

/** 名字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@end

#pragma mark - PB3IndexTipRooms

typedef GPB_ENUM(PB3IndexTipRooms_FieldNumber) {
  PB3IndexTipRooms_FieldNumber_RoomId = 1,
  PB3IndexTipRooms_FieldNumber_TipId = 2,
};

@interface PB3IndexTipRooms : GPBMessage

/** 房间id */
@property(nonatomic, readwrite) int64_t roomId;

/** 标签id */
@property(nonatomic, readwrite) int32_t tipId;

@end

#pragma mark - PB3RoomIndexConfig

typedef GPB_ENUM(PB3RoomIndexConfig_FieldNumber) {
  PB3RoomIndexConfig_FieldNumber_RoomNums = 1,
  PB3RoomIndexConfig_FieldNumber_IndexTips = 2,
};

@interface PB3RoomIndexConfig : GPBMessage

@property(nonatomic, readwrite) int32_t roomNums;

@property(nonatomic, readwrite, strong, null_resettable) PB3IndexTips *indexTips;
/** Test to see if @c indexTips has been set. */
@property(nonatomic, readwrite) BOOL hasIndexTips;

@end

#pragma mark - PB3SearchPlayerEntry

typedef GPB_ENUM(PB3SearchPlayerEntry_FieldNumber) {
  PB3SearchPlayerEntry_FieldNumber_Id_p = 1,
  PB3SearchPlayerEntry_FieldNumber_Id2 = 2,
  PB3SearchPlayerEntry_FieldNumber_Nickname = 3,
  PB3SearchPlayerEntry_FieldNumber_Sex = 4,
  PB3SearchPlayerEntry_FieldNumber_Icon = 5,
  PB3SearchPlayerEntry_FieldNumber_Charm = 6,
  PB3SearchPlayerEntry_FieldNumber_CharmLevel = 7,
  PB3SearchPlayerEntry_FieldNumber_Wealth = 8,
  PB3SearchPlayerEntry_FieldNumber_WealthlEvel = 9,
  PB3SearchPlayerEntry_FieldNumber_Online = 10,
  PB3SearchPlayerEntry_FieldNumber_RoomId = 11,
  PB3SearchPlayerEntry_FieldNumber_HasPasswd = 13,
  PB3SearchPlayerEntry_FieldNumber_AuthInfoListArray = 14,
  PB3SearchPlayerEntry_FieldNumber_FriendType = 15,
  PB3SearchPlayerEntry_FieldNumber_PlayerLabelArray = 16,
};

/**
 * 搜索条目
 **/
@interface PB3SearchPlayerEntry : GPBMessage

@property(nonatomic, readwrite) int64_t id_p;

/** 靓号. ==0时没有 */
@property(nonatomic, readwrite) int64_t id2;

@property(nonatomic, readwrite, copy, null_resettable) NSString *nickname;

@property(nonatomic, readwrite) PB3SexType sex;

/** 图标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

@property(nonatomic, readwrite) int64_t charm;

/** 魅力等级 */
@property(nonatomic, readwrite) int32_t charmLevel;

/** 财富值 */
@property(nonatomic, readwrite) int64_t wealth;

/** 财富等级 */
@property(nonatomic, readwrite) int32_t wealthlEvel;

/** [default=false]; */
@property(nonatomic, readwrite) BOOL online;

/** 用户当前所在房间 */
@property(nonatomic, readwrite) int64_t roomId;

/** 用户在线并身处某房间时，标识该房间是否有密码,true为有密码，false为没有密码 */
@property(nonatomic, readwrite) BOOL hasPasswd;

/** 用户认证信息 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3AuthInfo*> *authInfoListArray;
/** The number of items in @c authInfoListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger authInfoListArray_Count;

/** 好友关系 */
@property(nonatomic, readwrite) PB3FriendType friendType;

/** 用户标签 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3PlayerLabel*> *playerLabelArray;
/** The number of items in @c playerLabelArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger playerLabelArray_Count;

@end

/**
 * Fetches the raw value of a @c PB3SearchPlayerEntry's @c sex property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SearchPlayerEntry_Sex_RawValue(PB3SearchPlayerEntry *message);
/**
 * Sets the raw value of an @c PB3SearchPlayerEntry's @c sex property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SearchPlayerEntry_Sex_RawValue(PB3SearchPlayerEntry *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3SearchPlayerEntry's @c friendType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SearchPlayerEntry_FriendType_RawValue(PB3SearchPlayerEntry *message);
/**
 * Sets the raw value of an @c PB3SearchPlayerEntry's @c friendType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SearchPlayerEntry_FriendType_RawValue(PB3SearchPlayerEntry *message, int32_t value);

#pragma mark - PB3IndexEntry

typedef GPB_ENUM(PB3IndexEntry_FieldNumber) {
  PB3IndexEntry_FieldNumber_Id_p = 1,
  PB3IndexEntry_FieldNumber_Type = 2,
  PB3IndexEntry_FieldNumber_Id2 = 3,
  PB3IndexEntry_FieldNumber_Name = 4,
  PB3IndexEntry_FieldNumber_Icon = 5,
  PB3IndexEntry_FieldNumber_Online = 6,
  PB3IndexEntry_FieldNumber_HasPasswd = 7,
  PB3IndexEntry_FieldNumber_IsShow = 8,
  PB3IndexEntry_FieldNumber_Category = 9,
  PB3IndexEntry_FieldNumber_Pattern = 10,
  PB3IndexEntry_FieldNumber_DetailsImg = 11,
  PB3IndexEntry_FieldNumber_Flags = 12,
  PB3IndexEntry_FieldNumber_Rank = 13,
  PB3IndexEntry_FieldNumber_IsTop = 14,
  PB3IndexEntry_FieldNumber_TjWord = 15,
  PB3IndexEntry_FieldNumber_Fans = 16,
  PB3IndexEntry_FieldNumber_RoomId = 17,
  PB3IndexEntry_FieldNumber_HighQualityOnline = 18,
  PB3IndexEntry_FieldNumber_LabelURL = 19,
  PB3IndexEntry_FieldNumber_Heat = 20,
  PB3IndexEntry_FieldNumber_DecorateArray = 21,
};

/**
 * 首页条目
 **/
@interface PB3IndexEntry : GPBMessage

/** 房间ID */
@property(nonatomic, readwrite) int64_t id_p;

@property(nonatomic, readwrite) PB3RoomType type;

/** 短号 */
@property(nonatomic, readwrite) int64_t id2;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 图标路径 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

@property(nonatomic, readwrite) uint32_t online;

@property(nonatomic, readwrite) BOOL hasPasswd;

/** 0不在线,1在线 */
@property(nonatomic, readwrite) int32_t isShow;

/** 房间标签 */
@property(nonatomic, readwrite) int32_t category;

/** 房间模式 */
@property(nonatomic, readwrite) int32_t pattern;

/** 房间简介图片 （公告栏） */
@property(nonatomic, readwrite, copy, null_resettable) NSString *detailsImg;

/** 房间标志位 */
@property(nonatomic, readwrite) uint32_t flags;

@property(nonatomic, readwrite) int64_t rank;

/** 是否置顶 */
@property(nonatomic, readwrite) BOOL isTop;

/** 推荐语 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tjWord;

/** 关注量 */
@property(nonatomic, readwrite) int64_t fans;

/** 用户所在的房间ID */
@property(nonatomic, readwrite) int64_t roomId;

/** 优质主播在线人数 */
@property(nonatomic, readwrite) int32_t highQualityOnline;

/** 房间标签url， 不为空时，显示：http://cdn+label_url */
@property(nonatomic, readwrite, copy, null_resettable) NSString *labelURL;

/** 热度 */
@property(nonatomic, readwrite) int32_t heat;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3DecorateSignFrame*> *decorateArray;
/** The number of items in @c decorateArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger decorateArray_Count;

@end

/**
 * Fetches the raw value of a @c PB3IndexEntry's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3IndexEntry_Type_RawValue(PB3IndexEntry *message);
/**
 * Sets the raw value of an @c PB3IndexEntry's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3IndexEntry_Type_RawValue(PB3IndexEntry *message, int32_t value);

#pragma mark - PB3Effect

typedef GPB_ENUM(PB3Effect_FieldNumber) {
  PB3Effect_FieldNumber_Id_p = 1,
  PB3Effect_FieldNumber_Flag = 2,
  PB3Effect_FieldNumber_Str = 3,
  PB3Effect_FieldNumber_TimeType = 4,
  PB3Effect_FieldNumber_EndTime = 5,
  PB3Effect_FieldNumber_IsUse = 6,
  PB3Effect_FieldNumber_EffectDecOwn = 7,
  PB3Effect_FieldNumber_IsAllow = 8,
  PB3Effect_FieldNumber_EffectDecReview = 9,
  PB3Effect_FieldNumber_DecCreateAt = 10,
  PB3Effect_FieldNumber_ProtectSecond = 11,
  PB3Effect_FieldNumber_ProtectStartAt = 12,
  PB3Effect_FieldNumber_EndTimeNew = 13,
  PB3Effect_FieldNumber_EffectType = 14,
  PB3Effect_FieldNumber_EffectSubType = 15,
  PB3Effect_FieldNumber_Counter = 16,
};

/**
 * 特效
 **/
@interface PB3Effect : GPBMessage

/** id */
@property(nonatomic, readwrite) int32_t id_p;

/** 标志预留 */
@property(nonatomic, readwrite) int32_t flag;

/** 说明预留 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *str;

/** 时间类型 */
@property(nonatomic, readwrite) PB3EffectTimeType timeType;

/** 结束时间 -1永久 */
@property(nonatomic, readwrite) int32_t endTime;

/** 是否使用中 */
@property(nonatomic, readwrite) BOOL isUse;

/** 自定义荣耀宣言 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *effectDecOwn;

/** 审核状态，0:初始化状态，1:审核中，2:已通过，-1:未通过 */
@property(nonatomic, readwrite) int32_t isAllow;

/** 审核中荣耀宣言 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *effectDecReview;

/** 创建时间 */
@property(nonatomic, readwrite) int64_t decCreateAt;

/** 保护期秒数，保护期特效才有值 */
@property(nonatomic, readwrite) int32_t protectSecond;

/** 保护期开始时间戳，保护期特效才有值 */
@property(nonatomic, readwrite) int64_t protectStartAt;

/** 新 结束时间 -1永久， 由于上面的 end_time 位数不够用，这里增加新的字段，客户新版本不再用旧字段 */
@property(nonatomic, readwrite) int64_t endTimeNew;

@property(nonatomic, readwrite) int32_t effectType;

@property(nonatomic, readwrite) int32_t effectSubType;

/** 上麦特效计数 */
@property(nonatomic, readwrite) int32_t counter;

@end

/**
 * Fetches the raw value of a @c PB3Effect's @c timeType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3Effect_TimeType_RawValue(PB3Effect *message);
/**
 * Sets the raw value of an @c PB3Effect's @c timeType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3Effect_TimeType_RawValue(PB3Effect *message, int32_t value);

#pragma mark - PB3EffectLimit

typedef GPB_ENUM(PB3EffectLimit_FieldNumber) {
  PB3EffectLimit_FieldNumber_EffectType = 1,
  PB3EffectLimit_FieldNumber_EffectSubType = 2,
  PB3EffectLimit_FieldNumber_PutOnNum = 3,
};

/**
 * 特效穿戴数
 **/
@interface PB3EffectLimit : GPBMessage

/** 礼物特效 */
@property(nonatomic, readwrite) PB3EffectType effectType;

/** 特效子类型 */
@property(nonatomic, readwrite) PB3EffectSubType effectSubType;

/** 可穿戴总送 */
@property(nonatomic, readwrite) int32_t putOnNum;

@end

/**
 * Fetches the raw value of a @c PB3EffectLimit's @c effectType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3EffectLimit_EffectType_RawValue(PB3EffectLimit *message);
/**
 * Sets the raw value of an @c PB3EffectLimit's @c effectType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3EffectLimit_EffectType_RawValue(PB3EffectLimit *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3EffectLimit's @c effectSubType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3EffectLimit_EffectSubType_RawValue(PB3EffectLimit *message);
/**
 * Sets the raw value of an @c PB3EffectLimit's @c effectSubType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3EffectLimit_EffectSubType_RawValue(PB3EffectLimit *message, int32_t value);

#pragma mark - PB3EffectChairCountTheme

typedef GPB_ENUM(PB3EffectChairCountTheme_FieldNumber) {
  PB3EffectChairCountTheme_FieldNumber_Num1URL = 1,
  PB3EffectChairCountTheme_FieldNumber_Num2URL = 2,
  PB3EffectChairCountTheme_FieldNumber_Num3URL = 3,
  PB3EffectChairCountTheme_FieldNumber_Num4URL = 4,
  PB3EffectChairCountTheme_FieldNumber_Num5URL = 5,
  PB3EffectChairCountTheme_FieldNumber_Num6URL = 6,
  PB3EffectChairCountTheme_FieldNumber_Num7URL = 7,
  PB3EffectChairCountTheme_FieldNumber_Num8URL = 8,
  PB3EffectChairCountTheme_FieldNumber_Num9URL = 9,
  PB3EffectChairCountTheme_FieldNumber_Num0URL = 10,
  PB3EffectChairCountTheme_FieldNumber_PointURL = 11,
  PB3EffectChairCountTheme_FieldNumber_XURL = 12,
  PB3EffectChairCountTheme_FieldNumber_KURL = 13,
  PB3EffectChairCountTheme_FieldNumber_KPlusURL = 14,
  PB3EffectChairCountTheme_FieldNumber_WURL = 15,
  PB3EffectChairCountTheme_FieldNumber_WPlusURL = 16,
};

/**
 * 上麦特效计数主题资源
 **/
@interface PB3EffectChairCountTheme : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *num1URL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *num2URL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *num3URL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *num4URL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *num5URL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *num6URL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *num7URL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *num8URL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *num9URL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *num0URL;

/** 小数点 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pointURL;

/** 乘号x */
@property(nonatomic, readwrite, copy, null_resettable) NSString *xURL;

/** k */
@property(nonatomic, readwrite, copy, null_resettable) NSString *kURL;

/** k+ */
@property(nonatomic, readwrite, copy, null_resettable) NSString *kPlusURL;

/** w */
@property(nonatomic, readwrite, copy, null_resettable) NSString *wURL;

/** w+ */
@property(nonatomic, readwrite, copy, null_resettable) NSString *wPlusURL;

@end

#pragma mark - PB3EffectConfig

typedef GPB_ENUM(PB3EffectConfig_FieldNumber) {
  PB3EffectConfig_FieldNumber_Id_p = 1,
  PB3EffectConfig_FieldNumber_Type = 2,
  PB3EffectConfig_FieldNumber_Name = 3,
  PB3EffectConfig_FieldNumber_URL = 4,
  PB3EffectConfig_FieldNumber_Ver = 5,
  PB3EffectConfig_FieldNumber_Target = 6,
  PB3EffectConfig_FieldNumber_Timeout = 7,
  PB3EffectConfig_FieldNumber_Sort = 8,
  PB3EffectConfig_FieldNumber_BgURL = 9,
  PB3EffectConfig_FieldNumber_ShowURL = 10,
  PB3EffectConfig_FieldNumber_PostfixURL = 11,
  PB3EffectConfig_FieldNumber_TimeType = 12,
  PB3EffectConfig_FieldNumber_PcURL = 13,
  PB3EffectConfig_FieldNumber_PcURL2 = 14,
  PB3EffectConfig_FieldNumber_PcURL3 = 15,
  PB3EffectConfig_FieldNumber_RouterURL = 16,
  PB3EffectConfig_FieldNumber_EffectDesc = 17,
  PB3EffectConfig_FieldNumber_BottomURL = 18,
  PB3EffectConfig_FieldNumber_TextColor = 19,
  PB3EffectConfig_FieldNumber_PlayTime = 20,
  PB3EffectConfig_FieldNumber_ExtraURL = 21,
  PB3EffectConfig_FieldNumber_RoomPanelClassify = 22,
  PB3EffectConfig_FieldNumber_RoomPanelShowType = 23,
  PB3EffectConfig_FieldNumber_GetMethod = 24,
  PB3EffectConfig_FieldNumber_StarNum = 25,
  PB3EffectConfig_FieldNumber_CornerMarkURL = 26,
  PB3EffectConfig_FieldNumber_EffectBanner = 27,
  PB3EffectConfig_FieldNumber_CornerMarkURLPc = 28,
  PB3EffectConfig_FieldNumber_PlayerNameColor = 29,
  PB3EffectConfig_FieldNumber_Text = 30,
  PB3EffectConfig_FieldNumber_EffectDec = 31,
  PB3EffectConfig_FieldNumber_EffectPrivilege = 32,
  PB3EffectConfig_FieldNumber_EffectMedalWall = 33,
  PB3EffectConfig_FieldNumber_IsShow = 34,
  PB3EffectConfig_FieldNumber_LeftOffset = 35,
  PB3EffectConfig_FieldNumber_RightOffset = 36,
  PB3EffectConfig_FieldNumber_MoodShow = 37,
  PB3EffectConfig_FieldNumber_MoodTips = 38,
  PB3EffectConfig_FieldNumber_Count = 39,
  PB3EffectConfig_FieldNumber_Speed = 40,
  PB3EffectConfig_FieldNumber_Angle = 41,
  PB3EffectConfig_FieldNumber_PcCount = 42,
  PB3EffectConfig_FieldNumber_PcSpeed = 43,
  PB3EffectConfig_FieldNumber_PcAngle = 44,
  PB3EffectConfig_FieldNumber_IsShowHeaven = 45,
  PB3EffectConfig_FieldNumber_CanRenew = 46,
  PB3EffectConfig_FieldNumber_GoodsId = 47,
  PB3EffectConfig_FieldNumber_RenewMaxDay = 48,
  PB3EffectConfig_FieldNumber_ShowBigEffect = 49,
  PB3EffectConfig_FieldNumber_BigEffect = 50,
  PB3EffectConfig_FieldNumber_PcBigEffect = 51,
  PB3EffectConfig_FieldNumber_RenewProtectDay = 52,
  PB3EffectConfig_FieldNumber_BigEffectPlayTime = 53,
  PB3EffectConfig_FieldNumber_TimeoutNew = 54,
  PB3EffectConfig_FieldNumber_EffectSubType = 55,
  PB3EffectConfig_FieldNumber_EffectExpand = 56,
  PB3EffectConfig_FieldNumber_GroupId = 57,
  PB3EffectConfig_FieldNumber_WeightInGroup = 58,
  PB3EffectConfig_FieldNumber_Channel = 59,
  PB3EffectConfig_FieldNumber_LoseHint = 60,
  PB3EffectConfig_FieldNumber_LoseHintType = 61,
  PB3EffectConfig_FieldNumber_GetHint = 62,
  PB3EffectConfig_FieldNumber_GetHintType = 63,
  PB3EffectConfig_FieldNumber_IsShowChairTheme = 64,
  PB3EffectConfig_FieldNumber_ChairTheme = 65,
  PB3EffectConfig_FieldNumber_IosURL = 66,
  PB3EffectConfig_FieldNumber_AndroidURL = 67,
  PB3EffectConfig_FieldNumber_ShowBgColorTop = 167,
  PB3EffectConfig_FieldNumber_ShowBgColorBottom = 168,
};

/**
 * 特效配置
 **/
@interface PB3EffectConfig : GPBMessage

/** id */
@property(nonatomic, readwrite) int32_t id_p;

/** type */
@property(nonatomic, readwrite) PB3EffectType type;

/** 名字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 资源 // 守护.动态资源//麦位特效//名片边框//进场横幅带头像//ios麦位气泡上/app,pc勋章/app渠道前缀静态图 /荣耀静态图片 /心情元素1 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

/** 版本 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *ver;

/** 目标 */
@property(nonatomic, readwrite) int32_t target;

/** 时长 */
@property(nonatomic, readwrite) int32_t timeout;

/** 排序 */
@property(nonatomic, readwrite) int32_t sort;

/** 资源2 // 守护.静态资源//进场横幅无头像//ios麦位气泡下位 /麦上心情标志 //ios IM聊天背景 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bgURL;

/** 打开资源//进场横幅公屏//守护公屏//android麦位气泡上位 /心情元素2  //android IM聊天背景 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *showURL;

/** 后缀资源//android麦位气泡下位 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *postfixURL;

/** 计时类型 */
@property(nonatomic, readwrite) PB3EffectTimeType timeType;

/** 尾灯.PC图片 / 上麦特效.PC静态图片 / 进场特效.PC头图 / 进场尾灯.PC图片 /麦位特效/麦位气泡/守护动态特效/名片框上部//进场横幅带头像/pc渠道前缀静态图 /PC心情元素1 // PC IM聊天背景 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcURL;

/** 上麦特效.PC动态图片 / 进场特效.PC拉伸图/静态守护特效/名片框中部//进场横幅无头像/麦位气泡尾巴/ pc勋章动态图/pc渠道前缀动态图 /PC荣耀动态图片 /PC心情元素2 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcURL2;

/** 上麦特效.PC首次动画 / 进场特效.PC底图/名片框下部//进场横幅公屏//守护特效公屏 /PC心情元素3 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcURL3;

/** 路由 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *routerURL;

/** 特效描述/勋章活动描述 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *effectDesc;

/** 移动端气泡尾巴 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bottomURL;

/** 文字颜色 / 横幅后面的文字颜色 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *textColor;

/** 动画播放时长 */
@property(nonatomic, readwrite) int32_t playTime;

/** 预留资源/app勋章动态图/app渠道前缀动态图/APP荣耀动态图片 /心情元素3 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *extraURL;

/** tab分类 */
@property(nonatomic, readwrite) int32_t roomPanelClassify;

/** 显示类型 */
@property(nonatomic, readwrite) PB3RoomPanelShowType roomPanelShowType;

/** 获得途径 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *getMethod;

/** 星级 */
@property(nonatomic, readwrite) int32_t starNum;

/** 角标图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *cornerMarkURL;

/** 特效banner */
@property(nonatomic, readwrite, strong, null_resettable) PB3EffectBanner *effectBanner;
/** Test to see if @c effectBanner has been set. */
@property(nonatomic, readwrite) BOOL hasEffectBanner;

/** 角标图片pc /心情PC标志 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *cornerMarkURLPc;

/** 用户昵称颜色 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerNameColor;

/** 横幅后面的文字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *text;

/** 默认荣耀宣言  // /荣耀 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *effectDec;

/** 荣耀特权描述 // /荣耀 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *effectPrivilege;

/** 未点亮勋章墙状态  // /勋章 */
@property(nonatomic, readwrite) PB3EffectMedalWall effectMedalWall;

/** 用户是否可见   // /勋章 */
@property(nonatomic, readwrite) BOOL isShow;

/** 左侧偏移量 */
@property(nonatomic, readwrite) int32_t leftOffset;

/** 右侧偏移量 */
@property(nonatomic, readwrite) int32_t rightOffset;

/** 心情公屏提示 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *moodShow;

/** 心情没有权限的提示 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *moodTips;

/** 心情特效满屏数量 */
@property(nonatomic, readwrite) int32_t count;

/** 心情特效下落速度 */
@property(nonatomic, readwrite) int32_t speed;

/** 心情特效旋转角度 */
@property(nonatomic, readwrite) int32_t angle;

/** pc满屏数量 */
@property(nonatomic, readwrite) int32_t pcCount;

/** pc下落速度 */
@property(nonatomic, readwrite) int32_t pcSpeed;

/** pc旋转角度 */
@property(nonatomic, readwrite) int32_t pcAngle;

/** 是否在荣誉殿堂显示，true:显示，false:不显示 */
@property(nonatomic, readwrite) BOOL isShowHeaven;

/** 是否可续费 */
@property(nonatomic, readwrite) BOOL canRenew;

/** 关联商城id */
@property(nonatomic, readwrite) int32_t goodsId;

/** 单次续费最长时长（天） */
@property(nonatomic, readwrite) int32_t renewMaxDay;

/** 是否显示大动画 */
@property(nonatomic, readwrite) BOOL showBigEffect;

/** 进场大动画资源 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bigEffect;

/** PC进场大动画资源 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcBigEffect;

/** 保护期时长（天） */
@property(nonatomic, readwrite) int32_t renewProtectDay;

/** 进场大动画播放时长(毫秒) */
@property(nonatomic, readwrite) int32_t bigEffectPlayTime;

/** 时长 */
@property(nonatomic, readwrite) int64_t timeoutNew;

/** 特效子类型 */
@property(nonatomic, readwrite) PB3EffectSubType effectSubType;

/** 特效资源拓展 */
@property(nonatomic, readwrite, strong, null_resettable) PB3EffectExpand *effectExpand;
/** Test to see if @c effectExpand has been set. */
@property(nonatomic, readwrite) BOOL hasEffectExpand;

/** 特效分组ID */
@property(nonatomic, readwrite) int64_t groupId;

/** 组内排序 */
@property(nonatomic, readwrite) int64_t weightInGroup;

/** (服务端内部)渠道 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *channel;

/** (服务端内部)失去提示 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *loseHint;

/** (服务端内部)'失去提示 0: 不提示，1: 公屏提示，2: 系统消息提示， 3: 吐司提示' */
@property(nonatomic, readwrite) int32_t loseHintType;

/** (服务端内部)获得提示 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *getHint;

/** (服务端内部)'获得提示 0: 不提示，1: 公屏提示，2: 系统消息提示， 3: 吐司提示', */
@property(nonatomic, readwrite) int32_t getHintType;

/** 是否显示麦上计数主题 */
@property(nonatomic, readwrite) BOOL isShowChairTheme;

/** 麦上计数主题 */
@property(nonatomic, readwrite, strong, null_resettable) PB3EffectChairCountTheme *chairTheme;
/** Test to see if @c chairTheme has been set. */
@property(nonatomic, readwrite) BOOL hasChairTheme;

/** ios资源 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *iosURL;

/** android资源 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *androidURL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *showBgColorTop;

@property(nonatomic, readwrite, copy, null_resettable) NSString *showBgColorBottom;

@end

/**
 * Fetches the raw value of a @c PB3EffectConfig's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3EffectConfig_Type_RawValue(PB3EffectConfig *message);
/**
 * Sets the raw value of an @c PB3EffectConfig's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3EffectConfig_Type_RawValue(PB3EffectConfig *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3EffectConfig's @c timeType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3EffectConfig_TimeType_RawValue(PB3EffectConfig *message);
/**
 * Sets the raw value of an @c PB3EffectConfig's @c timeType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3EffectConfig_TimeType_RawValue(PB3EffectConfig *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3EffectConfig's @c roomPanelShowType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3EffectConfig_RoomPanelShowType_RawValue(PB3EffectConfig *message);
/**
 * Sets the raw value of an @c PB3EffectConfig's @c roomPanelShowType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3EffectConfig_RoomPanelShowType_RawValue(PB3EffectConfig *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3EffectConfig's @c effectMedalWall property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3EffectConfig_EffectMedalWall_RawValue(PB3EffectConfig *message);
/**
 * Sets the raw value of an @c PB3EffectConfig's @c effectMedalWall property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3EffectConfig_EffectMedalWall_RawValue(PB3EffectConfig *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3EffectConfig's @c effectSubType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3EffectConfig_EffectSubType_RawValue(PB3EffectConfig *message);
/**
 * Sets the raw value of an @c PB3EffectConfig's @c effectSubType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3EffectConfig_EffectSubType_RawValue(PB3EffectConfig *message, int32_t value);

#pragma mark - PB3EffectTeacherMedal

typedef GPB_ENUM(PB3EffectTeacherMedal_FieldNumber) {
  PB3EffectTeacherMedal_FieldNumber_EffectId = 1,
  PB3EffectTeacherMedal_FieldNumber_IsGain = 2,
};

/**
 * 师徒勋章点亮列表
 **/
@interface PB3EffectTeacherMedal : GPBMessage

/** 特效id */
@property(nonatomic, readwrite) int64_t effectId;

/** 是否点亮 */
@property(nonatomic, readwrite) BOOL isGain;

@end

#pragma mark - PB3EffectTeacherMedalListReq

typedef GPB_ENUM(PB3EffectTeacherMedalListReq_FieldNumber) {
  PB3EffectTeacherMedalListReq_FieldNumber_GroupId = 1,
};

/**
 * 师徒勋章列表
 **/
@interface PB3EffectTeacherMedalListReq : GPBMessage

/** 分组ID */
@property(nonatomic, readwrite) int64_t groupId;

@end

#pragma mark - PB3EffectTeacherMedalListRes

typedef GPB_ENUM(PB3EffectTeacherMedalListRes_FieldNumber) {
  PB3EffectTeacherMedalListRes_FieldNumber_GroupId = 1,
  PB3EffectTeacherMedalListRes_FieldNumber_MedalListArray = 2,
};

@interface PB3EffectTeacherMedalListRes : GPBMessage

/** 分组id */
@property(nonatomic, readwrite) int64_t groupId;

/** 点亮列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3EffectTeacherMedal*> *medalListArray;
/** The number of items in @c medalListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger medalListArray_Count;

@end

#pragma mark - PB3EffectExpand

typedef GPB_ENUM(PB3EffectExpand_FieldNumber) {
  PB3EffectExpand_FieldNumber_Type = 1,
  PB3EffectExpand_FieldNumber_Datas = 2,
};

/**
 * 特效拓展数据
 **/
@interface PB3EffectExpand : GPBMessage

/** 拓展数据类型 */
@property(nonatomic, readwrite) PB3EffectExpandType type;

/** 拓展数据 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *datas;

@end

/**
 * Fetches the raw value of a @c PB3EffectExpand's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3EffectExpand_Type_RawValue(PB3EffectExpand *message);
/**
 * Sets the raw value of an @c PB3EffectExpand's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3EffectExpand_Type_RawValue(PB3EffectExpand *message, int32_t value);

#pragma mark - PB3EffectHonour

typedef GPB_ENUM(PB3EffectHonour_FieldNumber) {
  PB3EffectHonour_FieldNumber_SimplePlayer = 1,
  PB3EffectHonour_FieldNumber_HonourEffect = 2,
  PB3EffectHonour_FieldNumber_EffectsArray = 3,
};

/**
 * 荣耀殿堂
 **/
@interface PB3EffectHonour : GPBMessage

/** 玩家简要信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3SimplePlayer *simplePlayer;
/** Test to see if @c simplePlayer has been set. */
@property(nonatomic, readwrite) BOOL hasSimplePlayer;

/** 荣耀特效 */
@property(nonatomic, readwrite, strong, null_resettable) PB3Effect *honourEffect;
/** Test to see if @c honourEffect has been set. */
@property(nonatomic, readwrite) BOOL hasHonourEffect;

/** 配置特效 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3Effect*> *effectsArray;
/** The number of items in @c effectsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger effectsArray_Count;

@end

#pragma mark - PB3EffectBanner

typedef GPB_ENUM(PB3EffectBanner_FieldNumber) {
  PB3EffectBanner_FieldNumber_ExplainPic = 1,
  PB3EffectBanner_FieldNumber_TranType = 2,
  PB3EffectBanner_FieldNumber_ShareType = 3,
  PB3EffectBanner_FieldNumber_TriggerControl = 4,
  PB3EffectBanner_FieldNumber_ButtonIcon = 5,
  PB3EffectBanner_FieldNumber_RouterURL = 6,
  PB3EffectBanner_FieldNumber_EffectId = 7,
  PB3EffectBanner_FieldNumber_ExplainPicPc = 8,
  PB3EffectBanner_FieldNumber_ButtonIconPc = 9,
};

/**
 * 礼物banner
 **/
@interface PB3EffectBanner : GPBMessage

/** 特效说明图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *explainPic;

/** 跳转方式 0不跳转 1图片 2url 3命令 */
@property(nonatomic, readwrite) int32_t tranType;

/** 分享类型 0不可分享 1分享图片 2分享链接 3分享外链 */
@property(nonatomic, readwrite) int32_t shareType;

/** 触发控件 0无　1通过按钮跳转　2通过图片跳转　3都可以跳转 */
@property(nonatomic, readwrite) int32_t triggerControl;

/** 铵钮图标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *buttonIcon;

/** 路由 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *routerURL;

/** 特效id */
@property(nonatomic, readwrite) int32_t effectId;

/** 礼物说明图片pc */
@property(nonatomic, readwrite, copy, null_resettable) NSString *explainPicPc;

/** 按钮图标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *buttonIconPc;

@end

#pragma mark - PB3Certif

typedef GPB_ENUM(PB3Certif_FieldNumber) {
  PB3Certif_FieldNumber_Type = 1,
  PB3Certif_FieldNumber_Level = 2,
  PB3Certif_FieldNumber_Exp = 3,
  PB3Certif_FieldNumber_Notify = 4,
  PB3Certif_FieldNumber_GoldTotal = 5,
  PB3Certif_FieldNumber_ExpTotal = 6,
};

/**
 * 认证
 **/
@interface PB3Certif : GPBMessage

/** t */
@property(nonatomic, readwrite) PB3CertifType type;

/** 等级l. 段位=(等级/5)+1 */
@property(nonatomic, readwrite) int32_t level;

/** 经验值 */
@property(nonatomic, readwrite) int32_t exp;

/** 1开启/0关闭 // n */
@property(nonatomic, readwrite) int32_t notify;

/** 累计咪爪数/100 // g */
@property(nonatomic, readwrite) int64_t goldTotal;

/** 累计接单数 // e */
@property(nonatomic, readwrite) int32_t expTotal;

@end

/**
 * Fetches the raw value of a @c PB3Certif's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3Certif_Type_RawValue(PB3Certif *message);
/**
 * Sets the raw value of an @c PB3Certif's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3Certif_Type_RawValue(PB3Certif *message, int32_t value);

#pragma mark - PB3CertifList

typedef GPB_ENUM(PB3CertifList_FieldNumber) {
  PB3CertifList_FieldNumber_EntriesArray = 1,
};

/**
 * 认证列表
 **/
@interface PB3CertifList : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3Certif*> *entriesArray;
/** The number of items in @c entriesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger entriesArray_Count;

@end

#pragma mark - PB3ModelOnOff

typedef GPB_ENUM(PB3ModelOnOff_FieldNumber) {
  PB3ModelOnOff_FieldNumber_OnOff = 1,
  PB3ModelOnOff_FieldNumber_Status = 2,
};

/**
 * 新开关模式
 **/
@interface PB3ModelOnOff : GPBMessage

@property(nonatomic, readwrite) PB3OnOffType onOff;

@property(nonatomic, readwrite) PB3ModelOnOffStatus status;

@end

/**
 * Fetches the raw value of a @c PB3ModelOnOff's @c onOff property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ModelOnOff_OnOff_RawValue(PB3ModelOnOff *message);
/**
 * Sets the raw value of an @c PB3ModelOnOff's @c onOff property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ModelOnOff_OnOff_RawValue(PB3ModelOnOff *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3ModelOnOff's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ModelOnOff_Status_RawValue(PB3ModelOnOff *message);
/**
 * Sets the raw value of an @c PB3ModelOnOff's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ModelOnOff_Status_RawValue(PB3ModelOnOff *message, int32_t value);

#pragma mark - PB3Rank

typedef GPB_ENUM(PB3Rank_FieldNumber) {
  PB3Rank_FieldNumber_Id_p = 1,
  PB3Rank_FieldNumber_Name = 2,
  PB3Rank_FieldNumber_Sex = 3,
  PB3Rank_FieldNumber_Level = 4,
  PB3Rank_FieldNumber_Value = 5,
  PB3Rank_FieldNumber_ResTime = 6,
  PB3Rank_FieldNumber_GapVal = 7,
  PB3Rank_FieldNumber_Icon = 8,
  PB3Rank_FieldNumber_GiftId = 9,
  PB3Rank_FieldNumber_GiftNum = 10,
  PB3Rank_FieldNumber_Ranking = 11,
  PB3Rank_FieldNumber_Id2 = 12,
  PB3Rank_FieldNumber_CaijiId = 13,
  PB3Rank_FieldNumber_MaskInfo = 14,
  PB3Rank_FieldNumber_Intimacy = 15,
  PB3Rank_FieldNumber_Lev = 16,
  PB3Rank_FieldNumber_CardName = 17,
  PB3Rank_FieldNumber_IsLive = 18,
  PB3Rank_FieldNumber_RoomId = 19,
};

@interface PB3Rank : GPBMessage

@property(nonatomic, readwrite) int64_t id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite) PB3SexType sex;

/** 财富、魅力等级 或 接单等级 */
@property(nonatomic, readwrite) int32_t level;

/** 财富或魅力值 或 接单数量, 金币流水 */
@property(nonatomic, readwrite) int64_t value;

@property(nonatomic, readwrite) int32_t resTime;

/** 差距值 */
@property(nonatomic, readwrite) int64_t gapVal;

@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 礼物Id */
@property(nonatomic, readwrite) int64_t giftId;

/** 总数 */
@property(nonatomic, readwrite) int32_t giftNum;

/** 排名 0是没有排名 */
@property(nonatomic, readwrite) int32_t ranking;

/** 靓号 */
@property(nonatomic, readwrite) int64_t id2;

/** 菜鸡id */
@property(nonatomic, readwrite) int64_t caijiId;

/** 马甲信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3MaskInfo *maskInfo;
/** Test to see if @c maskInfo has been set. */
@property(nonatomic, readwrite) BOOL hasMaskInfo;

/** 亲密度 */
@property(nonatomic, readwrite) int32_t intimacy;

/** 名牌等级 */
@property(nonatomic, readwrite) int32_t lev;

/** 名牌名字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *cardName;

/** 是否正在直播 */
@property(nonatomic, readwrite) BOOL isLive;

/** 房间id */
@property(nonatomic, readwrite) int64_t roomId;

@end

/**
 * Fetches the raw value of a @c PB3Rank's @c sex property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3Rank_Sex_RawValue(PB3Rank *message);
/**
 * Sets the raw value of an @c PB3Rank's @c sex property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3Rank_Sex_RawValue(PB3Rank *message, int32_t value);

#pragma mark - PB3Rank1

typedef GPB_ENUM(PB3Rank1_FieldNumber) {
  PB3Rank1_FieldNumber_Id_p = 1,
  PB3Rank1_FieldNumber_Name = 2,
  PB3Rank1_FieldNumber_Sex = 3,
  PB3Rank1_FieldNumber_WealthLevel = 4,
  PB3Rank1_FieldNumber_CharmLevel = 5,
  PB3Rank1_FieldNumber_Value = 6,
  PB3Rank1_FieldNumber_GapVal = 7,
  PB3Rank1_FieldNumber_Icon = 8,
  PB3Rank1_FieldNumber_Ranking = 9,
  PB3Rank1_FieldNumber_Id2 = 10,
  PB3Rank1_FieldNumber_CaijiId = 11,
  PB3Rank1_FieldNumber_MaskInfo = 12,
  PB3Rank1_FieldNumber_IsFan = 13,
  PB3Rank1_FieldNumber_Lev = 14,
  PB3Rank1_FieldNumber_CardName = 15,
  PB3Rank1_FieldNumber_FansNum = 16,
  PB3Rank1_FieldNumber_Intimacy = 17,
};

/**
 * 从 GetRoomRankRes my_rank 迁移过来，在 SingleLiveRankRes 用
 **/
@interface PB3Rank1 : GPBMessage

@property(nonatomic, readwrite) int64_t id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite) PB3SexType sex;

/** 财富等级 */
@property(nonatomic, readwrite) int32_t wealthLevel;

/** 魅力等级 */
@property(nonatomic, readwrite) int32_t charmLevel;

/** 房间贡献值 */
@property(nonatomic, readwrite) int64_t value;

/** 差距值 */
@property(nonatomic, readwrite) int64_t gapVal;

@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 排名 0是没有排名 */
@property(nonatomic, readwrite) int32_t ranking;

/** 靓号 */
@property(nonatomic, readwrite) int64_t id2;

/** 菜鸡id */
@property(nonatomic, readwrite) int64_t caijiId;

/** 马甲信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3MaskInfo *maskInfo;
/** Test to see if @c maskInfo has been set. */
@property(nonatomic, readwrite) BOOL hasMaskInfo;

/** TRUE:是粉丝;FALSE:不是粉丝 */
@property(nonatomic, readwrite) BOOL isFan;

/** 等级 */
@property(nonatomic, readwrite) int32_t lev;

/** 名牌名字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *cardName;

/** 粉丝数量 */
@property(nonatomic, readwrite) int32_t fansNum;

/** 亲密度 */
@property(nonatomic, readwrite) int32_t intimacy;

@end

/**
 * Fetches the raw value of a @c PB3Rank1's @c sex property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3Rank1_Sex_RawValue(PB3Rank1 *message);
/**
 * Sets the raw value of an @c PB3Rank1's @c sex property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3Rank1_Sex_RawValue(PB3Rank1 *message, int32_t value);

#pragma mark - PB3ClanInfo

typedef GPB_ENUM(PB3ClanInfo_FieldNumber) {
  PB3ClanInfo_FieldNumber_Id_p = 1,
  PB3ClanInfo_FieldNumber_IconWord = 2,
  PB3ClanInfo_FieldNumber_LevelName = 3,
  PB3ClanInfo_FieldNumber_Name = 4,
  PB3ClanInfo_FieldNumber_Level = 6,
  PB3ClanInfo_FieldNumber_IsRely = 7,
  PB3ClanInfo_FieldNumber_IsBillClan = 8,
  PB3ClanInfo_FieldNumber_IconType = 9,
  PB3ClanInfo_FieldNumber_FamilyId = 10,
  PB3ClanInfo_FieldNumber_CategoryId = 11,
  PB3ClanInfo_FieldNumber_IsSignMember = 12,
  PB3ClanInfo_FieldNumber_IsPublicSettle = 13,
  PB3ClanInfo_FieldNumber_Type = 14,
  PB3ClanInfo_FieldNumber_VipDay = 15,
  PB3ClanInfo_FieldNumber_RoomId = 16,
  PB3ClanInfo_FieldNumber_BagListArray = 17,
  PB3ClanInfo_FieldNumber_IsOperator = 18,
  PB3ClanInfo_FieldNumber_LevelIcon = 101,
};

/**
 * 公会信息
 **/
@interface PB3ClanInfo : GPBMessage

/** 公会id； 当状态开关列表中公会开启时， 判断clan_id>0时，显示公会入口, 入口url找h5同事提供 */
@property(nonatomic, readwrite) int64_t id_p;

/** 公会图标文字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *iconWord;

/** 公会等级名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *levelName;

/** 公会名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 公会等级 */
@property(nonatomic, readwrite) int64_t level;

/** 是否挂靠公会 */
@property(nonatomic, readwrite) BOOL isRely;

/** 是否点单公会 */
@property(nonatomic, readwrite) BOOL isBillClan;

/** 公会图标类型 */
@property(nonatomic, readwrite) enum PB3ClanIconType iconType;

/** 家族Id */
@property(nonatomic, readwrite) int64_t familyId;

/** 公会分类ID */
@property(nonatomic, readwrite) int64_t categoryId;

/** 是否为签约成员 */
@property(nonatomic, readwrite) BOOL isSignMember;

/** 是否是对公结算 */
@property(nonatomic, readwrite) BOOL isPublicSettle;

/** 0:正式家族；1:预选家族 */
@property(nonatomic, readwrite) int32_t type;

/** 预选家族剩余N天保护期！ */
@property(nonatomic, readwrite) int32_t vipDay;

/** 公会房间号 */
@property(nonatomic, readwrite) int64_t roomId;

/** 老板包 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3BoosBag*> *bagListArray;
/** The number of items in @c bagListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger bagListArray_Count;

/** 是否为接线员 */
@property(nonatomic, readwrite) BOOL isOperator;

@property(nonatomic, readwrite, copy, null_resettable) NSString *levelIcon;

@end

/**
 * Fetches the raw value of a @c PB3ClanInfo's @c iconType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ClanInfo_IconType_RawValue(PB3ClanInfo *message);
/**
 * Sets the raw value of an @c PB3ClanInfo's @c iconType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ClanInfo_IconType_RawValue(PB3ClanInfo *message, int32_t value);

#pragma mark - PB3BoosBag

typedef GPB_ENUM(PB3BoosBag_FieldNumber) {
  PB3BoosBag_FieldNumber_Id_p = 1,
  PB3BoosBag_FieldNumber_CfgId = 2,
  PB3BoosBag_FieldNumber_ClanId = 3,
  PB3BoosBag_FieldNumber_StartTime = 4,
  PB3BoosBag_FieldNumber_EndTime = 5,
  PB3BoosBag_FieldNumber_Status = 6,
  PB3BoosBag_FieldNumber_FrozenTime = 7,
  PB3BoosBag_FieldNumber_BoosNum = 8,
};

@interface PB3BoosBag : GPBMessage

/** 唯一ID */
@property(nonatomic, readwrite) int64_t id_p;

/** 配置ID */
@property(nonatomic, readwrite) int64_t cfgId;

/** 公会ID */
@property(nonatomic, readwrite) int64_t clanId;

/** 开始时间 */
@property(nonatomic, readwrite) int64_t startTime;

/** 结束时间 */
@property(nonatomic, readwrite) int64_t endTime;

/** 包状态 */
@property(nonatomic, readwrite) int32_t status;

/** 冻结时间 */
@property(nonatomic, readwrite) int64_t frozenTime;

/** 已接单老板数 */
@property(nonatomic, readwrite) int32_t boosNum;

@end

#pragma mark - PB3SimplePlayer

typedef GPB_ENUM(PB3SimplePlayer_FieldNumber) {
  PB3SimplePlayer_FieldNumber_Id_p = 1,
  PB3SimplePlayer_FieldNumber_Id2 = 2,
  PB3SimplePlayer_FieldNumber_Name = 3,
  PB3SimplePlayer_FieldNumber_Icon = 4,
  PB3SimplePlayer_FieldNumber_Sex = 5,
  PB3SimplePlayer_FieldNumber_WealthLevel = 6,
  PB3SimplePlayer_FieldNumber_CharmLevel = 7,
  PB3SimplePlayer_FieldNumber_Flags = 8,
  PB3SimplePlayer_FieldNumber_Flags2 = 9,
  PB3SimplePlayer_FieldNumber_Cjid = 10,
  PB3SimplePlayer_FieldNumber_RoomId = 11,
  PB3SimplePlayer_FieldNumber_RoomName = 12,
  PB3SimplePlayer_FieldNumber_Signature = 13,
  PB3SimplePlayer_FieldNumber_CreateAt = 14,
};

@interface PB3SimplePlayer : GPBMessage

@property(nonatomic, readwrite) int64_t id_p;

@property(nonatomic, readwrite) int64_t id2;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

@property(nonatomic, readwrite) PB3SexType sex;

@property(nonatomic, readwrite) int32_t wealthLevel;

@property(nonatomic, readwrite) int32_t charmLevel;

@property(nonatomic, readwrite) int64_t flags;

@property(nonatomic, readwrite) int64_t flags2;

@property(nonatomic, readwrite) int64_t cjid;

@property(nonatomic, readwrite) int64_t roomId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *roomName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *signature;

@property(nonatomic, readwrite) int64_t createAt;

@end

/**
 * Fetches the raw value of a @c PB3SimplePlayer's @c sex property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SimplePlayer_Sex_RawValue(PB3SimplePlayer *message);
/**
 * Sets the raw value of an @c PB3SimplePlayer's @c sex property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SimplePlayer_Sex_RawValue(PB3SimplePlayer *message, int32_t value);

#pragma mark - PB3VisitorInfo

typedef GPB_ENUM(PB3VisitorInfo_FieldNumber) {
  PB3VisitorInfo_FieldNumber_Id_p = 1,
  PB3VisitorInfo_FieldNumber_PlayerId = 2,
  PB3VisitorInfo_FieldNumber_PlayerId2 = 3,
  PB3VisitorInfo_FieldNumber_Nickname = 4,
  PB3VisitorInfo_FieldNumber_Sex = 5,
  PB3VisitorInfo_FieldNumber_Icon = 6,
  PB3VisitorInfo_FieldNumber_CharmLevel = 7,
  PB3VisitorInfo_FieldNumber_WealthLevel = 8,
  PB3VisitorInfo_FieldNumber_VisitTime = 9,
  PB3VisitorInfo_FieldNumber_VisitDay = 10,
  PB3VisitorInfo_FieldNumber_VisitContent = 11,
  PB3VisitorInfo_FieldNumber_VisitState = 12,
  PB3VisitorInfo_FieldNumber_OnwerId = 13,
  PB3VisitorInfo_FieldNumber_VisitorId = 14,
  PB3VisitorInfo_FieldNumber_TotalNum = 15,
  PB3VisitorInfo_FieldNumber_RoomId = 16,
  PB3VisitorInfo_FieldNumber_IsDelete = 17,
};

@interface PB3VisitorInfo : GPBMessage

/** 信息id */
@property(nonatomic, readwrite) int64_t id_p;

@property(nonatomic, readwrite) int64_t playerId;

@property(nonatomic, readwrite) int64_t playerId2;

@property(nonatomic, readwrite, copy, null_resettable) NSString *nickname;

@property(nonatomic, readwrite) PB3SexType sex;

@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

@property(nonatomic, readwrite) int32_t charmLevel;

@property(nonatomic, readwrite) int32_t wealthLevel;

/** 访问时间 */
@property(nonatomic, readwrite) int64_t visitTime;

@property(nonatomic, readwrite) int64_t visitDay;

/** 访问内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *visitContent;

@property(nonatomic, readwrite) PB3VisitorInfoState visitState;

/** 访主id */
@property(nonatomic, readwrite) int64_t onwerId;

/** 访客id */
@property(nonatomic, readwrite) int64_t visitorId;

/** 访问总次数 */
@property(nonatomic, readwrite) int64_t totalNum;

/** 所在房间Id */
@property(nonatomic, readwrite) int64_t roomId;

/** 是否注销 */
@property(nonatomic, readwrite) BOOL isDelete;

@end

/**
 * Fetches the raw value of a @c PB3VisitorInfo's @c sex property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3VisitorInfo_Sex_RawValue(PB3VisitorInfo *message);
/**
 * Sets the raw value of an @c PB3VisitorInfo's @c sex property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3VisitorInfo_Sex_RawValue(PB3VisitorInfo *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3VisitorInfo's @c visitState property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3VisitorInfo_VisitState_RawValue(PB3VisitorInfo *message);
/**
 * Sets the raw value of an @c PB3VisitorInfo's @c visitState property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3VisitorInfo_VisitState_RawValue(PB3VisitorInfo *message, int32_t value);

#pragma mark - PB3DecorateSignFrame

typedef GPB_ENUM(PB3DecorateSignFrame_FieldNumber) {
  PB3DecorateSignFrame_FieldNumber_DecorateId = 1,
  PB3DecorateSignFrame_FieldNumber_DecorateType = 2,
  PB3DecorateSignFrame_FieldNumber_PicURL = 3,
  PB3DecorateSignFrame_FieldNumber_PcPicURL = 4,
};

@interface PB3DecorateSignFrame : GPBMessage

@property(nonatomic, readwrite) int64_t decorateId;

@property(nonatomic, readwrite) PB3DecorateType decorateType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *picURL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *pcPicURL;

@end

/**
 * Fetches the raw value of a @c PB3DecorateSignFrame's @c decorateType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3DecorateSignFrame_DecorateType_RawValue(PB3DecorateSignFrame *message);
/**
 * Sets the raw value of an @c PB3DecorateSignFrame's @c decorateType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3DecorateSignFrame_DecorateType_RawValue(PB3DecorateSignFrame *message, int32_t value);

#pragma mark - PB3MaskIcon

typedef GPB_ENUM(PB3MaskIcon_FieldNumber) {
  PB3MaskIcon_FieldNumber_Icon = 1,
  PB3MaskIcon_FieldNumber_DynamicImg = 2,
};

@interface PB3MaskIcon : GPBMessage

/** 静态图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 动图图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *dynamicImg;

@end

#pragma mark - PB3MaskInfo

typedef GPB_ENUM(PB3MaskInfo_FieldNumber) {
  PB3MaskInfo_FieldNumber_PlayerId = 1,
  PB3MaskInfo_FieldNumber_MaskId = 2,
  PB3MaskInfo_FieldNumber_MaskName = 3,
  PB3MaskInfo_FieldNumber_MaskIcon = 4,
  PB3MaskInfo_FieldNumber_MaskNameId = 5,
  PB3MaskInfo_FieldNumber_MaskIconId = 6,
};

@interface PB3MaskInfo : GPBMessage

/** 玩家ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 马甲ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *maskId;

/** 马甲名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *maskName;

/** 马甲头像 */
@property(nonatomic, readwrite, strong, null_resettable) PB3MaskIcon *maskIcon;
/** Test to see if @c maskIcon has been set. */
@property(nonatomic, readwrite) BOOL hasMaskIcon;

/** 马甲名称ID */
@property(nonatomic, readwrite) int32_t maskNameId;

/** 马甲头像ID */
@property(nonatomic, readwrite) int32_t maskIconId;

@end

#pragma mark - PB3EmojiChatMsg

/**
 * 表情消息
 **/
@interface PB3EmojiChatMsg : GPBMessage

@end

#pragma mark - PB3LongList

typedef GPB_ENUM(PB3LongList_FieldNumber) {
  PB3LongList_FieldNumber_ValueArray = 1,
};

@interface PB3LongList : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *valueArray;
/** The number of items in @c valueArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger valueArray_Count;

@end

#pragma mark - PB3AuthInfo

typedef GPB_ENUM(PB3AuthInfo_FieldNumber) {
  PB3AuthInfo_FieldNumber_AuthType = 1,
  PB3AuthInfo_FieldNumber_Level = 2,
  PB3AuthInfo_FieldNumber_LevExp = 3,
  PB3AuthInfo_FieldNumber_URL = 4,
  PB3AuthInfo_FieldNumber_Status = 5,
  PB3AuthInfo_FieldNumber_SongNum = 6,
  PB3AuthInfo_FieldNumber_Name = 7,
  PB3AuthInfo_FieldNumber_StartColor = 8,
  PB3AuthInfo_FieldNumber_EndColor = 9,
};

/**
 * 歌手、声优认证信息
 **/
@interface PB3AuthInfo : GPBMessage

/** 认证类型 */
@property(nonatomic, readwrite) PB3AuthType authType;

/** 等级 */
@property(nonatomic, readwrite) int32_t level;

/** 经验值 */
@property(nonatomic, readwrite) int64_t levExp;

/** 图标URL */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

/** 认证状态 */
@property(nonatomic, readwrite) PB3AuthStatus status;

/** 电子歌单可上传歌曲数量（-1为不限制） */
@property(nonatomic, readwrite) int64_t songNum;

/** 认证名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 开始颜色 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *startColor;

/** 结束颜色 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *endColor;

@end

/**
 * Fetches the raw value of a @c PB3AuthInfo's @c authType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3AuthInfo_AuthType_RawValue(PB3AuthInfo *message);
/**
 * Sets the raw value of an @c PB3AuthInfo's @c authType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3AuthInfo_AuthType_RawValue(PB3AuthInfo *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3AuthInfo's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3AuthInfo_Status_RawValue(PB3AuthInfo *message);
/**
 * Sets the raw value of an @c PB3AuthInfo's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3AuthInfo_Status_RawValue(PB3AuthInfo *message, int32_t value);

#pragma mark - PB3ChargeFirstWelfareItem

typedef GPB_ENUM(PB3ChargeFirstWelfareItem_FieldNumber) {
  PB3ChargeFirstWelfareItem_FieldNumber_GiftId = 1,
  PB3ChargeFirstWelfareItem_FieldNumber_GiftName = 2,
  PB3ChargeFirstWelfareItem_FieldNumber_GiftType = 3,
  PB3ChargeFirstWelfareItem_FieldNumber_Duration = 4,
  PB3ChargeFirstWelfareItem_FieldNumber_ImageURL = 5,
  PB3ChargeFirstWelfareItem_FieldNumber_ImageBigURL = 6,
};

@interface PB3ChargeFirstWelfareItem : GPBMessage

/** 礼物id */
@property(nonatomic, readwrite) int32_t giftId;

/** 礼物名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *giftName;

/** 礼物类型（特效，尾灯，礼物之类） */
@property(nonatomic, readwrite) PB3ChargeFirstGiftType giftType;

/** 持续时间,单位秒 */
@property(nonatomic, readwrite) int64_t duration;

/** 礼物小图标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *imageURL;

/** 礼物大图标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *imageBigURL;

@end

/**
 * Fetches the raw value of a @c PB3ChargeFirstWelfareItem's @c giftType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ChargeFirstWelfareItem_GiftType_RawValue(PB3ChargeFirstWelfareItem *message);
/**
 * Sets the raw value of an @c PB3ChargeFirstWelfareItem's @c giftType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ChargeFirstWelfareItem_GiftType_RawValue(PB3ChargeFirstWelfareItem *message, int32_t value);

#pragma mark - PB3MobaTeamGameSetting

typedef GPB_ENUM(PB3MobaTeamGameSetting_FieldNumber) {
  PB3MobaTeamGameSetting_FieldNumber_SettingId = 1,
  PB3MobaTeamGameSetting_FieldNumber_ValInt = 2,
};

@interface PB3MobaTeamGameSetting : GPBMessage

/** 设置id */
@property(nonatomic, readwrite) int64_t settingId;

/** 数值 */
@property(nonatomic, readwrite) int64_t valInt;

@end

#pragma mark - PB3MobaTeamGameInfo

typedef GPB_ENUM(PB3MobaTeamGameInfo_FieldNumber) {
  PB3MobaTeamGameInfo_FieldNumber_GameId = 1,
  PB3MobaTeamGameInfo_FieldNumber_DemandDesc = 2,
  PB3MobaTeamGameInfo_FieldNumber_MaxNumber = 3,
  PB3MobaTeamGameInfo_FieldNumber_SettingsArray = 4,
};

/**
 * 车队游戏信息
 **/
@interface PB3MobaTeamGameInfo : GPBMessage

/** 游戏id */
@property(nonatomic, readwrite) int64_t gameId;

/** 组队要求描述 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *demandDesc;

/** 车队限制最大人数 */
@property(nonatomic, readwrite) int32_t maxNumber;

/** 配置数据 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3MobaTeamGameSetting*> *settingsArray;
/** The number of items in @c settingsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger settingsArray_Count;

@end

#pragma mark - PB3SyncOpt

typedef GPB_ENUM(PB3SyncOpt_FieldNumber) {
  PB3SyncOpt_FieldNumber_Type = 1,
  PB3SyncOpt_FieldNumber_Id_p = 2,
};

@interface PB3SyncOpt : GPBMessage

/** 操作类型 */
@property(nonatomic, readwrite) PB3SyncOptType type;

/** 唯一ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@end

/**
 * Fetches the raw value of a @c PB3SyncOpt's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SyncOpt_Type_RawValue(PB3SyncOpt *message);
/**
 * Sets the raw value of an @c PB3SyncOpt's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SyncOpt_Type_RawValue(PB3SyncOpt *message, int32_t value);

#pragma mark - PB3ChatMsg

typedef GPB_ENUM(PB3ChatMsg_FieldNumber) {
  PB3ChatMsg_FieldNumber_MsgType = 1,
  PB3ChatMsg_FieldNumber_Text = 2,
  PB3ChatMsg_FieldNumber_Image = 3,
  PB3ChatMsg_FieldNumber_Emoji = 4,
};

/**
 * 通用聊天消息
 **/
@interface PB3ChatMsg : GPBMessage

/** 消息类型 */
@property(nonatomic, readwrite) PB3ChatMsgType msgType;

/** 文本消息，当msg_type为CMT_TEXT时有意义，否则为空 */
@property(nonatomic, readwrite, strong, null_resettable) PB3TextChatMsg *text;
/** Test to see if @c text has been set. */
@property(nonatomic, readwrite) BOOL hasText;

/** 图片消息，当msg_type为CMT_TEXT时有意义，否则为空 */
@property(nonatomic, readwrite, strong, null_resettable) PB3ImageChatMsg *image;
/** Test to see if @c image has been set. */
@property(nonatomic, readwrite) BOOL hasImage;

/** 表情包消息，当msg_type为CMT_TEXT时有意义，否则为空 */
@property(nonatomic, readwrite, strong, null_resettable) PB3EmojiChatMsg *emoji;
/** Test to see if @c emoji has been set. */
@property(nonatomic, readwrite) BOOL hasEmoji;

@end

/**
 * Fetches the raw value of a @c PB3ChatMsg's @c msgType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ChatMsg_MsgType_RawValue(PB3ChatMsg *message);
/**
 * Sets the raw value of an @c PB3ChatMsg's @c msgType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ChatMsg_MsgType_RawValue(PB3ChatMsg *message, int32_t value);

#pragma mark - PB3TextChatMsg

typedef GPB_ENUM(PB3TextChatMsg_FieldNumber) {
  PB3TextChatMsg_FieldNumber_Content = 1,
};

/**
 * 文本消息
 **/
@interface PB3TextChatMsg : GPBMessage

/** 文本内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

@end

#pragma mark - PB3ImageChatMsg

typedef GPB_ENUM(PB3ImageChatMsg_FieldNumber) {
  PB3ImageChatMsg_FieldNumber_URL = 1,
};

/**
 * 图片消息
 **/
@interface PB3ImageChatMsg : GPBMessage

/** 图片url */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

@end

#pragma mark - PB3CouponUsedData

typedef GPB_ENUM(PB3CouponUsedData_FieldNumber) {
  PB3CouponUsedData_FieldNumber_Id_p = 1,
  PB3CouponUsedData_FieldNumber_PriceGold = 2,
  PB3CouponUsedData_FieldNumber_DiscountGold = 3,
  PB3CouponUsedData_FieldNumber_BuyGold = 4,
};

/**
 * 优惠券使用结构
 **/
@interface PB3CouponUsedData : GPBMessage

/** 券包id */
@property(nonatomic, readwrite) int64_t id_p;

/** 原价金币 */
@property(nonatomic, readwrite) int64_t priceGold;

/** 抵扣金币 */
@property(nonatomic, readwrite) int64_t discountGold;

/** 实际购买金币 */
@property(nonatomic, readwrite) int64_t buyGold;

@end

#pragma mark - PB3CouponCliCfg

typedef GPB_ENUM(PB3CouponCliCfg_FieldNumber) {
  PB3CouponCliCfg_FieldNumber_Id_p = 1,
  PB3CouponCliCfg_FieldNumber_Name = 2,
  PB3CouponCliCfg_FieldNumber_DiscountType = 3,
  PB3CouponCliCfg_FieldNumber_FullMoney = 4,
  PB3CouponCliCfg_FieldNumber_SubMoney = 5,
  PB3CouponCliCfg_FieldNumber_Discount = 6,
  PB3CouponCliCfg_FieldNumber_JumpType = 7,
  PB3CouponCliCfg_FieldNumber_JumpURL = 8,
  PB3CouponCliCfg_FieldNumber_UsageRemark = 9,
  PB3CouponCliCfg_FieldNumber_Status = 10,
  PB3CouponCliCfg_FieldNumber_DiscountUnit = 11,
};

/**
 * 客户端使用
 **/
@interface PB3CouponCliCfg : GPBMessage

/** 优惠券ID */
@property(nonatomic, readwrite) int64_t id_p;

/** 优惠券名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 优惠方式 */
@property(nonatomic, readwrite) PB3CouponDiscountType discountType;

/** 最低满足金额(元)(-1无限制) */
@property(nonatomic, readwrite) int32_t fullMoney;

/** 减金额(元) */
@property(nonatomic, readwrite) int32_t subMoney;

/** 折扣(百分位，即放大了100倍，如: 7.5折，则该数值为75，tips：显示时应除以10，计算时应除以100) */
@property(nonatomic, readwrite) int32_t discount;

/** 跳转场景类型 */
@property(nonatomic, readwrite) PB3CouponJumpType jumpType;

/** 跳转路由 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *jumpURL;

/** 使用说明 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *usageRemark;

/** 优惠券状态 */
@property(nonatomic, readwrite) PB3CouponStatus status;

/** 折扣单位（元，折） */
@property(nonatomic, readwrite, copy, null_resettable) NSString *discountUnit;

@end

/**
 * Fetches the raw value of a @c PB3CouponCliCfg's @c discountType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3CouponCliCfg_DiscountType_RawValue(PB3CouponCliCfg *message);
/**
 * Sets the raw value of an @c PB3CouponCliCfg's @c discountType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3CouponCliCfg_DiscountType_RawValue(PB3CouponCliCfg *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3CouponCliCfg's @c jumpType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3CouponCliCfg_JumpType_RawValue(PB3CouponCliCfg *message);
/**
 * Sets the raw value of an @c PB3CouponCliCfg's @c jumpType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3CouponCliCfg_JumpType_RawValue(PB3CouponCliCfg *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3CouponCliCfg's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3CouponCliCfg_Status_RawValue(PB3CouponCliCfg *message);
/**
 * Sets the raw value of an @c PB3CouponCliCfg's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3CouponCliCfg_Status_RawValue(PB3CouponCliCfg *message, int32_t value);

#pragma mark - PB3ServerTimestamp

typedef GPB_ENUM(PB3ServerTimestamp_FieldNumber) {
  PB3ServerTimestamp_FieldNumber_Current = 1,
  PB3ServerTimestamp_FieldNumber_CurrentTime = 2,
};

/**
 * 服务器时间
 **/
@interface PB3ServerTimestamp : GPBMessage

/** 当前服务器时间戳 */
@property(nonatomic, readwrite) int64_t current;

/** 当前时间的字符串 2020-01-01 12:00:00 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *currentTime;

@end

#pragma mark - PB3SubInfoPkRank

typedef GPB_ENUM(PB3SubInfoPkRank_FieldNumber) {
  PB3SubInfoPkRank_FieldNumber_Rank = 1,
  PB3SubInfoPkRank_FieldNumber_PlayerIcon = 2,
};

/**
 * SubInfoActivityType = 2
 **/
@interface PB3SubInfoPkRank : GPBMessage

/** 排名，0显示99+ */
@property(nonatomic, readwrite) int32_t rank;

/** 用户头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerIcon;

@end

#pragma mark - PB3ActNewAwardInfo

typedef GPB_ENUM(PB3ActNewAwardInfo_FieldNumber) {
  PB3ActNewAwardInfo_FieldNumber_AwardId = 1,
  PB3ActNewAwardInfo_FieldNumber_AwardNum = 2,
};

/**
 * 新奖励结构
 **/
@interface PB3ActNewAwardInfo : GPBMessage

/** 新奖励的自定义奖励Id */
@property(nonatomic, readwrite) int64_t awardId;

/** 奖励数量 */
@property(nonatomic, readwrite) int64_t awardNum;

@end

#pragma mark - PB3RankShow

typedef GPB_ENUM(PB3RankShow_FieldNumber) {
  PB3RankShow_FieldNumber_CharmLevel = 1,
  PB3RankShow_FieldNumber_WealthLevel = 2,
  PB3RankShow_FieldNumber_OrAnd = 3,
  PB3RankShow_FieldNumber_Type = 4,
};

/**
 * 排行榜分级展示结构
 **/
@interface PB3RankShow : GPBMessage

/** 魅力等级 */
@property(nonatomic, readwrite) int32_t charmLevel;

/** 财富等级 */
@property(nonatomic, readwrite) int32_t wealthLevel;

/** 与或判断  1:与 ；2:或 */
@property(nonatomic, readwrite) PB3OrAnd orAnd;

/** 配置类型 */
@property(nonatomic, readwrite) PB3RankShowType type;

@end

/**
 * Fetches the raw value of a @c PB3RankShow's @c orAnd property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3RankShow_OrAnd_RawValue(PB3RankShow *message);
/**
 * Sets the raw value of an @c PB3RankShow's @c orAnd property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3RankShow_OrAnd_RawValue(PB3RankShow *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3RankShow's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3RankShow_Type_RawValue(PB3RankShow *message);
/**
 * Sets the raw value of an @c PB3RankShow's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3RankShow_Type_RawValue(PB3RankShow *message, int32_t value);

#pragma mark - PB3RankShowInfo

typedef GPB_ENUM(PB3RankShowInfo_FieldNumber) {
  PB3RankShowInfo_FieldNumber_CfgArray = 1,
};

@interface PB3RankShowInfo : GPBMessage

/** 排行榜限制配置 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3RankShow*> *cfgArray;
/** The number of items in @c cfgArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger cfgArray_Count;

@end

#pragma mark - PB3LiveCharacter

typedef GPB_ENUM(PB3LiveCharacter_FieldNumber) {
  PB3LiveCharacter_FieldNumber_ModelId = 1,
  PB3LiveCharacter_FieldNumber_StickerListArray = 2,
  PB3LiveCharacter_FieldNumber_CodeName = 4,
  PB3LiveCharacter_FieldNumber_Hearts = 5,
  PB3LiveCharacter_FieldNumber_Telepathic = 6,
};

/**
 * 玩家live2d信息
 * 一期形象只有裸模+一件衣服
 **/
@interface PB3LiveCharacter : GPBMessage

/** 裸模资源id */
@property(nonatomic, readwrite) int64_t modelId;

/** 贴图id列表 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *stickerListArray;
/** The number of items in @c stickerListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger stickerListArray_Count;

/**     string snapshot_url = 3; // 名片卡静态图url */
@property(nonatomic, readwrite, copy, null_resettable) NSString *codeName;

/** 被点赞数 */
@property(nonatomic, readwrite) int64_t hearts;

/** 用户是否开启心电感应 */
@property(nonatomic, readwrite) BOOL telepathic;

@end

#pragma mark - PB3VoiceFeature

typedef GPB_ENUM(PB3VoiceFeature_FieldNumber) {
  PB3VoiceFeature_FieldNumber_VoiceURL = 1,
  PB3VoiceFeature_FieldNumber_PrimaryName = 2,
  PB3VoiceFeature_FieldNumber_PrimaryScore = 3,
  PB3VoiceFeature_FieldNumber_SubName1 = 4,
  PB3VoiceFeature_FieldNumber_SubScore1 = 5,
  PB3VoiceFeature_FieldNumber_SubName2 = 6,
  PB3VoiceFeature_FieldNumber_SubScore2 = 7,
  PB3VoiceFeature_FieldNumber_VoiceDesc = 8,
  PB3VoiceFeature_FieldNumber_VoiceRank = 9,
  PB3VoiceFeature_FieldNumber_CpName = 10,
};

/**
 * 声音特征
 **/
@interface PB3VoiceFeature : GPBMessage

/** 声音链接 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *voiceURL;

/** 主音色名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *primaryName;

/** 主音色得分 */
@property(nonatomic, readwrite) int64_t primaryScore;

/** 辅音色1名字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *subName1;

/** 辅音色1得分 */
@property(nonatomic, readwrite) int64_t subScore1;

/** 辅音色2名字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *subName2;

/** 辅音色2得分 */
@property(nonatomic, readwrite) int64_t subScore2;

/** 声音描述 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *voiceDesc;

/** 音色评价等级 */
@property(nonatomic, readwrite) int64_t voiceRank;

/** 匹配cp */
@property(nonatomic, readwrite, copy, null_resettable) NSString *cpName;

@end

#pragma mark - PB3AccountRes

typedef GPB_ENUM(PB3AccountRes_FieldNumber) {
  PB3AccountRes_FieldNumber_Id_p = 1,
  PB3AccountRes_FieldNumber_CreateAt = 2,
  PB3AccountRes_FieldNumber_LoginAt = 3,
  PB3AccountRes_FieldNumber_Name = 4,
  PB3AccountRes_FieldNumber_OffineAt = 5,
  PB3AccountRes_FieldNumber_Salt = 6,
  PB3AccountRes_FieldNumber_LoginIp = 7,
  PB3AccountRes_FieldNumber_Type = 8,
  PB3AccountRes_FieldNumber_Phone = 9,
  PB3AccountRes_FieldNumber_Flags = 10,
  PB3AccountRes_FieldNumber_AdChannel = 13,
  PB3AccountRes_FieldNumber_AdType = 14,
  PB3AccountRes_FieldNumber_CreateIp = 15,
  PB3AccountRes_FieldNumber_DeviceType = 16,
  PB3AccountRes_FieldNumber_DeviceId = 17,
  PB3AccountRes_FieldNumber_RealChannel = 18,
  PB3AccountRes_FieldNumber_ChannelTypeId = 19,
  PB3AccountRes_FieldNumber_AdvendorId = 20,
  PB3AccountRes_FieldNumber_AdvendorSubid = 21,
  PB3AccountRes_FieldNumber_PkgDeviceType = 22,
};

@interface PB3AccountRes : GPBMessage

@property(nonatomic, readwrite) int64_t id_p;

@property(nonatomic, readwrite) int32_t createAt;

@property(nonatomic, readwrite) int32_t loginAt;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite) int32_t offineAt;

@property(nonatomic, readwrite, copy, null_resettable) NSString *salt;

@property(nonatomic, readwrite, copy, null_resettable) NSString *loginIp;

@property(nonatomic, readwrite) int32_t type;

@property(nonatomic, readwrite, copy, null_resettable) NSString *phone;

@property(nonatomic, readwrite) int32_t flags;

@property(nonatomic, readwrite) int32_t adChannel;

@property(nonatomic, readwrite) int32_t adType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *createIp;

@property(nonatomic, readwrite) PB3DeviceType deviceType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceId;

@property(nonatomic, readwrite) int32_t realChannel;

/** 渠道类型id */
@property(nonatomic, readwrite) int64_t channelTypeId;

/** 渠道平台id */
@property(nonatomic, readwrite) int64_t advendorId;

/** 平台子分类id */
@property(nonatomic, readwrite) int64_t advendorSubid;

/** 渠道包设备类型 */
@property(nonatomic, readwrite) int32_t pkgDeviceType;

@end

/**
 * Fetches the raw value of a @c PB3AccountRes's @c deviceType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3AccountRes_DeviceType_RawValue(PB3AccountRes *message);
/**
 * Sets the raw value of an @c PB3AccountRes's @c deviceType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3AccountRes_DeviceType_RawValue(PB3AccountRes *message, int32_t value);

#pragma mark - PB3ChangeDetail

typedef GPB_ENUM(PB3ChangeDetail_FieldNumber) {
  PB3ChangeDetail_FieldNumber_OriginId = 1,
  PB3ChangeDetail_FieldNumber_TargetId = 2,
};

@interface PB3ChangeDetail : GPBMessage

/** 源ID */
@property(nonatomic, readwrite) int32_t originId;

/** 目标ID */
@property(nonatomic, readwrite) int32_t targetId;

@end

#pragma mark - PB3GameCommPlayer

typedef GPB_ENUM(PB3GameCommPlayer_FieldNumber) {
  PB3GameCommPlayer_FieldNumber_Id_p = 1,
  PB3GameCommPlayer_FieldNumber_Nickname = 2,
  PB3GameCommPlayer_FieldNumber_Sex = 3,
  PB3GameCommPlayer_FieldNumber_Icon = 4,
  PB3GameCommPlayer_FieldNumber_Wealth = 5,
  PB3GameCommPlayer_FieldNumber_Signature = 6,
  PB3GameCommPlayer_FieldNumber_FlagsKv = 8,
  PB3GameCommPlayer_FieldNumber_IsDelete = 9,
  PB3GameCommPlayer_FieldNumber_BgImage = 10,
  PB3GameCommPlayer_FieldNumber_LanguageCode = 11,
  PB3GameCommPlayer_FieldNumber_Region = 12,
  PB3GameCommPlayer_FieldNumber_Birthday = 13,
};

@interface PB3GameCommPlayer : GPBMessage

@property(nonatomic, readwrite) int64_t id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *nickname;

@property(nonatomic, readwrite) PB3SexType sex;

/** 头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 财富值 */
@property(nonatomic, readwrite) int64_t wealth;

/** 签名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *signature;

/** bool is_online = 7;//是否在线 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Int32Dictionary *flagsKv;
/** The number of items in @c flagsKv without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger flagsKv_Count;

/** 账号是否已经注销 */
@property(nonatomic, readwrite) BOOL isDelete;

/** 主页背景图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bgImage;

/** 用户语言 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *languageCode;

/** 用户区服 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *region;

/** 生日,2022-01-01 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *birthday;

@end

/**
 * Fetches the raw value of a @c PB3GameCommPlayer's @c sex property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3GameCommPlayer_Sex_RawValue(PB3GameCommPlayer *message);
/**
 * Sets the raw value of an @c PB3GameCommPlayer's @c sex property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3GameCommPlayer_Sex_RawValue(PB3GameCommPlayer *message, int32_t value);

#pragma mark - PB3PrivacyTypeVal

typedef GPB_ENUM(PB3PrivacyTypeVal_FieldNumber) {
  PB3PrivacyTypeVal_FieldNumber_OnOffType = 1,
  PB3PrivacyTypeVal_FieldNumber_OnOffVal = 2,
};

@interface PB3PrivacyTypeVal : GPBMessage

/** 开关类型 */
@property(nonatomic, readwrite) PB3PrivacyType onOffType;

/** 0关1开 */
@property(nonatomic, readwrite) int32_t onOffVal;

@end

/**
 * Fetches the raw value of a @c PB3PrivacyTypeVal's @c onOffType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3PrivacyTypeVal_OnOffType_RawValue(PB3PrivacyTypeVal *message);
/**
 * Sets the raw value of an @c PB3PrivacyTypeVal's @c onOffType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3PrivacyTypeVal_OnOffType_RawValue(PB3PrivacyTypeVal *message, int32_t value);

#pragma mark - PB3GameCommGameIcon

typedef GPB_ENUM(PB3GameCommGameIcon_FieldNumber) {
  PB3GameCommGameIcon_FieldNumber_GameId = 1,
  PB3GameCommGameIcon_FieldNumber_GameName = 2,
  PB3GameCommGameIcon_FieldNumber_Icon = 3,
  PB3GameCommGameIcon_FieldNumber_NameBgColor = 4,
};

@interface PB3GameCommGameIcon : GPBMessage

/** 游戏id,0表示总览 */
@property(nonatomic, readwrite) int64_t gameId;

/** 游戏名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *gameName;

/** 游戏图标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 游戏背景颜色 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nameBgColor;

@end

#pragma mark - PB3GameAchievement

typedef GPB_ENUM(PB3GameAchievement_FieldNumber) {
  PB3GameAchievement_FieldNumber_AchievementId = 1,
  PB3GameAchievement_FieldNumber_GameId = 2,
  PB3GameAchievement_FieldNumber_Title = 3,
  PB3GameAchievement_FieldNumber_Desc = 4,
  PB3GameAchievement_FieldNumber_FinishCount = 5,
  PB3GameAchievement_FieldNumber_Visibility = 6,
  PB3GameAchievement_FieldNumber_FinishType = 7,
};

@interface PB3GameAchievement : GPBMessage

/** 成就id */
@property(nonatomic, readwrite) int64_t achievementId;

/** 游戏id */
@property(nonatomic, readwrite) int64_t gameId;

/** 成就标题 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** 成就描述 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *desc;

/** 需要完成多少次才算达成,默认是1 */
@property(nonatomic, readwrite) int32_t finishCount;

/** 可见性.1:所有用户可见,2:仅白名单用户可见 */
@property(nonatomic, readwrite) int32_t visibility;

/** 奖牌类型 0:无,1:铜,2:银,3:金 */
@property(nonatomic, readwrite) int32_t finishType;

@end

#pragma mark - PB3TetrisBattleResultExtra

typedef GPB_ENUM(PB3TetrisBattleResultExtra_FieldNumber) {
  PB3TetrisBattleResultExtra_FieldNumber_EraseLines = 1,
};

/**
 * 方块大逃亡额外游戏结果数据
 **/
@interface PB3TetrisBattleResultExtra : GPBMessage

/** 消除行数 */
@property(nonatomic, readwrite) int32_t eraseLines;

@end

#pragma mark - PB3MillionaireResultExtra

typedef GPB_ENUM(PB3MillionaireResultExtra_FieldNumber) {
  PB3MillionaireResultExtra_FieldNumber_LastCorrectNum = 1,
};

/**
 * 百万富翁额外游戏结果数据
 **/
@interface PB3MillionaireResultExtra : GPBMessage

/** 最后正确题目数 */
@property(nonatomic, readwrite) int32_t lastCorrectNum;

@end

#pragma mark - PB3BasicPlayerInfo

typedef GPB_ENUM(PB3BasicPlayerInfo_FieldNumber) {
  PB3BasicPlayerInfo_FieldNumber_Id_p = 1,
  PB3BasicPlayerInfo_FieldNumber_Nickname = 2,
  PB3BasicPlayerInfo_FieldNumber_Sex = 3,
  PB3BasicPlayerInfo_FieldNumber_Id2 = 4,
  PB3BasicPlayerInfo_FieldNumber_Icon = 5,
  PB3BasicPlayerInfo_FieldNumber_IsDelete = 6,
};

@interface PB3BasicPlayerInfo : GPBMessage

/** 游客ID<=0 */
@property(nonatomic, readwrite) int64_t id_p;

/** 昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nickname;

/** 性别 */
@property(nonatomic, readwrite) PB3SexType sex;

/** 靓号. ==0时没有 */
@property(nonatomic, readwrite) int64_t id2;

/** 头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 账号是否已经注销 */
@property(nonatomic, readwrite) BOOL isDelete;

@end

/**
 * Fetches the raw value of a @c PB3BasicPlayerInfo's @c sex property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BasicPlayerInfo_Sex_RawValue(PB3BasicPlayerInfo *message);
/**
 * Sets the raw value of an @c PB3BasicPlayerInfo's @c sex property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BasicPlayerInfo_Sex_RawValue(PB3BasicPlayerInfo *message, int32_t value);

#pragma mark - PB3DirectCancelAccountReq

typedef GPB_ENUM(PB3DirectCancelAccountReq_FieldNumber) {
  PB3DirectCancelAccountReq_FieldNumber_AccountId = 1,
};

@interface PB3DirectCancelAccountReq : GPBMessage

@property(nonatomic, readwrite) int64_t accountId;

@end

#pragma mark - PB3DirectCancelAccountRes

@interface PB3DirectCancelAccountRes : GPBMessage

@end

#pragma mark - PB3ThirdPartyCancelAccountReq

typedef GPB_ENUM(PB3ThirdPartyCancelAccountReq_FieldNumber) {
  PB3ThirdPartyCancelAccountReq_FieldNumber_PlayerId = 1,
};

@interface PB3ThirdPartyCancelAccountReq : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

@end

#pragma mark - PB3ThirdPartyCancelAccountRes

typedef GPB_ENUM(PB3ThirdPartyCancelAccountRes_FieldNumber) {
  PB3ThirdPartyCancelAccountRes_FieldNumber_RetSuccess = 1,
  PB3ThirdPartyCancelAccountRes_FieldNumber_ExpectCancelTime = 2,
};

@interface PB3ThirdPartyCancelAccountRes : GPBMessage

@property(nonatomic, readwrite) BOOL retSuccess;

/** 预估注销时间 */
@property(nonatomic, readwrite) int64_t expectCancelTime;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
