// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pb/index.ext.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class PB3AcGameConf;
@class PB3ActivityPicInfo;
@class PB3AppAdConfigInfo;
@class PB3AppPushPopup;
@class PB3BackgroundConfig;
@class PB3EventTracking;
@class PB3EventTrackingArgs;
@class PB3ExchangeCodeReward;
@class PB3GameCommQuestionListItem;
@class PB3GameCommQuestionTitleItem;
@class PB3GetActivityRoomRes;
@class PB3IndexBanner;
@class PB3IndexEntry;
@class PB3OldWeekStar;
@class PB3PendantConfig;
@class PB3PlayerGameRankInfo;
@class PB3Rank;
@class PB3RankDetail;
@class PB3RankGameInfo;
@class PB3Recommend;
@class PB3ServerInfo;
@class PB3SingerInfo;
@class PB3Song;
@class PB3StarRank;
@class PB3SubInfo;
@class PB3SyncOpt;
@class PB3TaxConf;
@class PB3ThemeConfig;
@class PB3UploadSongInfo;
@class PB3UserDefined;
@class PB3WechatNotifyConf;
@class PB3WeekStarData;
@class PB3WeekStarSpecialGift;
@class PB3YoungModel;
GPB_ENUM_FWD_DECLARE(PB3DeviceType);
GPB_ENUM_FWD_DECLARE(PB3LoadClickType);
GPB_ENUM_FWD_DECLARE(PB3RankType);
GPB_ENUM_FWD_DECLARE(PB3SexType);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum PB3IndexErr

typedef GPB_ENUM(PB3IndexErr) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3IndexErr_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3IndexErr_ErrIndexZero = 0,
};

GPBEnumDescriptor *PB3IndexErr_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3IndexErr_IsValidValue(int32_t value);

#pragma mark - Enum PB3IndexCmdId

/** 广播cmdId定义 // 203 */
typedef GPB_ENUM(PB3IndexCmdId) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3IndexCmdId_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3IndexCmdId_IcIndexZero = 0,

  /** 广播活动房间配置更新 */
  PB3IndexCmdId_IcActivityRoom = 203001,

  /** 搜索房间 SearchRoom */
  PB3IndexCmdId_IcSearchRoom = 203002,

  /** 青少年模式修改 YoungModel */
  PB3IndexCmdId_IcYoungModel = 203003,

  /** 推送兑换码入口 */
  PB3IndexCmdId_IcExchangeCode = 203004,

  /** 活动游戏配置更新 */
  PB3IndexCmdId_IcAcGameConf = 203005,

  /** 主题配置（房间横幅）配置更新 */
  PB3IndexCmdId_IcThemeConfig = 203006,

  /** 挂件配置更新 */
  PB3IndexCmdId_IcPendantConfig = 203007,

  /** 应用内弹窗推送 */
  PB3IndexCmdId_IcHomePushApppopUp = 203008,

  /** 用户协议隐私政策 ProtocolConfInfo */
  PB3IndexCmdId_IcProtocolConfInfo = 203009,
};

GPBEnumDescriptor *PB3IndexCmdId_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3IndexCmdId_IsValidValue(int32_t value);

#pragma mark - Enum PB3IndexTab

typedef GPB_ENUM(PB3IndexTab) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3IndexTab_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3IndexTab_TabZore = 0,

  /** 最新 */
  PB3IndexTab_TabNew = 1,

  /** 最热 */
  PB3IndexTab_TabHot = 2,

  /** 推荐用户 */
  PB3IndexTab_TabRecommend = 3,

  /** 关键词（男友, 女友...) */
  PB3IndexTab_TabKeyWord = 4,

  /** 派单房 */
  PB3IndexTab_TabCall = 5,

  /** 优质个人 */
  PB3IndexTab_TabSupperMan = 6,

  /** 更多热门 */
  PB3IndexTab_TabMoreHot = 7,

  /** 用户自定义 */
  PB3IndexTab_TabUserDefine = 8,

  /** 推荐关键词 */
  PB3IndexTab_TabTjKeyWord = 9,

  /** 新版推荐用户 */
  PB3IndexTab_TabRecommendV2 = 10,
};

GPBEnumDescriptor *PB3IndexTab_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3IndexTab_IsValidValue(int32_t value);

#pragma mark - Enum PB3IndexConfType

typedef GPB_ENUM(PB3IndexConfType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3IndexConfType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3IndexConfType_ConfZore = 0,

  /** 房间角标 */
  PB3IndexConfType_ConfSubscript = 1,

  /** 活动类游戏限制 */
  PB3IndexConfType_ConfAcGameLimit = 2,
};

GPBEnumDescriptor *PB3IndexConfType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3IndexConfType_IsValidValue(int32_t value);

#pragma mark - Enum PB3GameRankType

/** 游戏排行榜类型 */
typedef GPB_ENUM(PB3GameRankType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3GameRankType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3GameRankType_GrtZero = 0,

  /** 总榜 */
  PB3GameRankType_GrtAll = 1,
};

GPBEnumDescriptor *PB3GameRankType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3GameRankType_IsValidValue(int32_t value);

#pragma mark - Enum PB3GameRankScoreStyle

/** 游戏分数样式 */
typedef GPB_ENUM(PB3GameRankScoreStyle) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3GameRankScoreStyle_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3GameRankScoreStyle_GrssZero = 0,

  /** 分数 */
  PB3GameRankScoreStyle_GrssScore = 1,

  /** 金钱 */
  PB3GameRankScoreStyle_GrssMoney = 2,
};

GPBEnumDescriptor *PB3GameRankScoreStyle_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3GameRankScoreStyle_IsValidValue(int32_t value);

#pragma mark - Enum PB3ActivityPicJumpType

/** 宣传图跳转位置 */
typedef GPB_ENUM(PB3ActivityPicJumpType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ActivityPicJumpType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3ActivityPicJumpType_JumpZero = 0,

  /** 界面 */
  PB3ActivityPicJumpType_JumpInterface = 1,

  /** url */
  PB3ActivityPicJumpType_JumpURL = 2,

  /** 游戏 */
  PB3ActivityPicJumpType_JumpGame = 3,
};

GPBEnumDescriptor *PB3ActivityPicJumpType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ActivityPicJumpType_IsValidValue(int32_t value);

#pragma mark - Enum PB3JumpInterfaceType

/** 宣传图跳转位置-界面 */
typedef GPB_ENUM(PB3JumpInterfaceType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3JumpInterfaceType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3JumpInterfaceType_JumpInterfaceZero = 0,

  /** 首页 */
  PB3JumpInterfaceType_JumpInterfaceIndex = 1,

  /** 发现 */
  PB3JumpInterfaceType_JumpInterfaceFind = 2,

  /** 广场 */
  PB3JumpInterfaceType_JumpInterfaceSquare = 3,
};

GPBEnumDescriptor *PB3JumpInterfaceType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3JumpInterfaceType_IsValidValue(int32_t value);

#pragma mark - Enum PB3ActivityPicReportType

typedef GPB_ENUM(PB3ActivityPicReportType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ActivityPicReportType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3ActivityPicReportType_PicReportZero = 0,

  /** 曝光 */
  PB3ActivityPicReportType_PicReportExposure = 1,

  /** 点击 */
  PB3ActivityPicReportType_PicReportClick = 2,
};

GPBEnumDescriptor *PB3ActivityPicReportType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ActivityPicReportType_IsValidValue(int32_t value);

#pragma mark - Enum PB3ClickType

typedef GPB_ENUM(PB3ClickType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ClickType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 广播交友点击 */
  PB3ClickType_ClickBroadFriend = 0,

  /** 首页推荐用户点击 */
  PB3ClickType_ClickRecommend = 1,

  /** 首页优质个人点击 */
  PB3ClickType_ClickPersonal = 2,

  /** 新推荐用户 */
  PB3ClickType_ClIckRecommendV2 = 3,
};

GPBEnumDescriptor *PB3ClickType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ClickType_IsValidValue(int32_t value);

#pragma mark - Enum PB3YoungModelPwdType

typedef GPB_ENUM(PB3YoungModelPwdType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3YoungModelPwdType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3YoungModelPwdType_YoungModelPwdTypeZero = 0,

  /** 设置密码 */
  PB3YoungModelPwdType_YoungModelPwdTypeSet = 1,

  /** 开启模式 */
  PB3YoungModelPwdType_YoungModelPwdTypeOpen = 2,

  /** 关闭模式 */
  PB3YoungModelPwdType_YoungModelPwdTypeClosed = 3,

  /** 修改密码 */
  PB3YoungModelPwdType_YoungModelPwdTypeModify = 4,

  /** 忘记密码 */
  PB3YoungModelPwdType_YoungModelPwdTypeForget = 5,

  /** 原密码 */
  PB3YoungModelPwdType_YoungModelPwdTypeOrigin = 6,

  /** 续期 */
  PB3YoungModelPwdType_YoungModelPwdTypeRenewal = 7,
};

GPBEnumDescriptor *PB3YoungModelPwdType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3YoungModelPwdType_IsValidValue(int32_t value);

#pragma mark - Enum PB3YoungModelPhoneType

typedef GPB_ENUM(PB3YoungModelPhoneType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3YoungModelPhoneType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3YoungModelPhoneType_YoungModelPhoneTypeZero = 0,

  /** 获取手机号 */
  PB3YoungModelPhoneType_YoungModelPhoneTypeGet = 1,

  /** 获取验证码 */
  PB3YoungModelPhoneType_YoungModelPwdTypeSendCode = 2,

  /** 确认验证码 */
  PB3YoungModelPhoneType_YoungModelPwdTypeConfirmCode = 3,
};

GPBEnumDescriptor *PB3YoungModelPhoneType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3YoungModelPhoneType_IsValidValue(int32_t value);

#pragma mark - Enum PB3YoungModelPageType

typedef GPB_ENUM(PB3YoungModelPageType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3YoungModelPageType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3YoungModelPageType_YoungModelPageTypeZero = 0,

  /** 超过时长 */
  PB3YoungModelPageType_YoungModelPageTypeTimeout = 1,

  /** 网络宵禁 */
  PB3YoungModelPageType_YoungModelPageTypeBanNight = 2,
};

GPBEnumDescriptor *PB3YoungModelPageType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3YoungModelPageType_IsValidValue(int32_t value);

#pragma mark - Enum PB3WeekStarType

/**
 * ---------------------
 *      周星榜
 * ---------------------
 **/
typedef GPB_ENUM(PB3WeekStarType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3WeekStarType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 本周 */
  PB3WeekStarType_ThisWeek = 0,

  /** 上周 */
  PB3WeekStarType_LastWeek = 1,
};

GPBEnumDescriptor *PB3WeekStarType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3WeekStarType_IsValidValue(int32_t value);

#pragma mark - Enum PB3AdEventType

typedef GPB_ENUM(PB3AdEventType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3AdEventType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 激活 */
  PB3AdEventType_Activate = 0,

  /** 注册 */
  PB3AdEventType_Register = 1,

  /** 充值 */
  PB3AdEventType_Recharge = 2,
};

GPBEnumDescriptor *PB3AdEventType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3AdEventType_IsValidValue(int32_t value);

#pragma mark - Enum PB3SensitiveWordLib

/** 敏感词库 */
typedef GPB_ENUM(PB3SensitiveWordLib) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3SensitiveWordLib_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3SensitiveWordLib_SensitiveWordLibNone = 0,
  PB3SensitiveWordLib_SensitiveWordLibName = 1,
};

GPBEnumDescriptor *PB3SensitiveWordLib_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3SensitiveWordLib_IsValidValue(int32_t value);

#pragma mark - Enum PB3ReportType

/** 用户举报 */
typedef GPB_ENUM(PB3ReportType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ReportType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 政治 */
  PB3ReportType_Politics = 0,

  /** 色情 */
  PB3ReportType_Sexy = 1,

  /** 广告 */
  PB3ReportType_Advert = 2,

  /** 其他 */
  PB3ReportType_Other = 3,

  /** 未成年 */
  PB3ReportType_Child = 4,

  /** 个人信息安全保护 */
  PB3ReportType_Protection = 5,

  /** 歌曲不符合歌曲内容 */
  PB3ReportType_Song = 6,

  /** 涉历史虚无有害信息 */
  PB3ReportType_History = 7,

  /** 暴力血腥 */
  PB3ReportType_Violence = 8,

  /** 谩骂 */
  PB3ReportType_PersonalAbues = 9,

  /** 刷频捣乱 */
  PB3ReportType_Spam = 10,
};

GPBEnumDescriptor *PB3ReportType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ReportType_IsValidValue(int32_t value);

#pragma mark - Enum PB3ReportSceneType

typedef GPB_ENUM(PB3ReportSceneType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ReportSceneType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3ReportSceneType_RepstNone = 0,

  /** 动态 */
  PB3ReportSceneType_RepstTrend = 1,

  /** 用户举报 */
  PB3ReportSceneType_RepstUser = 2,

  /** im举报 */
  PB3ReportSceneType_RepstIm = 3,

  /** 房间 */
  PB3ReportSceneType_RepstRoom = 4,
};

GPBEnumDescriptor *PB3ReportSceneType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ReportSceneType_IsValidValue(int32_t value);

#pragma mark - Enum PB3WechatNotifyType

/** 公众号消息通知类型 */
typedef GPB_ENUM(PB3WechatNotifyType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3WechatNotifyType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位, 不使用 */
  PB3WechatNotifyType_WntNone = 0,

  /** 新浏览通知 */
  PB3WechatNotifyType_WntVisit = 1,

  /** 新订单通知 */
  PB3WechatNotifyType_WntOrder = 2,

  /** 新咨询通知 */
  PB3WechatNotifyType_WntMsg = 3,

  /** 派单消息通知 */
  PB3WechatNotifyType_WntBill = 4,
};

GPBEnumDescriptor *PB3WechatNotifyType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3WechatNotifyType_IsValidValue(int32_t value);

#pragma mark - Enum PB3TaxConfType

typedef GPB_ENUM(PB3TaxConfType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3TaxConfType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 默认梯度 */
  PB3TaxConfType_TaxConfTypeNone = 0,

  /** 梯度和白名单 */
  PB3TaxConfType_TaxConfTypeWhiteList = 1,
};

GPBEnumDescriptor *PB3TaxConfType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3TaxConfType_IsValidValue(int32_t value);

#pragma mark - Enum PB3IndexAcGameType

/** 活动类游戏列表 */
typedef GPB_ENUM(PB3IndexAcGameType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3IndexAcGameType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3IndexAcGameType_IagtNone = 0,

  /** 爬塔 */
  PB3IndexAcGameType_IagtClimbingTower = 1,

  /** 飞碟大战 */
  PB3IndexAcGameType_IagtUfo = 2,

  /** h5全屏 */
  PB3IndexAcGameType_IagtH5All = 3,

  /** h5半屏 */
  PB3IndexAcGameType_IagtH5Half = 4,
};

GPBEnumDescriptor *PB3IndexAcGameType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3IndexAcGameType_IsValidValue(int32_t value);

#pragma mark - Enum PB3PendantState

/** 挂件状态 */
typedef GPB_ENUM(PB3PendantState) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3PendantState_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3PendantState_PendantDefault = 0,

  /** 静态 */
  PB3PendantState_PendantStatic = 1,

  /** 动态 */
  PB3PendantState_PendantMove = 2,
};

GPBEnumDescriptor *PB3PendantState_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3PendantState_IsValidValue(int32_t value);

#pragma mark - Enum PB3PendantType

/** 挂件类型 */
typedef GPB_ENUM(PB3PendantType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3PendantType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /**  占位 */
  PB3PendantType_PtZero = 0,

  /** 音乐播放器 */
  PB3PendantType_PtMusic = 1,

  /** H5 */
  PB3PendantType_PtH5 = 2,

  /** 活动盛典 */
  PB3PendantType_PtShengdian = 3,

  /** 命令 */
  PB3PendantType_PtOrder = 4,

  /** 首充CP */
  PB3PendantType_PtChatCp = 5,
};

GPBEnumDescriptor *PB3PendantType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3PendantType_IsValidValue(int32_t value);

#pragma mark - Enum PB3BannerState

/** 常驻横幅默认状态 */
typedef GPB_ENUM(PB3BannerState) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3BannerState_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3BannerState_BannerDefault = 0,

  /** 展开 */
  PB3BannerState_BannerOpen = 1,

  /** 缩略 */
  PB3BannerState_BannerHide = 2,
};

GPBEnumDescriptor *PB3BannerState_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3BannerState_IsValidValue(int32_t value);

#pragma mark - Enum PB3EventTrackingArgType

/** 埋点参数事件类型 */
typedef GPB_ENUM(PB3EventTrackingArgType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3EventTrackingArgType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3EventTrackingArgType_EtatUnknow = 0,

  /** 数字 */
  PB3EventTrackingArgType_EtatInt = 1,

  /** 字符串 */
  PB3EventTrackingArgType_EtatStr = 2,

  /** 浮点 */
  PB3EventTrackingArgType_EtatFloat = 3,
};

GPBEnumDescriptor *PB3EventTrackingArgType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3EventTrackingArgType_IsValidValue(int32_t value);

#pragma mark - Enum PB3TouchAreaType

/** 触控区域枚举 */
typedef GPB_ENUM(PB3TouchAreaType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3TouchAreaType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3TouchAreaType_TatNone = 0,

  /** 通过按钮跳转 */
  PB3TouchAreaType_TatButton = 1,

  /** 通过图片跳转 */
  PB3TouchAreaType_TatPicture = 2,

  /** 都可以跳转 */
  PB3TouchAreaType_TatAll = 3,
};

GPBEnumDescriptor *PB3TouchAreaType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3TouchAreaType_IsValidValue(int32_t value);

#pragma mark - Enum PB3TargetType

/** 目标用户类型枚举 */
typedef GPB_ENUM(PB3TargetType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3TargetType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3TargetType_TtNone = 0,

  /** 自定义ID (对应AppPushPopup中的字段target_id) */
  PB3TargetType_TtCustomizeId = 1,

  /** 全网在线 */
  PB3TargetType_TtOnline = 2,

  /** 注册时间:新注册用户、昨天、3天、7天(对应AppPushPopup中的字段install_in_begin,install_in_end) */
  PB3TargetType_TtInstallIn = 3,

  /** 全网付费用户 */
  PB3TargetType_TtCharge = 4,
};

GPBEnumDescriptor *PB3TargetType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3TargetType_IsValidValue(int32_t value);

#pragma mark - Enum PB3AppearArea

/** 生效界面枚举 */
typedef GPB_ENUM(PB3AppearArea) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3AppearArea_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3AppearArea_AaNone = 0,

  /** 全部界面 */
  PB3AppearArea_AaAllArea = 1,

  /** 房间界面 */
  PB3AppearArea_AaRoomArea = 2,

  /** 首页界面 */
  PB3AppearArea_AaIndexArea = 3,
};

GPBEnumDescriptor *PB3AppearArea_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3AppearArea_IsValidValue(int32_t value);

#pragma mark - PB3IndexExtRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface PB3IndexExtRoot : GPBRootObject
@end

#pragma mark - PB3GetIndexTabReq

@interface PB3GetIndexTabReq : GPBMessage

@end

#pragma mark - PB3GetIndexTabRes

typedef GPB_ENUM(PB3GetIndexTabRes_FieldNumber) {
  PB3GetIndexTabRes_FieldNumber_TabsArray = 1,
};

@interface PB3GetIndexTabRes : GPBMessage

/** 标签 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *tabsArray;
/** The number of items in @c tabsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger tabsArray_Count;

@end

#pragma mark - PB3GetHotSearchWordReq

@interface PB3GetHotSearchWordReq : GPBMessage

@end

#pragma mark - PB3GetHotSearchWordRes

typedef GPB_ENUM(PB3GetHotSearchWordRes_FieldNumber) {
  PB3GetHotSearchWordRes_FieldNumber_HotSearchWordArray = 1,
};

@interface PB3GetHotSearchWordRes : GPBMessage

/** 热搜词条 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *hotSearchWordArray;
/** The number of items in @c hotSearchWordArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger hotSearchWordArray_Count;

@end

#pragma mark - PB3TabListReq

typedef GPB_ENUM(PB3TabListReq_FieldNumber) {
  PB3TabListReq_FieldNumber_Tab = 1,
  PB3TabListReq_FieldNumber_Position = 2,
  PB3TabListReq_FieldNumber_KeyWord = 3,
  PB3TabListReq_FieldNumber_Sex = 4,
  PB3TabListReq_FieldNumber_Page = 5,
  PB3TabListReq_FieldNumber_PageSize = 6,
  PB3TabListReq_FieldNumber_Mid = 7,
};

@interface PB3TabListReq : GPBMessage

/** 标签 */
@property(nonatomic, readwrite) PB3IndexTab tab;

/** 请求对应标签内容的位置; 1 从标签请求， 2 从推荐栏请求 */
@property(nonatomic, readwrite) int32_t position;

/** 关键词（男友, 女友...) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *keyWord;

/** 标签选择TAB_Recommend时传 0 全部 1男 2女 */
@property(nonatomic, readwrite) int32_t sex;

/** 请求的页面 */
@property(nonatomic, readwrite) int32_t page;

/** 每页多少条数据 */
@property(nonatomic, readwrite) int32_t pageSize;

/** 模块id, 自定义模块是传入 */
@property(nonatomic, readwrite) int32_t mid;

@end

/**
 * Fetches the raw value of a @c PB3TabListReq's @c tab property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3TabListReq_Tab_RawValue(PB3TabListReq *message);
/**
 * Sets the raw value of an @c PB3TabListReq's @c tab property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3TabListReq_Tab_RawValue(PB3TabListReq *message, int32_t value);

#pragma mark - PB3TabListRes

typedef GPB_ENUM(PB3TabListRes_FieldNumber) {
  PB3TabListRes_FieldNumber_ListArray = 1,
  PB3TabListRes_FieldNumber_Mid = 2,
  PB3TabListRes_FieldNumber_Name = 3,
  PB3TabListRes_FieldNumber_Page = 4,
  PB3TabListRes_FieldNumber_Position = 5,
  PB3TabListRes_FieldNumber_Tab = 6,
  PB3TabListRes_FieldNumber_Sex = 7,
};

@interface PB3TabListRes : GPBMessage

/** 首页条目 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3IndexEntry*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

/** 模块id */
@property(nonatomic, readwrite) int32_t mid;

/** 模块名|key_word */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 页面 */
@property(nonatomic, readwrite) int32_t page;

@property(nonatomic, readwrite) int32_t position;

@property(nonatomic, readwrite) PB3IndexTab tab;

@property(nonatomic, readwrite) int32_t sex;

@end

/**
 * Fetches the raw value of a @c PB3TabListRes's @c tab property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3TabListRes_Tab_RawValue(PB3TabListRes *message);
/**
 * Sets the raw value of an @c PB3TabListRes's @c tab property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3TabListRes_Tab_RawValue(PB3TabListRes *message, int32_t value);

#pragma mark - PB3Recommend

typedef GPB_ENUM(PB3Recommend_FieldNumber) {
  PB3Recommend_FieldNumber_Mid = 1,
  PB3Recommend_FieldNumber_Sex = 2,
};

@interface PB3Recommend : GPBMessage

@property(nonatomic, readwrite) int32_t mid;

/** 标签选择TAB_Recommend时传 0 全部 1男 2女 */
@property(nonatomic, readwrite) int32_t sex;

@end

#pragma mark - PB3UserDefineReq

typedef GPB_ENUM(PB3UserDefineReq_FieldNumber) {
  PB3UserDefineReq_FieldNumber_Tab = 1,
  PB3UserDefineReq_FieldNumber_RecommendsArray = 2,
};

@interface PB3UserDefineReq : GPBMessage

/** TAB_UserDefine 用户自定义；TAB_Recommend_V2 新版推荐用户 */
@property(nonatomic, readwrite) PB3IndexTab tab;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3Recommend*> *recommendsArray;
/** The number of items in @c recommendsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger recommendsArray_Count;

@end

/**
 * Fetches the raw value of a @c PB3UserDefineReq's @c tab property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3UserDefineReq_Tab_RawValue(PB3UserDefineReq *message);
/**
 * Sets the raw value of an @c PB3UserDefineReq's @c tab property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3UserDefineReq_Tab_RawValue(PB3UserDefineReq *message, int32_t value);

#pragma mark - PB3UserDefineRes

typedef GPB_ENUM(PB3UserDefineRes_FieldNumber) {
  PB3UserDefineRes_FieldNumber_UserDefineArray = 1,
};

@interface PB3UserDefineRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3UserDefined*> *userDefineArray;
/** The number of items in @c userDefineArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger userDefineArray_Count;

@end

#pragma mark - PB3UserDefined

typedef GPB_ENUM(PB3UserDefined_FieldNumber) {
  PB3UserDefined_FieldNumber_Mid = 1,
  PB3UserDefined_FieldNumber_Name = 2,
  PB3UserDefined_FieldNumber_ListArray = 3,
  PB3UserDefined_FieldNumber_Sex = 4,
};

@interface PB3UserDefined : GPBMessage

/** 模块id */
@property(nonatomic, readwrite) int32_t mid;

/** 模块名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3IndexEntry*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

/** 性别 0 全部 1男 2女 */
@property(nonatomic, readwrite) int32_t sex;

@end

#pragma mark - PB3GetAppAdConfigReq

@interface PB3GetAppAdConfigReq : GPBMessage

@end

#pragma mark - PB3AppAdConfigInfo

typedef GPB_ENUM(PB3AppAdConfigInfo_FieldNumber) {
  PB3AppAdConfigInfo_FieldNumber_Name = 1,
  PB3AppAdConfigInfo_FieldNumber_Duration = 2,
  PB3AppAdConfigInfo_FieldNumber_URL = 3,
  PB3AppAdConfigInfo_FieldNumber_Image = 4,
  PB3AppAdConfigInfo_FieldNumber_Title = 5,
  PB3AppAdConfigInfo_FieldNumber_SoundURL = 6,
};

@interface PB3AppAdConfigInfo : GPBMessage

/** 昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 时长,秒为单位 */
@property(nonatomic, readwrite) int32_t duration;

/** 跳转url，为空时不跳转 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

/** 启动页资源url地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *image;

/** 启动页的标题 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** 启动音地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *soundURL;

@end

#pragma mark - PB3GetAppAdConfigRes

typedef GPB_ENUM(PB3GetAppAdConfigRes_FieldNumber) {
  PB3GetAppAdConfigRes_FieldNumber_ListArray = 1,
};

@interface PB3GetAppAdConfigRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3AppAdConfigInfo*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3IndexBannerReq

typedef GPB_ENUM(PB3IndexBannerReq_FieldNumber) {
  PB3IndexBannerReq_FieldNumber_Language = 1,
};

@interface PB3IndexBannerReq : GPBMessage

/** 语言 */
@property(nonatomic, readwrite) int32_t language;

@end

#pragma mark - PB3IndexBanner

typedef GPB_ENUM(PB3IndexBanner_FieldNumber) {
  PB3IndexBanner_FieldNumber_Name = 1,
  PB3IndexBanner_FieldNumber_BannerURL = 2,
  PB3IndexBanner_FieldNumber_TranType = 3,
  PB3IndexBanner_FieldNumber_TranURL = 4,
  PB3IndexBanner_FieldNumber_ShareType = 5,
  PB3IndexBanner_FieldNumber_ShareTitle = 6,
  PB3IndexBanner_FieldNumber_ShareContent = 7,
  PB3IndexBanner_FieldNumber_ShareImg = 8,
};

@interface PB3IndexBanner : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bannerURL;

/** 跳转类型 */
@property(nonatomic, readwrite) int32_t tranType;

/** 跳转url */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tranURL;

/** 分享类型 */
@property(nonatomic, readwrite) int32_t shareType;

/** 分享标题 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *shareTitle;

/** 分享内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *shareContent;

/** 分享图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *shareImg;

@end

#pragma mark - PB3IndexBannerRes

typedef GPB_ENUM(PB3IndexBannerRes_FieldNumber) {
  PB3IndexBannerRes_FieldNumber_Flag = 1,
  PB3IndexBannerRes_FieldNumber_Language = 2,
  PB3IndexBannerRes_FieldNumber_ListArray = 3,
};

@interface PB3IndexBannerRes : GPBMessage

/** 是否成功 */
@property(nonatomic, readwrite) int32_t flag;

/** 语言 */
@property(nonatomic, readwrite) int32_t language;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3IndexBanner*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3ClickCountReq

typedef GPB_ENUM(PB3ClickCountReq_FieldNumber) {
  PB3ClickCountReq_FieldNumber_ClickType = 1,
  PB3ClickCountReq_FieldNumber_DeviceId = 2,
  PB3ClickCountReq_FieldNumber_Mid = 3,
};

@interface PB3ClickCountReq : GPBMessage

@property(nonatomic, readwrite) PB3ClickType clickType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceId;

@property(nonatomic, readwrite) int32_t mid;

@end

/**
 * Fetches the raw value of a @c PB3ClickCountReq's @c clickType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ClickCountReq_ClickType_RawValue(PB3ClickCountReq *message);
/**
 * Sets the raw value of an @c PB3ClickCountReq's @c clickType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ClickCountReq_ClickType_RawValue(PB3ClickCountReq *message, int32_t value);

#pragma mark - PB3ClickCountRes

@interface PB3ClickCountRes : GPBMessage

@end

#pragma mark - PB3SearchRoomReq

typedef GPB_ENUM(PB3SearchRoomReq_FieldNumber) {
  PB3SearchRoomReq_FieldNumber_Name = 1,
  PB3SearchRoomReq_FieldNumber_Page = 2,
};

@interface PB3SearchRoomReq : GPBMessage

/** 房间名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 页数 */
@property(nonatomic, readwrite) int32_t page;

@end

#pragma mark - PB3SearchRoomRes

typedef GPB_ENUM(PB3SearchRoomRes_FieldNumber) {
  PB3SearchRoomRes_FieldNumber_ListArray = 1,
};

@interface PB3SearchRoomRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3IndexEntry*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3SearchRoom

typedef GPB_ENUM(PB3SearchRoom_FieldNumber) {
  PB3SearchRoom_FieldNumber_Name = 1,
  PB3SearchRoom_FieldNumber_Page = 2,
  PB3SearchRoom_FieldNumber_ListArray = 3,
};

@interface PB3SearchRoom : GPBMessage

/** 房间名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 页数 */
@property(nonatomic, readwrite) int32_t page;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3IndexEntry*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3CheckMaintainReq

@interface PB3CheckMaintainReq : GPBMessage

@end

#pragma mark - PB3CheckMaintainRes

@interface PB3CheckMaintainRes : GPBMessage

@end

#pragma mark - PB3GetActivityRoomReq

@interface PB3GetActivityRoomReq : GPBMessage

@end

#pragma mark - PB3GetActivityRoomRes

typedef GPB_ENUM(PB3GetActivityRoomRes_FieldNumber) {
  PB3GetActivityRoomRes_FieldNumber_RoomIdArray = 1,
  PB3GetActivityRoomRes_FieldNumber_ChatInterval = 2,
};

@interface PB3GetActivityRoomRes : GPBMessage

/** 活动房间id，请求serviceName：mizhuaActivity.room.RoomExtObj */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *roomIdArray;
/** The number of items in @c roomIdArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger roomIdArray_Count;

/** 聊天间隔 */
@property(nonatomic, readwrite) int32_t chatInterval;

@end

#pragma mark - PB3BroadcastActivityRoom

typedef GPB_ENUM(PB3BroadcastActivityRoom_FieldNumber) {
  PB3BroadcastActivityRoom_FieldNumber_Info = 1,
};

/**
 * 广播活动房间配置更新 cmdId = 203001
 **/
@interface PB3BroadcastActivityRoom : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3GetActivityRoomRes *info;
/** Test to see if @c info has been set. */
@property(nonatomic, readwrite) BOOL hasInfo;

@end

#pragma mark - PB3RankDetail

typedef GPB_ENUM(PB3RankDetail_FieldNumber) {
  PB3RankDetail_FieldNumber_RankArray = 1,
  PB3RankDetail_FieldNumber_My = 2,
};

@interface PB3RankDetail : GPBMessage

/** 排行榜单 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3Rank*> *rankArray;
/** The number of items in @c rankArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger rankArray_Count;

/** 玩家排名 */
@property(nonatomic, readwrite, strong, null_resettable) PB3Rank *my;
/** Test to see if @c my has been set. */
@property(nonatomic, readwrite) BOOL hasMy;

@end

#pragma mark - PB3GetRankReq

typedef GPB_ENUM(PB3GetRankReq_FieldNumber) {
  PB3GetRankReq_FieldNumber_Type = 1,
  PB3GetRankReq_FieldNumber_PlayerId = 2,
  PB3GetRankReq_FieldNumber_Sex = 3,
};

@interface PB3GetRankReq : GPBMessage

@property(nonatomic, readwrite) enum PB3RankType type;

@property(nonatomic, readwrite) int64_t playerId;

@property(nonatomic, readwrite) enum PB3SexType sex;

@end

/**
 * Fetches the raw value of a @c PB3GetRankReq's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3GetRankReq_Type_RawValue(PB3GetRankReq *message);
/**
 * Sets the raw value of an @c PB3GetRankReq's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3GetRankReq_Type_RawValue(PB3GetRankReq *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3GetRankReq's @c sex property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3GetRankReq_Sex_RawValue(PB3GetRankReq *message);
/**
 * Sets the raw value of an @c PB3GetRankReq's @c sex property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3GetRankReq_Sex_RawValue(PB3GetRankReq *message, int32_t value);

#pragma mark - PB3GetRankRes

typedef GPB_ENUM(PB3GetRankRes_FieldNumber) {
  PB3GetRankRes_FieldNumber_RankType = 1,
  PB3GetRankRes_FieldNumber_Day = 2,
  PB3GetRankRes_FieldNumber_Week = 3,
  PB3GetRankRes_FieldNumber_Total = 4,
  PB3GetRankRes_FieldNumber_ManHour = 5,
  PB3GetRankRes_FieldNumber_GirlHour = 6,
  PB3GetRankRes_FieldNumber_ReloadTime = 7,
  PB3GetRankRes_FieldNumber_Month = 8,
  PB3GetRankRes_FieldNumber_Year = 9,
};

@interface PB3GetRankRes : GPBMessage

/**  0魅力(明星)；1财富(富豪); 2(礼物); */
@property(nonatomic, readwrite) int32_t rankType;

/** 日榜 */
@property(nonatomic, readwrite, strong, null_resettable) PB3RankDetail *day;
/** Test to see if @c day has been set. */
@property(nonatomic, readwrite) BOOL hasDay;

/** 周榜 */
@property(nonatomic, readwrite, strong, null_resettable) PB3RankDetail *week;
/** Test to see if @c week has been set. */
@property(nonatomic, readwrite) BOOL hasWeek;

/** 总榜 */
@property(nonatomic, readwrite, strong, null_resettable) PB3RankDetail *total;
/** Test to see if @c total has been set. */
@property(nonatomic, readwrite) BOOL hasTotal;

/** 男小时榜  必须区分开，不然定时脚本更新到phome写不过去 */
@property(nonatomic, readwrite, strong, null_resettable) PB3RankDetail *manHour;
/** Test to see if @c manHour has been set. */
@property(nonatomic, readwrite) BOOL hasManHour;

/** 女小时榜 */
@property(nonatomic, readwrite, strong, null_resettable) PB3RankDetail *girlHour;
/** Test to see if @c girlHour has been set. */
@property(nonatomic, readwrite) BOOL hasGirlHour;

/** 重载时间 */
@property(nonatomic, readwrite) int64_t reloadTime;

/** 月榜 */
@property(nonatomic, readwrite, strong, null_resettable) PB3RankDetail *month;
/** Test to see if @c month has been set. */
@property(nonatomic, readwrite) BOOL hasMonth;

/** 年榜 */
@property(nonatomic, readwrite, strong, null_resettable) PB3RankDetail *year;
/** Test to see if @c year has been set. */
@property(nonatomic, readwrite) BOOL hasYear;

@end

#pragma mark - PB3GetGiftRankReq

typedef GPB_ENUM(PB3GetGiftRankReq_FieldNumber) {
  PB3GetGiftRankReq_FieldNumber_GiftId = 1,
  PB3GetGiftRankReq_FieldNumber_PlayerId = 2,
};

@interface PB3GetGiftRankReq : GPBMessage

@property(nonatomic, readwrite) int64_t giftId;

@property(nonatomic, readwrite) int64_t playerId;

@end

#pragma mark - PB3GetGiftRankRes

typedef GPB_ENUM(PB3GetGiftRankRes_FieldNumber) {
  PB3GetGiftRankRes_FieldNumber_GiftRank = 1,
};

@interface PB3GetGiftRankRes : GPBMessage

/** 礼物次级榜单 */
@property(nonatomic, readwrite, strong, null_resettable) PB3RankDetail *giftRank;
/** Test to see if @c giftRank has been set. */
@property(nonatomic, readwrite) BOOL hasGiftRank;

@end

#pragma mark - PB3LoadClickRep

typedef GPB_ENUM(PB3LoadClickRep_FieldNumber) {
  PB3LoadClickRep_FieldNumber_Type = 1,
  PB3LoadClickRep_FieldNumber_IsLoad = 2,
};

@interface PB3LoadClickRep : GPBMessage

@property(nonatomic, readwrite) enum PB3LoadClickType type;

/** true 加载，false 点击 */
@property(nonatomic, readwrite) BOOL isLoad;

@end

/**
 * Fetches the raw value of a @c PB3LoadClickRep's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3LoadClickRep_Type_RawValue(PB3LoadClickRep *message);
/**
 * Sets the raw value of an @c PB3LoadClickRep's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3LoadClickRep_Type_RawValue(PB3LoadClickRep *message, int32_t value);

#pragma mark - PB3LoadClickRes

@interface PB3LoadClickRes : GPBMessage

@end

#pragma mark - PB3GetYoungModelReq

typedef GPB_ENUM(PB3GetYoungModelReq_FieldNumber) {
  PB3GetYoungModelReq_FieldNumber_PlayerId = 1,
};

/**
 * 青少年模式 信息 (客户端)
 **/
@interface PB3GetYoungModelReq : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

@end

#pragma mark - PB3YoungModelReq

typedef GPB_ENUM(PB3YoungModelReq_FieldNumber) {
  PB3YoungModelReq_FieldNumber_PlayerId = 1,
};

@interface PB3YoungModelReq : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

@end

#pragma mark - PB3YoungModel

typedef GPB_ENUM(PB3YoungModel_FieldNumber) {
  PB3YoungModel_FieldNumber_Msg = 1,
  PB3YoungModel_FieldNumber_IsPwd = 2,
  PB3YoungModel_FieldNumber_IsOpen = 3,
  PB3YoungModel_FieldNumber_OnlineTime = 4,
  PB3YoungModel_FieldNumber_DayMaxTime = 5,
  PB3YoungModel_FieldNumber_StartTime = 6,
  PB3YoungModel_FieldNumber_EndTime = 7,
  PB3YoungModel_FieldNumber_IsLimitTime = 8,
};

@interface PB3YoungModel : GPBMessage

/** 文案 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;

/** 是否设置密码 */
@property(nonatomic, readwrite) BOOL isPwd;

/** 是否开启 */
@property(nonatomic, readwrite) BOOL isOpen;

/** 在线时长(分钟) */
@property(nonatomic, readwrite) int32_t onlineTime;

/** 每天最大时长(分钟) */
@property(nonatomic, readwrite) int32_t dayMaxTime;

/** 开始时间 22:00:00 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *startTime;

/** 结束时间 06:00:00 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *endTime;

/** 是否时间限制, 超过在线时长或禁止时段 */
@property(nonatomic, readwrite) BOOL isLimitTime;

@end

#pragma mark - PB3YoungModelRes

typedef GPB_ENUM(PB3YoungModelRes_FieldNumber) {
  PB3YoungModelRes_FieldNumber_Model = 1,
};

@interface PB3YoungModelRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3YoungModel *model;
/** Test to see if @c model has been set. */
@property(nonatomic, readwrite) BOOL hasModel;

@end

#pragma mark - PB3YoungModelPwdReq

typedef GPB_ENUM(PB3YoungModelPwdReq_FieldNumber) {
  PB3YoungModelPwdReq_FieldNumber_Type = 1,
  PB3YoungModelPwdReq_FieldNumber_Pwd = 2,
  PB3YoungModelPwdReq_FieldNumber_OriginalPwd = 3,
};

/**
 * 青少年模式 密码操作 (H5)
 **/
@interface PB3YoungModelPwdReq : GPBMessage

@property(nonatomic, readwrite) PB3YoungModelPwdType type;

/** 密码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pwd;

/** 原始密码 (只有修改密码启用) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *originalPwd;

@end

/**
 * Fetches the raw value of a @c PB3YoungModelPwdReq's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3YoungModelPwdReq_Type_RawValue(PB3YoungModelPwdReq *message);
/**
 * Sets the raw value of an @c PB3YoungModelPwdReq's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3YoungModelPwdReq_Type_RawValue(PB3YoungModelPwdReq *message, int32_t value);

#pragma mark - PB3YoungModelPwdRes

typedef GPB_ENUM(PB3YoungModelPwdRes_FieldNumber) {
  PB3YoungModelPwdRes_FieldNumber_Type = 1,
};

@interface PB3YoungModelPwdRes : GPBMessage

@property(nonatomic, readwrite) PB3YoungModelPwdType type;

@end

/**
 * Fetches the raw value of a @c PB3YoungModelPwdRes's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3YoungModelPwdRes_Type_RawValue(PB3YoungModelPwdRes *message);
/**
 * Sets the raw value of an @c PB3YoungModelPwdRes's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3YoungModelPwdRes_Type_RawValue(PB3YoungModelPwdRes *message, int32_t value);

#pragma mark - PB3YoungModelPhoneReq

typedef GPB_ENUM(PB3YoungModelPhoneReq_FieldNumber) {
  PB3YoungModelPhoneReq_FieldNumber_Type = 1,
  PB3YoungModelPhoneReq_FieldNumber_Code = 2,
};

/**
 * 青少年模式 密码操作 (H5)
 **/
@interface PB3YoungModelPhoneReq : GPBMessage

@property(nonatomic, readwrite) PB3YoungModelPhoneType type;

/** 密码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *code;

@end

/**
 * Fetches the raw value of a @c PB3YoungModelPhoneReq's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3YoungModelPhoneReq_Type_RawValue(PB3YoungModelPhoneReq *message);
/**
 * Sets the raw value of an @c PB3YoungModelPhoneReq's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3YoungModelPhoneReq_Type_RawValue(PB3YoungModelPhoneReq *message, int32_t value);

#pragma mark - PB3YoungModelPhoneRes

typedef GPB_ENUM(PB3YoungModelPhoneRes_FieldNumber) {
  PB3YoungModelPhoneRes_FieldNumber_Type = 1,
  PB3YoungModelPhoneRes_FieldNumber_Phone = 2,
};

@interface PB3YoungModelPhoneRes : GPBMessage

@property(nonatomic, readwrite) PB3YoungModelPhoneType type;

/** 手机 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *phone;

@end

/**
 * Fetches the raw value of a @c PB3YoungModelPhoneRes's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3YoungModelPhoneRes_Type_RawValue(PB3YoungModelPhoneRes *message);
/**
 * Sets the raw value of an @c PB3YoungModelPhoneRes's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3YoungModelPhoneRes_Type_RawValue(PB3YoungModelPhoneRes *message, int32_t value);

#pragma mark - PB3YoungModelStatusReq

@interface PB3YoungModelStatusReq : GPBMessage

@end

#pragma mark - PB3YoungModelStatusRes

typedef GPB_ENUM(PB3YoungModelStatusRes_FieldNumber) {
  PB3YoungModelStatusRes_FieldNumber_Type = 1,
};

@interface PB3YoungModelStatusRes : GPBMessage

@property(nonatomic, readwrite) PB3YoungModelPageType type;

@end

/**
 * Fetches the raw value of a @c PB3YoungModelStatusRes's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3YoungModelStatusRes_Type_RawValue(PB3YoungModelStatusRes *message);
/**
 * Sets the raw value of an @c PB3YoungModelStatusRes's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3YoungModelStatusRes_Type_RawValue(PB3YoungModelStatusRes *message, int32_t value);

#pragma mark - PB3WeekStarChampion

typedef GPB_ENUM(PB3WeekStarChampion_FieldNumber) {
  PB3WeekStarChampion_FieldNumber_Id_p = 1,
  PB3WeekStarChampion_FieldNumber_Id2 = 2,
  PB3WeekStarChampion_FieldNumber_Name = 3,
  PB3WeekStarChampion_FieldNumber_Charm = 4,
  PB3WeekStarChampion_FieldNumber_Icon = 5,
  PB3WeekStarChampion_FieldNumber_Remark = 6,
};

/**
 * 周星擂主
 **/
@interface PB3WeekStarChampion : GPBMessage

/** 玩家id */
@property(nonatomic, readwrite) int64_t id_p;

/** 靓号 */
@property(nonatomic, readwrite) int64_t id2;

/** 名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 值 */
@property(nonatomic, readwrite) uint32_t charm;

/** 头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 家族 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *remark;

@end

#pragma mark - PB3WeekStarData

typedef GPB_ENUM(PB3WeekStarData_FieldNumber) {
  PB3WeekStarData_FieldNumber_Id_p = 1,
  PB3WeekStarData_FieldNumber_Id2 = 2,
  PB3WeekStarData_FieldNumber_Name = 3,
  PB3WeekStarData_FieldNumber_Charm = 4,
  PB3WeekStarData_FieldNumber_Icon = 5,
  PB3WeekStarData_FieldNumber_Remark = 6,
  PB3WeekStarData_FieldNumber_Sex = 7,
};

@interface PB3WeekStarData : GPBMessage

/** 玩家id */
@property(nonatomic, readwrite) int64_t id_p;

/** 靓号 */
@property(nonatomic, readwrite) int64_t id2;

/** 名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 值 */
@property(nonatomic, readwrite) int64_t charm;

/** 头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 家族 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *remark;

@property(nonatomic, readwrite) enum PB3SexType sex;

@end

/**
 * Fetches the raw value of a @c PB3WeekStarData's @c sex property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3WeekStarData_Sex_RawValue(PB3WeekStarData *message);
/**
 * Sets the raw value of an @c PB3WeekStarData's @c sex property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3WeekStarData_Sex_RawValue(PB3WeekStarData *message, int32_t value);

#pragma mark - PB3StarRank

typedef GPB_ENUM(PB3StarRank_FieldNumber) {
  PB3StarRank_FieldNumber_Type = 1,
  PB3StarRank_FieldNumber_RankArray = 2,
  PB3StarRank_FieldNumber_Id_p = 3,
  PB3StarRank_FieldNumber_MyVal = 4,
  PB3StarRank_FieldNumber_MyRank = 5,
  PB3StarRank_FieldNumber_Icon = 6,
  PB3StarRank_FieldNumber_Name = 7,
};

@interface PB3StarRank : GPBMessage

@property(nonatomic, readwrite) PB3WeekStarType type;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3WeekStarData*> *rankArray;
/** The number of items in @c rankArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger rankArray_Count;

/** 玩家id */
@property(nonatomic, readwrite) int64_t id_p;

/** 排名对应的数值 */
@property(nonatomic, readwrite) int64_t myVal;

/** 0=50之外 */
@property(nonatomic, readwrite) int32_t myRank;

/** 头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@end

/**
 * Fetches the raw value of a @c PB3StarRank's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3StarRank_Type_RawValue(PB3StarRank *message);
/**
 * Sets the raw value of an @c PB3StarRank's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3StarRank_Type_RawValue(PB3StarRank *message, int32_t value);

#pragma mark - PB3WeekNum

typedef GPB_ENUM(PB3WeekNum_FieldNumber) {
  PB3WeekNum_FieldNumber_Num = 1,
};

@interface PB3WeekNum : GPBMessage

@property(nonatomic, readwrite) int32_t num;

@end

#pragma mark - PB3WeekStarSpecialGift

typedef GPB_ENUM(PB3WeekStarSpecialGift_FieldNumber) {
  PB3WeekStarSpecialGift_FieldNumber_GiftId = 1,
  PB3WeekStarSpecialGift_FieldNumber_GiftName = 2,
  PB3WeekStarSpecialGift_FieldNumber_GiftPrice = 3,
  PB3WeekStarSpecialGift_FieldNumber_GiftIcon = 4,
};

/**
 * 周星的特权专属礼物
 **/
@interface PB3WeekStarSpecialGift : GPBMessage

@property(nonatomic, readwrite) int32_t giftId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *giftName;

/** 价格 */
@property(nonatomic, readwrite) int32_t giftPrice;

/** 礼物图标地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *giftIcon;

@end

#pragma mark - PB3WeekStarRankReq

typedef GPB_ENUM(PB3WeekStarRankReq_FieldNumber) {
  PB3WeekStarRankReq_FieldNumber_Type = 1,
};

/**
 * 周星榜
 **/
@interface PB3WeekStarRankReq : GPBMessage

@property(nonatomic, readwrite) PB3WeekStarType type;

@end

/**
 * Fetches the raw value of a @c PB3WeekStarRankReq's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3WeekStarRankReq_Type_RawValue(PB3WeekStarRankReq *message);
/**
 * Sets the raw value of an @c PB3WeekStarRankReq's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3WeekStarRankReq_Type_RawValue(PB3WeekStarRankReq *message, int32_t value);

#pragma mark - PB3WeekStarRankRes

typedef GPB_ENUM(PB3WeekStarRankRes_FieldNumber) {
  PB3WeekStarRankRes_FieldNumber_Rank = 1,
};

@interface PB3WeekStarRankRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3StarRank *rank;
/** Test to see if @c rank has been set. */
@property(nonatomic, readwrite) BOOL hasRank;

@end

#pragma mark - PB3WeekStarFansRankReq

typedef GPB_ENUM(PB3WeekStarFansRankReq_FieldNumber) {
  PB3WeekStarFansRankReq_FieldNumber_Type = 1,
};

/**
 * 富豪榜
 **/
@interface PB3WeekStarFansRankReq : GPBMessage

@property(nonatomic, readwrite) PB3WeekStarType type;

@end

/**
 * Fetches the raw value of a @c PB3WeekStarFansRankReq's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3WeekStarFansRankReq_Type_RawValue(PB3WeekStarFansRankReq *message);
/**
 * Sets the raw value of an @c PB3WeekStarFansRankReq's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3WeekStarFansRankReq_Type_RawValue(PB3WeekStarFansRankReq *message, int32_t value);

#pragma mark - PB3WeekStarFansRankRes

typedef GPB_ENUM(PB3WeekStarFansRankRes_FieldNumber) {
  PB3WeekStarFansRankRes_FieldNumber_Rank = 1,
};

@interface PB3WeekStarFansRankRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3StarRank *rank;
/** Test to see if @c rank has been set. */
@property(nonatomic, readwrite) BOOL hasRank;

@end

#pragma mark - PB3WeekStarRoomRankReq

typedef GPB_ENUM(PB3WeekStarRoomRankReq_FieldNumber) {
  PB3WeekStarRoomRankReq_FieldNumber_Type = 1,
};

/**
 * 房间榜
 **/
@interface PB3WeekStarRoomRankReq : GPBMessage

@property(nonatomic, readwrite) PB3WeekStarType type;

@end

/**
 * Fetches the raw value of a @c PB3WeekStarRoomRankReq's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3WeekStarRoomRankReq_Type_RawValue(PB3WeekStarRoomRankReq *message);
/**
 * Sets the raw value of an @c PB3WeekStarRoomRankReq's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3WeekStarRoomRankReq_Type_RawValue(PB3WeekStarRoomRankReq *message, int32_t value);

#pragma mark - PB3WeekStarRoomRankRes

typedef GPB_ENUM(PB3WeekStarRoomRankRes_FieldNumber) {
  PB3WeekStarRoomRankRes_FieldNumber_Rank = 1,
};

@interface PB3WeekStarRoomRankRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3StarRank *rank;
/** Test to see if @c rank has been set. */
@property(nonatomic, readwrite) BOOL hasRank;

@end

#pragma mark - PB3WeekStarReq

/**
 * 周星播主
 **/
@interface PB3WeekStarReq : GPBMessage

@end

#pragma mark - PB3WeekStarRes

typedef GPB_ENUM(PB3WeekStarRes_FieldNumber) {
  PB3WeekStarRes_FieldNumber_Star = 1,
};

@interface PB3WeekStarRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3WeekStarData *star;
/** Test to see if @c star has been set. */
@property(nonatomic, readwrite) BOOL hasStar;

@end

#pragma mark - PB3WeekGiftReq

typedef GPB_ENUM(PB3WeekGiftReq_FieldNumber) {
  PB3WeekGiftReq_FieldNumber_Type = 1,
};

/**
 * 周星礼物名字和Id
 **/
@interface PB3WeekGiftReq : GPBMessage

@property(nonatomic, readwrite) PB3WeekStarType type;

@end

/**
 * Fetches the raw value of a @c PB3WeekGiftReq's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3WeekGiftReq_Type_RawValue(PB3WeekGiftReq *message);
/**
 * Sets the raw value of an @c PB3WeekGiftReq's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3WeekGiftReq_Type_RawValue(PB3WeekGiftReq *message, int32_t value);

#pragma mark - PB3WeekGiftRes

typedef GPB_ENUM(PB3WeekGiftRes_FieldNumber) {
  PB3WeekGiftRes_FieldNumber_GiftArray = 1,
  PB3WeekGiftRes_FieldNumber_SpecialGiftsArray = 2,
};

@interface PB3WeekGiftRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *giftArray;
/** The number of items in @c giftArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger giftArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3WeekStarSpecialGift*> *specialGiftsArray;
/** The number of items in @c specialGiftsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger specialGiftsArray_Count;

@end

#pragma mark - PB3WeekNumReq

/**
 * 第几期
 **/
@interface PB3WeekNumReq : GPBMessage

@end

#pragma mark - PB3WeekNumRes

typedef GPB_ENUM(PB3WeekNumRes_FieldNumber) {
  PB3WeekNumRes_FieldNumber_Num = 1,
};

@interface PB3WeekNumRes : GPBMessage

@property(nonatomic, readwrite) int32_t num;

@end

#pragma mark - PB3SubInfo

typedef GPB_ENUM(PB3SubInfo_FieldNumber) {
  PB3SubInfo_FieldNumber_Name = 1,
  PB3SubInfo_FieldNumber_URL = 2,
  PB3SubInfo_FieldNumber_Location = 3,
  PB3SubInfo_FieldNumber_BackgroundImg = 4,
  PB3SubInfo_FieldNumber_PcBackgroundImg = 5,
  PB3SubInfo_FieldNumber_Weight = 6,
  PB3SubInfo_FieldNumber_StartTime = 7,
  PB3SubInfo_FieldNumber_EndTime = 8,
  PB3SubInfo_FieldNumber_RoomsubinfoShow = 9,
  PB3SubInfo_FieldNumber_PlayerPageURL = 10,
  PB3SubInfo_FieldNumber_SlipFrequency = 11,
  PB3SubInfo_FieldNumber_ActId = 12,
  PB3SubInfo_FieldNumber_AndroidVerMin = 13,
  PB3SubInfo_FieldNumber_AndroidVerMax = 14,
  PB3SubInfo_FieldNumber_IosVerMax = 15,
  PB3SubInfo_FieldNumber_IosVerMin = 16,
  PB3SubInfo_FieldNumber_PcVerMin = 17,
  PB3SubInfo_FieldNumber_PcVerMax = 18,
  PB3SubInfo_FieldNumber_WealthLevelMin = 19,
  PB3SubInfo_FieldNumber_WealthLevelMax = 20,
  PB3SubInfo_FieldNumber_CharmLevelMin = 21,
  PB3SubInfo_FieldNumber_CharmLevelMax = 22,
  PB3SubInfo_FieldNumber_AndOr = 23,
  PB3SubInfo_FieldNumber_Blacklist = 24,
  PB3SubInfo_FieldNumber_RegisterTimeLimit = 25,
};

/**
 * 房间角标列表
 **/
@interface PB3SubInfo : GPBMessage

/** 名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 链接 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

/** 入口位置 0-无入口 1-左上 2-右上 3-底部 4-中心 */
@property(nonatomic, readwrite) int32_t location;

/** 入口角标 url */
@property(nonatomic, readwrite, copy, null_resettable) NSString *backgroundImg;

/** pc入口角标 url */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcBackgroundImg;

/** 权重 */
@property(nonatomic, readwrite) int32_t weight;

@property(nonatomic, readwrite) int64_t startTime;

@property(nonatomic, readwrite) int64_t endTime;

/** 1-point或者2-people 0-不请求信息 */
@property(nonatomic, readwrite) int32_t roomsubinfoShow;

/** 个人页url */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerPageURL;

/** 单位毫秒 例如 1000就是1秒 */
@property(nonatomic, readwrite) int32_t slipFrequency;

/** 如果是活动，则不为0 */
@property(nonatomic, readwrite) int32_t actId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *androidVerMin;

@property(nonatomic, readwrite, copy, null_resettable) NSString *androidVerMax;

@property(nonatomic, readwrite, copy, null_resettable) NSString *iosVerMax;

@property(nonatomic, readwrite, copy, null_resettable) NSString *iosVerMin;

@property(nonatomic, readwrite, copy, null_resettable) NSString *pcVerMin;

@property(nonatomic, readwrite, copy, null_resettable) NSString *pcVerMax;

@property(nonatomic, readwrite) int32_t wealthLevelMin;

@property(nonatomic, readwrite) int32_t wealthLevelMax;

@property(nonatomic, readwrite) int32_t charmLevelMin;

@property(nonatomic, readwrite) int32_t charmLevelMax;

/** 1-或 2-和 */
@property(nonatomic, readwrite) int32_t andOr;

/** 黑名单 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *blacklist;

/** 注册时间限制 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *registerTimeLimit;

@end

#pragma mark - PB3ListSubInfoReq

/**
 * 房间角标列表
 **/
@interface PB3ListSubInfoReq : GPBMessage

@end

#pragma mark - PB3ListSubInfoRes

typedef GPB_ENUM(PB3ListSubInfoRes_FieldNumber) {
  PB3ListSubInfoRes_FieldNumber_ListArray = 1,
};

@interface PB3ListSubInfoRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SubInfo*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3GetAdActiveReq

typedef GPB_ENUM(PB3GetAdActiveReq_FieldNumber) {
  PB3GetAdActiveReq_FieldNumber_AdChannel = 1,
  PB3GetAdActiveReq_FieldNumber_AdType = 2,
  PB3GetAdActiveReq_FieldNumber_Idfa = 3,
  PB3GetAdActiveReq_FieldNumber_AndroidId = 4,
  PB3GetAdActiveReq_FieldNumber_Imei = 5,
  PB3GetAdActiveReq_FieldNumber_Mac = 6,
  PB3GetAdActiveReq_FieldNumber_EventType = 7,
  PB3GetAdActiveReq_FieldNumber_DeviceId = 8,
  PB3GetAdActiveReq_FieldNumber_Oaid = 9,
  PB3GetAdActiveReq_FieldNumber_AdToken = 10,
  PB3GetAdActiveReq_FieldNumber_Extends = 11,
};

@interface PB3GetAdActiveReq : GPBMessage

/** 渠道号 */
@property(nonatomic, readwrite) int32_t adChannel;

/** 渠道类型 */
@property(nonatomic, readwrite) int32_t adType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *idfa;

@property(nonatomic, readwrite, copy, null_resettable) NSString *androidId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *imei;

@property(nonatomic, readwrite, copy, null_resettable) NSString *mac;

@property(nonatomic, readwrite) PB3AdEventType eventType;

/** 设备id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *oaid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *adToken;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *extends;
/** The number of items in @c extends without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger extends_Count;

@end

/**
 * Fetches the raw value of a @c PB3GetAdActiveReq's @c eventType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3GetAdActiveReq_EventType_RawValue(PB3GetAdActiveReq *message);
/**
 * Sets the raw value of an @c PB3GetAdActiveReq's @c eventType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3GetAdActiveReq_EventType_RawValue(PB3GetAdActiveReq *message, int32_t value);

#pragma mark - PB3GetAdActiveRes

@interface PB3GetAdActiveRes : GPBMessage

@end

#pragma mark - PB3UploadClientLogReq

typedef GPB_ENUM(PB3UploadClientLogReq_FieldNumber) {
  PB3UploadClientLogReq_FieldNumber_URL = 1,
  PB3UploadClientLogReq_FieldNumber_Text = 2,
  PB3UploadClientLogReq_FieldNumber_ClientInfo = 3,
};

/**
 * 上传客户端日志
 **/
@interface PB3UploadClientLogReq : GPBMessage

/** 日志url */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

/** 说明 如果后台拉取：auto */
@property(nonatomic, readwrite, copy, null_resettable) NSString *text;

/** 客户端信息 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *clientInfo;

@end

#pragma mark - PB3UploadClientLogRes

@interface PB3UploadClientLogRes : GPBMessage

@end

#pragma mark - PB3GetTimestampReq

/**
 * 获得服务器时间  公共接口
 **/
@interface PB3GetTimestampReq : GPBMessage

@end

#pragma mark - PB3GetTimestampRes

typedef GPB_ENUM(PB3GetTimestampRes_FieldNumber) {
  PB3GetTimestampRes_FieldNumber_Current = 1,
  PB3GetTimestampRes_FieldNumber_CurrentTime = 2,
};

@interface PB3GetTimestampRes : GPBMessage

/** 当前服务器时间戳 */
@property(nonatomic, readwrite) int64_t current;

/** 当前时间的字符串 2020-01-01 12:00:00 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *currentTime;

@end

#pragma mark - PB3HistoryWeekStarReq

typedef GPB_ENUM(PB3HistoryWeekStarReq_FieldNumber) {
  PB3HistoryWeekStarReq_FieldNumber_Page = 1,
  PB3HistoryWeekStarReq_FieldNumber_PageSize = 2,
};

@interface PB3HistoryWeekStarReq : GPBMessage

@property(nonatomic, readwrite) int32_t page;

@property(nonatomic, readwrite) int32_t pageSize;

@end

#pragma mark - PB3HistoryWeekStarRes

typedef GPB_ENUM(PB3HistoryWeekStarRes_FieldNumber) {
  PB3HistoryWeekStarRes_FieldNumber_WeekStarsArray = 1,
  PB3HistoryWeekStarRes_FieldNumber_Total = 2,
};

@interface PB3HistoryWeekStarRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3OldWeekStar*> *weekStarsArray;
/** The number of items in @c weekStarsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger weekStarsArray_Count;

/** 总共有多少记录 */
@property(nonatomic, readwrite) int64_t total;

@end

#pragma mark - PB3OldWeekStar

typedef GPB_ENUM(PB3OldWeekStar_FieldNumber) {
  PB3OldWeekStar_FieldNumber_Phase = 1,
  PB3OldWeekStar_FieldNumber_Icon = 2,
  PB3OldWeekStar_FieldNumber_Name = 3,
  PB3OldWeekStar_FieldNumber_StarVal = 4,
  PB3OldWeekStar_FieldNumber_ClanName = 5,
  PB3OldWeekStar_FieldNumber_Id_p = 6,
};

@interface PB3OldWeekStar : GPBMessage

/** 期数 */
@property(nonatomic, readwrite) int64_t phase;

/** 头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 周星值 */
@property(nonatomic, readwrite) int64_t starVal;

/** 家族名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *clanName;

/** 用户id */
@property(nonatomic, readwrite) int64_t id_p;

@end

#pragma mark - PB3GetPcChargeIdReq

typedef GPB_ENUM(PB3GetPcChargeIdReq_FieldNumber) {
  PB3GetPcChargeIdReq_FieldNumber_PlayerId = 1,
  PB3GetPcChargeIdReq_FieldNumber_Gold = 2,
  PB3GetPcChargeIdReq_FieldNumber_TimeStamp = 3,
  PB3GetPcChargeIdReq_FieldNumber_Channel = 4,
  PB3GetPcChargeIdReq_FieldNumber_Os = 5,
  PB3GetPcChargeIdReq_FieldNumber_Data_p = 6,
};

@interface PB3GetPcChargeIdReq : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

@property(nonatomic, readwrite) int32_t gold;

@property(nonatomic, readwrite) int64_t timeStamp;

@property(nonatomic, readwrite) int32_t channel;

@property(nonatomic, readwrite, copy, null_resettable) NSString *os;

@property(nonatomic, readwrite, copy, null_resettable) NSData *data_p;

@end

#pragma mark - PB3GetPcChargeIdRes

typedef GPB_ENUM(PB3GetPcChargeIdRes_FieldNumber) {
  PB3GetPcChargeIdRes_FieldNumber_PayId = 1,
  PB3GetPcChargeIdRes_FieldNumber_TimeOut = 2,
};

@interface PB3GetPcChargeIdRes : GPBMessage

@property(nonatomic, readwrite) int64_t payId;

@property(nonatomic, readwrite) int32_t timeOut;

@end

#pragma mark - PB3GetPcChargeCheckReq

typedef GPB_ENUM(PB3GetPcChargeCheckReq_FieldNumber) {
  PB3GetPcChargeCheckReq_FieldNumber_PayId = 1,
  PB3GetPcChargeCheckReq_FieldNumber_PlayerId = 2,
  PB3GetPcChargeCheckReq_FieldNumber_Gold = 3,
  PB3GetPcChargeCheckReq_FieldNumber_TimeStamp = 4,
  PB3GetPcChargeCheckReq_FieldNumber_Channel = 5,
  PB3GetPcChargeCheckReq_FieldNumber_Os = 6,
};

@interface PB3GetPcChargeCheckReq : GPBMessage

@property(nonatomic, readwrite) int64_t payId;

@property(nonatomic, readwrite) int64_t playerId;

@property(nonatomic, readwrite) int32_t gold;

@property(nonatomic, readwrite) int64_t timeStamp;

@property(nonatomic, readwrite) int32_t channel;

@property(nonatomic, readwrite, copy, null_resettable) NSString *os;

@end

#pragma mark - PB3GetPcChargeCheckRes

typedef GPB_ENUM(PB3GetPcChargeCheckRes_FieldNumber) {
  PB3GetPcChargeCheckRes_FieldNumber_Data_p = 1,
};

@interface PB3GetPcChargeCheckRes : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *data_p;

@end

#pragma mark - PB3SensitiveCheckReq

typedef GPB_ENUM(PB3SensitiveCheckReq_FieldNumber) {
  PB3SensitiveCheckReq_FieldNumber_Words = 1,
  PB3SensitiveCheckReq_FieldNumber_Lib = 2,
};

@interface PB3SensitiveCheckReq : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *words;

@property(nonatomic, readwrite) PB3SensitiveWordLib lib;

@end

/**
 * Fetches the raw value of a @c PB3SensitiveCheckReq's @c lib property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SensitiveCheckReq_Lib_RawValue(PB3SensitiveCheckReq *message);
/**
 * Sets the raw value of an @c PB3SensitiveCheckReq's @c lib property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SensitiveCheckReq_Lib_RawValue(PB3SensitiveCheckReq *message, int32_t value);

#pragma mark - PB3SensitiveCheckRes

typedef GPB_ENUM(PB3SensitiveCheckRes_FieldNumber) {
  PB3SensitiveCheckRes_FieldNumber_Pass = 1,
  PB3SensitiveCheckRes_FieldNumber_ToastText = 2,
  PB3SensitiveCheckRes_FieldNumber_CheckedWords = 3,
};

@interface PB3SensitiveCheckRes : GPBMessage

/** false:含有敏感词 */
@property(nonatomic, readwrite) BOOL pass;

/** toast 提示文案 (pass为false时有值) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *toastText;

/** 屏蔽敏感词后的内容 (pass为false时有值) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *checkedWords;

@end

#pragma mark - PB3UserActionLogReq

typedef GPB_ENUM(PB3UserActionLogReq_FieldNumber) {
  PB3UserActionLogReq_FieldNumber_ClickRoom = 1,
  PB3UserActionLogReq_FieldNumber_ClickHall = 2,
};

/**
 * 上报用户操作
 **/
@interface PB3UserActionLogReq : GPBMessage

/** 点击房间 */
@property(nonatomic, readwrite) int64_t clickRoom;

/** 点击大厅 */
@property(nonatomic, readwrite) int64_t clickHall;

@end

#pragma mark - PB3UserActionLogRes

@interface PB3UserActionLogRes : GPBMessage

@end

#pragma mark - PB3FriendBackgroundConfigReq

@interface PB3FriendBackgroundConfigReq : GPBMessage

@end

#pragma mark - PB3FriendBackgroundConfigRes

typedef GPB_ENUM(PB3FriendBackgroundConfigRes_FieldNumber) {
  PB3FriendBackgroundConfigRes_FieldNumber_Configs = 1,
};

@interface PB3FriendBackgroundConfigRes : GPBMessage

/** key 背景ID，value 对应资源 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32ObjectDictionary<PB3BackgroundConfig*> *configs;
/** The number of items in @c configs without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger configs_Count;

@end

#pragma mark - PB3BackgroundConfig

typedef GPB_ENUM(PB3BackgroundConfig_FieldNumber) {
  PB3BackgroundConfig_FieldNumber_BackgroundId = 1,
  PB3BackgroundConfig_FieldNumber_BackgroundName = 2,
  PB3BackgroundConfig_FieldNumber_BackgroundImg = 3,
  PB3BackgroundConfig_FieldNumber_BgHeartImg = 4,
  PB3BackgroundConfig_FieldNumber_BgHeartShowImg = 5,
  PB3BackgroundConfig_FieldNumber_BgNameLeftImg = 6,
  PB3BackgroundConfig_FieldNumber_BgNameRightImg = 7,
  PB3BackgroundConfig_FieldNumber_BgStoreShowImg = 8,
  PB3BackgroundConfig_FieldNumber_BgShowMinImg = 9,
};

@interface PB3BackgroundConfig : GPBMessage

@property(nonatomic, readwrite) int32_t backgroundId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *backgroundName;

/** 背景 对应之前的 /upload/resources/friend/bg/id/bg_id.png */
@property(nonatomic, readwrite, copy, null_resettable) NSString *backgroundImg;

/** 背景心 对应之前的 /upload/resources/friend/bg/id/bg_heart_id.png */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bgHeartImg;

/** 背景心，展示 对应之前的 /upload/resources/friend/bg/id/show_static_id.png */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bgHeartShowImg;

/** 左侧名字 对应之前的 /upload/resources/friend/bg/id/bg_name_left_id.png */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bgNameLeftImg;

/** 右侧名字 对应之前的 /upload/resources/friend/bg/id/bg_name_right_id.png */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bgNameRightImg;

/** 兑换商城预览图 对应之前的 /upload/resources/friend/bg/id/show_id.png */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bgStoreShowImg;

/** 小预览图 对应之前的 /upload/resources/friend/bg/id/show_min_id.png */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bgShowMinImg;

@end

#pragma mark - PB3UserReportReq

typedef GPB_ENUM(PB3UserReportReq_FieldNumber) {
  PB3UserReportReq_FieldNumber_TargetId = 1,
  PB3UserReportReq_FieldNumber_TypeArray = 2,
  PB3UserReportReq_FieldNumber_Remark = 3,
  PB3UserReportReq_FieldNumber_PicIdsArray = 4,
  PB3UserReportReq_FieldNumber_SceneType = 5,
  PB3UserReportReq_FieldNumber_SceneContentId = 6,
};

@interface PB3UserReportReq : GPBMessage

/** 被举报人的 */
@property(nonatomic, readwrite) int64_t targetId;

/** 举报类型 */
// |typeArray| contains |PB3ReportType|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *typeArray;
/** The number of items in @c typeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger typeArray_Count;

/** 举报内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *remark;

/** 举报多张图片 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *picIdsArray;
/** The number of items in @c picIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger picIdsArray_Count;

/** 举报的场景 */
@property(nonatomic, readwrite) PB3ReportSceneType sceneType;

/** 举报内容指引的id */
@property(nonatomic, readwrite) int64_t sceneContentId;

@end

/**
 * Fetches the raw value of a @c PB3UserReportReq's @c sceneType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3UserReportReq_SceneType_RawValue(PB3UserReportReq *message);
/**
 * Sets the raw value of an @c PB3UserReportReq's @c sceneType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3UserReportReq_SceneType_RawValue(PB3UserReportReq *message, int32_t value);

#pragma mark - PB3UserReportRes

typedef GPB_ENUM(PB3UserReportRes_FieldNumber) {
  PB3UserReportRes_FieldNumber_Code = 1,
};

@interface PB3UserReportRes : GPBMessage

/** 0 失败　1成功 */
@property(nonatomic, readwrite) int32_t code;

@end

#pragma mark - PB3ExchangeCodeStatusReq

/**
 * 兑换码入口状态
 **/
@interface PB3ExchangeCodeStatusReq : GPBMessage

@end

#pragma mark - PB3ExchangeCodeStatusRes

typedef GPB_ENUM(PB3ExchangeCodeStatusRes_FieldNumber) {
  PB3ExchangeCodeStatusRes_FieldNumber_Status = 1,
};

@interface PB3ExchangeCodeStatusRes : GPBMessage

/** 状态值, 0:表示隐藏, 1:表示显示 */
@property(nonatomic, readwrite) int32_t status;

@end

#pragma mark - PB3ExchangeCodeReward

typedef GPB_ENUM(PB3ExchangeCodeReward_FieldNumber) {
  PB3ExchangeCodeReward_FieldNumber_RewardId = 1,
  PB3ExchangeCodeReward_FieldNumber_RewardNum = 2,
  PB3ExchangeCodeReward_FieldNumber_Name = 3,
  PB3ExchangeCodeReward_FieldNumber_Icon = 4,
};

/**
 * 兑换码奖励
 **/
@interface PB3ExchangeCodeReward : GPBMessage

/** 奖励ID */
@property(nonatomic, readwrite) int64_t rewardId;

/** 奖励数量 */
@property(nonatomic, readwrite) int64_t rewardNum;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

@end

#pragma mark - PB3ExchangeCodeInfoReq

typedef GPB_ENUM(PB3ExchangeCodeInfoReq_FieldNumber) {
  PB3ExchangeCodeInfoReq_FieldNumber_Code = 1,
};

/**
 * 获取兑换码奖励信息
 **/
@interface PB3ExchangeCodeInfoReq : GPBMessage

/** 兑换码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *code;

@end

#pragma mark - PB3ExchangeCodeInfoRes

typedef GPB_ENUM(PB3ExchangeCodeInfoRes_FieldNumber) {
  PB3ExchangeCodeInfoRes_FieldNumber_Name = 1,
  PB3ExchangeCodeInfoRes_FieldNumber_IconURL = 2,
  PB3ExchangeCodeInfoRes_FieldNumber_Desc = 3,
  PB3ExchangeCodeInfoRes_FieldNumber_RoomId = 4,
  PB3ExchangeCodeInfoRes_FieldNumber_RewardsArray = 5,
};

@interface PB3ExchangeCodeInfoRes : GPBMessage

/** 奖励名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 奖励图标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *iconURL;

/** 奖励描述 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *desc;

/** 房间ID */
@property(nonatomic, readwrite) int64_t roomId;

/** 兑换码奖励 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ExchangeCodeReward*> *rewardsArray;
/** The number of items in @c rewardsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger rewardsArray_Count;

@end

#pragma mark - PB3ExchangeCodeRewardReq

typedef GPB_ENUM(PB3ExchangeCodeRewardReq_FieldNumber) {
  PB3ExchangeCodeRewardReq_FieldNumber_Code = 1,
};

/**
 * 领取兑换码奖励
 **/
@interface PB3ExchangeCodeRewardReq : GPBMessage

/** 兑换码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *code;

@end

#pragma mark - PB3ExchangeCodeRewardRes

typedef GPB_ENUM(PB3ExchangeCodeRewardRes_FieldNumber) {
  PB3ExchangeCodeRewardRes_FieldNumber_RewardsArray = 1,
};

@interface PB3ExchangeCodeRewardRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ExchangeCodeReward*> *rewardsArray;
/** The number of items in @c rewardsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger rewardsArray_Count;

@end

#pragma mark - PB3FocusBubbleConfReq

@interface PB3FocusBubbleConfReq : GPBMessage

@end

#pragma mark - PB3FocusBubbleConfRes

typedef GPB_ENUM(PB3FocusBubbleConfRes_FieldNumber) {
  PB3FocusBubbleConfRes_FieldNumber_FirstPopTime = 1,
  PB3FocusBubbleConfRes_FieldNumber_FirstPopLastTime = 2,
  PB3FocusBubbleConfRes_FieldNumber_SecondPopTime = 3,
  PB3FocusBubbleConfRes_FieldNumber_SecondPopLastTime = 4,
  PB3FocusBubbleConfRes_FieldNumber_PopMsgArray = 5,
};

@interface PB3FocusBubbleConfRes : GPBMessage

/** 第一次显示，进房多少秒显示 */
@property(nonatomic, readwrite) int32_t firstPopTime;

/** 第一次显示持续时间 */
@property(nonatomic, readwrite) int32_t firstPopLastTime;

/** 第二次显示，进房多少秒显示 */
@property(nonatomic, readwrite) int32_t secondPopTime;

/** 第二次显示持续时间 */
@property(nonatomic, readwrite) int32_t secondPopLastTime;

/** 文案，$sex性别占位符号，前端自己替换小哥哥小姐姐 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *popMsgArray;
/** The number of items in @c popMsgArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger popMsgArray_Count;

@end

#pragma mark - PB3GetSongInfoReq

typedef GPB_ENUM(PB3GetSongInfoReq_FieldNumber) {
  PB3GetSongInfoReq_FieldNumber_SongId = 1,
};

@interface PB3GetSongInfoReq : GPBMessage

@property(nonatomic, readwrite) int32_t songId;

@end

#pragma mark - PB3GetSongInfoRes

typedef GPB_ENUM(PB3GetSongInfoRes_FieldNumber) {
  PB3GetSongInfoRes_FieldNumber_Song = 1,
};

@interface PB3GetSongInfoRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3Song *song;
/** Test to see if @c song has been set. */
@property(nonatomic, readwrite) BOOL hasSong;

@end

#pragma mark - PB3WechatNotifyConf

typedef GPB_ENUM(PB3WechatNotifyConf_FieldNumber) {
  PB3WechatNotifyConf_FieldNumber_Type = 1,
  PB3WechatNotifyConf_FieldNumber_Switch_p = 2,
};

/**
 * 公众号消息通知开关设置
 **/
@interface PB3WechatNotifyConf : GPBMessage

/** 通知类型 */
@property(nonatomic, readwrite) PB3WechatNotifyType type;

/** 开关状态(开:1, 关:0) */
@property(nonatomic, readwrite) int32_t switch_p;

@end

/**
 * Fetches the raw value of a @c PB3WechatNotifyConf's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3WechatNotifyConf_Type_RawValue(PB3WechatNotifyConf *message);
/**
 * Sets the raw value of an @c PB3WechatNotifyConf's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3WechatNotifyConf_Type_RawValue(PB3WechatNotifyConf *message, int32_t value);

#pragma mark - PB3WechatNotifyConfReq

/**
 * 获取公众号消息通知开关设置
 **/
@interface PB3WechatNotifyConfReq : GPBMessage

@end

#pragma mark - PB3WechatNotifyConfRes

typedef GPB_ENUM(PB3WechatNotifyConfRes_FieldNumber) {
  PB3WechatNotifyConfRes_FieldNumber_ConfigsArray = 1,
};

@interface PB3WechatNotifyConfRes : GPBMessage

/** 开关配置列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3WechatNotifyConf*> *configsArray;
/** The number of items in @c configsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger configsArray_Count;

@end

#pragma mark - PB3WechatNotifySwitchReq

typedef GPB_ENUM(PB3WechatNotifySwitchReq_FieldNumber) {
  PB3WechatNotifySwitchReq_FieldNumber_Type = 1,
  PB3WechatNotifySwitchReq_FieldNumber_Switch_p = 2,
};

/**
 * 设置公众号消息通知开关
 **/
@interface PB3WechatNotifySwitchReq : GPBMessage

/** 通知类型 */
@property(nonatomic, readwrite) PB3WechatNotifyType type;

/** 开关状态(开:1, 关:0) */
@property(nonatomic, readwrite) int32_t switch_p;

@end

/**
 * Fetches the raw value of a @c PB3WechatNotifySwitchReq's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3WechatNotifySwitchReq_Type_RawValue(PB3WechatNotifySwitchReq *message);
/**
 * Sets the raw value of an @c PB3WechatNotifySwitchReq's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3WechatNotifySwitchReq_Type_RawValue(PB3WechatNotifySwitchReq *message, int32_t value);

#pragma mark - PB3WechatNotifySwitchRes

@interface PB3WechatNotifySwitchRes : GPBMessage

@end

#pragma mark - PB3TaxConfReq

typedef GPB_ENUM(PB3TaxConfReq_FieldNumber) {
  PB3TaxConfReq_FieldNumber_Type = 1,
};

/**
 * 佣金提现税率
 **/
@interface PB3TaxConfReq : GPBMessage

@property(nonatomic, readwrite) PB3TaxConfType type;

@end

/**
 * Fetches the raw value of a @c PB3TaxConfReq's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3TaxConfReq_Type_RawValue(PB3TaxConfReq *message);
/**
 * Sets the raw value of an @c PB3TaxConfReq's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3TaxConfReq_Type_RawValue(PB3TaxConfReq *message, int32_t value);

#pragma mark - PB3TaxConf

typedef GPB_ENUM(PB3TaxConf_FieldNumber) {
  PB3TaxConf_FieldNumber_MinValue = 1,
  PB3TaxConf_FieldNumber_MaxValue = 2,
  PB3TaxConf_FieldNumber_Tax = 3,
};

@interface PB3TaxConf : GPBMessage

/** 大于该值 */
@property(nonatomic, readwrite) int32_t minValue;

/** 小于等于该值 */
@property(nonatomic, readwrite) int32_t maxValue;

/** 税率 0% - 100% */
@property(nonatomic, readwrite) int32_t tax;

@end

#pragma mark - PB3TaxConfRes

typedef GPB_ENUM(PB3TaxConfRes_FieldNumber) {
  PB3TaxConfRes_FieldNumber_TaxArray = 1,
};

@interface PB3TaxConfRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3TaxConf*> *taxArray;
/** The number of items in @c taxArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger taxArray_Count;

@end

#pragma mark - PB3LevelLimitConfIOSRes

typedef GPB_ENUM(PB3LevelLimitConfIOSRes_FieldNumber) {
  PB3LevelLimitConfIOSRes_FieldNumber_CharmLevel = 1,
  PB3LevelLimitConfIOSRes_FieldNumber_WealthLevel = 2,
  PB3LevelLimitConfIOSRes_FieldNumber_OpenAndOr = 3,
};

@interface PB3LevelLimitConfIOSRes : GPBMessage

/** 魅力等级 */
@property(nonatomic, readwrite) int32_t charmLevel;

/** 财富等级 */
@property(nonatomic, readwrite) int32_t wealthLevel;

/** 0 为或，1 为与 */
@property(nonatomic, readwrite) int32_t openAndOr;

@end

#pragma mark - PB3LevelLimitConfIOSReq

@interface PB3LevelLimitConfIOSReq : GPBMessage

@end

#pragma mark - PB3AcGameConf

typedef GPB_ENUM(PB3AcGameConf_FieldNumber) {
  PB3AcGameConf_FieldNumber_GameId = 1,
  PB3AcGameConf_FieldNumber_GameType = 2,
  PB3AcGameConf_FieldNumber_GameName = 3,
  PB3AcGameConf_FieldNumber_GameIcon = 4,
  PB3AcGameConf_FieldNumber_GamePcIcon = 5,
  PB3AcGameConf_FieldNumber_SourceURL = 6,
  PB3AcGameConf_FieldNumber_GameVersion = 7,
  PB3AcGameConf_FieldNumber_MinSdkVersion = 8,
  PB3AcGameConf_FieldNumber_Weight = 9,
  PB3AcGameConf_FieldNumber_GameTypeInt = 10,
  PB3AcGameConf_FieldNumber_Router = 11,
};

@interface PB3AcGameConf : GPBMessage

@property(nonatomic, readwrite) int32_t gameId;

/** 游戏类型 */
@property(nonatomic, readwrite) PB3IndexAcGameType gameType;

/** 游戏名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *gameName;

/** 游戏图标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *gameIcon;

/** pc游戏图标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *gamePcIcon;

/** 跳转链接 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sourceURL;

/** 当前游戏版本 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *gameVersion;

/** 最低sdk版本 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *minSdkVersion;

/** 权重 */
@property(nonatomic, readwrite) int32_t weight;

/** 游戏类型 */
@property(nonatomic, readwrite) int32_t gameTypeInt;

/** 路由 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *router;

@end

/**
 * Fetches the raw value of a @c PB3AcGameConf's @c gameType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3AcGameConf_GameType_RawValue(PB3AcGameConf *message);
/**
 * Sets the raw value of an @c PB3AcGameConf's @c gameType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3AcGameConf_GameType_RawValue(PB3AcGameConf *message, int32_t value);

#pragma mark - PB3AcGameConfListReq

@interface PB3AcGameConfListReq : GPBMessage

@end

#pragma mark - PB3AcGameConfListRes

typedef GPB_ENUM(PB3AcGameConfListRes_FieldNumber) {
  PB3AcGameConfListRes_FieldNumber_ConfListArray = 1,
  PB3AcGameConfListRes_FieldNumber_Icon = 2,
  PB3AcGameConfListRes_FieldNumber_PcIcon = 3,
  PB3AcGameConfListRes_FieldNumber_PcIconFlow = 4,
  PB3AcGameConfListRes_FieldNumber_PcIconClick = 5,
};

@interface PB3AcGameConfListRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3AcGameConf*> *confListArray;
/** The number of items in @c confListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger confListArray_Count;

/** 入口图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 入口图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcIcon;

/** pc入口图悬浮 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcIconFlow;

/** pc入口图点击 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcIconClick;

@end

#pragma mark - PB3PendantConfig

typedef GPB_ENUM(PB3PendantConfig_FieldNumber) {
  PB3PendantConfig_FieldNumber_Id_p = 1,
  PB3PendantConfig_FieldNumber_Name = 2,
  PB3PendantConfig_FieldNumber_State = 3,
  PB3PendantConfig_FieldNumber_BgURL = 4,
  PB3PendantConfig_FieldNumber_BtnURL = 5,
  PB3PendantConfig_FieldNumber_HalfURL = 6,
  PB3PendantConfig_FieldNumber_PcBgURL = 7,
  PB3PendantConfig_FieldNumber_PcBtnURL = 8,
  PB3PendantConfig_FieldNumber_PcHalfURL = 9,
  PB3PendantConfig_FieldNumber_RouterURL = 10,
  PB3PendantConfig_FieldNumber_RouterTitle = 11,
  PB3PendantConfig_FieldNumber_ThumbnailBtn = 12,
  PB3PendantConfig_FieldNumber_PdType = 13,
  PB3PendantConfig_FieldNumber_SpinningSpeed = 14,
  PB3PendantConfig_FieldNumber_CpURL = 15,
  PB3PendantConfig_FieldNumber_EndTime = 16,
};

/**
 * 首页挂件配置
 **/
@interface PB3PendantConfig : GPBMessage

/** id */
@property(nonatomic, readwrite) int32_t id_p;

/** 名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 挂件状态 */
@property(nonatomic, readwrite) PB3PendantState state;

/** 移动端背景 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bgURL;

/** 缩略按钮图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *btnURL;

/** 侧边缩略状态图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *halfURL;

/** PC端背景 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcBgURL;

/** PC缩略按钮图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcBtnURL;

/** PC侧边缩略状态图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcHalfURL;

/** 跳转链接 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *routerURL;

/** 跳转标题,H5顶部标题文字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *routerTitle;

/** 是否显示缩略图按钮 */
@property(nonatomic, readwrite) BOOL thumbnailBtn;

/** 挂件类型 */
@property(nonatomic, readwrite) PB3PendantType pdType;

/** 挂件旋转速度，0:表示静止；最大值：100 */
@property(nonatomic, readwrite) int32_t spinningSpeed;

/** 挂件图片,和首页挂件状态一致，要么都是动态图，要么都是静态图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *cpURL;

/** 结束时间戳 */
@property(nonatomic, readwrite) int64_t endTime;

@end

/**
 * Fetches the raw value of a @c PB3PendantConfig's @c state property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3PendantConfig_State_RawValue(PB3PendantConfig *message);
/**
 * Sets the raw value of an @c PB3PendantConfig's @c state property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3PendantConfig_State_RawValue(PB3PendantConfig *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3PendantConfig's @c pdType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3PendantConfig_PdType_RawValue(PB3PendantConfig *message);
/**
 * Sets the raw value of an @c PB3PendantConfig's @c pdType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3PendantConfig_PdType_RawValue(PB3PendantConfig *message, int32_t value);

#pragma mark - PB3PendantConfigReq

@interface PB3PendantConfigReq : GPBMessage

@end

#pragma mark - PB3PendantConfigRes

typedef GPB_ENUM(PB3PendantConfigRes_FieldNumber) {
  PB3PendantConfigRes_FieldNumber_PendantConfListArray = 1,
  PB3PendantConfigRes_FieldNumber_PendantConfListSortArray = 2,
};

@interface PB3PendantConfigRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3PendantConfig*> *pendantConfListArray;
/** The number of items in @c pendantConfListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger pendantConfListArray_Count;

/** 按权重排序 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3PendantConfig*> *pendantConfListSortArray;
/** The number of items in @c pendantConfListSortArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger pendantConfListSortArray_Count;

@end

#pragma mark - PB3ThemeConfig

typedef GPB_ENUM(PB3ThemeConfig_FieldNumber) {
  PB3ThemeConfig_FieldNumber_Id_p = 1,
  PB3ThemeConfig_FieldNumber_Name = 2,
  PB3ThemeConfig_FieldNumber_BeginAt = 3,
  PB3ThemeConfig_FieldNumber_EndAt = 4,
  PB3ThemeConfig_FieldNumber_State = 5,
  PB3ThemeConfig_FieldNumber_ContentURL = 6,
  PB3ThemeConfig_FieldNumber_URL = 7,
  PB3ThemeConfig_FieldNumber_BtnURL = 8,
  PB3ThemeConfig_FieldNumber_RouterURL = 9,
  PB3ThemeConfig_FieldNumber_Flag = 10,
  PB3ThemeConfig_FieldNumber_RouterH5URL = 11,
  PB3ThemeConfig_FieldNumber_H5HeadURL = 12,
  PB3ThemeConfig_FieldNumber_H5HeadNilURL = 13,
  PB3ThemeConfig_FieldNumber_RouterDraw = 14,
  PB3ThemeConfig_FieldNumber_PcBtnURL = 15,
};

/**
 * 主题配置
 **/
@interface PB3ThemeConfig : GPBMessage

/** id */
@property(nonatomic, readwrite) int32_t id_p;

/** 名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 开始时间 */
@property(nonatomic, readwrite) int64_t beginAt;

/** 结束时间 */
@property(nonatomic, readwrite) int64_t endAt;

/** 常驻横幅默认状态 */
@property(nonatomic, readwrite) PB3BannerState state;

/** 文案文件地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *contentURL;

/** 动效压缩包地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

/** 未参赛房间，点击跳转主会场的按钮图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *btnURL;

/** 跳转主会场的链接 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *routerURL;

/** 主题唯一标识 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *flag;

/** 横幅点击跳转路由 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *routerH5URL;

/** 横幅头像跳转路由 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *h5HeadURL;

/** 横幅按钮跳转路由（头像空态显示） */
@property(nonatomic, readwrite, copy, null_resettable) NSString *h5HeadNilURL;

/** 抽奖获得弹窗跳转路由 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *routerDraw;

/** PC未参赛房间，点击跳转主会场的按钮图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pcBtnURL;

@end

/**
 * Fetches the raw value of a @c PB3ThemeConfig's @c state property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ThemeConfig_State_RawValue(PB3ThemeConfig *message);
/**
 * Sets the raw value of an @c PB3ThemeConfig's @c state property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ThemeConfig_State_RawValue(PB3ThemeConfig *message, int32_t value);

#pragma mark - PB3ThemeConfigReq

@interface PB3ThemeConfigReq : GPBMessage

@end

#pragma mark - PB3ThemeConfigRes

typedef GPB_ENUM(PB3ThemeConfigRes_FieldNumber) {
  PB3ThemeConfigRes_FieldNumber_ThemeConfListArray = 1,
};

@interface PB3ThemeConfigRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ThemeConfig*> *themeConfListArray;
/** The number of items in @c themeConfListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger themeConfListArray_Count;

@end

#pragma mark - PB3CountDownConfReq

/**
 * 倒计时配置
 **/
@interface PB3CountDownConfReq : GPBMessage

@end

#pragma mark - PB3CountDownConfRes

typedef GPB_ENUM(PB3CountDownConfRes_FieldNumber) {
  PB3CountDownConfRes_FieldNumber_URL = 1,
  PB3CountDownConfRes_FieldNumber_StartAt = 2,
  PB3CountDownConfRes_FieldNumber_IsOpen = 3,
};

@interface PB3CountDownConfRes : GPBMessage

/** 倒计时资源url */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

/** 倒计时开始时间戳 */
@property(nonatomic, readwrite) int64_t startAt;

/** 是否开启倒计时 */
@property(nonatomic, readwrite) BOOL isOpen;

@end

#pragma mark - PB3EventTrackingArgs

typedef GPB_ENUM(PB3EventTrackingArgs_FieldNumber) {
  PB3EventTrackingArgs_FieldNumber_Key = 1,
  PB3EventTrackingArgs_FieldNumber_Value = 2,
  PB3EventTrackingArgs_FieldNumber_ArgType = 3,
};

/**
 * 埋点事件参数
 **/
@interface PB3EventTrackingArgs : GPBMessage

/** 参照名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *key;

/** 参数值 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *value;

/** 参数类型 */
@property(nonatomic, readwrite) PB3EventTrackingArgType argType;

@end

/**
 * Fetches the raw value of a @c PB3EventTrackingArgs's @c argType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3EventTrackingArgs_ArgType_RawValue(PB3EventTrackingArgs *message);
/**
 * Sets the raw value of an @c PB3EventTrackingArgs's @c argType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3EventTrackingArgs_ArgType_RawValue(PB3EventTrackingArgs *message, int32_t value);

#pragma mark - PB3EventTracking

typedef GPB_ENUM(PB3EventTracking_FieldNumber) {
  PB3EventTracking_FieldNumber_Event = 1,
  PB3EventTracking_FieldNumber_ArgsArray = 2,
};

/**
 * 埋点事件
 **/
@interface PB3EventTracking : GPBMessage

/** 事件标识 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *event;

/** 事件参数 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3EventTrackingArgs*> *argsArray;
/** The number of items in @c argsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger argsArray_Count;

@end

#pragma mark - PB3ReportEventTrackingReq

typedef GPB_ENUM(PB3ReportEventTrackingReq_FieldNumber) {
  PB3ReportEventTrackingReq_FieldNumber_EventsArray = 1,
};

/**
 * 客户端通用埋点事件上报接口
 **/
@interface PB3ReportEventTrackingReq : GPBMessage

/** 事件列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3EventTracking*> *eventsArray;
/** The number of items in @c eventsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger eventsArray_Count;

@end

#pragma mark - PB3ReportEventTrackingRes

@interface PB3ReportEventTrackingRes : GPBMessage

@end

#pragma mark - PB3ReportLoginReq

typedef GPB_ENUM(PB3ReportLoginReq_FieldNumber) {
  PB3ReportLoginReq_FieldNumber_Oaid = 1,
  PB3ReportLoginReq_FieldNumber_ReyunDeviceId = 2,
  PB3ReportLoginReq_FieldNumber_DeviceType = 3,
  PB3ReportLoginReq_FieldNumber_DeviceId = 4,
  PB3ReportLoginReq_FieldNumber_UMengDeviceId = 5,
};

@interface PB3ReportLoginReq : GPBMessage

/** 暂时用不到（可为空） */
@property(nonatomic, readwrite, copy, null_resettable) NSString *oaid;

/** 热云ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *reyunDeviceId;

/** 设备类型 */
@property(nonatomic, readwrite) enum PB3DeviceType deviceType;

/** 设备ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceId;

/** 友盟deviceId */
@property(nonatomic, readwrite, copy, null_resettable) NSString *uMengDeviceId;

@end

/**
 * Fetches the raw value of a @c PB3ReportLoginReq's @c deviceType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ReportLoginReq_DeviceType_RawValue(PB3ReportLoginReq *message);
/**
 * Sets the raw value of an @c PB3ReportLoginReq's @c deviceType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ReportLoginReq_DeviceType_RawValue(PB3ReportLoginReq *message, int32_t value);

#pragma mark - PB3ReportLoginRes

@interface PB3ReportLoginRes : GPBMessage

@end

#pragma mark - PB3AppPushPopup

typedef GPB_ENUM(PB3AppPushPopup_FieldNumber) {
  PB3AppPushPopup_FieldNumber_PopupImg = 1,
  PB3AppPushPopup_FieldNumber_ButImg = 2,
  PB3AppPushPopup_FieldNumber_TouchArea = 3,
  PB3AppPushPopup_FieldNumber_TargetType = 4,
  PB3AppPushPopup_FieldNumber_TargetId = 5,
  PB3AppPushPopup_FieldNumber_InstallInBegin = 6,
  PB3AppPushPopup_FieldNumber_InstallInEnd = 7,
  PB3AppPushPopup_FieldNumber_AppearArea = 8,
  PB3AppPushPopup_FieldNumber_JumpURL = 9,
  PB3AppPushPopup_FieldNumber_ExpireTime = 10,
  PB3AppPushPopup_FieldNumber_WealthLevel = 11,
  PB3AppPushPopup_FieldNumber_CharmLevel = 12,
  PB3AppPushPopup_FieldNumber_IsAnd = 13,
  PB3AppPushPopup_FieldNumber_MsgId = 14,
};

/**
 * 应用内推送弹窗 cmdId = 203008
 **/
@interface PB3AppPushPopup : GPBMessage

/** 弹窗资源 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *popupImg;

/** 按钮资源 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *butImg;

/** 触控区域 */
@property(nonatomic, readwrite) PB3TouchAreaType touchArea;

/** 目标用户类型 */
@property(nonatomic, readwrite) PB3TargetType targetType;

/** 目标用户类型为自定义ID时，对应的用户ID */
@property(nonatomic, readwrite) int64_t targetId;

/** 目标用户类型为注册时间类型，对应的注册时间开始时间 */
@property(nonatomic, readwrite) int64_t installInBegin;

/** 目标用户类型为注册时间类型，对应的注册时间结算时间 */
@property(nonatomic, readwrite) int64_t installInEnd;

/** 生效界面 */
@property(nonatomic, readwrite) PB3AppearArea appearArea;

/** 跳转地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *jumpURL;

/** 持续显示时间（秒） */
@property(nonatomic, readwrite) int64_t expireTime;

/** 财富等级 */
@property(nonatomic, readwrite) int32_t wealthLevel;

/** 魅力等级 */
@property(nonatomic, readwrite) int32_t charmLevel;

/** 财富等级魅力等级逻辑关系(true:且,false:或) */
@property(nonatomic, readwrite) BOOL isAnd;

/** 消息ID */
@property(nonatomic, readwrite) int64_t msgId;

@end

/**
 * Fetches the raw value of a @c PB3AppPushPopup's @c touchArea property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3AppPushPopup_TouchArea_RawValue(PB3AppPushPopup *message);
/**
 * Sets the raw value of an @c PB3AppPushPopup's @c touchArea property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3AppPushPopup_TouchArea_RawValue(PB3AppPushPopup *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3AppPushPopup's @c targetType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3AppPushPopup_TargetType_RawValue(PB3AppPushPopup *message);
/**
 * Sets the raw value of an @c PB3AppPushPopup's @c targetType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3AppPushPopup_TargetType_RawValue(PB3AppPushPopup *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3AppPushPopup's @c appearArea property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3AppPushPopup_AppearArea_RawValue(PB3AppPushPopup *message);
/**
 * Sets the raw value of an @c PB3AppPushPopup's @c appearArea property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3AppPushPopup_AppearArea_RawValue(PB3AppPushPopup *message, int32_t value);

#pragma mark - PB3PullAppPushPopupReq

@interface PB3PullAppPushPopupReq : GPBMessage

@end

#pragma mark - PB3PullAppPushPopupRes

typedef GPB_ENUM(PB3PullAppPushPopupRes_FieldNumber) {
  PB3PullAppPushPopupRes_FieldNumber_ListArray = 1,
};

@interface PB3PullAppPushPopupRes : GPBMessage

/** 弹窗列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3AppPushPopup*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3UploadExitSongReq

typedef GPB_ENUM(PB3UploadExitSongReq_FieldNumber) {
  PB3UploadExitSongReq_FieldNumber_SongListArray = 1,
};

/**
 * pc上传歌曲，标记处曲库没有的返回给pc
 **/
@interface PB3UploadExitSongReq : GPBMessage

/** 上传列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3UploadSongInfo*> *songListArray;
/** The number of items in @c songListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger songListArray_Count;

@end

#pragma mark - PB3UploadExitSongRes

typedef GPB_ENUM(PB3UploadExitSongRes_FieldNumber) {
  PB3UploadExitSongRes_FieldNumber_SongListArray = 1,
};

@interface PB3UploadExitSongRes : GPBMessage

/** 服务器曲库没有的歌曲列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3UploadSongInfo*> *songListArray;
/** The number of items in @c songListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger songListArray_Count;

@end

#pragma mark - PB3UploadSongReq

typedef GPB_ENUM(PB3UploadSongReq_FieldNumber) {
  PB3UploadSongReq_FieldNumber_SongListArray = 1,
};

/**
 * pc上传歌曲
 **/
@interface PB3UploadSongReq : GPBMessage

/** 上传列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3UploadSongInfo*> *songListArray;
/** The number of items in @c songListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger songListArray_Count;

@end

#pragma mark - PB3UploadSongRes

@interface PB3UploadSongRes : GPBMessage

@end

#pragma mark - PB3UploadSongInfo

typedef GPB_ENUM(PB3UploadSongInfo_FieldNumber) {
  PB3UploadSongInfo_FieldNumber_Id_p = 1,
  PB3UploadSongInfo_FieldNumber_Name = 2,
  PB3UploadSongInfo_FieldNumber_SingerName = 3,
  PB3UploadSongInfo_FieldNumber_IsRecommend = 4,
  PB3UploadSongInfo_FieldNumber_IsExist = 5,
};

@interface PB3UploadSongInfo : GPBMessage

/** 歌曲id，上传时不填 */
@property(nonatomic, readwrite) int64_t id_p;

/** 歌曲名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 原唱歌手名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *singerName;

/** 是否今日推荐 */
@property(nonatomic, readwrite) BOOL isRecommend;

/** 服务器曲库是否已经拥有（第一次上传时用到该字段） */
@property(nonatomic, readwrite) BOOL isExist;

@end

#pragma mark - PB3MySongListReq

typedef GPB_ENUM(PB3MySongListReq_FieldNumber) {
  PB3MySongListReq_FieldNumber_IsTopRecommend = 1,
};

/**
 * 获取歌单列表
 **/
@interface PB3MySongListReq : GPBMessage

/** 今日推荐是否置顶 */
@property(nonatomic, readwrite) BOOL isTopRecommend;

@end

#pragma mark - PB3MySongListRes

typedef GPB_ENUM(PB3MySongListRes_FieldNumber) {
  PB3MySongListRes_FieldNumber_SongListArray = 1,
};

@interface PB3MySongListRes : GPBMessage

/** 歌曲列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3UploadSongInfo*> *songListArray;
/** The number of items in @c songListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger songListArray_Count;

@end

#pragma mark - PB3RemoveSongReq

typedef GPB_ENUM(PB3RemoveSongReq_FieldNumber) {
  PB3RemoveSongReq_FieldNumber_Id_p = 1,
};

/**
 * 删除歌单歌曲
 **/
@interface PB3RemoveSongReq : GPBMessage

/** 歌曲id */
@property(nonatomic, readwrite) int64_t id_p;

@end

#pragma mark - PB3RemoveSongRes

@interface PB3RemoveSongRes : GPBMessage

@end

#pragma mark - PB3UpdateSongReq

typedef GPB_ENUM(PB3UpdateSongReq_FieldNumber) {
  PB3UpdateSongReq_FieldNumber_Id_p = 1,
  PB3UpdateSongReq_FieldNumber_IsRecommend = 2,
};

/**
 * 更新歌单歌曲
 **/
@interface PB3UpdateSongReq : GPBMessage

/** 歌曲id */
@property(nonatomic, readwrite) int64_t id_p;

/** 是否今日推荐 */
@property(nonatomic, readwrite) BOOL isRecommend;

@end

#pragma mark - PB3UpdateSongRes

@interface PB3UpdateSongRes : GPBMessage

@end

#pragma mark - PB3SearchSongReq

typedef GPB_ENUM(PB3SearchSongReq_FieldNumber) {
  PB3SearchSongReq_FieldNumber_Name = 1,
  PB3SearchSongReq_FieldNumber_PlayerId = 2,
};

/**
 * 歌名搜索歌单歌曲
 **/
@interface PB3SearchSongReq : GPBMessage

/** 歌曲名，可以为空 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 歌手id，搜索该主播的歌单 */
@property(nonatomic, readwrite) int64_t playerId;

@end

#pragma mark - PB3SearchSongRes

typedef GPB_ENUM(PB3SearchSongRes_FieldNumber) {
  PB3SearchSongRes_FieldNumber_SongListArray = 1,
  PB3SearchSongRes_FieldNumber_SingerListArray = 2,
};

@interface PB3SearchSongRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3UploadSongInfo*> *songListArray;
/** The number of items in @c songListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger songListArray_Count;

/** 如果搜个人的歌单，为空 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SingerInfo*> *singerListArray;
/** The number of items in @c singerListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger singerListArray_Count;

@end

#pragma mark - PB3SingerInfo

typedef GPB_ENUM(PB3SingerInfo_FieldNumber) {
  PB3SingerInfo_FieldNumber_PlayerId = 1,
  PB3SingerInfo_FieldNumber_RoomId = 2,
  PB3SingerInfo_FieldNumber_ChairId = 3,
  PB3SingerInfo_FieldNumber_IsOnline = 4,
  PB3SingerInfo_FieldNumber_Name = 5,
  PB3SingerInfo_FieldNumber_Icon = 6,
  PB3SingerInfo_FieldNumber_Sex = 7,
};

@interface PB3SingerInfo : GPBMessage

/** 歌手id */
@property(nonatomic, readwrite) int64_t playerId;

/** 当前所在房间 */
@property(nonatomic, readwrite) int64_t roomId;

/** 所在麦位id，如果不在麦上则为0 */
@property(nonatomic, readwrite) int32_t chairId;

/** 是否在线 */
@property(nonatomic, readwrite) BOOL isOnline;

/** 昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 性别 */
@property(nonatomic, readwrite) enum PB3SexType sex;

@end

/**
 * Fetches the raw value of a @c PB3SingerInfo's @c sex property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SingerInfo_Sex_RawValue(PB3SingerInfo *message);
/**
 * Sets the raw value of an @c PB3SingerInfo's @c sex property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SingerInfo_Sex_RawValue(PB3SingerInfo *message, int32_t value);

#pragma mark - PB3CheckContentReq

typedef GPB_ENUM(PB3CheckContentReq_FieldNumber) {
  PB3CheckContentReq_FieldNumber_Content = 1,
};

/**
 * 文本鉴黄
 **/
@interface PB3CheckContentReq : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

@end

#pragma mark - PB3CheckContentRes

typedef GPB_ENUM(PB3CheckContentRes_FieldNumber) {
  PB3CheckContentRes_FieldNumber_IsPass = 1,
};

@interface PB3CheckContentRes : GPBMessage

/** 是否通过 */
@property(nonatomic, readwrite) BOOL isPass;

@end

#pragma mark - PB3SyncPlayerOptReq

typedef GPB_ENUM(PB3SyncPlayerOptReq_FieldNumber) {
  PB3SyncPlayerOptReq_FieldNumber_Opt = 1,
};

@interface PB3SyncPlayerOptReq : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3SyncOpt *opt;
/** Test to see if @c opt has been set. */
@property(nonatomic, readwrite) BOOL hasOpt;

@end

#pragma mark - PB3SyncPlayerOptRes

@interface PB3SyncPlayerOptRes : GPBMessage

@end

#pragma mark - PB3GetQuestionListReq

typedef GPB_ENUM(PB3GetQuestionListReq_FieldNumber) {
  PB3GetQuestionListReq_FieldNumber_Opt = 1,
};

@interface PB3GetQuestionListReq : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3SyncOpt *opt;
/** Test to see if @c opt has been set. */
@property(nonatomic, readwrite) BOOL hasOpt;

@end

#pragma mark - PB3GetQuestionListRes

typedef GPB_ENUM(PB3GetQuestionListRes_FieldNumber) {
  PB3GetQuestionListRes_FieldNumber_ItemsArray = 1,
};

@interface PB3GetQuestionListRes : GPBMessage

/** 问题列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3GameCommQuestionListItem*> *itemsArray;
/** The number of items in @c itemsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger itemsArray_Count;

@end

#pragma mark - PB3GameCommQuestionTitleItem

typedef GPB_ENUM(PB3GameCommQuestionTitleItem_FieldNumber) {
  PB3GameCommQuestionTitleItem_FieldNumber_Id_p = 1,
  PB3GameCommQuestionTitleItem_FieldNumber_Title = 2,
};

@interface PB3GameCommQuestionTitleItem : GPBMessage

/** 问题id */
@property(nonatomic, readwrite) int64_t id_p;

/** 问题标题 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

@end

#pragma mark - PB3GameCommQuestionListItem

typedef GPB_ENUM(PB3GameCommQuestionListItem_FieldNumber) {
  PB3GameCommQuestionListItem_FieldNumber_TopicId = 1,
  PB3GameCommQuestionListItem_FieldNumber_TopicName = 2,
  PB3GameCommQuestionListItem_FieldNumber_ItemsArray = 3,
};

@interface PB3GameCommQuestionListItem : GPBMessage

/** 分类id */
@property(nonatomic, readwrite) int64_t topicId;

/** 分类名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *topicName;

/** 问题标题列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3GameCommQuestionTitleItem*> *itemsArray;
/** The number of items in @c itemsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger itemsArray_Count;

@end

#pragma mark - PB3GetQuestionDetailReq

typedef GPB_ENUM(PB3GetQuestionDetailReq_FieldNumber) {
  PB3GetQuestionDetailReq_FieldNumber_Id_p = 1,
};

@interface PB3GetQuestionDetailReq : GPBMessage

/** 问题id */
@property(nonatomic, readwrite) int64_t id_p;

@end

#pragma mark - PB3GetQuestionDetailRes

typedef GPB_ENUM(PB3GetQuestionDetailRes_FieldNumber) {
  PB3GetQuestionDetailRes_FieldNumber_Id_p = 1,
  PB3GetQuestionDetailRes_FieldNumber_Title = 2,
  PB3GetQuestionDetailRes_FieldNumber_Content = 3,
  PB3GetQuestionDetailRes_FieldNumber_ImagesArray = 4,
};

@interface PB3GetQuestionDetailRes : GPBMessage

/** id */
@property(nonatomic, readwrite) int64_t id_p;

/** 标题 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** 内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

/** 配图 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *imagesArray;
/** The number of items in @c imagesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger imagesArray_Count;

@end

#pragma mark - PB3PlayerGameRankInfo

typedef GPB_ENUM(PB3PlayerGameRankInfo_FieldNumber) {
  PB3PlayerGameRankInfo_FieldNumber_Rank = 1,
  PB3PlayerGameRankInfo_FieldNumber_PlayerId = 2,
  PB3PlayerGameRankInfo_FieldNumber_PlayerName = 3,
  PB3PlayerGameRankInfo_FieldNumber_PlayerAvatar = 4,
  PB3PlayerGameRankInfo_FieldNumber_Score = 5,
  PB3PlayerGameRankInfo_FieldNumber_Style = 6,
};

@interface PB3PlayerGameRankInfo : GPBMessage

/** 排名，0为未上榜 */
@property(nonatomic, readwrite) int32_t rank;

/** 玩家id */
@property(nonatomic, readwrite) int64_t playerId;

/** 玩家昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerName;

/** 用户头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerAvatar;

/** 分数 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *score;

/** 游戏分数样式 */
@property(nonatomic, readwrite) PB3GameRankScoreStyle style;

@end

/**
 * Fetches the raw value of a @c PB3PlayerGameRankInfo's @c style property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3PlayerGameRankInfo_Style_RawValue(PB3PlayerGameRankInfo *message);
/**
 * Sets the raw value of an @c PB3PlayerGameRankInfo's @c style property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3PlayerGameRankInfo_Style_RawValue(PB3PlayerGameRankInfo *message, int32_t value);

#pragma mark - PB3FetchGameRankReq

typedef GPB_ENUM(PB3FetchGameRankReq_FieldNumber) {
  PB3FetchGameRankReq_FieldNumber_GameId = 1,
  PB3FetchGameRankReq_FieldNumber_Type = 2,
  PB3FetchGameRankReq_FieldNumber_Index = 3,
};

@interface PB3FetchGameRankReq : GPBMessage

/** 游戏id */
@property(nonatomic, readwrite) int64_t gameId;

/** 排名类型 */
@property(nonatomic, readwrite) PB3GameRankType type;

/** 请求数据索引，从0开始 */
@property(nonatomic, readwrite) int32_t index;

@end

/**
 * Fetches the raw value of a @c PB3FetchGameRankReq's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3FetchGameRankReq_Type_RawValue(PB3FetchGameRankReq *message);
/**
 * Sets the raw value of an @c PB3FetchGameRankReq's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3FetchGameRankReq_Type_RawValue(PB3FetchGameRankReq *message, int32_t value);

#pragma mark - PB3FetchGameRankRes

typedef GPB_ENUM(PB3FetchGameRankRes_FieldNumber) {
  PB3FetchGameRankRes_FieldNumber_RankPlayerArray = 1,
  PB3FetchGameRankRes_FieldNumber_Self_p = 2,
  PB3FetchGameRankRes_FieldNumber_Index = 4,
};

@interface PB3FetchGameRankRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3PlayerGameRankInfo*> *rankPlayerArray;
/** The number of items in @c rankPlayerArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger rankPlayerArray_Count;

/** 自身排名信息，可能为空，为空时说明为登录 */
@property(nonatomic, readwrite, strong, null_resettable) PB3PlayerGameRankInfo *self_p;
/** Test to see if @c self_p has been set. */
@property(nonatomic, readwrite) BOOL hasSelf_p;

/** 下次请求数据索引，-1表示无下一次请求 */
@property(nonatomic, readwrite) int32_t index;

@end

#pragma mark - PB3RankGameInfo

typedef GPB_ENUM(PB3RankGameInfo_FieldNumber) {
  PB3RankGameInfo_FieldNumber_GameId = 1,
  PB3RankGameInfo_FieldNumber_Name = 2,
  PB3RankGameInfo_FieldNumber_Icon = 3,
};

@interface PB3RankGameInfo : GPBMessage

/** 游戏id */
@property(nonatomic, readwrite) int64_t gameId;

/** 游戏名，有所保留，不知多语言处理方式 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 游戏图标相对路径 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

@end

#pragma mark - PB3GetRankGameListReq

@interface PB3GetRankGameListReq : GPBMessage

@end

#pragma mark - PB3GetRankGameListRes

typedef GPB_ENUM(PB3GetRankGameListRes_FieldNumber) {
  PB3GetRankGameListRes_FieldNumber_GamesArray = 1,
};

@interface PB3GetRankGameListRes : GPBMessage

/** 游戏页 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3RankGameInfo*> *gamesArray;
/** The number of items in @c gamesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger gamesArray_Count;

@end

#pragma mark - PB3ProvideMillionaireSubjectReq

typedef GPB_ENUM(PB3ProvideMillionaireSubjectReq_FieldNumber) {
  PB3ProvideMillionaireSubjectReq_FieldNumber_Detail = 1,
  PB3ProvideMillionaireSubjectReq_FieldNumber_AnswerArray = 2,
  PB3ProvideMillionaireSubjectReq_FieldNumber_RightIndex = 3,
};

@interface PB3ProvideMillionaireSubjectReq : GPBMessage

/** 题目描述 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *detail;

/** 题目答案 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *answerArray;
/** The number of items in @c answerArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger answerArray_Count;

/** 正确题目答案answer下标，从0开始 */
@property(nonatomic, readwrite) int32_t rightIndex;

@end

#pragma mark - PB3ProvideMillionaireSubjectRes

@interface PB3ProvideMillionaireSubjectRes : GPBMessage

@end

#pragma mark - PB3ActivityPicInfo

typedef GPB_ENUM(PB3ActivityPicInfo_FieldNumber) {
  PB3ActivityPicInfo_FieldNumber_ActivityId = 1,
  PB3ActivityPicInfo_FieldNumber_PicURL = 2,
  PB3ActivityPicInfo_FieldNumber_JumpType = 3,
  PB3ActivityPicInfo_FieldNumber_JumpURL = 4,
  PB3ActivityPicInfo_FieldNumber_JumpGame = 5,
  PB3ActivityPicInfo_FieldNumber_JumpInterface = 6,
  PB3ActivityPicInfo_FieldNumber_ActivityName = 7,
};

@interface PB3ActivityPicInfo : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int64_t activityId;

/** 图片地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *picURL;

/** 跳转位置 */
@property(nonatomic, readwrite) PB3ActivityPicJumpType jumpType;

/** 跳转URL */
@property(nonatomic, readwrite, copy, null_resettable) NSString *jumpURL;

/** 游戏id */
@property(nonatomic, readwrite) int64_t jumpGame;

/** 界面 */
@property(nonatomic, readwrite) PB3JumpInterfaceType jumpInterface;

/** 活动名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *activityName;

@end

/**
 * Fetches the raw value of a @c PB3ActivityPicInfo's @c jumpType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ActivityPicInfo_JumpType_RawValue(PB3ActivityPicInfo *message);
/**
 * Sets the raw value of an @c PB3ActivityPicInfo's @c jumpType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ActivityPicInfo_JumpType_RawValue(PB3ActivityPicInfo *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3ActivityPicInfo's @c jumpInterface property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ActivityPicInfo_JumpInterface_RawValue(PB3ActivityPicInfo *message);
/**
 * Sets the raw value of an @c PB3ActivityPicInfo's @c jumpInterface property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ActivityPicInfo_JumpInterface_RawValue(PB3ActivityPicInfo *message, int32_t value);

#pragma mark - PB3GetActivityPicConfReq

@interface PB3GetActivityPicConfReq : GPBMessage

@end

#pragma mark - PB3GetActivityPicConfRes

typedef GPB_ENUM(PB3GetActivityPicConfRes_FieldNumber) {
  PB3GetActivityPicConfRes_FieldNumber_ActivityPicsArray = 1,
};

@interface PB3GetActivityPicConfRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ActivityPicInfo*> *activityPicsArray;
/** The number of items in @c activityPicsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger activityPicsArray_Count;

@end

#pragma mark - PB3ClickActivityPicCountReq

typedef GPB_ENUM(PB3ClickActivityPicCountReq_FieldNumber) {
  PB3ClickActivityPicCountReq_FieldNumber_ActivityId = 1,
  PB3ClickActivityPicCountReq_FieldNumber_ReportType = 2,
};

@interface PB3ClickActivityPicCountReq : GPBMessage

/** 活动id */
@property(nonatomic, readwrite) int64_t activityId;

/** 曝光/点击 */
@property(nonatomic, readwrite) PB3ActivityPicReportType reportType;

@end

/**
 * Fetches the raw value of a @c PB3ClickActivityPicCountReq's @c reportType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ClickActivityPicCountReq_ReportType_RawValue(PB3ClickActivityPicCountReq *message);
/**
 * Sets the raw value of an @c PB3ClickActivityPicCountReq's @c reportType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ClickActivityPicCountReq_ReportType_RawValue(PB3ClickActivityPicCountReq *message, int32_t value);

#pragma mark - PB3ClickActivityPicCountRes

@interface PB3ClickActivityPicCountRes : GPBMessage

@end

#pragma mark - PB3ProtocolConfInfo

typedef GPB_ENUM(PB3ProtocolConfInfo_FieldNumber) {
  PB3ProtocolConfInfo_FieldNumber_UserAgreement = 1,
  PB3ProtocolConfInfo_FieldNumber_UserAgreementUpdateAt = 2,
  PB3ProtocolConfInfo_FieldNumber_PrivacyPolicy = 3,
  PB3ProtocolConfInfo_FieldNumber_PrivacyPolicyUpdateAt = 4,
};

@interface PB3ProtocolConfInfo : GPBMessage

@property(nonatomic, readwrite) BOOL userAgreement;

@property(nonatomic, readwrite) int64_t userAgreementUpdateAt;

@property(nonatomic, readwrite) BOOL privacyPolicy;

@property(nonatomic, readwrite) int64_t privacyPolicyUpdateAt;

@end

#pragma mark - PB3GetAgreementAndPolicyReq

@interface PB3GetAgreementAndPolicyReq : GPBMessage

@end

#pragma mark - PB3GetAgreementAndPolicyRes

typedef GPB_ENUM(PB3GetAgreementAndPolicyRes_FieldNumber) {
  PB3GetAgreementAndPolicyRes_FieldNumber_UserAgreementURL = 1,
  PB3GetAgreementAndPolicyRes_FieldNumber_UserAgreementUpdateAt = 2,
  PB3GetAgreementAndPolicyRes_FieldNumber_PrivacyPolicyURL = 3,
  PB3GetAgreementAndPolicyRes_FieldNumber_PrivacyPolicyUpdateAt = 4,
};

@interface PB3GetAgreementAndPolicyRes : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *userAgreementURL;

@property(nonatomic, readwrite) int64_t userAgreementUpdateAt;

@property(nonatomic, readwrite, copy, null_resettable) NSString *privacyPolicyURL;

@property(nonatomic, readwrite) int64_t privacyPolicyUpdateAt;

@end

#pragma mark - PB3GetServerConfListReq

@interface PB3GetServerConfListReq : GPBMessage

@end

#pragma mark - PB3GetServerConfListRes

typedef GPB_ENUM(PB3GetServerConfListRes_FieldNumber) {
  PB3GetServerConfListRes_FieldNumber_ConfArray = 1,
};

@interface PB3GetServerConfListRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ServerInfo*> *confArray;
/** The number of items in @c confArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger confArray_Count;

@end

#pragma mark - PB3ServerInfo

typedef GPB_ENUM(PB3ServerInfo_FieldNumber) {
  PB3ServerInfo_FieldNumber_Region = 1,
  PB3ServerInfo_FieldNumber_LongURL = 2,
  PB3ServerInfo_FieldNumber_LongPort = 3,
  PB3ServerInfo_FieldNumber_ShortURL = 4,
  PB3ServerInfo_FieldNumber_ShortPort = 5,
};

@interface PB3ServerInfo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *region;

@property(nonatomic, readwrite, copy, null_resettable) NSString *longURL;

@property(nonatomic, readwrite) int32_t longPort;

@property(nonatomic, readwrite, copy, null_resettable) NSString *shortURL;

@property(nonatomic, readwrite) int32_t shortPort;

@end

#pragma mark - PB3ExtByIpGetInfoReq

@interface PB3ExtByIpGetInfoReq : GPBMessage

@end

#pragma mark - PB3ExtByIpGetInfoRes

typedef GPB_ENUM(PB3ExtByIpGetInfoRes_FieldNumber) {
  PB3ExtByIpGetInfoRes_FieldNumber_Ip = 1,
  PB3ExtByIpGetInfoRes_FieldNumber_IsoCountryCode = 2,
  PB3ExtByIpGetInfoRes_FieldNumber_Country = 3,
};

@interface PB3ExtByIpGetInfoRes : GPBMessage

/** ip */
@property(nonatomic, readwrite, copy, null_resettable) NSString *ip;

/** 国家码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *isoCountryCode;

/** 国家 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *country;

@end

#pragma mark - PB3ReportActivateAppInfoReq

typedef GPB_ENUM(PB3ReportActivateAppInfoReq_FieldNumber) {
  PB3ReportActivateAppInfoReq_FieldNumber_Ip = 1,
  PB3ReportActivateAppInfoReq_FieldNumber_Action = 2,
};

@interface PB3ReportActivateAppInfoReq : GPBMessage

/** ip */
@property(nonatomic, readwrite, copy, null_resettable) NSString *ip;

@property(nonatomic, readwrite, copy, null_resettable) NSString *action;

@end

#pragma mark - PB3ReportActivateAppInfoRes

@interface PB3ReportActivateAppInfoRes : GPBMessage

@end

#pragma mark - PB3FetchPoPoRoomListReq

@interface PB3FetchPoPoRoomListReq : GPBMessage

@end

#pragma mark - PB3FetchPoPoRoomListRes

typedef GPB_ENUM(PB3FetchPoPoRoomListRes_FieldNumber) {
  PB3FetchPoPoRoomListRes_FieldNumber_Ip = 1,
  PB3FetchPoPoRoomListRes_FieldNumber_IsoCountryCode = 2,
  PB3FetchPoPoRoomListRes_FieldNumber_Country = 3,
};

@interface PB3FetchPoPoRoomListRes : GPBMessage

/** ip */
@property(nonatomic, readwrite, copy, null_resettable) NSString *ip;

/** 国家码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *isoCountryCode;

/** 国家 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *country;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
