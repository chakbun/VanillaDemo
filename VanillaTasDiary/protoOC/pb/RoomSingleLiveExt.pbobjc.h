// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pb/room_single_live.ext.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class PB3MaskInfo;
@class PB3Rank;
@class PB3Rank1;
@class PB3RoomProgramAnchor;
@class PB3RoomProgramItem;
@class PB3RoomProgramShow;
@class PB3SingleLiveTimeRank;
GPB_ENUM_FWD_DECLARE(PB3AuditStatus);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum PB3SingleLiveRankType

/** 个播排行榜枚举 */
typedef GPB_ENUM(PB3SingleLiveRankType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3SingleLiveRankType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3SingleLiveRankType_SingleLiveRankNone = 0,

  /** 本场榜 */
  PB3SingleLiveRankType_SingleLiveRankThis = 1,

  /** 守护 */
  PB3SingleLiveRankType_SingleLiveRankGuard = 2,

  /** 主播魅力榜 */
  PB3SingleLiveRankType_SingleLiveRankCharm = 3,
};

GPBEnumDescriptor *PB3SingleLiveRankType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3SingleLiveRankType_IsValidValue(int32_t value);

#pragma mark - Enum PB3SingleLiveFlagType

/** 个播排行榜枚举 */
typedef GPB_ENUM(PB3SingleLiveFlagType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3SingleLiveFlagType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3SingleLiveFlagType_SingleLiveFlagNone = 0,

  /** 周榜 */
  PB3SingleLiveFlagType_SingleLiveFlagWeek = 1,

  /** 月榜 */
  PB3SingleLiveFlagType_SingleLiveFlagMouth = 2,

  /** 年榜 */
  PB3SingleLiveFlagType_SingleLiveFlagYear = 3,
};

GPBEnumDescriptor *PB3SingleLiveFlagType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3SingleLiveFlagType_IsValidValue(int32_t value);

#pragma mark - Enum PB3SingleLiveOptType

/** 个播操作枚举 */
typedef GPB_ENUM(PB3SingleLiveOptType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3SingleLiveOptType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 下播 */
  PB3SingleLiveOptType_SlotStop = 0,

  /** 开播 */
  PB3SingleLiveOptType_SlotStart = 1,
};

GPBEnumDescriptor *PB3SingleLiveOptType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3SingleLiveOptType_IsValidValue(int32_t value);

#pragma mark - Enum PB3SingleLiveStatus

/** 个播状态枚举 */
typedef GPB_ENUM(PB3SingleLiveStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3SingleLiveStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 下播 */
  PB3SingleLiveStatus_SlsOffline = 0,

  /** 在播 */
  PB3SingleLiveStatus_SlsOnline = 1,
};

GPBEnumDescriptor *PB3SingleLiveStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3SingleLiveStatus_IsValidValue(int32_t value);

#pragma mark - Enum PB3RoomProgramShowDayType

typedef GPB_ENUM(PB3RoomProgramShowDayType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3RoomProgramShowDayType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3RoomProgramShowDayType_RpsdtNone = 0,

  /** 今天 */
  PB3RoomProgramShowDayType_RpsdtToday = 1,

  /** 明天 */
  PB3RoomProgramShowDayType_RpsdtTomorrow = 2,

  /** 昨天 */
  PB3RoomProgramShowDayType_RpsdtYesterday = 3,
};

GPBEnumDescriptor *PB3RoomProgramShowDayType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3RoomProgramShowDayType_IsValidValue(int32_t value);

#pragma mark - Enum PB3RoomProgramRepeatDay

/** 节目单项目重复天 */
typedef GPB_ENUM(PB3RoomProgramRepeatDay) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3RoomProgramRepeatDay_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 周日 */
  PB3RoomProgramRepeatDay_RprdSun = 0,

  /** 周一 */
  PB3RoomProgramRepeatDay_RprdMon = 1,

  /** 周二 */
  PB3RoomProgramRepeatDay_RprdTues = 2,

  /** 周三 */
  PB3RoomProgramRepeatDay_RprdWed = 3,

  /** 周四 */
  PB3RoomProgramRepeatDay_RprdThur = 4,

  /** 周五 */
  PB3RoomProgramRepeatDay_RprdFri = 5,

  /** 周六 */
  PB3RoomProgramRepeatDay_RprdSat = 6,
};

GPBEnumDescriptor *PB3RoomProgramRepeatDay_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3RoomProgramRepeatDay_IsValidValue(int32_t value);

#pragma mark - Enum PB3OrderRoomProgramShowAction

/** 预约节目操作 */
typedef GPB_ENUM(PB3OrderRoomProgramShowAction) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3OrderRoomProgramShowAction_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3OrderRoomProgramShowAction_OrpsaNone = 0,

  /** 预约 */
  PB3OrderRoomProgramShowAction_OrpsaOrder = 1,

  /** 取消预约 */
  PB3OrderRoomProgramShowAction_OrpsaCancel = 2,
};

GPBEnumDescriptor *PB3OrderRoomProgramShowAction_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3OrderRoomProgramShowAction_IsValidValue(int32_t value);

#pragma mark - Enum PB3SingleLiveTplType

/**
 * ------- 个播2.0
 * 个播模式2.0房间模版类型
 **/
typedef GPB_ENUM(PB3SingleLiveTplType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3SingleLiveTplType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3SingleLiveTplType_SlttNone = 0,

  /** 单人 */
  PB3SingleLiveTplType_SlttSingle = 1,

  /** 双人 */
  PB3SingleLiveTplType_SlttDouble = 2,
};

GPBEnumDescriptor *PB3SingleLiveTplType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3SingleLiveTplType_IsValidValue(int32_t value);

#pragma mark - PB3RoomSingleLiveExtRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface PB3RoomSingleLiveExtRoot : GPBRootObject
@end

#pragma mark - PB3SingleLiveRankReq

typedef GPB_ENUM(PB3SingleLiveRankReq_FieldNumber) {
  PB3SingleLiveRankReq_FieldNumber_Type = 1,
  PB3SingleLiveRankReq_FieldNumber_RankFlag = 2,
  PB3SingleLiveRankReq_FieldNumber_ThisTime = 3,
  PB3SingleLiveRankReq_FieldNumber_LiveId = 4,
};

@interface PB3SingleLiveRankReq : GPBMessage

@property(nonatomic, readwrite) PB3SingleLiveRankType type;

@property(nonatomic, readwrite) PB3SingleLiveFlagType rankFlag;

/** 本场榜最近更新时间戳 */
@property(nonatomic, readwrite) int64_t thisTime;

/** 主播ID */
@property(nonatomic, readwrite) int64_t liveId;

@end

/**
 * Fetches the raw value of a @c PB3SingleLiveRankReq's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SingleLiveRankReq_Type_RawValue(PB3SingleLiveRankReq *message);
/**
 * Sets the raw value of an @c PB3SingleLiveRankReq's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SingleLiveRankReq_Type_RawValue(PB3SingleLiveRankReq *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3SingleLiveRankReq's @c rankFlag property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SingleLiveRankReq_RankFlag_RawValue(PB3SingleLiveRankReq *message);
/**
 * Sets the raw value of an @c PB3SingleLiveRankReq's @c rankFlag property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SingleLiveRankReq_RankFlag_RawValue(PB3SingleLiveRankReq *message, int32_t value);

#pragma mark - PB3SingleLiveRankRes

typedef GPB_ENUM(PB3SingleLiveRankRes_FieldNumber) {
  PB3SingleLiveRankRes_FieldNumber_RoomRankListArray = 1,
  PB3SingleLiveRankRes_FieldNumber_MyRank = 2,
  PB3SingleLiveRankRes_FieldNumber_ThisTime = 3,
  PB3SingleLiveRankRes_FieldNumber_GiftId = 4,
};

@interface PB3SingleLiveRankRes : GPBMessage

/** 排行榜 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3Rank*> *roomRankListArray;
/** The number of items in @c roomRankListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger roomRankListArray_Count;

/** 我的排行榜 */
@property(nonatomic, readwrite, strong, null_resettable) PB3Rank1 *myRank;
/** Test to see if @c myRank has been set. */
@property(nonatomic, readwrite) BOOL hasMyRank;

/** 本场榜更新时间戳 */
@property(nonatomic, readwrite) int64_t thisTime;

/** 加入粉丝团礼物ID */
@property(nonatomic, readwrite) int32_t giftId;

@end

#pragma mark - PB3SingleLiveInfo

typedef GPB_ENUM(PB3SingleLiveInfo_FieldNumber) {
  PB3SingleLiveInfo_FieldNumber_Status = 1,
  PB3SingleLiveInfo_FieldNumber_OnlineTime = 2,
};

/**
 * 个播模式信息
 **/
@interface PB3SingleLiveInfo : GPBMessage

/** 当前状态 */
@property(nonatomic, readwrite) PB3SingleLiveStatus status;

/** 开播时间(unix时间戳, 秒) */
@property(nonatomic, readwrite) int64_t onlineTime;

@end

/**
 * Fetches the raw value of a @c PB3SingleLiveInfo's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SingleLiveInfo_Status_RawValue(PB3SingleLiveInfo *message);
/**
 * Sets the raw value of an @c PB3SingleLiveInfo's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SingleLiveInfo_Status_RawValue(PB3SingleLiveInfo *message, int32_t value);

#pragma mark - PB3SingleLiveOptReq

typedef GPB_ENUM(PB3SingleLiveOptReq_FieldNumber) {
  PB3SingleLiveOptReq_FieldNumber_OptType = 1,
};

/**
 * 个播开播/下播操作
 **/
@interface PB3SingleLiveOptReq : GPBMessage

/** 操作类型枚举, 推送个播模式信息 */
@property(nonatomic, readwrite) PB3SingleLiveOptType optType;

@end

/**
 * Fetches the raw value of a @c PB3SingleLiveOptReq's @c optType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SingleLiveOptReq_OptType_RawValue(PB3SingleLiveOptReq *message);
/**
 * Sets the raw value of an @c PB3SingleLiveOptReq's @c optType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SingleLiveOptReq_OptType_RawValue(PB3SingleLiveOptReq *message, int32_t value);

#pragma mark - PB3SingleLiveOptRes

@interface PB3SingleLiveOptRes : GPBMessage

@end

#pragma mark - PB3SingleLiveTimeStats

typedef GPB_ENUM(PB3SingleLiveTimeStats_FieldNumber) {
  PB3SingleLiveTimeStats_FieldNumber_URL = 1,
};

/**
 * 个播本场直播数据广播
 **/
@interface PB3SingleLiveTimeStats : GPBMessage

/** 直播结束页面 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

@end

#pragma mark - PB3SingleLiveTimeStatsReq

typedef GPB_ENUM(PB3SingleLiveTimeStatsReq_FieldNumber) {
  PB3SingleLiveTimeStatsReq_FieldNumber_Id_p = 1,
};

/**
 * 个播本场直播数据
 **/
@interface PB3SingleLiveTimeStatsReq : GPBMessage

/** 场次ID */
@property(nonatomic, readwrite) int64_t id_p;

@end

#pragma mark - PB3SingleLiveTimeStatsRes

typedef GPB_ENUM(PB3SingleLiveTimeStatsRes_FieldNumber) {
  PB3SingleLiveTimeStatsRes_FieldNumber_LiveTime = 1,
  PB3SingleLiveTimeStatsRes_FieldNumber_LiveTicket = 2,
  PB3SingleLiveTimeStatsRes_FieldNumber_ConsumerNum = 3,
  PB3SingleLiveTimeStatsRes_FieldNumber_AudienceNum = 4,
  PB3SingleLiveTimeStatsRes_FieldNumber_TopAudienceNum = 5,
  PB3SingleLiveTimeStatsRes_FieldNumber_NewFansNum = 6,
};

@interface PB3SingleLiveTimeStatsRes : GPBMessage

/** 直播时长（秒） */
@property(nonatomic, readwrite) int64_t liveTime;

/** 直播收益 */
@property(nonatomic, readwrite) int64_t liveTicket;

/** 打赏人数 */
@property(nonatomic, readwrite) int64_t consumerNum;

/** 收听人数 */
@property(nonatomic, readwrite) int64_t audienceNum;

/** 峰值人数 */
@property(nonatomic, readwrite) int64_t topAudienceNum;

/** 新增粉丝数 */
@property(nonatomic, readwrite) int64_t newFansNum;

@end

#pragma mark - PB3SingleLiveTimeRank

typedef GPB_ENUM(PB3SingleLiveTimeRank_FieldNumber) {
  PB3SingleLiveTimeRank_FieldNumber_PlayerId = 1,
  PB3SingleLiveTimeRank_FieldNumber_PlayerSid = 2,
  PB3SingleLiveTimeRank_FieldNumber_Name = 3,
  PB3SingleLiveTimeRank_FieldNumber_Icon = 4,
  PB3SingleLiveTimeRank_FieldNumber_WealthLev = 5,
  PB3SingleLiveTimeRank_FieldNumber_CharmLev = 6,
  PB3SingleLiveTimeRank_FieldNumber_Val = 7,
  PB3SingleLiveTimeRank_FieldNumber_MaskInfo = 8,
};

/**
 * 个播本场排行榜
 **/
@interface PB3SingleLiveTimeRank : GPBMessage

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 短号 */
@property(nonatomic, readwrite) int64_t playerSid;

/** 昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 财富等级 */
@property(nonatomic, readwrite) int32_t wealthLev;

/** 魅力等级 */
@property(nonatomic, readwrite) int32_t charmLev;

/** 贡献值 */
@property(nonatomic, readwrite) int64_t val;

/** 马甲信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3MaskInfo *maskInfo;
/** Test to see if @c maskInfo has been set. */
@property(nonatomic, readwrite) BOOL hasMaskInfo;

@end

#pragma mark - PB3SingleLiveTimeRankReq

typedef GPB_ENUM(PB3SingleLiveTimeRankReq_FieldNumber) {
  PB3SingleLiveTimeRankReq_FieldNumber_Page = 1,
  PB3SingleLiveTimeRankReq_FieldNumber_PageSize = 2,
  PB3SingleLiveTimeRankReq_FieldNumber_Id_p = 3,
};

/**
 * 本场直播贡献榜单
 **/
@interface PB3SingleLiveTimeRankReq : GPBMessage

@property(nonatomic, readwrite) int32_t page;

@property(nonatomic, readwrite) int32_t pageSize;

/** 场次ID */
@property(nonatomic, readwrite) int64_t id_p;

@end

#pragma mark - PB3SingleLiveTimeRankRes

typedef GPB_ENUM(PB3SingleLiveTimeRankRes_FieldNumber) {
  PB3SingleLiveTimeRankRes_FieldNumber_RankListArray = 1,
};

@interface PB3SingleLiveTimeRankRes : GPBMessage

/** 排行榜数据 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SingleLiveTimeRank*> *rankListArray;
/** The number of items in @c rankListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger rankListArray_Count;

@end

#pragma mark - PB3IntimateFansInfo

typedef GPB_ENUM(PB3IntimateFansInfo_FieldNumber) {
  PB3IntimateFansInfo_FieldNumber_Lev = 1,
  PB3IntimateFansInfo_FieldNumber_HostIconName = 2,
  PB3IntimateFansInfo_FieldNumber_IsFan = 3,
};

/**
 * 亲密粉丝信息
 **/
@interface PB3IntimateFansInfo : GPBMessage

/** 亲密粉丝等级 */
@property(nonatomic, readwrite) int32_t lev;

/** 主播名牌名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *hostIconName;

/** 是否是粉丝: true:是; false:否 */
@property(nonatomic, readwrite) BOOL isFan;

@end

#pragma mark - PB3RoomProgramItem

typedef GPB_ENUM(PB3RoomProgramItem_FieldNumber) {
  PB3RoomProgramItem_FieldNumber_Title = 1,
  PB3RoomProgramItem_FieldNumber_SubTitle = 2,
  PB3RoomProgramItem_FieldNumber_ProgramPic = 3,
  PB3RoomProgramItem_FieldNumber_TitleStatus = 4,
  PB3RoomProgramItem_FieldNumber_SubTitleStatus = 5,
  PB3RoomProgramItem_FieldNumber_ProgramPicStatus = 6,
  PB3RoomProgramItem_FieldNumber_LastTitle = 7,
  PB3RoomProgramItem_FieldNumber_ProgramPicWidth = 8,
  PB3RoomProgramItem_FieldNumber_ProgramPicHeight = 9,
};

/**
 * 节目详情
 **/
@interface PB3RoomProgramItem : GPBMessage

/** 节目描述 限20个字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** 房间简介 介绍 限 35个字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *subTitle;

/** 节目单图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *programPic;

/** 本档档期 审核状态 0已通过，1审核中 */
@property(nonatomic, readwrite) int32_t titleStatus;

/** 子标题 介绍 审核状态 0已通过，1审核中 */
@property(nonatomic, readwrite) int32_t subTitleStatus;

/** 节目单图片 审核状态 0已通过，1审核中 */
@property(nonatomic, readwrite) int32_t programPicStatus;

/** 上一次更改的房间描述 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *lastTitle;

/** 节目单图片宽度 */
@property(nonatomic, readwrite) int32_t programPicWidth;

/** 节目单图片高度 */
@property(nonatomic, readwrite) int32_t programPicHeight;

@end

#pragma mark - PB3AddRoomProgramReq

typedef GPB_ENUM(PB3AddRoomProgramReq_FieldNumber) {
  PB3AddRoomProgramReq_FieldNumber_Program = 1,
};

/**
 * 保存节目信息
 * 通过版本号判断 是否是新的节目 新的节目不用传节目单图片
 **/
@interface PB3AddRoomProgramReq : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3RoomProgramItem *program;
/** Test to see if @c program has been set. */
@property(nonatomic, readwrite) BOOL hasProgram;

@end

#pragma mark - PB3AddRoomProgramRes

@interface PB3AddRoomProgramRes : GPBMessage

@end

#pragma mark - PB3RoomProgramAnchor

typedef GPB_ENUM(PB3RoomProgramAnchor_FieldNumber) {
  PB3RoomProgramAnchor_FieldNumber_Id_p = 1,
  PB3RoomProgramAnchor_FieldNumber_Id2 = 2,
  PB3RoomProgramAnchor_FieldNumber_Nickname = 3,
  PB3RoomProgramAnchor_FieldNumber_Icon = 4,
};

/**
 * 节目单项目主播
 **/
@interface PB3RoomProgramAnchor : GPBMessage

/** 主播id */
@property(nonatomic, readwrite) int64_t id_p;

/** 主播靓号 */
@property(nonatomic, readwrite) int64_t id2;

/** 主播名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nickname;

/** 主播头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

@end

#pragma mark - PB3RoomProgramShow

typedef GPB_ENUM(PB3RoomProgramShow_FieldNumber) {
  PB3RoomProgramShow_FieldNumber_Id_p = 1,
  PB3RoomProgramShow_FieldNumber_Subject = 2,
  PB3RoomProgramShow_FieldNumber_Intro = 3,
  PB3RoomProgramShow_FieldNumber_StartTime = 4,
  PB3RoomProgramShow_FieldNumber_EndTime = 5,
  PB3RoomProgramShow_FieldNumber_StartTimeSeconds = 6,
  PB3RoomProgramShow_FieldNumber_EndTimeSeconds = 7,
  PB3RoomProgramShow_FieldNumber_DaysArray = 8,
  PB3RoomProgramShow_FieldNumber_PlayerIdsArray = 9,
  PB3RoomProgramShow_FieldNumber_AnchorsArray = 10,
  PB3RoomProgramShow_FieldNumber_IsNotice = 11,
  PB3RoomProgramShow_FieldNumber_IsOrder = 12,
  PB3RoomProgramShow_FieldNumber_DayType = 13,
  PB3RoomProgramShow_FieldNumber_SubjectStatus = 14,
  PB3RoomProgramShow_FieldNumber_IntroStatus = 15,
  PB3RoomProgramShow_FieldNumber_CoverStatus = 16,
  PB3RoomProgramShow_FieldNumber_Cover = 17,
  PB3RoomProgramShow_FieldNumber_CoverWidth = 18,
  PB3RoomProgramShow_FieldNumber_CoverHeight = 19,
};

/**
 * 节目单项目
 **/
@interface PB3RoomProgramShow : GPBMessage

/** 节目单项目id */
@property(nonatomic, readwrite) int64_t id_p;

/** 主题 最长20个字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *subject;

/** 介绍 最长50个字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *intro;

/** 节目开始时间 */
@property(nonatomic, readwrite) int64_t startTime;

/** 节目结束时间 */
@property(nonatomic, readwrite) int64_t endTime;

/** 节目开始时间秒数 */
@property(nonatomic, readwrite) int32_t startTimeSeconds;

/** 节目结束时间秒数 */
@property(nonatomic, readwrite) int32_t endTimeSeconds;

/** 重复天 */
// |daysArray| contains |PB3RoomProgramRepeatDay|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *daysArray;
/** The number of items in @c daysArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger daysArray_Count;

/** 主播ids */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *playerIdsArray;
/** The number of items in @c playerIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger playerIdsArray_Count;

/** 主播信息列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3RoomProgramAnchor*> *anchorsArray;
/** The number of items in @c anchorsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger anchorsArray_Count;

/** 是否预告通知 */
@property(nonatomic, readwrite) BOOL isNotice;

/** 是否预约 */
@property(nonatomic, readwrite) BOOL isOrder;

/** 1 今天 2 明天 */
@property(nonatomic, readwrite) PB3RoomProgramShowDayType dayType;

/** 主题 审核状态 */
@property(nonatomic, readwrite) enum PB3AuditStatus subjectStatus;

/** 介绍 审核状态 */
@property(nonatomic, readwrite) enum PB3AuditStatus introStatus;

/** 封面 审核状态 */
@property(nonatomic, readwrite) enum PB3AuditStatus coverStatus;

/** 封面 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *cover;

/** 封面宽度 */
@property(nonatomic, readwrite) int32_t coverWidth;

/** 封面高度 */
@property(nonatomic, readwrite) int32_t coverHeight;

@end

/**
 * Fetches the raw value of a @c PB3RoomProgramShow's @c dayType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3RoomProgramShow_DayType_RawValue(PB3RoomProgramShow *message);
/**
 * Sets the raw value of an @c PB3RoomProgramShow's @c dayType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3RoomProgramShow_DayType_RawValue(PB3RoomProgramShow *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3RoomProgramShow's @c subjectStatus property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3RoomProgramShow_SubjectStatus_RawValue(PB3RoomProgramShow *message);
/**
 * Sets the raw value of an @c PB3RoomProgramShow's @c subjectStatus property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3RoomProgramShow_SubjectStatus_RawValue(PB3RoomProgramShow *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3RoomProgramShow's @c introStatus property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3RoomProgramShow_IntroStatus_RawValue(PB3RoomProgramShow *message);
/**
 * Sets the raw value of an @c PB3RoomProgramShow's @c introStatus property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3RoomProgramShow_IntroStatus_RawValue(PB3RoomProgramShow *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3RoomProgramShow's @c coverStatus property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3RoomProgramShow_CoverStatus_RawValue(PB3RoomProgramShow *message);
/**
 * Sets the raw value of an @c PB3RoomProgramShow's @c coverStatus property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3RoomProgramShow_CoverStatus_RawValue(PB3RoomProgramShow *message, int32_t value);

#pragma mark - PB3AddRoomProgramShowReq

typedef GPB_ENUM(PB3AddRoomProgramShowReq_FieldNumber) {
  PB3AddRoomProgramShowReq_FieldNumber_Show = 1,
};

/**
 * 添加节目单项目
 **/
@interface PB3AddRoomProgramShowReq : GPBMessage

/** 节目单项目详情 */
@property(nonatomic, readwrite, strong, null_resettable) PB3RoomProgramShow *show;
/** Test to see if @c show has been set. */
@property(nonatomic, readwrite) BOOL hasShow;

@end

#pragma mark - PB3AddRoomProgramShowRes

@interface PB3AddRoomProgramShowRes : GPBMessage

@end

#pragma mark - PB3DelRoomProgramShowReq

typedef GPB_ENUM(PB3DelRoomProgramShowReq_FieldNumber) {
  PB3DelRoomProgramShowReq_FieldNumber_Id_p = 1,
};

/**
 * 删除节目单项目
 **/
@interface PB3DelRoomProgramShowReq : GPBMessage

/** 节目单项目id */
@property(nonatomic, readwrite) int64_t id_p;

@end

#pragma mark - PB3DelRoomProgramShowRes

@interface PB3DelRoomProgramShowRes : GPBMessage

@end

#pragma mark - PB3OrderRoomProgramShowReq

typedef GPB_ENUM(PB3OrderRoomProgramShowReq_FieldNumber) {
  PB3OrderRoomProgramShowReq_FieldNumber_Id_p = 1,
  PB3OrderRoomProgramShowReq_FieldNumber_DayType = 2,
  PB3OrderRoomProgramShowReq_FieldNumber_Action = 3,
  PB3OrderRoomProgramShowReq_FieldNumber_RoomId = 4,
};

/**
 * 预约节目单项目
 **/
@interface PB3OrderRoomProgramShowReq : GPBMessage

/** 节目单项目id */
@property(nonatomic, readwrite) int64_t id_p;

/** 1 今天 2 明天 */
@property(nonatomic, readwrite) PB3RoomProgramShowDayType dayType;

/** 操作 1 预约 2 取消预约 */
@property(nonatomic, readwrite) PB3OrderRoomProgramShowAction action;

/** 房间id 在首页预约节目用到 */
@property(nonatomic, readwrite) int64_t roomId;

@end

/**
 * Fetches the raw value of a @c PB3OrderRoomProgramShowReq's @c dayType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3OrderRoomProgramShowReq_DayType_RawValue(PB3OrderRoomProgramShowReq *message);
/**
 * Sets the raw value of an @c PB3OrderRoomProgramShowReq's @c dayType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3OrderRoomProgramShowReq_DayType_RawValue(PB3OrderRoomProgramShowReq *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3OrderRoomProgramShowReq's @c action property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3OrderRoomProgramShowReq_Action_RawValue(PB3OrderRoomProgramShowReq *message);
/**
 * Sets the raw value of an @c PB3OrderRoomProgramShowReq's @c action property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3OrderRoomProgramShowReq_Action_RawValue(PB3OrderRoomProgramShowReq *message, int32_t value);

#pragma mark - PB3OrderRoomProgramShowRes

@interface PB3OrderRoomProgramShowRes : GPBMessage

@end

#pragma mark - PB3OrderRoomProgramShowListReq

typedef GPB_ENUM(PB3OrderRoomProgramShowListReq_FieldNumber) {
  PB3OrderRoomProgramShowListReq_FieldNumber_RoomId = 1,
};

/**
 * 获取用户预约房间节目列表
 **/
@interface PB3OrderRoomProgramShowListReq : GPBMessage

@property(nonatomic, readwrite) int64_t roomId;

@end

#pragma mark - PB3OrderRoomProgramShowListRes

typedef GPB_ENUM(PB3OrderRoomProgramShowListRes_FieldNumber) {
  PB3OrderRoomProgramShowListRes_FieldNumber_ShowsArray = 1,
};

@interface PB3OrderRoomProgramShowListRes : GPBMessage

/** 预约的节目 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3RoomProgramShow*> *showsArray;
/** The number of items in @c showsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger showsArray_Count;

@end

#pragma mark - PB3RoomProgramReq

/**
 * 房间节目
 * 通过版本号判断 是否是新节目 新节目返回节目单项目列表 不是新节目返回节目单图片
 **/
@interface PB3RoomProgramReq : GPBMessage

@end

#pragma mark - PB3RoomProgramRes

typedef GPB_ENUM(PB3RoomProgramRes_FieldNumber) {
  PB3RoomProgramRes_FieldNumber_Program = 1,
  PB3RoomProgramRes_FieldNumber_NoticePushTime = 2,
  PB3RoomProgramRes_FieldNumber_FansCount = 3,
  PB3RoomProgramRes_FieldNumber_ShowsArray = 4,
};

@interface PB3RoomProgramRes : GPBMessage

/** 节目详情 */
@property(nonatomic, readwrite, strong, null_resettable) PB3RoomProgramItem *program;
/** Test to see if @c program has been set. */
@property(nonatomic, readwrite) BOOL hasProgram;

/** 预告推送按钮点击的时间戳 */
@property(nonatomic, readwrite) int64_t noticePushTime;

/** 房间粉丝数 */
@property(nonatomic, readwrite) int64_t fansCount;

/** 节目单项目列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3RoomProgramShow*> *showsArray;
/** The number of items in @c showsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger showsArray_Count;

@end

#pragma mark - PB3RoomProgramOnlineInfo

/**
 * 个播2.0表演中节目信息
 **/
@interface PB3RoomProgramOnlineInfo : GPBMessage

@end

#pragma mark - PB3RoomProgramOnlineInfoReq

/**
 * 获取个播2.0表演中节目信息
 **/
@interface PB3RoomProgramOnlineInfoReq : GPBMessage

@end

#pragma mark - PB3RoomProgramOnlineInfoRes

typedef GPB_ENUM(PB3RoomProgramOnlineInfoRes_FieldNumber) {
  PB3RoomProgramOnlineInfoRes_FieldNumber_RoomId = 1,
  PB3RoomProgramOnlineInfoRes_FieldNumber_Subject = 2,
  PB3RoomProgramOnlineInfoRes_FieldNumber_Title = 3,
  PB3RoomProgramOnlineInfoRes_FieldNumber_EndTime = 4,
};

@interface PB3RoomProgramOnlineInfoRes : GPBMessage

/** 房间id */
@property(nonatomic, readwrite) int64_t roomId;

/** 当前节目标题 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *subject;

/** 节目单标题 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** 节目结束时间(时间戳：秒) */
@property(nonatomic, readwrite) int64_t endTime;

@end

#pragma mark - PB3RoomProgramStateReq

typedef GPB_ENUM(PB3RoomProgramStateReq_FieldNumber) {
  PB3RoomProgramStateReq_FieldNumber_RoomId = 1,
  PB3RoomProgramStateReq_FieldNumber_ShowId = 2,
  PB3RoomProgramStateReq_FieldNumber_EndTime = 3,
};

/**
 * 获取房间节目状态
 **/
@interface PB3RoomProgramStateReq : GPBMessage

/** 房间id */
@property(nonatomic, readwrite) int64_t roomId;

/** 节目id */
@property(nonatomic, readwrite) int64_t showId;

/** 活动结束时间 */
@property(nonatomic, readwrite) int64_t endTime;

@end

#pragma mark - PB3RoomProgramStateRes

@interface PB3RoomProgramStateRes : GPBMessage

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
