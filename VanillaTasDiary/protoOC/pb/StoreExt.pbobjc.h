// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pb/store.ext.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class PB3BlackWhaleEffect;
@class PB3BlackWhaleExchangeLog;
@class PB3BlackWhaleExchangeLogDetail;
@class PB3BlackWhaleExchangeRecordReq;
@class PB3BlackWhaleExpCard;
@class PB3BlackWhaleGift;
@class PB3BlackWhaleModule;
@class PB3BlackWhaleScoreLog;
@class PB3BlackWhaleScoreLogDetail;
@class PB3BlackWhaleStoreItem;
@class PB3BuyRecord;
@class PB3ClassifyTabInfo;
@class PB3Exchange;
@class PB3ExchangeExtend;
@class PB3ExchangeGoods;
@class PB3LimitData;
@class PB3LogExchange;
@class PB3LogPointExchange;
@class PB3PlayerAddr;
@class PB3PointsMallGoods;
@class PB3SaleGiftInfo;
@class PB3Store;
@class PB3StoreClassify;
@class PB3StoreClassifyConf;
GPB_ENUM_FWD_DECLARE(PB3BlackWhaleItemType);
GPB_ENUM_FWD_DECLARE(PB3BlackWhaleLimitType);
GPB_ENUM_FWD_DECLARE(PB3BlackWhaleModuleStyle);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum PB3StoreCmdId

/** 商城广播cmdId定义 301 */
typedef GPB_ENUM(PB3StoreCmdId) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3StoreCmdId_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3StoreCmdId_StoreZero = 0,

  /** 购买赠送礼物领取通知  BuyGiftNotice */
  PB3StoreCmdId_StoreBuyGift = 301001,

  /** 购买已领取礼物通知  BuyGiftNotice */
  PB3StoreCmdId_StoreBuyGiftReward = 301002,

  /** 积分商城限购数量变化推送  PointStoreLimit */
  PB3StoreCmdId_StorePointBuyLimit = 301003,
};

GPBEnumDescriptor *PB3StoreCmdId_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3StoreCmdId_IsValidValue(int32_t value);

#pragma mark - Enum PB3StoreCode

typedef GPB_ENUM(PB3StoreCode) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3StoreCode_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3StoreCode_ErrStoreZero = 0,
  PB3StoreCode_ErrStoreBuyEntryOff = 45010,
};

GPBEnumDescriptor *PB3StoreCode_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3StoreCode_IsValidValue(int32_t value);

#pragma mark - Enum PB3EffectStatus

typedef GPB_ENUM(PB3EffectStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3EffectStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3EffectStatus_EsZero = 0,

  /** 已拥有 */
  PB3EffectStatus_EsOwned = 1,

  /** 使用中 */
  PB3EffectStatus_EsUsing = 2,
};

GPBEnumDescriptor *PB3EffectStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3EffectStatus_IsValidValue(int32_t value);

#pragma mark - Enum PB3StoreStyle

typedef GPB_ENUM(PB3StoreStyle) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3StoreStyle_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3StoreStyle_StoreStyleZero = 0,

  /** 宝石 */
  PB3StoreStyle_StoreStyleGem = 1,

  /** 特效，自动播放(包含只有静态的特特效) */
  PB3StoreStyle_StoreStyleEffectsAutoPlay = 2,

  /** 特效，带按钮播放 */
  PB3StoreStyle_StoreStyleEffectsButton = 3,

  /** 爵位 */
  PB3StoreStyle_StoreStyleNobility = 4,

  /** 积分 */
  PB3StoreStyle_StoreStylePoint = 5,
};

GPBEnumDescriptor *PB3StoreStyle_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3StoreStyle_IsValidValue(int32_t value);

#pragma mark - Enum PB3ClassifyTabType

typedef GPB_ENUM(PB3ClassifyTabType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3ClassifyTabType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3ClassifyTabType_Null = 0,

  /** 商城 */
  PB3ClassifyTabType_TabStore = 1,

  /** 背包 */
  PB3ClassifyTabType_TabBackPack = 2,
};

GPBEnumDescriptor *PB3ClassifyTabType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3ClassifyTabType_IsValidValue(int32_t value);

#pragma mark - Enum PB3PointsMallGoodsType

typedef GPB_ENUM(PB3PointsMallGoodsType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3PointsMallGoodsType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3PointsMallGoodsType_PmgtZero = 0,

  /** 礼物 */
  PB3PointsMallGoodsType_PmgtGift = 1,

  /** 特效 */
  PB3PointsMallGoodsType_PmgtEffect = 2,
};

GPBEnumDescriptor *PB3PointsMallGoodsType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3PointsMallGoodsType_IsValidValue(int32_t value);

#pragma mark - PB3StoreExtRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface PB3StoreExtRoot : GPBRootObject
@end

#pragma mark - PB3Store

typedef GPB_ENUM(PB3Store_FieldNumber) {
  PB3Store_FieldNumber_Id_p = 1,
  PB3Store_FieldNumber_AssetId = 2,
  PB3Store_FieldNumber_AssetType = 3,
  PB3Store_FieldNumber_PriceType = 4,
  PB3Store_FieldNumber_Price = 5,
  PB3Store_FieldNumber_Active = 6,
  PB3Store_FieldNumber_AssetName = 7,
  PB3Store_FieldNumber_AssetImage = 8,
  PB3Store_FieldNumber_BackgroundImage = 9,
  PB3Store_FieldNumber_AssetExplain = 10,
  PB3Store_FieldNumber_Sort = 11,
  PB3Store_FieldNumber_Remark = 12,
  PB3Store_FieldNumber_NumColor = 13,
  PB3Store_FieldNumber_Status = 14,
  PB3Store_FieldNumber_Num = 15,
  PB3Store_FieldNumber_Unit = 16,
  PB3Store_FieldNumber_BuyNum = 17,
  PB3Store_FieldNumber_GiftCategory = 18,
  PB3Store_FieldNumber_ClassifyId = 19,
  PB3Store_FieldNumber_DynamicImage = 20,
  PB3Store_FieldNumber_Description_p = 21,
  PB3Store_FieldNumber_StarNum = 22,
  PB3Store_FieldNumber_Router = 23,
  PB3Store_FieldNumber_Explain = 24,
  PB3Store_FieldNumber_NobilityLevel = 25,
  PB3Store_FieldNumber_EffectStatus = 26,
  PB3Store_FieldNumber_GetPoint = 27,
  PB3Store_FieldNumber_Limit = 28,
  PB3Store_FieldNumber_ExtraGiftStr = 29,
  PB3Store_FieldNumber_DetailLink = 30,
  PB3Store_FieldNumber_ApplicationArray = 31,
  PB3Store_FieldNumber_UnlockDays = 32,
};

@interface PB3Store : GPBMessage

/** 商城商品id */
@property(nonatomic, readwrite) int32_t id_p;

/** 礼物id */
@property(nonatomic, readwrite) int32_t assetId;

@property(nonatomic, readwrite) int32_t assetType;

/** 价格类型，就是用哪种物品或货币进行兑换 100001-金币，其他为各自物品id；10：积分兑换 */
@property(nonatomic, readwrite) int32_t priceType;

@property(nonatomic, readwrite) int64_t price;

/** 是否出售 1-出售 2-不出售  如果不出售显示原因asset_explain */
@property(nonatomic, readwrite) int32_t active;

@property(nonatomic, readwrite, copy, null_resettable) NSString *assetName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *assetImage;

@property(nonatomic, readwrite, copy, null_resettable) NSString *backgroundImage;

@property(nonatomic, readwrite, copy, null_resettable) NSString *assetExplain;

/** 排序 */
@property(nonatomic, readwrite) int32_t sort;

/** 备注 子活动id用户前端绑定过滤对应商品 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *remark;

/** 颜色 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *numColor;

/** 1-显示 2-不显示 */
@property(nonatomic, readwrite) int32_t status;

/** 数量 */
@property(nonatomic, readwrite) int64_t num;

/** 单位 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *unit;

/** 允许购买次数 0-不限制 1-代表1次 */
@property(nonatomic, readwrite) int32_t buyNum;

/** 礼物类型 0-普通 1-打折 2-稀有 3-限时 */
@property(nonatomic, readwrite) int32_t giftCategory;

/** 分类id */
@property(nonatomic, readwrite) int32_t classifyId;

/** 动图，为空则没有 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *dynamicImage;

/** 描述(例如：皇帝爵位专属) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

/** 爵位物品星数 */
@property(nonatomic, readwrite) int32_t starNum;

/** 爵位物品点击购买跳转路由，跳转到H5开通爵位 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *router;

/** 选中物品后，底部显示的说明 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *explain;

/** 爵位等级 子爵<侯爵<公爵<国王<皇帝 */
@property(nonatomic, readwrite) int32_t nobilityLevel;

/** 特效商品的状态，0：玩家没有这个特效 */
@property(nonatomic, readwrite) PB3EffectStatus effectStatus;

/** 购买获得积分 */
@property(nonatomic, readwrite) int32_t getPoint;

/** 购买限制类型 */
@property(nonatomic, readwrite, strong, null_resettable) PB3LimitData *limit;
/** Test to see if @c limit has been set. */
@property(nonatomic, readwrite) BOOL hasLimit;

/** 购买物品额外奖励文案 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *extraGiftStr;

/** 礼物详情链接 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *detailLink;

/** 应用包名 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *applicationArray;
/** The number of items in @c applicationArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger applicationArray_Count;

/** 解锁天数 */
@property(nonatomic, readwrite) int32_t unlockDays;

@end

/**
 * Fetches the raw value of a @c PB3Store's @c effectStatus property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3Store_EffectStatus_RawValue(PB3Store *message);
/**
 * Sets the raw value of an @c PB3Store's @c effectStatus property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3Store_EffectStatus_RawValue(PB3Store *message, int32_t value);

#pragma mark - PB3ExchangeGoods

typedef GPB_ENUM(PB3ExchangeGoods_FieldNumber) {
  PB3ExchangeGoods_FieldNumber_GiftId = 1,
  PB3ExchangeGoods_FieldNumber_Num = 2,
  PB3ExchangeGoods_FieldNumber_Unit = 3,
  PB3ExchangeGoods_FieldNumber_Name = 4,
  PB3ExchangeGoods_FieldNumber_ImageURL = 5,
  PB3ExchangeGoods_FieldNumber_OriginalPrice = 6,
  PB3ExchangeGoods_FieldNumber_GiftType = 7,
  PB3ExchangeGoods_FieldNumber_Price = 8,
  PB3ExchangeGoods_FieldNumber_GiftValue = 9,
};

/**
 * 礼物
 **/
@interface PB3ExchangeGoods : GPBMessage

/** 礼物id */
@property(nonatomic, readwrite) int32_t giftId;

/** 礼物数量 */
@property(nonatomic, readwrite) int64_t num;

/** 礼物单位 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *unit;

/** 礼物名字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 图片路径 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *imageURL;

/** 原价 */
@property(nonatomic, readwrite) int64_t originalPrice;

/** 兑换类型　0-物品 1-房间背景 2-特效 3-金币 4-爵位 5-皮肤 */
@property(nonatomic, readwrite) int32_t giftType;

/** 单价 */
@property(nonatomic, readwrite) int32_t price;

/** 兑换物品价值 */
@property(nonatomic, readwrite) int32_t giftValue;

@end

#pragma mark - PB3ExchangeExtend

typedef GPB_ENUM(PB3ExchangeExtend_FieldNumber) {
  PB3ExchangeExtend_FieldNumber_ExchangeType = 1,
  PB3ExchangeExtend_FieldNumber_PriceLimitType = 2,
  PB3ExchangeExtend_FieldNumber_MinPrice = 3,
  PB3ExchangeExtend_FieldNumber_MaxPrice = 4,
  PB3ExchangeExtend_FieldNumber_MinNum = 5,
  PB3ExchangeExtend_FieldNumber_MaxNum = 6,
};

@interface PB3ExchangeExtend : GPBMessage

/** 兑换类型 0普通 1按价值比例兑换 2拼手气兑换 3榜首奖励标签兑换 */
@property(nonatomic, readwrite) int32_t exchangeType;

/** 价值范围类型 0-普通 1-物品价值范围 */
@property(nonatomic, readwrite) int32_t priceLimitType;

/** 价值区间 */
@property(nonatomic, readwrite) int32_t minPrice;

/** 价值区间 */
@property(nonatomic, readwrite) int32_t maxPrice;

/** 最小兑换数量 */
@property(nonatomic, readwrite) int32_t minNum;

/** 最大兑换数量 */
@property(nonatomic, readwrite) int32_t maxNum;

@end

#pragma mark - PB3Exchange

typedef GPB_ENUM(PB3Exchange_FieldNumber) {
  PB3Exchange_FieldNumber_Id_p = 1,
  PB3Exchange_FieldNumber_GoodsArray = 2,
  PB3Exchange_FieldNumber_PriceArray = 3,
  PB3Exchange_FieldNumber_Limit = 4,
  PB3Exchange_FieldNumber_Created = 5,
  PB3Exchange_FieldNumber_Flag = 6,
  PB3Exchange_FieldNumber_ExchangeNum = 7,
  PB3Exchange_FieldNumber_LimitRange = 8,
  PB3Exchange_FieldNumber_LimitCycle = 9,
  PB3Exchange_FieldNumber_Gold = 10,
  PB3Exchange_FieldNumber_GiftCategory = 11,
  PB3Exchange_FieldNumber_StartTime = 12,
  PB3Exchange_FieldNumber_EndTime = 13,
  PB3Exchange_FieldNumber_LimitsArray = 14,
  PB3Exchange_FieldNumber_Remark = 15,
  PB3Exchange_FieldNumber_Extend = 16,
  PB3Exchange_FieldNumber_RelActId = 17,
  PB3Exchange_FieldNumber_ShowStartTime = 18,
  PB3Exchange_FieldNumber_ShowEndTime = 19,
  PB3Exchange_FieldNumber_CanBuyStatus = 20,
};

@interface PB3Exchange : GPBMessage

/** 兑换id */
@property(nonatomic, readwrite) int32_t id_p;

/** 兑换物品 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ExchangeGoods*> *goodsArray;
/** The number of items in @c goodsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger goodsArray_Count;

/** 兑换价格 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ExchangeGoods*> *priceArray;
/** The number of items in @c priceArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger priceArray_Count;

/** 限制次数 */
@property(nonatomic, readwrite) int32_t limit;

@property(nonatomic, readwrite) int64_t created;

/** 这是用于h5匹配活动，填活动的名称或id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *flag;

/** 兑换次数 */
@property(nonatomic, readwrite) int32_t exchangeNum;

/** 1-全服 2-个人 */
@property(nonatomic, readwrite) int32_t limitRange;

/** 每隔一段时间重置 1-每周 2-每月 3-每天 4-不重置 */
@property(nonatomic, readwrite) int32_t limitCycle;

/** 价值多少钱 */
@property(nonatomic, readwrite) int64_t gold;

/** 礼物类型 0-普通 1-打折 */
@property(nonatomic, readwrite) int32_t giftCategory;

@property(nonatomic, readwrite) int64_t startTime;

@property(nonatomic, readwrite) int64_t endTime;

/** 限制 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3LimitData*> *limitsArray;
/** The number of items in @c limitsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger limitsArray_Count;

/** 备注 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *remark;

/** 扩展 */
@property(nonatomic, readwrite, strong, null_resettable) PB3ExchangeExtend *extend;
/** Test to see if @c extend has been set. */
@property(nonatomic, readwrite) BOOL hasExtend;

/** 子活动ID */
@property(nonatomic, readwrite) int32_t relActId;

@property(nonatomic, readwrite) int64_t showStartTime;

@property(nonatomic, readwrite) int64_t showEndTime;

/** 是否能购买 */
@property(nonatomic, readwrite) int32_t canBuyStatus;

@end

#pragma mark - PB3LimitData

typedef GPB_ENUM(PB3LimitData_FieldNumber) {
  PB3LimitData_FieldNumber_LimitNum = 1,
  PB3LimitData_FieldNumber_LimitRange = 2,
  PB3LimitData_FieldNumber_UseNum = 3,
  PB3LimitData_FieldNumber_LimitCycle = 4,
};

@interface PB3LimitData : GPBMessage

/** 限制数量 */
@property(nonatomic, readwrite) int32_t limitNum;

/** 1-全服 2-个人 */
@property(nonatomic, readwrite) int32_t limitRange;

/** 已兑换数量 */
@property(nonatomic, readwrite) int32_t useNum;

/** 每隔一段时间重置 1-每周 2-每月 3-每天 4-不重置 */
@property(nonatomic, readwrite) int32_t limitCycle;

@end

#pragma mark - PB3LogExchange

typedef GPB_ENUM(PB3LogExchange_FieldNumber) {
  PB3LogExchange_FieldNumber_Id_p = 1,
  PB3LogExchange_FieldNumber_ExchangeId = 2,
  PB3LogExchange_FieldNumber_PlayerId = 3,
  PB3LogExchange_FieldNumber_GoodsArray = 4,
  PB3LogExchange_FieldNumber_PriceArray = 5,
  PB3LogExchange_FieldNumber_Created = 6,
  PB3LogExchange_FieldNumber_PlayerId2 = 7,
  PB3LogExchange_FieldNumber_PlayerName = 8,
};

/**
 * 兑换记录
 **/
@interface PB3LogExchange : GPBMessage

@property(nonatomic, readwrite) int32_t id_p;

@property(nonatomic, readwrite) int32_t exchangeId;

@property(nonatomic, readwrite) int64_t playerId;

@property(nonatomic, readwrite) int64_t playerId2;

@property(nonatomic, readwrite, copy, null_resettable) NSString *playerName;

/** 兑换物品 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ExchangeGoods*> *goodsArray;
/** The number of items in @c goodsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger goodsArray_Count;

/** 兑换价格 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ExchangeGoods*> *priceArray;
/** The number of items in @c priceArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger priceArray_Count;

@property(nonatomic, readwrite) int64_t created;

@end

#pragma mark - PB3BuyRecord

typedef GPB_ENUM(PB3BuyRecord_FieldNumber) {
  PB3BuyRecord_FieldNumber_Id_p = 1,
  PB3BuyRecord_FieldNumber_Num = 2,
};

/**
 * 购买限制记录
 **/
@interface PB3BuyRecord : GPBMessage

/** 兑换id 或者物品id */
@property(nonatomic, readwrite) int32_t id_p;

@property(nonatomic, readwrite) int64_t num;

@end

#pragma mark - PB3BuyGiftNotice

typedef GPB_ENUM(PB3BuyGiftNotice_FieldNumber) {
  PB3BuyGiftNotice_FieldNumber_Id_p = 1,
  PB3BuyGiftNotice_FieldNumber_Msg = 2,
  PB3BuyGiftNotice_FieldNumber_RewardFlag = 3,
  PB3BuyGiftNotice_FieldNumber_Created = 4,
};

/**
 * 购买购买赠送礼物通知
 **/
@interface PB3BuyGiftNotice : GPBMessage

/** 购买的物品id */
@property(nonatomic, readwrite) int32_t id_p;

/** 详细通知（目前只需要把此字符串显示） */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;

/** 领取标识 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *rewardFlag;

/** 创建时间 */
@property(nonatomic, readwrite) int64_t created;

@end

#pragma mark - PB3BuyGiftRewardNotice

typedef GPB_ENUM(PB3BuyGiftRewardNotice_FieldNumber) {
  PB3BuyGiftRewardNotice_FieldNumber_Msg = 1,
};

/**
 * 购买已领取礼物通知
 **/
@interface PB3BuyGiftRewardNotice : GPBMessage

/** 通知信息 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;

@end

#pragma mark - PB3BuyReq

typedef GPB_ENUM(PB3BuyReq_FieldNumber) {
  PB3BuyReq_FieldNumber_Id_p = 1,
  PB3BuyReq_FieldNumber_Num = 2,
  PB3BuyReq_FieldNumber_Type = 3,
  PB3BuyReq_FieldNumber_Remark = 4,
  PB3BuyReq_FieldNumber_UseAddr = 5,
};

/**
 * 购物
 **/
@interface PB3BuyReq : GPBMessage

/** 商品id，不是物品id，即不是asset_id */
@property(nonatomic, readwrite) int32_t id_p;

@property(nonatomic, readwrite) int32_t num;

/** 0-购买 1-兑换 2-积分商城兑换 */
@property(nonatomic, readwrite) int32_t type;

/** 备注，购买不填，活动兑换填子活动id 或者活动id */
@property(nonatomic, readwrite) int32_t remark;

/** 使用地址 */
@property(nonatomic, readwrite) BOOL useAddr;

@end

#pragma mark - PB3BuyRes

typedef GPB_ENUM(PB3BuyRes_FieldNumber) {
  PB3BuyRes_FieldNumber_Gold = 1,
  PB3BuyRes_FieldNumber_Num = 2,
};

@interface PB3BuyRes : GPBMessage

/** 扣除的金币数 */
@property(nonatomic, readwrite) int64_t gold;

/** 购买的数量 */
@property(nonatomic, readwrite) int32_t num;

@end

#pragma mark - PB3GetStoreConfReq

typedef GPB_ENUM(PB3GetStoreConfReq_FieldNumber) {
  PB3GetStoreConfReq_FieldNumber_IsHtml = 1,
  PB3GetStoreConfReq_FieldNumber_PlayerId = 2,
};

/**
 * 获取商城配置
 **/
@interface PB3GetStoreConfReq : GPBMessage

/** 判断是否h5请求 如果是则不判断版本 */
@property(nonatomic, readwrite) BOOL isHtml;

/** 人员id */
@property(nonatomic, readwrite) int64_t playerId;

@end

#pragma mark - PB3GetStoreConfRes

typedef GPB_ENUM(PB3GetStoreConfRes_FieldNumber) {
  PB3GetStoreConfRes_FieldNumber_StoreArray = 1,
};

@interface PB3GetStoreConfRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3Store*> *storeArray;
/** The number of items in @c storeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger storeArray_Count;

@end

#pragma mark - PB3StoreConfByIdReq

typedef GPB_ENUM(PB3StoreConfByIdReq_FieldNumber) {
  PB3StoreConfByIdReq_FieldNumber_Id_p = 1,
};

/**
 * 根据商城id获取商城配置
 **/
@interface PB3StoreConfByIdReq : GPBMessage

/** 商城id */
@property(nonatomic, readwrite) int32_t id_p;

@end

#pragma mark - PB3StoreConfByIdRes

typedef GPB_ENUM(PB3StoreConfByIdRes_FieldNumber) {
  PB3StoreConfByIdRes_FieldNumber_Store = 1,
};

@interface PB3StoreConfByIdRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3Store *store;
/** Test to see if @c store has been set. */
@property(nonatomic, readwrite) BOOL hasStore;

@end

#pragma mark - PB3GetExchangeConfReq

typedef GPB_ENUM(PB3GetExchangeConfReq_FieldNumber) {
  PB3GetExchangeConfReq_FieldNumber_PlayerId = 1,
  PB3GetExchangeConfReq_FieldNumber_RelActIdsArray = 2,
};

/**
 * 获取兑换配置
 **/
@interface PB3GetExchangeConfReq : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

/** 筛选的子活动列表 （[]空数组表示返回所有） */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *relActIdsArray;
/** The number of items in @c relActIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger relActIdsArray_Count;

@end

#pragma mark - PB3GetExchangeConfRes

typedef GPB_ENUM(PB3GetExchangeConfRes_FieldNumber) {
  PB3GetExchangeConfRes_FieldNumber_StoreArray = 1,
};

@interface PB3GetExchangeConfRes : GPBMessage

/** 兑换配置 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3Exchange*> *storeArray;
/** The number of items in @c storeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger storeArray_Count;

@end

#pragma mark - PB3ListBuyRecordReq

typedef GPB_ENUM(PB3ListBuyRecordReq_FieldNumber) {
  PB3ListBuyRecordReq_FieldNumber_IdArray = 1,
  PB3ListBuyRecordReq_FieldNumber_BuyType = 2,
};

/**
 * 获取购买记录列表
 **/
@interface PB3ListBuyRecordReq : GPBMessage

/** 兑换的配置id 如[1, 2, 3] */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *idArray;
/** The number of items in @c idArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger idArray_Count;

/** 0-购买 1-兑换 */
@property(nonatomic, readwrite) int32_t buyType;

@end

#pragma mark - PB3ListBuyRecordRes

typedef GPB_ENUM(PB3ListBuyRecordRes_FieldNumber) {
  PB3ListBuyRecordRes_FieldNumber_ListArray = 1,
};

@interface PB3ListBuyRecordRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3BuyRecord*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3ExchangeRecordReq

typedef GPB_ENUM(PB3ExchangeRecordReq_FieldNumber) {
  PB3ExchangeRecordReq_FieldNumber_StartTime = 1,
  PB3ExchangeRecordReq_FieldNumber_EndTime = 2,
  PB3ExchangeRecordReq_FieldNumber_Flag = 3,
  PB3ExchangeRecordReq_FieldNumber_Page = 4,
  PB3ExchangeRecordReq_FieldNumber_PageSize = 5,
  PB3ExchangeRecordReq_FieldNumber_PlayerId = 6,
  PB3ExchangeRecordReq_FieldNumber_All = 7,
  PB3ExchangeRecordReq_FieldNumber_RelActId = 8,
};

/**
 * 兑换记录
 **/
@interface PB3ExchangeRecordReq : GPBMessage

/** 开始时间 */
@property(nonatomic, readwrite) int64_t startTime;

/** 结束时间 */
@property(nonatomic, readwrite) int64_t endTime;

/** 这是后台兑换物品配置的标识符 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *flag;

/** 第几页 */
@property(nonatomic, readwrite) int32_t page;

/** 每页数量 */
@property(nonatomic, readwrite) int64_t pageSize;

/** 指定用户 如果为0，则获取自己id */
@property(nonatomic, readwrite) int64_t playerId;

/** 是否获取所有人的记录 */
@property(nonatomic, readwrite) BOOL all;

/** 默认为0（表示不以子活动来筛选） */
@property(nonatomic, readwrite) int32_t relActId;

@end

#pragma mark - PB3ExchangeRecordRes

typedef GPB_ENUM(PB3ExchangeRecordRes_FieldNumber) {
  PB3ExchangeRecordRes_FieldNumber_ListArray = 1,
};

@interface PB3ExchangeRecordRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3LogExchange*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3RewardBuyReq

typedef GPB_ENUM(PB3RewardBuyReq_FieldNumber) {
  PB3RewardBuyReq_FieldNumber_RewardFlag = 1,
};

/**
 * 领取礼物
 **/
@interface PB3RewardBuyReq : GPBMessage

/** 领取标识 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *rewardFlag;

@end

#pragma mark - PB3RewardBuyRes

typedef GPB_ENUM(PB3RewardBuyRes_FieldNumber) {
  PB3RewardBuyRes_FieldNumber_Reward = 1,
};

@interface PB3RewardBuyRes : GPBMessage

/** 奖励 二维数据的字符串格式 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *reward;

@end

#pragma mark - PB3PlayerAddrReq

typedef GPB_ENUM(PB3PlayerAddrReq_FieldNumber) {
  PB3PlayerAddrReq_FieldNumber_PlayerId = 1,
  PB3PlayerAddrReq_FieldNumber_PlayerAddr = 2,
};

/**
 * 更新、新增兑换地址
 **/
@interface PB3PlayerAddrReq : GPBMessage

/** 用户id */
@property(nonatomic, readwrite) int32_t playerId;

/** 更新数据 */
@property(nonatomic, readwrite, strong, null_resettable) PB3PlayerAddr *playerAddr;
/** Test to see if @c playerAddr has been set. */
@property(nonatomic, readwrite) BOOL hasPlayerAddr;

@end

#pragma mark - PB3PlayerAddrRes

@interface PB3PlayerAddrRes : GPBMessage

@end

#pragma mark - PB3FindPlayerAddrReq

typedef GPB_ENUM(PB3FindPlayerAddrReq_FieldNumber) {
  PB3FindPlayerAddrReq_FieldNumber_PlayerId = 1,
};

/**
 * 获取兑换地址
 **/
@interface PB3FindPlayerAddrReq : GPBMessage

/** 用户id */
@property(nonatomic, readwrite) int32_t playerId;

@end

#pragma mark - PB3FindPlayerAddrRes

typedef GPB_ENUM(PB3FindPlayerAddrRes_FieldNumber) {
  PB3FindPlayerAddrRes_FieldNumber_AddressListArray = 1,
};

@interface PB3FindPlayerAddrRes : GPBMessage

/** 用户地址列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3PlayerAddr*> *addressListArray;
/** The number of items in @c addressListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger addressListArray_Count;

@end

#pragma mark - PB3SaleGiftReq

typedef GPB_ENUM(PB3SaleGiftReq_FieldNumber) {
  PB3SaleGiftReq_FieldNumber_ExchangeId = 1,
  PB3SaleGiftReq_FieldNumber_GiftInfoListArray = 2,
  PB3SaleGiftReq_FieldNumber_Num = 3,
  PB3SaleGiftReq_FieldNumber_Remark = 4,
};

@interface PB3SaleGiftReq : GPBMessage

/** 兑换配置id */
@property(nonatomic, readwrite) int32_t exchangeId;

/** 要兑换的礼物 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SaleGiftInfo*> *giftInfoListArray;
/** The number of items in @c giftInfoListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger giftInfoListArray_Count;

/** 兑换个数 */
@property(nonatomic, readwrite) int32_t num;

/** 备注，活动兑换填子活动id 或者活动id */
@property(nonatomic, readwrite) int32_t remark;

@end

#pragma mark - PB3SaleGiftInfo

typedef GPB_ENUM(PB3SaleGiftInfo_FieldNumber) {
  PB3SaleGiftInfo_FieldNumber_GiftId = 1,
  PB3SaleGiftInfo_FieldNumber_GiftNum = 2,
  PB3SaleGiftInfo_FieldNumber_Price = 3,
};

@interface PB3SaleGiftInfo : GPBMessage

/** 要兑换的礼物id */
@property(nonatomic, readwrite) int32_t giftId;

/** 要兑换的礼物数量 */
@property(nonatomic, readwrite) int64_t giftNum;

/** 物品单价 */
@property(nonatomic, readwrite) uint32_t price;

@end

#pragma mark - PB3SaleGiftRes

typedef GPB_ENUM(PB3SaleGiftRes_FieldNumber) {
  PB3SaleGiftRes_FieldNumber_GainGiftListArray = 1,
};

@interface PB3SaleGiftRes : GPBMessage

/** 换到的物品列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SaleGiftInfo*> *gainGiftListArray;
/** The number of items in @c gainGiftListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger gainGiftListArray_Count;

@end

#pragma mark - PB3PlayerAddr

typedef GPB_ENUM(PB3PlayerAddr_FieldNumber) {
  PB3PlayerAddr_FieldNumber_Id_p = 1,
  PB3PlayerAddr_FieldNumber_Addr = 2,
  PB3PlayerAddr_FieldNumber_Name = 3,
  PB3PlayerAddr_FieldNumber_Email = 4,
};

@interface PB3PlayerAddr : GPBMessage

@property(nonatomic, readwrite) int32_t id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *addr;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *email;

@end

#pragma mark - PB3StoreClassifyConf

typedef GPB_ENUM(PB3StoreClassifyConf_FieldNumber) {
  PB3StoreClassifyConf_FieldNumber_SuperClassify = 1,
  PB3StoreClassifyConf_FieldNumber_SubClassifyArray = 2,
};

@interface PB3StoreClassifyConf : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PB3StoreClassify *superClassify;
/** Test to see if @c superClassify has been set. */
@property(nonatomic, readwrite) BOOL hasSuperClassify;

/** 可能为空，为空则没有子级 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3StoreClassify*> *subClassifyArray;
/** The number of items in @c subClassifyArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger subClassifyArray_Count;

@end

#pragma mark - PB3StoreClassify

typedef GPB_ENUM(PB3StoreClassify_FieldNumber) {
  PB3StoreClassify_FieldNumber_Id_p = 1,
  PB3StoreClassify_FieldNumber_SuperId = 2,
  PB3StoreClassify_FieldNumber_Name = 3,
  PB3StoreClassify_FieldNumber_Sort = 4,
  PB3StoreClassify_FieldNumber_IsShow = 5,
  PB3StoreClassify_FieldNumber_IsDefault = 6,
  PB3StoreClassify_FieldNumber_HaveRed = 7,
  PB3StoreClassify_FieldNumber_Style = 8,
  PB3StoreClassify_FieldNumber_EffectType = 9,
};

@interface PB3StoreClassify : GPBMessage

/** 类别id */
@property(nonatomic, readwrite) int32_t id_p;

/** 父类id，是不是属于某个父类下的，0则不是 */
@property(nonatomic, readwrite) int32_t superId;

/** 类别名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 权重 */
@property(nonatomic, readwrite) int32_t sort;

/** 是否显示 */
@property(nonatomic, readwrite) BOOL isShow;

/** 是否默认显示的分类 */
@property(nonatomic, readwrite) BOOL isDefault;

/** 第一次打开前是否有红点 */
@property(nonatomic, readwrite) BOOL haveRed;

/** 样式 */
@property(nonatomic, readwrite) PB3StoreStyle style;

/** 特效类型 */
@property(nonatomic, readwrite) int32_t effectType;

@end

/**
 * Fetches the raw value of a @c PB3StoreClassify's @c style property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3StoreClassify_Style_RawValue(PB3StoreClassify *message);
/**
 * Sets the raw value of an @c PB3StoreClassify's @c style property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3StoreClassify_Style_RawValue(PB3StoreClassify *message, int32_t value);

#pragma mark - PB3StoreClassifyConfReq

typedef GPB_ENUM(PB3StoreClassifyConfReq_FieldNumber) {
  PB3StoreClassifyConfReq_FieldNumber_TabType = 1,
};

/**
 * 获取商城分类栏配置
 **/
@interface PB3StoreClassifyConfReq : GPBMessage

/** 一级分栏类型 */
@property(nonatomic, readwrite) PB3ClassifyTabType tabType;

@end

/**
 * Fetches the raw value of a @c PB3StoreClassifyConfReq's @c tabType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3StoreClassifyConfReq_TabType_RawValue(PB3StoreClassifyConfReq *message);
/**
 * Sets the raw value of an @c PB3StoreClassifyConfReq's @c tabType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3StoreClassifyConfReq_TabType_RawValue(PB3StoreClassifyConfReq *message, int32_t value);

#pragma mark - PB3StoreClassifyConfRes

typedef GPB_ENUM(PB3StoreClassifyConfRes_FieldNumber) {
  PB3StoreClassifyConfRes_FieldNumber_ClassifyArray = 1,
  PB3StoreClassifyConfRes_FieldNumber_TabType = 2,
};

@interface PB3StoreClassifyConfRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3StoreClassifyConf*> *classifyArray;
/** The number of items in @c classifyArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger classifyArray_Count;

/** 一级分栏类型 */
@property(nonatomic, readwrite) PB3ClassifyTabType tabType;

@end

/**
 * Fetches the raw value of a @c PB3StoreClassifyConfRes's @c tabType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3StoreClassifyConfRes_TabType_RawValue(PB3StoreClassifyConfRes *message);
/**
 * Sets the raw value of an @c PB3StoreClassifyConfRes's @c tabType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3StoreClassifyConfRes_TabType_RawValue(PB3StoreClassifyConfRes *message, int32_t value);

#pragma mark - PB3ClassifyTabInfo

typedef GPB_ENUM(PB3ClassifyTabInfo_FieldNumber) {
  PB3ClassifyTabInfo_FieldNumber_TabType = 1,
  PB3ClassifyTabInfo_FieldNumber_TabName = 2,
};

@interface PB3ClassifyTabInfo : GPBMessage

/** 一级分栏类型 */
@property(nonatomic, readwrite) PB3ClassifyTabType tabType;

/** 一级分栏类型名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tabName;

@end

/**
 * Fetches the raw value of a @c PB3ClassifyTabInfo's @c tabType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3ClassifyTabInfo_TabType_RawValue(PB3ClassifyTabInfo *message);
/**
 * Sets the raw value of an @c PB3ClassifyTabInfo's @c tabType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3ClassifyTabInfo_TabType_RawValue(PB3ClassifyTabInfo *message, int32_t value);

#pragma mark - PB3ListClassifyTabConfReq

/**
 * 获取商城分类tab
 **/
@interface PB3ListClassifyTabConfReq : GPBMessage

@end

#pragma mark - PB3ListClassifyTabConfRes

typedef GPB_ENUM(PB3ListClassifyTabConfRes_FieldNumber) {
  PB3ListClassifyTabConfRes_FieldNumber_TabInfoArray = 1,
};

/**
 * 获取商城分类tab
 **/
@interface PB3ListClassifyTabConfRes : GPBMessage

/** tab类型 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3ClassifyTabInfo*> *tabInfoArray;
/** The number of items in @c tabInfoArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger tabInfoArray_Count;

@end

#pragma mark - PB3LogPointExchangeReq

/**
 * 获取积分商城兑换记录
 **/
@interface PB3LogPointExchangeReq : GPBMessage

@end

#pragma mark - PB3LogPointExchangeRes

typedef GPB_ENUM(PB3LogPointExchangeRes_FieldNumber) {
  PB3LogPointExchangeRes_FieldNumber_LogPointArray = 1,
};

@interface PB3LogPointExchangeRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3LogPointExchange*> *logPointArray;
/** The number of items in @c logPointArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger logPointArray_Count;

@end

#pragma mark - PB3LogPointExchange

typedef GPB_ENUM(PB3LogPointExchange_FieldNumber) {
  PB3LogPointExchange_FieldNumber_ExchangeId = 1,
  PB3LogPointExchange_FieldNumber_ExchangeName = 2,
  PB3LogPointExchange_FieldNumber_ExchangeNum = 3,
  PB3LogPointExchange_FieldNumber_CostPoint = 4,
  PB3LogPointExchange_FieldNumber_CreateAt = 5,
};

/**
 * 积分商城兑换记录
 **/
@interface PB3LogPointExchange : GPBMessage

/** 兑换的商品id */
@property(nonatomic, readwrite) int32_t exchangeId;

/** 兑换的商品名字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *exchangeName;

/** 兑换数量 */
@property(nonatomic, readwrite) int32_t exchangeNum;

/** 消耗积分 */
@property(nonatomic, readwrite) int64_t costPoint;

/** 时间 */
@property(nonatomic, readwrite) int64_t createAt;

@end

#pragma mark - PB3PointStoreLimit

typedef GPB_ENUM(PB3PointStoreLimit_FieldNumber) {
  PB3PointStoreLimit_FieldNumber_Id_p = 1,
  PB3PointStoreLimit_FieldNumber_UseNum = 2,
};

/**
 * 积分商城限购数量变化推送 301003
 **/
@interface PB3PointStoreLimit : GPBMessage

/** 商品id */
@property(nonatomic, readwrite) int32_t id_p;

/** 目前已被使用的数量 */
@property(nonatomic, readwrite) int32_t useNum;

@end

#pragma mark - PB3StoreCfgReq

typedef GPB_ENUM(PB3StoreCfgReq_FieldNumber) {
  PB3StoreCfgReq_FieldNumber_IsHtml = 1,
  PB3StoreCfgReq_FieldNumber_PlayerId = 2,
};

@interface PB3StoreCfgReq : GPBMessage

/** 判断是否h5请求 如果是则不判断版本 */
@property(nonatomic, readwrite) BOOL isHtml;

/** 人员id */
@property(nonatomic, readwrite) int64_t playerId;

@end

#pragma mark - PB3StoreCfgRes

typedef GPB_ENUM(PB3StoreCfgRes_FieldNumber) {
  PB3StoreCfgRes_FieldNumber_StoreArray = 1,
};

@interface PB3StoreCfgRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3Store*> *storeArray;
/** The number of items in @c storeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger storeArray_Count;

@end

#pragma mark - PB3BlackWhaleStoreReq

/**
 * 黑鲸商城
 **/
@interface PB3BlackWhaleStoreReq : GPBMessage

@end

#pragma mark - PB3BlackWhaleStoreRes

typedef GPB_ENUM(PB3BlackWhaleStoreRes_FieldNumber) {
  PB3BlackWhaleStoreRes_FieldNumber_IsVip = 1,
  PB3BlackWhaleStoreRes_FieldNumber_Score = 2,
  PB3BlackWhaleStoreRes_FieldNumber_ModuleArray = 3,
};

@interface PB3BlackWhaleStoreRes : GPBMessage

/** 是否为黑鲸VIP */
@property(nonatomic, readwrite) BOOL isVip;

/** 积分 */
@property(nonatomic, readwrite) int64_t score;

/** 模块列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3BlackWhaleModule*> *moduleArray;
/** The number of items in @c moduleArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger moduleArray_Count;

@end

#pragma mark - PB3BlackWhaleModule

typedef GPB_ENUM(PB3BlackWhaleModule_FieldNumber) {
  PB3BlackWhaleModule_FieldNumber_Name = 1,
  PB3BlackWhaleModule_FieldNumber_Style = 2,
  PB3BlackWhaleModule_FieldNumber_ItemsArray = 3,
};

/**
 * 黑鲸商城兑换模块
 **/
@interface PB3BlackWhaleModule : GPBMessage

/** 模块名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 样式 */
@property(nonatomic, readwrite) enum PB3BlackWhaleModuleStyle style;

/** 兑换物品列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3BlackWhaleStoreItem*> *itemsArray;
/** The number of items in @c itemsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger itemsArray_Count;

@end

/**
 * Fetches the raw value of a @c PB3BlackWhaleModule's @c style property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BlackWhaleModule_Style_RawValue(PB3BlackWhaleModule *message);
/**
 * Sets the raw value of an @c PB3BlackWhaleModule's @c style property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BlackWhaleModule_Style_RawValue(PB3BlackWhaleModule *message, int32_t value);

#pragma mark - PB3BlackWhaleStoreItem

typedef GPB_ENUM(PB3BlackWhaleStoreItem_FieldNumber) {
  PB3BlackWhaleStoreItem_FieldNumber_Id_p = 1,
  PB3BlackWhaleStoreItem_FieldNumber_ItemType = 2,
  PB3BlackWhaleStoreItem_FieldNumber_ItemId = 3,
  PB3BlackWhaleStoreItem_FieldNumber_Desc = 4,
  PB3BlackWhaleStoreItem_FieldNumber_Content = 5,
  PB3BlackWhaleStoreItem_FieldNumber_LimitType = 6,
  PB3BlackWhaleStoreItem_FieldNumber_LimitNum = 7,
  PB3BlackWhaleStoreItem_FieldNumber_Num = 8,
  PB3BlackWhaleStoreItem_FieldNumber_ExchangeScore = 9,
  PB3BlackWhaleStoreItem_FieldNumber_ExchangeNum = 10,
  PB3BlackWhaleStoreItem_FieldNumber_ExpCard = 11,
  PB3BlackWhaleStoreItem_FieldNumber_Gift = 12,
  PB3BlackWhaleStoreItem_FieldNumber_Effect = 13,
};

typedef GPB_ENUM(PB3BlackWhaleStoreItem_Data_OneOfCase) {
  PB3BlackWhaleStoreItem_Data_OneOfCase_GPBUnsetOneOfCase = 0,
  PB3BlackWhaleStoreItem_Data_OneOfCase_ExpCard = 11,
  PB3BlackWhaleStoreItem_Data_OneOfCase_Gift = 12,
  PB3BlackWhaleStoreItem_Data_OneOfCase_Effect = 13,
};

/**
 * 黑鲸商城兑换物品
 **/
@interface PB3BlackWhaleStoreItem : GPBMessage

/** 唯一ID */
@property(nonatomic, readwrite) int64_t id_p;

/** 物品类型 */
@property(nonatomic, readwrite) enum PB3BlackWhaleItemType itemType;

/** 物品ID */
@property(nonatomic, readwrite) int64_t itemId;

/** 简介 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *desc;

/** 详情介绍 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

/** 限制类型 */
@property(nonatomic, readwrite) enum PB3BlackWhaleLimitType limitType;

/** 限制兑换次数 */
@property(nonatomic, readwrite) int32_t limitNum;

/** 已兑换次数 */
@property(nonatomic, readwrite) int32_t num;

/** 兑换分数 */
@property(nonatomic, readwrite) int32_t exchangeScore;

/** 单次兑换个数 */
@property(nonatomic, readwrite) int32_t exchangeNum;

@property(nonatomic, readonly) PB3BlackWhaleStoreItem_Data_OneOfCase dataOneOfCase;

/** 经验卡 */
@property(nonatomic, readwrite, strong, null_resettable) PB3BlackWhaleExpCard *expCard;

/** 礼物 */
@property(nonatomic, readwrite, strong, null_resettable) PB3BlackWhaleGift *gift;

/** 特效 */
@property(nonatomic, readwrite, strong, null_resettable) PB3BlackWhaleEffect *effect;

@end

/**
 * Fetches the raw value of a @c PB3BlackWhaleStoreItem's @c itemType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BlackWhaleStoreItem_ItemType_RawValue(PB3BlackWhaleStoreItem *message);
/**
 * Sets the raw value of an @c PB3BlackWhaleStoreItem's @c itemType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BlackWhaleStoreItem_ItemType_RawValue(PB3BlackWhaleStoreItem *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3BlackWhaleStoreItem's @c limitType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BlackWhaleStoreItem_LimitType_RawValue(PB3BlackWhaleStoreItem *message);
/**
 * Sets the raw value of an @c PB3BlackWhaleStoreItem's @c limitType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BlackWhaleStoreItem_LimitType_RawValue(PB3BlackWhaleStoreItem *message, int32_t value);

/**
 * Clears whatever value was set for the oneof 'data'.
 **/
void PB3BlackWhaleStoreItem_ClearDataOneOfCase(PB3BlackWhaleStoreItem *message);

#pragma mark - PB3BlackWhaleExpCard

typedef GPB_ENUM(PB3BlackWhaleExpCard_FieldNumber) {
  PB3BlackWhaleExpCard_FieldNumber_SmallIcon = 1,
  PB3BlackWhaleExpCard_FieldNumber_BigIcon = 2,
  PB3BlackWhaleExpCard_FieldNumber_Name = 3,
  PB3BlackWhaleExpCard_FieldNumber_MinLevel = 4,
  PB3BlackWhaleExpCard_FieldNumber_MaxLevel = 5,
};

/**
 * 兑换经验清除卡片
 **/
@interface PB3BlackWhaleExpCard : GPBMessage

/** 小图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *smallIcon;

/** 大图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bigIcon;

/** 经验卡名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 最低等级 */
@property(nonatomic, readwrite) int32_t minLevel;

/** 最高等级 */
@property(nonatomic, readwrite) int32_t maxLevel;

@end

#pragma mark - PB3BlackWhaleGift

/**
 * 兑换礼物
 **/
@interface PB3BlackWhaleGift : GPBMessage

@end

#pragma mark - PB3BlackWhaleEffect

typedef GPB_ENUM(PB3BlackWhaleEffect_FieldNumber) {
  PB3BlackWhaleEffect_FieldNumber_ValidityTime = 1,
  PB3BlackWhaleEffect_FieldNumber_AddType = 2,
};

/**
 * 兑换特效
 **/
@interface PB3BlackWhaleEffect : GPBMessage

/** 有效期，-1表示永久 */
@property(nonatomic, readwrite) int64_t validityTime;

/** 添加类型 0:指定时间延长,1:覆盖,2:叠加,3:永不过期,4:计数覆盖 */
@property(nonatomic, readwrite) int64_t addType;

@end

#pragma mark - PB3BlackWhaleScoreReq

typedef GPB_ENUM(PB3BlackWhaleScoreReq_FieldNumber) {
  PB3BlackWhaleScoreReq_FieldNumber_StartTime = 1,
  PB3BlackWhaleScoreReq_FieldNumber_EndTime = 2,
  PB3BlackWhaleScoreReq_FieldNumber_Page = 3,
  PB3BlackWhaleScoreReq_FieldNumber_PageSize = 4,
};

/**
 * 黑鲸商城积分明细
 **/
@interface PB3BlackWhaleScoreReq : GPBMessage

/** 查询的开始时间 */
@property(nonatomic, readwrite) int64_t startTime;

/** 查询的结束时间 */
@property(nonatomic, readwrite) int64_t endTime;

/** 页码 */
@property(nonatomic, readwrite) int32_t page;

/** 页数 */
@property(nonatomic, readwrite) int32_t pageSize;

@end

#pragma mark - PB3BlackWhaleScoreRes

typedef GPB_ENUM(PB3BlackWhaleScoreRes_FieldNumber) {
  PB3BlackWhaleScoreRes_FieldNumber_ListArray = 1,
  PB3BlackWhaleScoreRes_FieldNumber_Total = 2,
};

@interface PB3BlackWhaleScoreRes : GPBMessage

/** 积分明细 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3BlackWhaleScoreLog*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

/** page为1时才返回total */
@property(nonatomic, readwrite) int32_t total;

@end

#pragma mark - PB3BlackWhaleScoreLog

typedef GPB_ENUM(PB3BlackWhaleScoreLog_FieldNumber) {
  PB3BlackWhaleScoreLog_FieldNumber_Remark = 1,
  PB3BlackWhaleScoreLog_FieldNumber_ChangeScore = 2,
  PB3BlackWhaleScoreLog_FieldNumber_Score = 3,
  PB3BlackWhaleScoreLog_FieldNumber_CreateAt = 4,
};

/**
 * 黑鲸积分流水
 **/
@interface PB3BlackWhaleScoreLog : GPBMessage

/** 积分说明 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *remark;

/** 变更的分数 */
@property(nonatomic, readwrite) int64_t changeScore;

/** 最终分数 */
@property(nonatomic, readwrite) int64_t score;

/** 时间 */
@property(nonatomic, readwrite) int64_t createAt;

@end

#pragma mark - PB3BlackWhaleScoreLogDetail

typedef GPB_ENUM(PB3BlackWhaleScoreLogDetail_FieldNumber) {
  PB3BlackWhaleScoreLogDetail_FieldNumber_PlayerId = 1,
  PB3BlackWhaleScoreLogDetail_FieldNumber_Log = 2,
  PB3BlackWhaleScoreLogDetail_FieldNumber_Name = 3,
};

/**
 * 黑鲸积分流水(后台)
 **/
@interface PB3BlackWhaleScoreLogDetail : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

@property(nonatomic, readwrite, strong, null_resettable) PB3BlackWhaleScoreLog *log;
/** Test to see if @c log has been set. */
@property(nonatomic, readwrite) BOOL hasLog;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@end

#pragma mark - PB3BlackWhaleExchangeRecordReq

typedef GPB_ENUM(PB3BlackWhaleExchangeRecordReq_FieldNumber) {
  PB3BlackWhaleExchangeRecordReq_FieldNumber_StartTime = 1,
  PB3BlackWhaleExchangeRecordReq_FieldNumber_EndTime = 2,
  PB3BlackWhaleExchangeRecordReq_FieldNumber_Page = 3,
  PB3BlackWhaleExchangeRecordReq_FieldNumber_PageSize = 4,
};

/**
 * 黑鲸商城兑换记录
 **/
@interface PB3BlackWhaleExchangeRecordReq : GPBMessage

/** 查询的开始时间 */
@property(nonatomic, readwrite) int64_t startTime;

/** 查询的结束时间 */
@property(nonatomic, readwrite) int64_t endTime;

/** 页码 */
@property(nonatomic, readwrite) int32_t page;

/** 页数 */
@property(nonatomic, readwrite) int32_t pageSize;

@end

#pragma mark - PB3BlackWhaleExchangeRecordRes

typedef GPB_ENUM(PB3BlackWhaleExchangeRecordRes_FieldNumber) {
  PB3BlackWhaleExchangeRecordRes_FieldNumber_ListArray = 1,
  PB3BlackWhaleExchangeRecordRes_FieldNumber_Total = 2,
};

@interface PB3BlackWhaleExchangeRecordRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3BlackWhaleExchangeLog*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

/** page为1时才返回total */
@property(nonatomic, readwrite) int32_t total;

@end

#pragma mark - PB3BlackWhaleExchangeLog

typedef GPB_ENUM(PB3BlackWhaleExchangeLog_FieldNumber) {
  PB3BlackWhaleExchangeLog_FieldNumber_ItemName = 1,
  PB3BlackWhaleExchangeLog_FieldNumber_ExchangeScore = 2,
  PB3BlackWhaleExchangeLog_FieldNumber_ExchangeNum = 3,
  PB3BlackWhaleExchangeLog_FieldNumber_Icon = 4,
  PB3BlackWhaleExchangeLog_FieldNumber_CreateAt = 5,
  PB3BlackWhaleExchangeLog_FieldNumber_TargetId = 6,
  PB3BlackWhaleExchangeLog_FieldNumber_ItemType = 7,
};

/**
 * 黑鲸积分兑换记录
 **/
@interface PB3BlackWhaleExchangeLog : GPBMessage

/** 兑换的物品名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *itemName;

/** 兑换分数 */
@property(nonatomic, readwrite) int64_t exchangeScore;

/** 兑换数量 */
@property(nonatomic, readwrite) int32_t exchangeNum;

/** 物品图标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 时间 */
@property(nonatomic, readwrite) int64_t createAt;

/** 目标ID */
@property(nonatomic, readwrite) int64_t targetId;

/** 物品类型 */
@property(nonatomic, readwrite) enum PB3BlackWhaleItemType itemType;

@end

/**
 * Fetches the raw value of a @c PB3BlackWhaleExchangeLog's @c itemType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BlackWhaleExchangeLog_ItemType_RawValue(PB3BlackWhaleExchangeLog *message);
/**
 * Sets the raw value of an @c PB3BlackWhaleExchangeLog's @c itemType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BlackWhaleExchangeLog_ItemType_RawValue(PB3BlackWhaleExchangeLog *message, int32_t value);

#pragma mark - PB3BlackWhaleExchangeLogDetail

typedef GPB_ENUM(PB3BlackWhaleExchangeLogDetail_FieldNumber) {
  PB3BlackWhaleExchangeLogDetail_FieldNumber_PlayerId = 1,
  PB3BlackWhaleExchangeLogDetail_FieldNumber_ItemId = 2,
  PB3BlackWhaleExchangeLogDetail_FieldNumber_Log = 3,
  PB3BlackWhaleExchangeLogDetail_FieldNumber_Name = 4,
};

/**
 * 黑鲸积分兑换记录 (后台)
 **/
@interface PB3BlackWhaleExchangeLogDetail : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

/** 物品ID */
@property(nonatomic, readwrite) int64_t itemId;

@property(nonatomic, readwrite, strong, null_resettable) PB3BlackWhaleExchangeLog *log;
/** Test to see if @c log has been set. */
@property(nonatomic, readwrite) BOOL hasLog;

/** 昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@end

#pragma mark - PB3BlackWhaleExchangerLogAdminReq

typedef GPB_ENUM(PB3BlackWhaleExchangerLogAdminReq_FieldNumber) {
  PB3BlackWhaleExchangerLogAdminReq_FieldNumber_PlayerId = 1,
  PB3BlackWhaleExchangerLogAdminReq_FieldNumber_Filter = 2,
};

/**
 * 后台使用 黑鲸商城兑换记录
 **/
@interface PB3BlackWhaleExchangerLogAdminReq : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

@property(nonatomic, readwrite, strong, null_resettable) PB3BlackWhaleExchangeRecordReq *filter;
/** Test to see if @c filter has been set. */
@property(nonatomic, readwrite) BOOL hasFilter;

@end

#pragma mark - PB3BlackWhaleExchangerLogAdmin

typedef GPB_ENUM(PB3BlackWhaleExchangerLogAdmin_FieldNumber) {
  PB3BlackWhaleExchangerLogAdmin_FieldNumber_LogArray = 1,
  PB3BlackWhaleExchangerLogAdmin_FieldNumber_Total = 2,
};

/**
 * 后台使用 黑鲸积分兑换记录
 **/
@interface PB3BlackWhaleExchangerLogAdmin : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3BlackWhaleExchangeLogDetail*> *logArray;
/** The number of items in @c logArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger logArray_Count;

@property(nonatomic, readwrite) int32_t total;

@end

#pragma mark - PB3BlackWhaleScoreLogAdmin

typedef GPB_ENUM(PB3BlackWhaleScoreLogAdmin_FieldNumber) {
  PB3BlackWhaleScoreLogAdmin_FieldNumber_LogArray = 1,
  PB3BlackWhaleScoreLogAdmin_FieldNumber_Total = 2,
};

/**
 * 后台使用 黑鲸积分明细
 **/
@interface PB3BlackWhaleScoreLogAdmin : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3BlackWhaleScoreLogDetail*> *logArray;
/** The number of items in @c logArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger logArray_Count;

@property(nonatomic, readwrite) int32_t total;

@end

#pragma mark - PB3BlackWhaleExchangeReq

typedef GPB_ENUM(PB3BlackWhaleExchangeReq_FieldNumber) {
  PB3BlackWhaleExchangeReq_FieldNumber_Id_p = 1,
  PB3BlackWhaleExchangeReq_FieldNumber_PlayerId = 2,
};

/**
 * 兑换物品
 **/
@interface PB3BlackWhaleExchangeReq : GPBMessage

/** 唯一ID */
@property(nonatomic, readwrite) int64_t id_p;

/** 需要清除经验的用户ID */
@property(nonatomic, readwrite) int64_t playerId;

@end

#pragma mark - PB3BlackWhaleExchangeRes

@interface PB3BlackWhaleExchangeRes : GPBMessage

@end

#pragma mark - PB3PointsMallReq

@interface PB3PointsMallReq : GPBMessage

@end

#pragma mark - PB3PointsMallRes

typedef GPB_ENUM(PB3PointsMallRes_FieldNumber) {
  PB3PointsMallRes_FieldNumber_GoodsArray = 1,
};

@interface PB3PointsMallRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3PointsMallGoods*> *goodsArray;
/** The number of items in @c goodsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger goodsArray_Count;

@end

#pragma mark - PB3PointsMallGoods

typedef GPB_ENUM(PB3PointsMallGoods_FieldNumber) {
  PB3PointsMallGoods_FieldNumber_Id_p = 1,
  PB3PointsMallGoods_FieldNumber_Type = 2,
  PB3PointsMallGoods_FieldNumber_Name = 3,
  PB3PointsMallGoods_FieldNumber_Img = 4,
  PB3PointsMallGoods_FieldNumber_PointNum = 5,
  PB3PointsMallGoods_FieldNumber_ValidDay = 6,
  PB3PointsMallGoods_FieldNumber_RemainedNum = 7,
  PB3PointsMallGoods_FieldNumber_ExchangedNum = 8,
  PB3PointsMallGoods_FieldNumber_ExchangeLimit = 9,
  PB3PointsMallGoods_FieldNumber_GiftGold = 10,
};

@interface PB3PointsMallGoods : GPBMessage

/** 商品ID */
@property(nonatomic, readwrite) int64_t id_p;

/** 商品类型 */
@property(nonatomic, readwrite) PB3PointsMallGoodsType type;

/** 名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *img;

/** 兑换所需积分数 */
@property(nonatomic, readwrite) int64_t pointNum;

/** 兑换天数 */
@property(nonatomic, readwrite) int64_t validDay;

/** 剩余数量 */
@property(nonatomic, readwrite) int64_t remainedNum;

/** 已兑换数量 */
@property(nonatomic, readwrite) int64_t exchangedNum;

/** 限制兑换额度 */
@property(nonatomic, readwrite) int64_t exchangeLimit;

/** 礼物所需的金币 */
@property(nonatomic, readwrite) int64_t giftGold;

@end

/**
 * Fetches the raw value of a @c PB3PointsMallGoods's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3PointsMallGoods_Type_RawValue(PB3PointsMallGoods *message);
/**
 * Sets the raw value of an @c PB3PointsMallGoods's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3PointsMallGoods_Type_RawValue(PB3PointsMallGoods *message, int32_t value);

#pragma mark - PB3PointsMallExchangeReq

typedef GPB_ENUM(PB3PointsMallExchangeReq_FieldNumber) {
  PB3PointsMallExchangeReq_FieldNumber_GoodsId = 1,
  PB3PointsMallExchangeReq_FieldNumber_Num = 2,
};

@interface PB3PointsMallExchangeReq : GPBMessage

/** 商品ID */
@property(nonatomic, readwrite) int64_t goodsId;

/** 数量 */
@property(nonatomic, readwrite) int32_t num;

@end

#pragma mark - PB3PointsMallExchangeRes

@interface PB3PointsMallExchangeRes : GPBMessage

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
