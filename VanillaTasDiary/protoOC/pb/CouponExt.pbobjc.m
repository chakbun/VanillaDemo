// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pb/coupon.ext.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import <stdatomic.h>

#import "pb/CouponExt.pbobjc.h"
#import "pb/CommonExt.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - PB3CouponExtRoot

@implementation PB3CouponExtRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - PB3CouponExtRoot_FileDescriptor

static GPBFileDescriptor *PB3CouponExtRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"pb"
                                                 objcPrefix:@"PB3"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - Enum PB3CouponCmdId

GPBEnumDescriptor *PB3CouponCmdId_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "PushNone\000CouponListCmdId\000";
    static const int32_t values[] = {
        PB3CouponCmdId_PushNone,
        PB3CouponCmdId_CouponListCmdId,
    };
    static const char *extraTextFormatInfo = "\002\000\010\000\001\017\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3CouponCmdId)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3CouponCmdId_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3CouponCmdId_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3CouponCmdId_PushNone:
    case PB3CouponCmdId_CouponListCmdId:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PB3CouponErrCode

GPBEnumDescriptor *PB3CouponErrCode_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "CodeSuccess\000";
    static const int32_t values[] = {
        PB3CouponErrCode_CodeSuccess,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PB3CouponErrCode)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PB3CouponErrCode_IsValidValue];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PB3CouponErrCode_IsValidValue(int32_t value__) {
  switch (value__) {
    case PB3CouponErrCode_CodeSuccess:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - PB3CouponCfgUrlReq

@implementation PB3CouponCfgUrlReq

@dynamic cfgURL;

typedef struct PB3CouponCfgUrlReq__storage_ {
  uint32_t _has_storage_[1];
  NSString *cfgURL;
} PB3CouponCfgUrlReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "cfgURL",
        .dataTypeSpecific.className = NULL,
        .number = PB3CouponCfgUrlReq_FieldNumber_CfgURL,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3CouponCfgUrlReq__storage_, cfgURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3CouponCfgUrlReq class]
                                     rootClass:[PB3CouponExtRoot class]
                                          file:PB3CouponExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3CouponCfgUrlReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\003\241!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3CouponCfgUrlRes

@implementation PB3CouponCfgUrlRes

@dynamic cfgURL;

typedef struct PB3CouponCfgUrlRes__storage_ {
  uint32_t _has_storage_[1];
  NSString *cfgURL;
} PB3CouponCfgUrlRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "cfgURL",
        .dataTypeSpecific.className = NULL,
        .number = PB3CouponCfgUrlRes_FieldNumber_CfgURL,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3CouponCfgUrlRes__storage_, cfgURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3CouponCfgUrlRes class]
                                     rootClass:[PB3CouponExtRoot class]
                                          file:PB3CouponExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3CouponCfgUrlRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\003\241!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3CouponCfgReq

@implementation PB3CouponCfgReq


typedef struct PB3CouponCfgReq__storage_ {
  uint32_t _has_storage_[1];
} PB3CouponCfgReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3CouponCfgReq class]
                                     rootClass:[PB3CouponExtRoot class]
                                          file:PB3CouponExtRoot_FileDescriptor()
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(PB3CouponCfgReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3CouponCfgRes

@implementation PB3CouponCfgRes

@dynamic cfgListArray, cfgListArray_Count;

typedef struct PB3CouponCfgRes__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *cfgListArray;
} PB3CouponCfgRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "cfgListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3CouponCliCfg),
        .number = PB3CouponCfgRes_FieldNumber_CfgListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3CouponCfgRes__storage_, cfgListArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3CouponCfgRes class]
                                     rootClass:[PB3CouponExtRoot class]
                                          file:PB3CouponExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3CouponCfgRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3CouponInfo

@implementation PB3CouponInfo

@dynamic id_p;
@dynamic cfgId;
@dynamic num;
@dynamic validTime;
@dynamic invalidTime;
@dynamic isNew;

typedef struct PB3CouponInfo__storage_ {
  uint32_t _has_storage_[1];
  int32_t num;
  int64_t id_p;
  int64_t cfgId;
  int64_t validTime;
  int64_t invalidTime;
} PB3CouponInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = PB3CouponInfo_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3CouponInfo__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "cfgId",
        .dataTypeSpecific.className = NULL,
        .number = PB3CouponInfo_FieldNumber_CfgId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3CouponInfo__storage_, cfgId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "num",
        .dataTypeSpecific.className = NULL,
        .number = PB3CouponInfo_FieldNumber_Num,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3CouponInfo__storage_, num),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "validTime",
        .dataTypeSpecific.className = NULL,
        .number = PB3CouponInfo_FieldNumber_ValidTime,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3CouponInfo__storage_, validTime),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "invalidTime",
        .dataTypeSpecific.className = NULL,
        .number = PB3CouponInfo_FieldNumber_InvalidTime,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3CouponInfo__storage_, invalidTime),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "isNew",
        .dataTypeSpecific.className = NULL,
        .number = PB3CouponInfo_FieldNumber_IsNew,
        .hasIndex = 5,
        .offset = 6,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3CouponInfo class]
                                     rootClass:[PB3CouponExtRoot class]
                                          file:PB3CouponExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3CouponInfo__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3CouponBagReq

@implementation PB3CouponBagReq

@dynamic isRead;

typedef struct PB3CouponBagReq__storage_ {
  uint32_t _has_storage_[1];
} PB3CouponBagReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "isRead",
        .dataTypeSpecific.className = NULL,
        .number = PB3CouponBagReq_FieldNumber_IsRead,
        .hasIndex = 0,
        .offset = 1,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3CouponBagReq class]
                                     rootClass:[PB3CouponExtRoot class]
                                          file:PB3CouponExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3CouponBagReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3CouponBagRes

@implementation PB3CouponBagRes

@dynamic couponListArray, couponListArray_Count;

typedef struct PB3CouponBagRes__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *couponListArray;
} PB3CouponBagRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "couponListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3CouponInfo),
        .number = PB3CouponBagRes_FieldNumber_CouponListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3CouponBagRes__storage_, couponListArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3CouponBagRes class]
                                     rootClass:[PB3CouponExtRoot class]
                                          file:PB3CouponExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3CouponBagRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3PushCouponList

@implementation PB3PushCouponList

@dynamic couponListArray, couponListArray_Count;

typedef struct PB3PushCouponList__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *couponListArray;
} PB3PushCouponList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "couponListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3CouponInfo),
        .number = PB3PushCouponList_FieldNumber_CouponListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3PushCouponList__storage_, couponListArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3PushCouponList class]
                                     rootClass:[PB3CouponExtRoot class]
                                          file:PB3CouponExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3PushCouponList__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3CouponBaseCfg

@implementation PB3CouponBaseCfg

@dynamic id_p;
@dynamic name;
@dynamic discountType;
@dynamic fullMoney;
@dynamic subMoney;
@dynamic discount;
@dynamic jumpType;
@dynamic jumpURL;
@dynamic usageRemark;
@dynamic sort;
@dynamic discountUnit;

typedef struct PB3CouponBaseCfg__storage_ {
  uint32_t _has_storage_[1];
  PB3CouponDiscountType discountType;
  int32_t fullMoney;
  int32_t subMoney;
  int32_t discount;
  PB3CouponJumpType jumpType;
  int32_t sort;
  NSString *name;
  NSString *jumpURL;
  NSString *usageRemark;
  NSString *discountUnit;
  int64_t id_p;
} PB3CouponBaseCfg__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = PB3CouponBaseCfg_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3CouponBaseCfg__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = PB3CouponBaseCfg_FieldNumber_Name,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3CouponBaseCfg__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "discountType",
        .dataTypeSpecific.enumDescFunc = PB3CouponDiscountType_EnumDescriptor,
        .number = PB3CouponBaseCfg_FieldNumber_DiscountType,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3CouponBaseCfg__storage_, discountType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "fullMoney",
        .dataTypeSpecific.className = NULL,
        .number = PB3CouponBaseCfg_FieldNumber_FullMoney,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PB3CouponBaseCfg__storage_, fullMoney),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "subMoney",
        .dataTypeSpecific.className = NULL,
        .number = PB3CouponBaseCfg_FieldNumber_SubMoney,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PB3CouponBaseCfg__storage_, subMoney),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "discount",
        .dataTypeSpecific.className = NULL,
        .number = PB3CouponBaseCfg_FieldNumber_Discount,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PB3CouponBaseCfg__storage_, discount),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "jumpType",
        .dataTypeSpecific.enumDescFunc = PB3CouponJumpType_EnumDescriptor,
        .number = PB3CouponBaseCfg_FieldNumber_JumpType,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PB3CouponBaseCfg__storage_, jumpType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "jumpURL",
        .dataTypeSpecific.className = NULL,
        .number = PB3CouponBaseCfg_FieldNumber_JumpURL,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PB3CouponBaseCfg__storage_, jumpURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "usageRemark",
        .dataTypeSpecific.className = NULL,
        .number = PB3CouponBaseCfg_FieldNumber_UsageRemark,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(PB3CouponBaseCfg__storage_, usageRemark),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sort",
        .dataTypeSpecific.className = NULL,
        .number = PB3CouponBaseCfg_FieldNumber_Sort,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(PB3CouponBaseCfg__storage_, sort),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "discountUnit",
        .dataTypeSpecific.className = NULL,
        .number = PB3CouponBaseCfg_FieldNumber_DiscountUnit,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(PB3CouponBaseCfg__storage_, discountUnit),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3CouponBaseCfg class]
                                     rootClass:[PB3CouponExtRoot class]
                                          file:PB3CouponExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3CouponBaseCfg__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\010\004\241!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3CouponBaseCfg_DiscountType_RawValue(PB3CouponBaseCfg *message) {
  GPBDescriptor *descriptor = [PB3CouponBaseCfg descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3CouponBaseCfg_FieldNumber_DiscountType];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3CouponBaseCfg_DiscountType_RawValue(PB3CouponBaseCfg *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3CouponBaseCfg descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3CouponBaseCfg_FieldNumber_DiscountType];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t PB3CouponBaseCfg_JumpType_RawValue(PB3CouponBaseCfg *message) {
  GPBDescriptor *descriptor = [PB3CouponBaseCfg descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3CouponBaseCfg_FieldNumber_JumpType];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3CouponBaseCfg_JumpType_RawValue(PB3CouponBaseCfg *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3CouponBaseCfg descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3CouponBaseCfg_FieldNumber_JumpType];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3CouponPackageInfoReq

@implementation PB3CouponPackageInfoReq


typedef struct PB3CouponPackageInfoReq__storage_ {
  uint32_t _has_storage_[1];
} PB3CouponPackageInfoReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3CouponPackageInfoReq class]
                                     rootClass:[PB3CouponExtRoot class]
                                          file:PB3CouponExtRoot_FileDescriptor()
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(PB3CouponPackageInfoReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3CouponPackageInfoRes

@implementation PB3CouponPackageInfoRes

@dynamic packageId;
@dynamic packageName;
@dynamic packageType;
@dynamic cfgListArray, cfgListArray_Count;

typedef struct PB3CouponPackageInfoRes__storage_ {
  uint32_t _has_storage_[1];
  PB3CouponPackageType packageType;
  NSString *packageName;
  NSMutableArray *cfgListArray;
  int64_t packageId;
} PB3CouponPackageInfoRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "packageId",
        .dataTypeSpecific.className = NULL,
        .number = PB3CouponPackageInfoRes_FieldNumber_PackageId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3CouponPackageInfoRes__storage_, packageId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "packageName",
        .dataTypeSpecific.className = NULL,
        .number = PB3CouponPackageInfoRes_FieldNumber_PackageName,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PB3CouponPackageInfoRes__storage_, packageName),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "packageType",
        .dataTypeSpecific.enumDescFunc = PB3CouponPackageType_EnumDescriptor,
        .number = PB3CouponPackageInfoRes_FieldNumber_PackageType,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PB3CouponPackageInfoRes__storage_, packageType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "cfgListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PB3CouponBaseCfg),
        .number = PB3CouponPackageInfoRes_FieldNumber_CfgListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3CouponPackageInfoRes__storage_, cfgListArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3CouponPackageInfoRes class]
                                     rootClass:[PB3CouponExtRoot class]
                                          file:PB3CouponExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3CouponPackageInfoRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PB3CouponPackageInfoRes_PackageType_RawValue(PB3CouponPackageInfoRes *message) {
  GPBDescriptor *descriptor = [PB3CouponPackageInfoRes descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3CouponPackageInfoRes_FieldNumber_PackageType];
  return GPBGetMessageInt32Field(message, field);
}

void SetPB3CouponPackageInfoRes_PackageType_RawValue(PB3CouponPackageInfoRes *message, int32_t value) {
  GPBDescriptor *descriptor = [PB3CouponPackageInfoRes descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PB3CouponPackageInfoRes_FieldNumber_PackageType];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PB3GainCouponPackageReq

@implementation PB3GainCouponPackageReq

@dynamic packageId;

typedef struct PB3GainCouponPackageReq__storage_ {
  uint32_t _has_storage_[1];
  int64_t packageId;
} PB3GainCouponPackageReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "packageId",
        .dataTypeSpecific.className = NULL,
        .number = PB3GainCouponPackageReq_FieldNumber_PackageId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PB3GainCouponPackageReq__storage_, packageId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3GainCouponPackageReq class]
                                     rootClass:[PB3CouponExtRoot class]
                                          file:PB3CouponExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3GainCouponPackageReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3GainCouponPackageRes

@implementation PB3GainCouponPackageRes


typedef struct PB3GainCouponPackageRes__storage_ {
  uint32_t _has_storage_[1];
} PB3GainCouponPackageRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3GainCouponPackageRes class]
                                     rootClass:[PB3CouponExtRoot class]
                                          file:PB3CouponExtRoot_FileDescriptor()
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(PB3GainCouponPackageRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3ShowCouponReq

@implementation PB3ShowCouponReq

@dynamic idListArray, idListArray_Count;

typedef struct PB3ShowCouponReq__storage_ {
  uint32_t _has_storage_[1];
  GPBInt64Array *idListArray;
} PB3ShowCouponReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "idListArray",
        .dataTypeSpecific.className = NULL,
        .number = PB3ShowCouponReq_FieldNumber_IdListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PB3ShowCouponReq__storage_, idListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldPacked),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3ShowCouponReq class]
                                     rootClass:[PB3CouponExtRoot class]
                                          file:PB3CouponExtRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PB3ShowCouponReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PB3ShowCouponRes

@implementation PB3ShowCouponRes


typedef struct PB3ShowCouponRes__storage_ {
  uint32_t _has_storage_[1];
} PB3ShowCouponRes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PB3ShowCouponRes class]
                                     rootClass:[PB3CouponExtRoot class]
                                          file:PB3CouponExtRoot_FileDescriptor()
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(PB3ShowCouponRes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
