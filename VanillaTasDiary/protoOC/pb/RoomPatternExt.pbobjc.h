// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pb/room_pattern.ext.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class PB3AuctionDetail;
@class PB3AuctionGiftConf;
@class PB3AuctionRank;
@class PB3AuctionTarget;
@class PB3BroadcastChair;
@class PB3BroadcastChairMove;
@class PB3InPkRank;
@class PB3InPkTeam;
@class PB3MobaTeamGameInfo;
@class PB3PkPlayer;
@class PB3PkSkill;
@class PB3PkTeam;
@class PB3Seckill;
@class PB3SeckillPush;
@class PB3SimplePlayer;
@class PB3SingleLiveChairPlayer;
@class PB3SingleLiveInPkRank;
@class PB3SingleLiveInPkTeam;
@class PB3SingleLivePkPlayer;
@class PB3SingleLivePkRoomInfo;
@class PB3SingleLivePkSkill;
@class PB3SingleLivePkTeam;
@class PB3SingleLiveSeckill;
@class PB3SingleLiveSeckillPush;
@class PB3SingleLiveTaunt;
@class PB3SingleLiveTauntPush;
@class PB3SingleLiveWeekPkRank;
@class PB3Taunt;
@class PB3TauntPush;
@class PB3TeamBaseInfo;
@class PB3TeamMember;
@class PB3TeamMemberInfo;
@class PB3WeekPkRank;
GPB_ENUM_FWD_DECLARE(PB3AuctionType);
GPB_ENUM_FWD_DECLARE(PB3DeviceType);
GPB_ENUM_FWD_DECLARE(PB3PkMode);
GPB_ENUM_FWD_DECLARE(PB3PkSkillType);
GPB_ENUM_FWD_DECLARE(PB3RoomVoice);
GPB_ENUM_FWD_DECLARE(PB3SexType);
GPB_ENUM_FWD_DECLARE(PB3SingleLivePkMode);
GPB_ENUM_FWD_DECLARE(PB3SingleLivePkSkillType);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum PB3RoomPatternErr

/** 房间模式错误码 */
typedef GPB_ENUM(PB3RoomPatternErr) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3RoomPatternErr_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3RoomPatternErr_RpeSuccess = 0,

  /** 填写的信息包含敏感内容 */
  PB3RoomPatternErr_RpeErrCodeAuctionSet = 41001,

  /** 该用户涉嫌行为不当，无法参与拍卖 */
  PB3RoomPatternErr_RpeErrCodeAuctionBlacklist = 41002,

  /** 你的起拍价不能低于100金币 */
  PB3RoomPatternErr_RpeErrCodeAuctionPriceMin = 41003,

  /** 你的起拍价不能高于1000000金币 */
  PB3RoomPatternErr_RpeErrCodeAuctionPriceMax = 41004,

  /** 你账户金额余额不足，无法竞价 */
  PB3RoomPatternErr_RpeErrCodeAuctionPriceErr = 41005,

  /** 起拍价不能低于%d */
  PB3RoomPatternErr_RpeErrCodeAuctionGiftMinPrice = 41006,

  /** 该模式下卖家麦位无法解锁 */
  PB3RoomPatternErr_RpeErrCodeAuctionChairOpen = 41007,

  /** 拍卖进行中无法下麦 */
  PB3RoomPatternErr_RpeErrCodeAuctionLeaveChair = 41008,

  /** 拍卖进行中不能踢卖家下麦 */
  PB3RoomPatternErr_RpeErrCodeAuctionStart = 41009,

  /** 拍卖进行中，不可切换房间模式 */
  PB3RoomPatternErr_RpeErrCodeAuctionState = 41010,

  /** 手速太快了，歇一下 */
  PB3RoomPatternErr_RpeErrCodeAuctionBidding = 41011,

  /** 当前房间正在进行【拍卖模式】，您的版本不支持该模式，请升级~ */
  PB3RoomPatternErr_RpeErrCodeAuctionPatternUpdate = 41012,

  /** 你的出价不能比当前最高价低 */
  PB3RoomPatternErr_RpeErrCodeAuctionBiddingPrice = 41013,

  /** 你的出价不能低于起拍价 */
  PB3RoomPatternErr_RpeErrCodeAuctionBiddingMinPrice = 41014,

  /** PK嘲讽金币发生变化，请刷新技能 */
  PB3RoomPatternErr_RpeErrCodePkTauntGold = 41015,
};

GPBEnumDescriptor *PB3RoomPatternErr_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3RoomPatternErr_IsValidValue(int32_t value);

#pragma mark - Enum PB3RoomPatternCmdId

/** 房间模式cmdId定义 // 800 */
typedef GPB_ENUM(PB3RoomPatternCmdId) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3RoomPatternCmdId_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PB3RoomPatternCmdId_RpcZero = 0,

  /** 拍卖模式: 推送拍卖状态 */
  PB3RoomPatternCmdId_RpcAuctionState = 800101,

  /** 拍卖模式: 推送拍卖排名 */
  PB3RoomPatternCmdId_RpcAuctionRank = 800102,

  /** 拍卖模式: 推送拍卖结果 */
  PB3RoomPatternCmdId_RpcAuctionEnd = 800103,

  /** 拍卖模式: 拍卖礼物配置更新 */
  PB3RoomPatternCmdId_RpcAuctionGiftConf = 800104,

  /** 拍卖模式: 竞价成功后推送我的出价(解决多端登录显示不一致的问题) */
  PB3RoomPatternCmdId_RpcAuctionBiddingPrice = 800105,

  /** 拍卖模式: 礼物拍卖推送全服公屏(客户端过滤本房间)/拍卖金额超设定值，推送全服公屏(客户端过滤本房间) */
  PB3RoomPatternCmdId_RpcAuctionGift = 800106,

  /** 拍卖模式: 超Ta成功推送 */
  PB3RoomPatternCmdId_RpcAuctionBiddingSyatem = 800107,

  /** 拍卖模式: 推送普通出价或送礼竞价玩家夺得榜一/榜二/榜三 */
  PB3RoomPatternCmdId_RpcAuctionBiddingArtificial = 800108,

  /** 个播模式：推送本场个播数据 SingleLiveTimeStats */
  PB3RoomPatternCmdId_RpcSingleLiveStats = 800109,

  /** 个播模式：广播个播模式信息 SingleLiveInfo */
  PB3RoomPatternCmdId_RpcSingleLiveInfo = 800110,

  /** 开黑派单厅：推送车队基础信息 MobaTeamListRes */
  PB3RoomPatternCmdId_RpcMobaTeamBaseInfo = 800111,

  /** 开黑派单厅：推送车队成员信息 TeamMemberInfo */
  PB3RoomPatternCmdId_RpcMobaTeamMemberInfo = 800112,

  /** 开黑派单厅：广播发车信息 MobaTeamDepartureBroadcast */
  PB3RoomPatternCmdId_RpcMobaTeamDepartureBroadcast = 800113,

  /** 开黑派单厅：用户车队状态变化 MobaTeamChange */
  PB3RoomPatternCmdId_RpcMobaTeamChangeStatus = 800114,

  /** 游戏信息变化(切换个人开黑房间模式使用) MobaTeamPatternBroadcast */
  PB3RoomPatternCmdId_RpcMobaTeamPatternBroadcast = 800115,

  /** 开黑模式引导推送 MobaTeamPatternGuide */
  PB3RoomPatternCmdId_RpcMobaTeamPatternGuide = 800116,

  /** 切换个人开黑模式时是否显示游戏信息弹窗广播 MobaTeamShowGameInfoBroadcast */
  PB3RoomPatternCmdId_RpcMobaTeamShowGameInfoBroadcast = 800117,

  /** 开黑模式游戏配置变更推送 MobaTeamGameInfo */
  PB3RoomPatternCmdId_RpcMobaTeamGameInfoChange = 800118,

  /** 广播房间节目更新 RoomProgramItem */
  PB3RoomPatternCmdId_RpcProgramUpdate = 800120,

  /** 广播房间节目单项目点击通知 RoomProgramShow */
  PB3RoomPatternCmdId_RpcProgramShowNoticeUpdate = 800121,

  /** 广播房间节目单项目更新 RoomProgramShow */
  PB3RoomPatternCmdId_RpcProgramShowUpdate = 800122,

  /** 广播房间节目单项目删除 RoomProgramShow 只有id */
  PB3RoomPatternCmdId_RpcProgramShowDelete = 800123,

  /** 个播2.0表演中节目信息推送 RoomProgramOnlineInfo */
  PB3RoomPatternCmdId_RpcProgramOnlineInfo = 800124,

  /** PK:推送PK面板信息 PkInfo */
  PB3RoomPatternCmdId_PrcPkTeamInfo = 800125,

  /** PK:推送队伍信息变更 PkTeamPush */
  PB3RoomPatternCmdId_RpcPkTeamPush = 800126,

  /** PK:使用技能 PkSkillPush */
  PB3RoomPatternCmdId_RpcPkUseSkill = 800127,

  /** PK:推送宝箱 PkTreasureBox */
  PB3RoomPatternCmdId_RpcPkTreasureBox = 800128,

  /** PK 邀请推送 PkInviteInfo */
  PB3RoomPatternCmdId_RpcPkInvite = 800129,

  /** PK 匹配推送 PkMatchInfo */
  PB3RoomPatternCmdId_RpcPkMatch = 800130,

  /** PK:保护机制 PkProtectPush */
  PB3RoomPatternCmdId_RpcPkProtectPush = 800131,

  /** PK:MVP全服横幅推送 PkMvpGlobalPush */
  PB3RoomPatternCmdId_RpcPkMvpGlobalPush = 800132,

  /** PK:获得钻石推送 PkRewardTicketPush */
  PB3RoomPatternCmdId_PrcPkRewardTicketPush = 800133,

  /** PK:嘲讽公屏文案 PkTauntRoomNoticePush */
  PB3RoomPatternCmdId_RpcPkTauntRoomNotice = 800134,

  /** 个播权限变更 */
  PB3RoomPatternCmdId_PrcSingleLivePerm = 800135,

  /** PK:主持信息 PkHostInfo */
  PB3RoomPatternCmdId_RpcPkHostInfo = 800136,

  /** PK:静音类型 PkPushMuteType */
  PB3RoomPatternCmdId_RpcPkPushMuteType = 800137,

  /** PK:推送PK面板信息 SingleLivePkInfo */
  PB3RoomPatternCmdId_PrcSingleLivePkTeamInfo = 800138,

  /** PK:推送队伍信息变更 SingleLivePkTeamPush */
  PB3RoomPatternCmdId_RpcSingleLivePkTeamPush = 800139,

  /** PK:使用技能 SingleLivePkSkillPush */
  PB3RoomPatternCmdId_RpcSingleLivePkUseSkill = 800140,

  /** PK:推送宝箱 SingleLivePkTreasureBox */
  PB3RoomPatternCmdId_RpcSingleLivePkTreasureBox = 800141,

  /** PK 邀请推送 SingleLivePkInviteInfo */
  PB3RoomPatternCmdId_RpcSingleLivePkInvite = 800142,

  /** PK 匹配推送 SingleLivePkMatchInfo */
  PB3RoomPatternCmdId_RpcSingleLivePkMatch = 800143,

  /** PK:保护机制 SingleLivePkProtectPush */
  PB3RoomPatternCmdId_RpcSingleLivePkProtectPush = 800144,

  /** PK:MVP全服横幅推送 SingleLivePkMvpGlobalPush */
  PB3RoomPatternCmdId_RpcSingleLivePkMvpGlobalPush = 800145,

  /** PK:获得钻石推送 SingleLivePkRewardTicketPush */
  PB3RoomPatternCmdId_PrcSingleLivePkRewardTicketPush = 800146,

  /** PK:嘲讽公屏文案 SingleLivePkTauntRoomNoticePush */
  PB3RoomPatternCmdId_RpcSingleLivePkTauntRoomNotice = 800147,

  /** PK:静音类型 SingleLivePkPushMuteType */
  PB3RoomPatternCmdId_RpcSingleLivePkPushMuteType = 800149,

  /** PK:个播模式PK排行角标 SubInfoPkRank */
  PB3RoomPatternCmdId_RpcSingleLivePkSubRank = 800150,

  /** PK:对方房间麦位变化推送 SingleLivePkChairChange */
  PB3RoomPatternCmdId_RpcSingleLivePkChairChange = 800151,

  /** 蹦迪模式：卡座推送 */
  PB3RoomPatternCmdId_RpcCloudDiscoBoothSeat = 800152,

  /** 云蹦迪信息广播 CloudDiscoInfo */
  PB3RoomPatternCmdId_RpcCloudDiscoInfo = 800153,

  /** 云蹦迪场景广播 PushCloudDiscoSceneInfo */
  PB3RoomPatternCmdId_RpcCloudDiscoScene = 800154,

  /** 云蹦迪进房推送 PushCloudDiscoEnterRoom */
  PB3RoomPatternCmdId_RpcCloudDiscoEnterRoom = 800155,

  /** 推送云蹦迪观众席配置（进房、切房间模式，修改配置都推送）PushCloudDiscoDancerCfg */
  PB3RoomPatternCmdId_RpcCloudDiscoDancerCfg = 800156,

  /** 推送云蹦迪狂欢时刻广播通知 PushCloudDiscoRockBroadcast */
  PB3RoomPatternCmdId_RpcCloudDiscoRockBroadcast = 800157,
};

GPBEnumDescriptor *PB3RoomPatternCmdId_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3RoomPatternCmdId_IsValidValue(int32_t value);

#pragma mark - Enum PB3BiddingType

/** 竞价类型 */
typedef GPB_ENUM(PB3BiddingType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3BiddingType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3BiddingType_BtDefault = 0,

  /** 用户竞价 */
  PB3BiddingType_BtArtificial = 1,

  /** 系统竞价 */
  PB3BiddingType_BtSystem = 2,
};

GPBEnumDescriptor *PB3BiddingType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3BiddingType_IsValidValue(int32_t value);

#pragma mark - Enum PB3SurpassType

/** 秒全场类型 */
typedef GPB_ENUM(PB3SurpassType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3SurpassType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3SurpassType_SurpassZero = 0,

  /** 夺得榜首 */
  PB3SurpassType_SurpassKillNil = 1,

  /** 秒杀了 */
  PB3SurpassType_SurpassKillAll = 2,

  /** 反杀 */
  PB3SurpassType_SurpassKillFast = 3,
};

GPBEnumDescriptor *PB3SurpassType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3SurpassType_IsValidValue(int32_t value);

#pragma mark - Enum PB3TranscendType

/** 上榜类型 */
typedef GPB_ENUM(PB3TranscendType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3TranscendType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3TranscendType_TranscendZero = 0,

  /** 夺得榜首 */
  PB3TranscendType_TranscendFirst = 1,

  /** 夺得榜二 */
  PB3TranscendType_TranscendSecond = 2,

  /** 夺得榜三 */
  PB3TranscendType_TranscendThird = 3,
};

GPBEnumDescriptor *PB3TranscendType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3TranscendType_IsValidValue(int32_t value);

#pragma mark - Enum PB3AuctionState

/** 拍卖状态 */
typedef GPB_ENUM(PB3AuctionState) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3AuctionState_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3AuctionState_AsZero = 0,

  /** 未开始 */
  PB3AuctionState_AsNotStart = 1,

  /** 设置中 */
  PB3AuctionState_AsSetting = 2,

  /** 拍卖开始，进行中 */
  PB3AuctionState_AsOnStart = 3,
};

GPBEnumDescriptor *PB3AuctionState_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3AuctionState_IsValidValue(int32_t value);

#pragma mark - Enum PB3TermStatus

/** 车队状态 */
typedef GPB_ENUM(PB3TermStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3TermStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3TermStatus_ReamsZero = 0,

  /** 组队中 */
  PB3TermStatus_ReamsOrganize = 1,

  /** 已发布 */
  PB3TermStatus_ReamsPublish = 2,
};

GPBEnumDescriptor *PB3TermStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3TermStatus_IsValidValue(int32_t value);

#pragma mark - Enum PB3TeamOptType

/** 车队操作类型 */
typedef GPB_ENUM(PB3TeamOptType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3TeamOptType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3TeamOptType_TeamotZero = 0,

  /** 删除车队--管理员、房主 */
  PB3TeamOptType_TeamotDelete = 1,

  /** 发车--队长 */
  PB3TeamOptType_TeamotPublish = 2,

  /** 发布车队广播头条(开黑派单厅)--队长 */
  PB3TeamOptType_TeamotBroadcast = 3,

  /** 发布广播头条(开黑模式)--房主 */
  PB3TeamOptType_TeamotMobaRoom = 4,
};

GPBEnumDescriptor *PB3TeamOptType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3TeamOptType_IsValidValue(int32_t value);

#pragma mark - Enum PB3MemberOptType

/** 车队成员操作类型 */
typedef GPB_ENUM(PB3MemberOptType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3MemberOptType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3MemberOptType_MemberotZero = 0,

  /** 加入车队 */
  PB3MemberOptType_MemberotJoin = 1,

  /** 离开车队 */
  PB3MemberOptType_MemberotLeave = 2,

  /** 踢出车队 */
  PB3MemberOptType_MemberotKickOut = 3,

  /** 清除车队成员 */
  PB3MemberOptType_MemberotClean = 4,
};

GPBEnumDescriptor *PB3MemberOptType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3MemberOptType_IsValidValue(int32_t value);

#pragma mark - Enum PB3TeamMemberType

/** 车队成员类型 */
typedef GPB_ENUM(PB3TeamMemberType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3TeamMemberType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3TeamMemberType_TeamMtZero = 0,

  /** 队长 */
  PB3TeamMemberType_TeamMtLeader = 1,

  /** 普通成员 */
  PB3TeamMemberType_TeamMtNormal = 2,
};

GPBEnumDescriptor *PB3TeamMemberType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3TeamMemberType_IsValidValue(int32_t value);

#pragma mark - Enum PB3TeamSaveType

typedef GPB_ENUM(PB3TeamSaveType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3TeamSaveType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3TeamSaveType_TeamstZero = 0,

  /** 创建车队 */
  PB3TeamSaveType_TeamstCreate = 1,

  /** 修改车队 */
  PB3TeamSaveType_TeamstMod = 2,
};

GPBEnumDescriptor *PB3TeamSaveType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3TeamSaveType_IsValidValue(int32_t value);

#pragma mark - Enum PB3MobaTeamStatus

typedef GPB_ENUM(PB3MobaTeamStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3MobaTeamStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3MobaTeamStatus_MobatsZero = 0,

  /** 上车(替换默认车队成员，无脑替换) */
  PB3MobaTeamStatus_MobatsJoin = 1,

  /** 下车(不替换) */
  PB3MobaTeamStatus_MobatsLeave = 2,

  /** 被踢出(不替换) */
  PB3MobaTeamStatus_MobatsKickOut = 3,

  /** 清空车队(不替换) */
  PB3MobaTeamStatus_MobatsClean = 4,

  /** 删除车队(替换默认车队成员，判断显示车队ID和id是否一致，一致就替换) */
  PB3MobaTeamStatus_MobatsDelete = 5,

  /** 成为队长(替换默认车队成员，无脑替换) */
  PB3MobaTeamStatus_MobatsLeader = 6,

  /** 发车(替换默认车队成员,判断显示车队ID和id是否一致，一致就替换) */
  PB3MobaTeamStatus_MobatsPublish = 7,
};

GPBEnumDescriptor *PB3MobaTeamStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3MobaTeamStatus_IsValidValue(int32_t value);

#pragma mark - Enum PB3PkStatus

typedef GPB_ENUM(PB3PkStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3PkStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3PkStatus_PsZero = 0,

  /** PK中 */
  PB3PkStatus_PsInPk = 1,

  /** PK结束 */
  PB3PkStatus_PsPkEnd = 2,

  /** PK邀请中 */
  PB3PkStatus_PsPkInviting = 3,

  /** PK匹配中 */
  PB3PkStatus_PsPkMatching = 4,

  /** PK匹配成功 */
  PB3PkStatus_PsPkMatchSuccess = 5,

  /** PK互动中 */
  PB3PkStatus_PsPkPunishment = 6,
};

GPBEnumDescriptor *PB3PkStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3PkStatus_IsValidValue(int32_t value);

#pragma mark - Enum PB3PkResult

typedef GPB_ENUM(PB3PkResult) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3PkResult_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3PkResult_PkrZero = 0,

  /** 获胜方 */
  PB3PkResult_PkrWinner = 1,

  /** 失败方 */
  PB3PkResult_PkrLoser = 2,

  /** 平局 */
  PB3PkResult_PkrDraw = 3,
};

GPBEnumDescriptor *PB3PkResult_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3PkResult_IsValidValue(int32_t value);

#pragma mark - Enum PB3SeckillStatus

typedef GPB_ENUM(PB3SeckillStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3SeckillStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3SeckillStatus_SksZero = 0,

  /** 开始 */
  PB3SeckillStatus_SksStart = 1,

  /** 取消 */
  PB3SeckillStatus_SksCancel = 2,
};

GPBEnumDescriptor *PB3SeckillStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3SeckillStatus_IsValidValue(int32_t value);

#pragma mark - Enum PB3TreasureBoxStatus

typedef GPB_ENUM(PB3TreasureBoxStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3TreasureBoxStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3TreasureBoxStatus_TbsZero = 0,

  /** 空奖励 */
  PB3TreasureBoxStatus_TbsBoxNull = 1,

  /** 领取成功 */
  PB3TreasureBoxStatus_TbsSuccess = 2,

  /** 已领过 */
  PB3TreasureBoxStatus_TbsReceived = 3,

  /** 未抽中 */
  PB3TreasureBoxStatus_TbsNotHit = 4,
};

GPBEnumDescriptor *PB3TreasureBoxStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3TreasureBoxStatus_IsValidValue(int32_t value);

#pragma mark - Enum PB3WeekPkRankType

typedef GPB_ENUM(PB3WeekPkRankType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3WeekPkRankType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3WeekPkRankType_WprtZero = 0,

  /** 本周 */
  PB3WeekPkRankType_WprtThisWeek = 1,

  /** 上周 */
  PB3WeekPkRankType_WprtLastWeek = 2,
};

GPBEnumDescriptor *PB3WeekPkRankType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3WeekPkRankType_IsValidValue(int32_t value);

#pragma mark - Enum PB3PkInviteAction

typedef GPB_ENUM(PB3PkInviteAction) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3PkInviteAction_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3PkInviteAction_PkiaZero = 0,

  /** 被邀请 */
  PB3PkInviteAction_PkiaInvited = 1,

  /** 取消邀请 */
  PB3PkInviteAction_PkiaInviteCancel = 2,

  /** 拒绝邀请 */
  PB3PkInviteAction_PkiaInviteReject = 3,

  /** 邀请超时 */
  PB3PkInviteAction_PkiaInviteTimeout = 4,
};

GPBEnumDescriptor *PB3PkInviteAction_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3PkInviteAction_IsValidValue(int32_t value);

#pragma mark - Enum PB3PkInviteRejectType

typedef GPB_ENUM(PB3PkInviteRejectType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3PkInviteRejectType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3PkInviteRejectType_PkirtZero = 0,

  /** 本次拒绝Ta的邀请PK */
  PB3PkInviteRejectType_PkirtOncePerson = 1,

  /** 今日不接受Ta的邀请PK */
  PB3PkInviteRejectType_PkirtTodayPerson = 2,

  /** 今日不接受邀请PK */
  PB3PkInviteRejectType_PkirtTodayForbid = 3,
};

GPBEnumDescriptor *PB3PkInviteRejectType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3PkInviteRejectType_IsValidValue(int32_t value);

#pragma mark - Enum PB3PkMatchAction

typedef GPB_ENUM(PB3PkMatchAction) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3PkMatchAction_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3PkMatchAction_PkmaZero = 0,

  /** 匹配超时 */
  PB3PkMatchAction_PkmaMatchTimeout = 1,

  /** 匹配成功 */
  PB3PkMatchAction_PkmaMatchSuccess = 2,

  /** 匹配成功后准备开始 */
  PB3PkMatchAction_PkmaMatchStart = 3,

  /** 匹配成功后准备开始超时 */
  PB3PkMatchAction_PkmaMatchStartTimeout = 4,

  /** 匹配成功后对方房间退房 */
  PB3PkMatchAction_PkmaMatchStartFail = 5,

  /** 取消匹配 */
  PB3PkMatchAction_PkmaMatchCancel = 6,
};

GPBEnumDescriptor *PB3PkMatchAction_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3PkMatchAction_IsValidValue(int32_t value);

#pragma mark - Enum PB3MuteType

typedef GPB_ENUM(PB3MuteType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3MuteType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3MuteType_MutetZero = 0,

  /** 接收声音 */
  PB3MuteType_MutetStart = 1,

  /** 静音 */
  PB3MuteType_MutetStop = 2,
};

GPBEnumDescriptor *PB3MuteType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3MuteType_IsValidValue(int32_t value);

#pragma mark - Enum PB3SingleLivePkStatus

typedef GPB_ENUM(PB3SingleLivePkStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3SingleLivePkStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3SingleLivePkStatus_SlPsZero = 0,

  /** PK中 */
  PB3SingleLivePkStatus_SlPsInPk = 1,

  /** PK结束 */
  PB3SingleLivePkStatus_SlPsPkEnd = 2,

  /** PK邀请中 */
  PB3SingleLivePkStatus_SlPsPkInviting = 3,

  /** PK匹配中 */
  PB3SingleLivePkStatus_SlPsPkMatching = 4,

  /** PK匹配成功 */
  PB3SingleLivePkStatus_SlPsPkMatchSuccess = 5,

  /** PK互动中 */
  PB3SingleLivePkStatus_SlPsPkPunishment = 6,
};

GPBEnumDescriptor *PB3SingleLivePkStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3SingleLivePkStatus_IsValidValue(int32_t value);

#pragma mark - Enum PB3SingleLivePkResult

typedef GPB_ENUM(PB3SingleLivePkResult) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3SingleLivePkResult_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3SingleLivePkResult_SlPkrZero = 0,

  /** 获胜方 */
  PB3SingleLivePkResult_SlPkrWinner = 1,

  /** 失败方 */
  PB3SingleLivePkResult_SlPkrLoser = 2,

  /** 平局 */
  PB3SingleLivePkResult_SlPkrDraw = 3,
};

GPBEnumDescriptor *PB3SingleLivePkResult_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3SingleLivePkResult_IsValidValue(int32_t value);

#pragma mark - Enum PB3SingleLiveSeckillStatus

typedef GPB_ENUM(PB3SingleLiveSeckillStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3SingleLiveSeckillStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3SingleLiveSeckillStatus_SlSksZero = 0,

  /** 开始 */
  PB3SingleLiveSeckillStatus_SlSksStart = 1,

  /** 取消 */
  PB3SingleLiveSeckillStatus_SlSksCancel = 2,
};

GPBEnumDescriptor *PB3SingleLiveSeckillStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3SingleLiveSeckillStatus_IsValidValue(int32_t value);

#pragma mark - Enum PB3SingleLiveWeekPkRankType

typedef GPB_ENUM(PB3SingleLiveWeekPkRankType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3SingleLiveWeekPkRankType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3SingleLiveWeekPkRankType_SlWprtZero = 0,

  /** 本周 */
  PB3SingleLiveWeekPkRankType_SlWprtThisWeek = 1,

  /** 上周 */
  PB3SingleLiveWeekPkRankType_SlWprtLastWeek = 2,
};

GPBEnumDescriptor *PB3SingleLiveWeekPkRankType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3SingleLiveWeekPkRankType_IsValidValue(int32_t value);

#pragma mark - Enum PB3SingleLivePkInviteAction

typedef GPB_ENUM(PB3SingleLivePkInviteAction) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3SingleLivePkInviteAction_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3SingleLivePkInviteAction_SlPkiaZero = 0,

  /** 被邀请 */
  PB3SingleLivePkInviteAction_SlPkiaInvited = 1,

  /** 取消邀请 */
  PB3SingleLivePkInviteAction_SlPkiaInviteCancel = 2,

  /** 拒绝邀请 */
  PB3SingleLivePkInviteAction_SlPkiaInviteReject = 3,

  /** 邀请超时 */
  PB3SingleLivePkInviteAction_SlPkiaInviteTimeout = 4,
};

GPBEnumDescriptor *PB3SingleLivePkInviteAction_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3SingleLivePkInviteAction_IsValidValue(int32_t value);

#pragma mark - Enum PB3SingleLivePkInviteRejectType

typedef GPB_ENUM(PB3SingleLivePkInviteRejectType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3SingleLivePkInviteRejectType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3SingleLivePkInviteRejectType_SlPkirtZero = 0,

  /** 本次拒绝Ta的邀请PK */
  PB3SingleLivePkInviteRejectType_SlPkirtOncePerson = 1,

  /** 今日不接受Ta的邀请PK */
  PB3SingleLivePkInviteRejectType_SlPkirtTodayPerson = 2,

  /** 今日不接受邀请PK */
  PB3SingleLivePkInviteRejectType_SlPkirtTodayForbid = 3,
};

GPBEnumDescriptor *PB3SingleLivePkInviteRejectType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3SingleLivePkInviteRejectType_IsValidValue(int32_t value);

#pragma mark - Enum PB3SingleLivePkMatchAction

typedef GPB_ENUM(PB3SingleLivePkMatchAction) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3SingleLivePkMatchAction_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位不用 */
  PB3SingleLivePkMatchAction_SlPkmaZero = 0,

  /** 匹配超时 */
  PB3SingleLivePkMatchAction_SlPkmaMatchTimeout = 1,

  /** 匹配成功 */
  PB3SingleLivePkMatchAction_SlPkmaMatchSuccess = 2,

  /** 匹配成功后准备开始 */
  PB3SingleLivePkMatchAction_SlPkmaMatchStart = 3,

  /** 匹配成功后准备开始超时 */
  PB3SingleLivePkMatchAction_SlPkmaMatchStartTimeout = 4,

  /** 匹配成功后对方房间退房 */
  PB3SingleLivePkMatchAction_SlPkmaMatchStartFail = 5,

  /** 取消匹配 */
  PB3SingleLivePkMatchAction_SlPkmaMatchCancel = 6,
};

GPBEnumDescriptor *PB3SingleLivePkMatchAction_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3SingleLivePkMatchAction_IsValidValue(int32_t value);

#pragma mark - Enum PB3SingleLiveMuteType

typedef GPB_ENUM(PB3SingleLiveMuteType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3SingleLiveMuteType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3SingleLiveMuteType_SlMutetZero = 0,

  /** 接收声音 */
  PB3SingleLiveMuteType_SlMutetStart = 1,

  /** 静音 */
  PB3SingleLiveMuteType_SlMutetStop = 2,
};

GPBEnumDescriptor *PB3SingleLiveMuteType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3SingleLiveMuteType_IsValidValue(int32_t value);

#pragma mark - Enum PB3SingleLivePkChairChangeType

typedef GPB_ENUM(PB3SingleLivePkChairChangeType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PB3SingleLivePkChairChangeType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 占位 */
  PB3SingleLivePkChairChangeType_SlPkCctZero = 0,

  /** 换麦 */
  PB3SingleLivePkChairChangeType_SlPkCctMove = 1,

  /** 上、下麦 */
  PB3SingleLivePkChairChangeType_SlPkCctSit = 2,
};

GPBEnumDescriptor *PB3SingleLivePkChairChangeType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PB3SingleLivePkChairChangeType_IsValidValue(int32_t value);

#pragma mark - PB3RoomPatternExtRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface PB3RoomPatternExtRoot : GPBRootObject
@end

#pragma mark - PB3AuctionConfReq

/**
 * 拍卖配置请求
 **/
@interface PB3AuctionConfReq : GPBMessage

@end

#pragma mark - PB3AuctionConfRes

typedef GPB_ENUM(PB3AuctionConfRes_FieldNumber) {
  PB3AuctionConfRes_FieldNumber_ServiceListArray = 1,
  PB3AuctionConfRes_FieldNumber_TimeListArray = 2,
  PB3AuctionConfRes_FieldNumber_IsUseCustom = 3,
  PB3AuctionConfRes_FieldNumber_Rate = 4,
  PB3AuctionConfRes_FieldNumber_PriceListArray = 5,
};

@interface PB3AuctionConfRes : GPBMessage

/** 服务内容 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *serviceListArray;
/** The number of items in @c serviceListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger serviceListArray_Count;

/** 服务时长 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *timeListArray;
/** The number of items in @c timeListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger timeListArray_Count;

/** 是否使用自定义,false:不使用; true:使用 */
@property(nonatomic, readwrite) BOOL isUseCustom;

/** 礼物拍卖手续费扣除比例 */
@property(nonatomic, readwrite) int32_t rate;

/** 普通出价配置 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *priceListArray;
/** The number of items in @c priceListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger priceListArray_Count;

@end

#pragma mark - PB3AuctionSetReq

typedef GPB_ENUM(PB3AuctionSetReq_FieldNumber) {
  PB3AuctionSetReq_FieldNumber_Type = 1,
  PB3AuctionSetReq_FieldNumber_Content = 2,
  PB3AuctionSetReq_FieldNumber_TimeLong = 3,
  PB3AuctionSetReq_FieldNumber_GiftId = 4,
  PB3AuctionSetReq_FieldNumber_IsCustom = 5,
  PB3AuctionSetReq_FieldNumber_SellGiftId = 6,
  PB3AuctionSetReq_FieldNumber_SellGiftNum = 7,
  PB3AuctionSetReq_FieldNumber_Price = 8,
};

/**
 * 拍卖设置，机审不通过的错误提示
 **/
@interface PB3AuctionSetReq : GPBMessage

/** 拍卖类型 */
@property(nonatomic, readwrite) enum PB3AuctionType type;

/** 服务内容(服务) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

/** 服务时长(服务) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *timeLong;

/** 起拍礼物(服务) */
@property(nonatomic, readwrite) int32_t giftId;

/** 是否为用户自定义(服务),false:不是; true:用户自定义 */
@property(nonatomic, readwrite) BOOL isCustom;

/** 拍卖的礼物ID(礼物) */
@property(nonatomic, readwrite) int32_t sellGiftId;

/** 拍卖的礼物数量(礼物) */
@property(nonatomic, readwrite) int32_t sellGiftNum;

/** 起拍价 >=100且<=1000000(礼物) */
@property(nonatomic, readwrite) int32_t price;

@end

/**
 * Fetches the raw value of a @c PB3AuctionSetReq's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3AuctionSetReq_Type_RawValue(PB3AuctionSetReq *message);
/**
 * Sets the raw value of an @c PB3AuctionSetReq's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3AuctionSetReq_Type_RawValue(PB3AuctionSetReq *message, int32_t value);

#pragma mark - PB3AuctionSetRes

@interface PB3AuctionSetRes : GPBMessage

@end

#pragma mark - PB3AuctionTarget

typedef GPB_ENUM(PB3AuctionTarget_FieldNumber) {
  PB3AuctionTarget_FieldNumber_Type = 1,
  PB3AuctionTarget_FieldNumber_Player = 2,
  PB3AuctionTarget_FieldNumber_Content = 3,
  PB3AuctionTarget_FieldNumber_TimeLong = 4,
  PB3AuctionTarget_FieldNumber_GiftId = 5,
  PB3AuctionTarget_FieldNumber_SellGiftId = 6,
  PB3AuctionTarget_FieldNumber_SellGiftNum = 7,
  PB3AuctionTarget_FieldNumber_Price = 8,
  PB3AuctionTarget_FieldNumber_AuctionId = 9,
};

/**
 * 拍卖的对象
 **/
@interface PB3AuctionTarget : GPBMessage

/** 拍卖类型 */
@property(nonatomic, readwrite) enum PB3AuctionType type;

/** 卖家信息(服务,礼物) */
@property(nonatomic, readwrite, strong, null_resettable) PB3SimplePlayer *player;
/** Test to see if @c player has been set. */
@property(nonatomic, readwrite) BOOL hasPlayer;

/** 服务内容(服务) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

/** 服务时长(服务) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *timeLong;

/** 起拍礼物ID(服务) */
@property(nonatomic, readwrite) int32_t giftId;

/** 拍卖的礼物ID(礼物) */
@property(nonatomic, readwrite) int32_t sellGiftId;

/** 拍卖的礼物数量(礼物) */
@property(nonatomic, readwrite) int32_t sellGiftNum;

/** 起拍价 >=100且<=1000000(礼物) */
@property(nonatomic, readwrite) int32_t price;

/** 拍卖编号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *auctionId;

@end

/**
 * Fetches the raw value of a @c PB3AuctionTarget's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3AuctionTarget_Type_RawValue(PB3AuctionTarget *message);
/**
 * Sets the raw value of an @c PB3AuctionTarget's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3AuctionTarget_Type_RawValue(PB3AuctionTarget *message, int32_t value);

#pragma mark - PB3AuctionRank

typedef GPB_ENUM(PB3AuctionRank_FieldNumber) {
  PB3AuctionRank_FieldNumber_Player = 1,
  PB3AuctionRank_FieldNumber_Price = 2,
  PB3AuctionRank_FieldNumber_Rank = 3,
};

/**
 * 竞拍排名
 **/
@interface PB3AuctionRank : GPBMessage

/** 玩家信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3SimplePlayer *player;
/** Test to see if @c player has been set. */
@property(nonatomic, readwrite) BOOL hasPlayer;

/** 竞拍价格 */
@property(nonatomic, readwrite) int64_t price;

/** 排名 */
@property(nonatomic, readwrite) int32_t rank;

@end

#pragma mark - PB3AuctionEndReq

typedef GPB_ENUM(PB3AuctionEndReq_FieldNumber) {
  PB3AuctionEndReq_FieldNumber_AuctionId = 1,
};

/**
 * 结束拍卖
 **/
@interface PB3AuctionEndReq : GPBMessage

/** 拍卖编号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *auctionId;

@end

#pragma mark - PB3AuctionEndRes

@interface PB3AuctionEndRes : GPBMessage

@end

#pragma mark - PB3AuctionBiddingReq

typedef GPB_ENUM(PB3AuctionBiddingReq_FieldNumber) {
  PB3AuctionBiddingReq_FieldNumber_Price = 1,
  PB3AuctionBiddingReq_FieldNumber_Type = 2,
  PB3AuctionBiddingReq_FieldNumber_AuctionId = 3,
};

/**
 * 拍卖竞价
 **/
@interface PB3AuctionBiddingReq : GPBMessage

/** 竞价 */
@property(nonatomic, readwrite) int64_t price;

/** 竞价类型 */
@property(nonatomic, readwrite) PB3BiddingType type;

/** 拍卖编号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *auctionId;

@end

/**
 * Fetches the raw value of a @c PB3AuctionBiddingReq's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3AuctionBiddingReq_Type_RawValue(PB3AuctionBiddingReq *message);
/**
 * Sets the raw value of an @c PB3AuctionBiddingReq's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3AuctionBiddingReq_Type_RawValue(PB3AuctionBiddingReq *message, int32_t value);

#pragma mark - PB3AuctionBiddingRes

@interface PB3AuctionBiddingRes : GPBMessage

@end

#pragma mark - PB3BroadcastAuctionState

typedef GPB_ENUM(PB3BroadcastAuctionState_FieldNumber) {
  PB3BroadcastAuctionState_FieldNumber_State = 1,
  PB3BroadcastAuctionState_FieldNumber_Target = 2,
  PB3BroadcastAuctionState_FieldNumber_Price = 3,
  PB3BroadcastAuctionState_FieldNumber_URL = 4,
};

/**
 * cmdId=800101 推送拍卖状态
 **/
@interface PB3BroadcastAuctionState : GPBMessage

/** 拍卖状态 */
@property(nonatomic, readwrite) PB3AuctionState state;

/** 拍卖对象 */
@property(nonatomic, readwrite, strong, null_resettable) PB3AuctionTarget *target;
/** Test to see if @c target has been set. */
@property(nonatomic, readwrite) BOOL hasTarget;

/** 我的出价 */
@property(nonatomic, readwrite) int64_t price;

/** 拍卖开始音效url(state=3时，客户端播放) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

@end

/**
 * Fetches the raw value of a @c PB3BroadcastAuctionState's @c state property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BroadcastAuctionState_State_RawValue(PB3BroadcastAuctionState *message);
/**
 * Sets the raw value of an @c PB3BroadcastAuctionState's @c state property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BroadcastAuctionState_State_RawValue(PB3BroadcastAuctionState *message, int32_t value);

#pragma mark - PB3BroadcastAuctionRank

typedef GPB_ENUM(PB3BroadcastAuctionRank_FieldNumber) {
  PB3BroadcastAuctionRank_FieldNumber_RankArray = 1,
  PB3BroadcastAuctionRank_FieldNumber_TimeStamp = 2,
};

/**
 * cmdId=800102 推送拍卖排名
 **/
@interface PB3BroadcastAuctionRank : GPBMessage

/** 拍卖排名 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3AuctionRank*> *rankArray;
/** The number of items in @c rankArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger rankArray_Count;

/** 时间戳 */
@property(nonatomic, readwrite) int64_t timeStamp;

@end

#pragma mark - PB3BroadcastAuctionResult

typedef GPB_ENUM(PB3BroadcastAuctionResult_FieldNumber) {
  PB3BroadcastAuctionResult_FieldNumber_Type = 1,
  PB3BroadcastAuctionResult_FieldNumber_IsSuccess = 2,
  PB3BroadcastAuctionResult_FieldNumber_SellPlayer = 3,
  PB3BroadcastAuctionResult_FieldNumber_BuyPlayer = 4,
  PB3BroadcastAuctionResult_FieldNumber_Content = 5,
  PB3BroadcastAuctionResult_FieldNumber_TimeLong = 6,
  PB3BroadcastAuctionResult_FieldNumber_GiftId = 7,
  PB3BroadcastAuctionResult_FieldNumber_GiftNum = 8,
  PB3BroadcastAuctionResult_FieldNumber_Price = 9,
  PB3BroadcastAuctionResult_FieldNumber_ErrorMsg = 10,
  PB3BroadcastAuctionResult_FieldNumber_URL = 11,
};

/**
 * cmdId=800103 推送拍卖结束
 **/
@interface PB3BroadcastAuctionResult : GPBMessage

/** 拍卖类型 */
@property(nonatomic, readwrite) enum PB3AuctionType type;

/** true:竞拍成功; false:流拍 */
@property(nonatomic, readwrite) BOOL isSuccess;

/** 卖家信息(服务) */
@property(nonatomic, readwrite, strong, null_resettable) PB3SimplePlayer *sellPlayer;
/** Test to see if @c sellPlayer has been set. */
@property(nonatomic, readwrite) BOOL hasSellPlayer;

/** 买家信息(服务,礼物) */
@property(nonatomic, readwrite, strong, null_resettable) PB3SimplePlayer *buyPlayer;
/** Test to see if @c buyPlayer has been set. */
@property(nonatomic, readwrite) BOOL hasBuyPlayer;

/** 服务内容(服务) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

/** 服务时长(服务) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *timeLong;

/** 拍卖的礼物ID(礼物) */
@property(nonatomic, readwrite) int32_t giftId;

/** 拍卖的礼物数量 */
@property(nonatomic, readwrite) int32_t giftNum;

/** 成交金币(礼物) */
@property(nonatomic, readwrite) int64_t price;

/** 流拍原因(礼物) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMsg;

/** 拍卖结束音效url */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

@end

/**
 * Fetches the raw value of a @c PB3BroadcastAuctionResult's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BroadcastAuctionResult_Type_RawValue(PB3BroadcastAuctionResult *message);
/**
 * Sets the raw value of an @c PB3BroadcastAuctionResult's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BroadcastAuctionResult_Type_RawValue(PB3BroadcastAuctionResult *message, int32_t value);

#pragma mark - PB3BroadcastAuctionGiftUpdate

/**
 * cmdId=800104 拍卖礼物配置更新
 **/
@interface PB3BroadcastAuctionGiftUpdate : GPBMessage

@end

#pragma mark - PB3BroadcastAuctionBiddingPrice

typedef GPB_ENUM(PB3BroadcastAuctionBiddingPrice_FieldNumber) {
  PB3BroadcastAuctionBiddingPrice_FieldNumber_Price = 1,
};

/**
 * cmdId=800105 竞价成功后推送我的出价(解决多端登录显示不一致的问题)
 **/
@interface PB3BroadcastAuctionBiddingPrice : GPBMessage

/** 我的出价 */
@property(nonatomic, readwrite) int64_t price;

@end

#pragma mark - PB3BroadcastAuctionGift

typedef GPB_ENUM(PB3BroadcastAuctionGift_FieldNumber) {
  PB3BroadcastAuctionGift_FieldNumber_RoomId = 1,
  PB3BroadcastAuctionGift_FieldNumber_Msg = 2,
};

/**
 * cmdId=800106 礼物拍卖推送全服公屏(客户端过滤本房间)
 **/
@interface PB3BroadcastAuctionGift : GPBMessage

/** 房间ID */
@property(nonatomic, readwrite) int64_t roomId;

/** 公屏消息 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;

@end

#pragma mark - PB3BroadcastAuctionBiddingSystem

typedef GPB_ENUM(PB3BroadcastAuctionBiddingSystem_FieldNumber) {
  PB3BroadcastAuctionBiddingSystem_FieldNumber_Type = 1,
  PB3BroadcastAuctionBiddingSystem_FieldNumber_CurPlayer = 2,
  PB3BroadcastAuctionBiddingSystem_FieldNumber_OldPlayer = 3,
  PB3BroadcastAuctionBiddingSystem_FieldNumber_Msg = 4,
};

/**
 * cmdId=800107 超Ta成功推送
 **/
@interface PB3BroadcastAuctionBiddingSystem : GPBMessage

/** 秒全场类型 */
@property(nonatomic, readwrite) PB3SurpassType type;

/** 当前榜一玩家信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3SimplePlayer *curPlayer;
/** Test to see if @c curPlayer has been set. */
@property(nonatomic, readwrite) BOOL hasCurPlayer;

/** 被超越的(旧榜一)玩家信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3SimplePlayer *oldPlayer;
/** Test to see if @c oldPlayer has been set. */
@property(nonatomic, readwrite) BOOL hasOldPlayer;

/** 房间公屏消息(收到推送后，需要增加全屏动效) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;

@end

/**
 * Fetches the raw value of a @c PB3BroadcastAuctionBiddingSystem's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BroadcastAuctionBiddingSystem_Type_RawValue(PB3BroadcastAuctionBiddingSystem *message);
/**
 * Sets the raw value of an @c PB3BroadcastAuctionBiddingSystem's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BroadcastAuctionBiddingSystem_Type_RawValue(PB3BroadcastAuctionBiddingSystem *message, int32_t value);

#pragma mark - PB3BroadcastAuctionBiddingArtificial

typedef GPB_ENUM(PB3BroadcastAuctionBiddingArtificial_FieldNumber) {
  PB3BroadcastAuctionBiddingArtificial_FieldNumber_Type = 1,
  PB3BroadcastAuctionBiddingArtificial_FieldNumber_Player = 2,
};

/**
 * cmdId=800108 推送普通出价或送礼竞价玩家夺得榜一/榜二/榜三
 **/
@interface PB3BroadcastAuctionBiddingArtificial : GPBMessage

/** 上榜类型 */
@property(nonatomic, readwrite) PB3TranscendType type;

/** 上榜用户信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3SimplePlayer *player;
/** Test to see if @c player has been set. */
@property(nonatomic, readwrite) BOOL hasPlayer;

@end

/**
 * Fetches the raw value of a @c PB3BroadcastAuctionBiddingArtificial's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3BroadcastAuctionBiddingArtificial_Type_RawValue(PB3BroadcastAuctionBiddingArtificial *message);
/**
 * Sets the raw value of an @c PB3BroadcastAuctionBiddingArtificial's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3BroadcastAuctionBiddingArtificial_Type_RawValue(PB3BroadcastAuctionBiddingArtificial *message, int32_t value);

#pragma mark - PB3AuctionDetail

typedef GPB_ENUM(PB3AuctionDetail_FieldNumber) {
  PB3AuctionDetail_FieldNumber_GiftId = 1,
  PB3AuctionDetail_FieldNumber_GiftNum = 2,
  PB3AuctionDetail_FieldNumber_IsBuy = 3,
  PB3AuctionDetail_FieldNumber_Price = 4,
  PB3AuctionDetail_FieldNumber_CreateAt = 5,
  PB3AuctionDetail_FieldNumber_AuctionId = 6,
};

/**
 * 拍卖记录
 **/
@interface PB3AuctionDetail : GPBMessage

/** 礼物ID */
@property(nonatomic, readwrite) int32_t giftId;

/** 礼物数量 */
@property(nonatomic, readwrite) int32_t giftNum;

/** 是否为买家，true:买家; false:卖家 */
@property(nonatomic, readwrite) BOOL isBuy;

/** 成交金额 */
@property(nonatomic, readwrite) int64_t price;

/** 成交时间 */
@property(nonatomic, readwrite) int64_t createAt;

/** 拍卖编号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *auctionId;

@end

#pragma mark - PB3AuctionRecordReq

typedef GPB_ENUM(PB3AuctionRecordReq_FieldNumber) {
  PB3AuctionRecordReq_FieldNumber_Page = 1,
  PB3AuctionRecordReq_FieldNumber_PageSize = 2,
};

@interface PB3AuctionRecordReq : GPBMessage

@property(nonatomic, readwrite) int32_t page;

@property(nonatomic, readwrite) int32_t pageSize;

@end

#pragma mark - PB3AuctionRecordRes

typedef GPB_ENUM(PB3AuctionRecordRes_FieldNumber) {
  PB3AuctionRecordRes_FieldNumber_AuctionListArray = 1,
};

@interface PB3AuctionRecordRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3AuctionDetail*> *auctionListArray;
/** The number of items in @c auctionListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger auctionListArray_Count;

@end

#pragma mark - PB3InitAuctionReq

@interface PB3InitAuctionReq : GPBMessage

@end

#pragma mark - PB3InitAuctionRes

typedef GPB_ENUM(PB3InitAuctionRes_FieldNumber) {
  PB3InitAuctionRes_FieldNumber_State = 1,
  PB3InitAuctionRes_FieldNumber_Target = 2,
  PB3InitAuctionRes_FieldNumber_Price = 3,
  PB3InitAuctionRes_FieldNumber_RankArray = 4,
};

@interface PB3InitAuctionRes : GPBMessage

/** 拍卖状态 */
@property(nonatomic, readwrite) PB3AuctionState state;

/** 拍卖对象 */
@property(nonatomic, readwrite, strong, null_resettable) PB3AuctionTarget *target;
/** Test to see if @c target has been set. */
@property(nonatomic, readwrite) BOOL hasTarget;

/** 我的出价 */
@property(nonatomic, readwrite) int64_t price;

/** 拍卖排名榜前三名 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3AuctionRank*> *rankArray;
/** The number of items in @c rankArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger rankArray_Count;

@end

/**
 * Fetches the raw value of a @c PB3InitAuctionRes's @c state property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3InitAuctionRes_State_RawValue(PB3InitAuctionRes *message);
/**
 * Sets the raw value of an @c PB3InitAuctionRes's @c state property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3InitAuctionRes_State_RawValue(PB3InitAuctionRes *message, int32_t value);

#pragma mark - PB3AuctionGiftConf

typedef GPB_ENUM(PB3AuctionGiftConf_FieldNumber) {
  PB3AuctionGiftConf_FieldNumber_GiftId = 1,
  PB3AuctionGiftConf_FieldNumber_IsSell = 2,
  PB3AuctionGiftConf_FieldNumber_IsAuction = 3,
  PB3AuctionGiftConf_FieldNumber_MinPrice = 4,
  PB3AuctionGiftConf_FieldNumber_Sort = 5,
};

/**
 * 拍卖礼物配置
 **/
@interface PB3AuctionGiftConf : GPBMessage

/** 礼物ID */
@property(nonatomic, readwrite) int32_t giftId;

/** 礼物可否被竞拍 true:该礼物可以被拍卖; false:该礼物不可被拍卖 */
@property(nonatomic, readwrite) BOOL isSell;

/** 是否为竞拍礼物 true:该礼物显示在竞拍面板; false:该礼物不显示在竞拍面板 */
@property(nonatomic, readwrite) BOOL isAuction;

/** 竞拍底价，礼物的竞拍底价不能小于此值 */
@property(nonatomic, readwrite) uint32_t minPrice;

/** 权重 */
@property(nonatomic, readwrite) int32_t sort;

@end

#pragma mark - PB3AuctionGiftConfReq

@interface PB3AuctionGiftConfReq : GPBMessage

@end

#pragma mark - PB3AuctionGiftConfRes

typedef GPB_ENUM(PB3AuctionGiftConfRes_FieldNumber) {
  PB3AuctionGiftConfRes_FieldNumber_AuctionGiftConfListArray = 1,
};

@interface PB3AuctionGiftConfRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3AuctionGiftConf*> *auctionGiftConfListArray;
/** The number of items in @c auctionGiftConfListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger auctionGiftConfListArray_Count;

@end

#pragma mark - PB3MobaTeamListReq

/**
 * 获取房间车队列表
 **/
@interface PB3MobaTeamListReq : GPBMessage

@end

#pragma mark - PB3MobaTeamListRes

typedef GPB_ENUM(PB3MobaTeamListRes_FieldNumber) {
  PB3MobaTeamListRes_FieldNumber_TeamListArray = 1,
};

/**
 * cmdid = 800111
 **/
@interface PB3MobaTeamListRes : GPBMessage

/** 车队列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3TeamBaseInfo*> *teamListArray;
/** The number of items in @c teamListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger teamListArray_Count;

@end

#pragma mark - PB3TeamBaseInfo

typedef GPB_ENUM(PB3TeamBaseInfo_FieldNumber) {
  PB3TeamBaseInfo_FieldNumber_Id_p = 1,
  PB3TeamBaseInfo_FieldNumber_Number = 2,
  PB3TeamBaseInfo_FieldNumber_LeaderId = 3,
  PB3TeamBaseInfo_FieldNumber_LeaderName = 4,
  PB3TeamBaseInfo_FieldNumber_LeaderIcon = 5,
  PB3TeamBaseInfo_FieldNumber_MemberCount = 6,
  PB3TeamBaseInfo_FieldNumber_TeamStatus = 7,
  PB3TeamBaseInfo_FieldNumber_GameInfo = 8,
};

/**
 * 车队基础信息
 **/
@interface PB3TeamBaseInfo : GPBMessage

/** 车队唯一ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** 车队编号 */
@property(nonatomic, readwrite) int32_t number;

/** 队长ID */
@property(nonatomic, readwrite) int64_t leaderId;

/** 队长名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *leaderName;

/** 队长头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *leaderIcon;

/** 成员数量 */
@property(nonatomic, readwrite) int32_t memberCount;

/** 车队状态 */
@property(nonatomic, readwrite) PB3TermStatus teamStatus;

/** 游戏信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3MobaTeamGameInfo *gameInfo;
/** Test to see if @c gameInfo has been set. */
@property(nonatomic, readwrite) BOOL hasGameInfo;

@end

/**
 * Fetches the raw value of a @c PB3TeamBaseInfo's @c teamStatus property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3TeamBaseInfo_TeamStatus_RawValue(PB3TeamBaseInfo *message);
/**
 * Sets the raw value of an @c PB3TeamBaseInfo's @c teamStatus property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3TeamBaseInfo_TeamStatus_RawValue(PB3TeamBaseInfo *message, int32_t value);

#pragma mark - PB3MobaTeamOptReq

typedef GPB_ENUM(PB3MobaTeamOptReq_FieldNumber) {
  PB3MobaTeamOptReq_FieldNumber_Type = 1,
  PB3MobaTeamOptReq_FieldNumber_Id_p = 2,
};

/**
 * 操作车队
 **/
@interface PB3MobaTeamOptReq : GPBMessage

/** 车队操作类型 */
@property(nonatomic, readwrite) PB3TeamOptType type;

/** 车队唯一ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@end

/**
 * Fetches the raw value of a @c PB3MobaTeamOptReq's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3MobaTeamOptReq_Type_RawValue(PB3MobaTeamOptReq *message);
/**
 * Sets the raw value of an @c PB3MobaTeamOptReq's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3MobaTeamOptReq_Type_RawValue(PB3MobaTeamOptReq *message, int32_t value);

#pragma mark - PB3MobaTeamOptRes

@interface PB3MobaTeamOptRes : GPBMessage

@end

#pragma mark - PB3MobaTeamMemberOptReq

typedef GPB_ENUM(PB3MobaTeamMemberOptReq_FieldNumber) {
  PB3MobaTeamMemberOptReq_FieldNumber_Type = 1,
  PB3MobaTeamMemberOptReq_FieldNumber_Id_p = 2,
  PB3MobaTeamMemberOptReq_FieldNumber_TargetId = 3,
};

/**
 * 操作车队成员
 **/
@interface PB3MobaTeamMemberOptReq : GPBMessage

/** 操作类型 */
@property(nonatomic, readwrite) PB3MemberOptType type;

/** 车队唯一ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** 被踢出车队的用户ID */
@property(nonatomic, readwrite) int64_t targetId;

@end

/**
 * Fetches the raw value of a @c PB3MobaTeamMemberOptReq's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3MobaTeamMemberOptReq_Type_RawValue(PB3MobaTeamMemberOptReq *message);
/**
 * Sets the raw value of an @c PB3MobaTeamMemberOptReq's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3MobaTeamMemberOptReq_Type_RawValue(PB3MobaTeamMemberOptReq *message, int32_t value);

#pragma mark - PB3MobaTeamMemberOptRes

typedef GPB_ENUM(PB3MobaTeamMemberOptRes_FieldNumber) {
  PB3MobaTeamMemberOptRes_FieldNumber_Id_p = 1,
  PB3MobaTeamMemberOptRes_FieldNumber_Type = 2,
};

@interface PB3MobaTeamMemberOptRes : GPBMessage

/** 车队唯一ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** 车队成员类型 */
@property(nonatomic, readwrite) PB3TeamMemberType type;

@end

/**
 * Fetches the raw value of a @c PB3MobaTeamMemberOptRes's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3MobaTeamMemberOptRes_Type_RawValue(PB3MobaTeamMemberOptRes *message);
/**
 * Sets the raw value of an @c PB3MobaTeamMemberOptRes's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3MobaTeamMemberOptRes_Type_RawValue(PB3MobaTeamMemberOptRes *message, int32_t value);

#pragma mark - PB3TeamMemberInfo

typedef GPB_ENUM(PB3TeamMemberInfo_FieldNumber) {
  PB3TeamMemberInfo_FieldNumber_Id_p = 1,
  PB3TeamMemberInfo_FieldNumber_MemberListArray = 2,
  PB3TeamMemberInfo_FieldNumber_TeamInfo = 3,
};

/**
 * cmdId = 800112
 **/
@interface PB3TeamMemberInfo : GPBMessage

/** 车队唯一ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** 车队成员列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3TeamMember*> *memberListArray;
/** The number of items in @c memberListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger memberListArray_Count;

/** 车队基础信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3TeamBaseInfo *teamInfo;
/** Test to see if @c teamInfo has been set. */
@property(nonatomic, readwrite) BOOL hasTeamInfo;

@end

#pragma mark - PB3TeamMember

typedef GPB_ENUM(PB3TeamMember_FieldNumber) {
  PB3TeamMember_FieldNumber_PlayerId = 1,
  PB3TeamMember_FieldNumber_PlayerName = 2,
  PB3TeamMember_FieldNumber_PlayerIcon = 3,
  PB3TeamMember_FieldNumber_Type = 4,
};

/**
 * 车队成员信息
 **/
@interface PB3TeamMember : GPBMessage

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 用户名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerName;

/** 用户头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *playerIcon;

/** 车队成员类型 */
@property(nonatomic, readwrite) PB3TeamMemberType type;

@end

/**
 * Fetches the raw value of a @c PB3TeamMember's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3TeamMember_Type_RawValue(PB3TeamMember *message);
/**
 * Sets the raw value of an @c PB3TeamMember's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3TeamMember_Type_RawValue(PB3TeamMember *message, int32_t value);

#pragma mark - PB3MobaTeamDepartureBroadcast

typedef GPB_ENUM(PB3MobaTeamDepartureBroadcast_FieldNumber) {
  PB3MobaTeamDepartureBroadcast_FieldNumber_LobbyId = 1,
  PB3MobaTeamDepartureBroadcast_FieldNumber_TeamLeaderId = 2,
  PB3MobaTeamDepartureBroadcast_FieldNumber_TeamId = 3,
  PB3MobaTeamDepartureBroadcast_FieldNumber_Password = 4,
};

/**
 * 发车广播（车队里的所有人都会收到）cmdId = 800113
 **/
@interface PB3MobaTeamDepartureBroadcast : GPBMessage

/** 大厅房间id */
@property(nonatomic, readwrite) int64_t lobbyId;

/** 队长id */
@property(nonatomic, readwrite) int64_t teamLeaderId;

/** 车队id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *teamId;

/** 房间密码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *password;

@end

#pragma mark - PB3MobaTeamGameCfgCDNReq

typedef GPB_ENUM(PB3MobaTeamGameCfgCDNReq_FieldNumber) {
  PB3MobaTeamGameCfgCDNReq_FieldNumber_ConfURL = 1,
};

/**
 * 获取游戏配置cdn SysConfType.TypeMobaTeamGameCfg（system.ext.proto）
 **/
@interface PB3MobaTeamGameCfgCDNReq : GPBMessage

/** CDN的URL */
@property(nonatomic, readwrite, copy, null_resettable) NSString *confURL;

@end

#pragma mark - PB3MobaTeamGameCfgCDNRes

typedef GPB_ENUM(PB3MobaTeamGameCfgCDNRes_FieldNumber) {
  PB3MobaTeamGameCfgCDNRes_FieldNumber_ConfURL = 1,
};

@interface PB3MobaTeamGameCfgCDNRes : GPBMessage

/** CDN的URL（当为空时，表示当前为最新配置） */
@property(nonatomic, readwrite, copy, null_resettable) NSString *confURL;

@end

#pragma mark - PB3MobaTeamSaveReq

typedef GPB_ENUM(PB3MobaTeamSaveReq_FieldNumber) {
  PB3MobaTeamSaveReq_FieldNumber_Type = 1,
  PB3MobaTeamSaveReq_FieldNumber_GameInfo = 2,
  PB3MobaTeamSaveReq_FieldNumber_Id_p = 3,
};

/**
 * 创建、编辑车队
 **/
@interface PB3MobaTeamSaveReq : GPBMessage

/** 操作类型 */
@property(nonatomic, readwrite) PB3TeamSaveType type;

/** 车队信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3MobaTeamGameInfo *gameInfo;
/** Test to see if @c gameInfo has been set. */
@property(nonatomic, readwrite) BOOL hasGameInfo;

/** 车队唯一ID(修改) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@end

/**
 * Fetches the raw value of a @c PB3MobaTeamSaveReq's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3MobaTeamSaveReq_Type_RawValue(PB3MobaTeamSaveReq *message);
/**
 * Sets the raw value of an @c PB3MobaTeamSaveReq's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3MobaTeamSaveReq_Type_RawValue(PB3MobaTeamSaveReq *message, int32_t value);

#pragma mark - PB3MobaTeamSaveRes

@interface PB3MobaTeamSaveRes : GPBMessage

@end

#pragma mark - PB3MobaTeamChange

typedef GPB_ENUM(PB3MobaTeamChange_FieldNumber) {
  PB3MobaTeamChange_FieldNumber_Status = 1,
  PB3MobaTeamChange_FieldNumber_Id_p = 2,
  PB3MobaTeamChange_FieldNumber_Type = 3,
  PB3MobaTeamChange_FieldNumber_PushTime = 4,
  PB3MobaTeamChange_FieldNumber_Team = 5,
};

/**
 * cmdid=800114 用户车队状态变化
 **/
@interface PB3MobaTeamChange : GPBMessage

/** 类型 */
@property(nonatomic, readwrite) PB3MobaTeamStatus status;

/** 车队唯一ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** 车队成员类型 */
@property(nonatomic, readwrite) PB3TeamMemberType type;

/** 推送时间-毫秒（处理状态频繁切换可能导致状态不一致问题） */
@property(nonatomic, readwrite) int64_t pushTime;

/** 车队成员信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3TeamMemberInfo *team;
/** Test to see if @c team has been set. */
@property(nonatomic, readwrite) BOOL hasTeam;

@end

/**
 * Fetches the raw value of a @c PB3MobaTeamChange's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3MobaTeamChange_Status_RawValue(PB3MobaTeamChange *message);
/**
 * Sets the raw value of an @c PB3MobaTeamChange's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3MobaTeamChange_Status_RawValue(PB3MobaTeamChange *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3MobaTeamChange's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3MobaTeamChange_Type_RawValue(PB3MobaTeamChange *message);
/**
 * Sets the raw value of an @c PB3MobaTeamChange's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3MobaTeamChange_Type_RawValue(PB3MobaTeamChange *message, int32_t value);

#pragma mark - PB3MobaTeamPatternBroadcast

typedef GPB_ENUM(PB3MobaTeamPatternBroadcast_FieldNumber) {
  PB3MobaTeamPatternBroadcast_FieldNumber_RoomId = 1,
  PB3MobaTeamPatternBroadcast_FieldNumber_MobaTeamName = 2,
};

/**
 * 开黑组队游戏信息广播 cmdId = 800115
 **/
@interface PB3MobaTeamPatternBroadcast : GPBMessage

/** 房间id */
@property(nonatomic, readwrite) int64_t roomId;

/** 组队需求 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *mobaTeamName;

@end

#pragma mark - PB3MobaTeamUpdateRoomInfoReq

typedef GPB_ENUM(PB3MobaTeamUpdateRoomInfoReq_FieldNumber) {
  PB3MobaTeamUpdateRoomInfoReq_FieldNumber_GameInfo = 1,
};

/**
 * 更新个人开黑房间信息
 **/
@interface PB3MobaTeamUpdateRoomInfoReq : GPBMessage

/** 游戏信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3MobaTeamGameInfo *gameInfo;
/** Test to see if @c gameInfo has been set. */
@property(nonatomic, readwrite) BOOL hasGameInfo;

@end

#pragma mark - PB3MobaTeamUpdateRoomInfoRes

@interface PB3MobaTeamUpdateRoomInfoRes : GPBMessage

@end

#pragma mark - PB3MobaTeamRoomInfoReq

/**
 * 获取个人开黑房间信息
 **/
@interface PB3MobaTeamRoomInfoReq : GPBMessage

@end

#pragma mark - PB3MobaTeamRoomInfoRes

typedef GPB_ENUM(PB3MobaTeamRoomInfoRes_FieldNumber) {
  PB3MobaTeamRoomInfoRes_FieldNumber_GameInfo = 1,
};

@interface PB3MobaTeamRoomInfoRes : GPBMessage

/** 游戏信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3MobaTeamGameInfo *gameInfo;
/** Test to see if @c gameInfo has been set. */
@property(nonatomic, readwrite) BOOL hasGameInfo;

@end

#pragma mark - PB3MobaTeamPatternGuide

typedef GPB_ENUM(PB3MobaTeamPatternGuide_FieldNumber) {
  PB3MobaTeamPatternGuide_FieldNumber_RoomId = 1,
};

/**
 * 引导推送
 **/
@interface PB3MobaTeamPatternGuide : GPBMessage

/** 房间id */
@property(nonatomic, readwrite) int64_t roomId;

@end

#pragma mark - PB3MobaTeamShowGameInfoBroadcast

typedef GPB_ENUM(PB3MobaTeamShowGameInfoBroadcast_FieldNumber) {
  PB3MobaTeamShowGameInfoBroadcast_FieldNumber_RoomId = 1,
  PB3MobaTeamShowGameInfoBroadcast_FieldNumber_IsShowMobaTeamInfo = 2,
};

/**
 * 切换个人开黑模式时是否显示游戏信息弹窗广播 cmdId = 800117
 **/
@interface PB3MobaTeamShowGameInfoBroadcast : GPBMessage

/** 房间id */
@property(nonatomic, readwrite) int64_t roomId;

/** 切换个人开黑模式时是否显示游戏信息弹窗 */
@property(nonatomic, readwrite) BOOL isShowMobaTeamInfo;

@end

#pragma mark - PB3MobaTeamBroadcastGameNickNameReq

typedef GPB_ENUM(PB3MobaTeamBroadcastGameNickNameReq_FieldNumber) {
  PB3MobaTeamBroadcastGameNickNameReq_FieldNumber_NickName = 1,
  PB3MobaTeamBroadcastGameNickNameReq_FieldNumber_GameId = 2,
};

/**
 * 个人开黑模式发送游戏昵称
 **/
@interface PB3MobaTeamBroadcastGameNickNameReq : GPBMessage

/** 游戏名字昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;

/** 游戏id */
@property(nonatomic, readwrite) int64_t gameId;

@end

#pragma mark - PB3MobaTeamBroadcastGameNickNameRes

@interface PB3MobaTeamBroadcastGameNickNameRes : GPBMessage

@end

#pragma mark - PB3MobaTeamGameNickNameReq

typedef GPB_ENUM(PB3MobaTeamGameNickNameReq_FieldNumber) {
  PB3MobaTeamGameNickNameReq_FieldNumber_GameId = 1,
};

/**
 * 获取个人开黑模式游戏昵称
 **/
@interface PB3MobaTeamGameNickNameReq : GPBMessage

/** 游戏id */
@property(nonatomic, readwrite) int64_t gameId;

@end

#pragma mark - PB3MobaTeamGameNickNameRes

typedef GPB_ENUM(PB3MobaTeamGameNickNameRes_FieldNumber) {
  PB3MobaTeamGameNickNameRes_FieldNumber_NickNameArray = 1,
};

@interface PB3MobaTeamGameNickNameRes : GPBMessage

/** 游戏名字昵称列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *nickNameArray;
/** The number of items in @c nickNameArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger nickNameArray_Count;

@end

#pragma mark - PB3PkInfo

typedef GPB_ENUM(PB3PkInfo_FieldNumber) {
  PB3PkInfo_FieldNumber_Id_p = 1,
  PB3PkInfo_FieldNumber_PkReward = 2,
  PB3PkInfo_FieldNumber_TeamsArray = 3,
  PB3PkInfo_FieldNumber_EndTime = 4,
  PB3PkInfo_FieldNumber_Timestamp = 5,
  PB3PkInfo_FieldNumber_Status = 6,
  PB3PkInfo_FieldNumber_RewardRate = 7,
  PB3PkInfo_FieldNumber_TipsArray = 8,
  PB3PkInfo_FieldNumber_ScrollTime = 9,
  PB3PkInfo_FieldNumber_Mode = 10,
  PB3PkInfo_FieldNumber_SecKillId = 11,
  PB3PkInfo_FieldNumber_CancelScore = 12,
  PB3PkInfo_FieldNumber_IsBeginPk = 13,
  PB3PkInfo_FieldNumber_DeviceType = 14,
  PB3PkInfo_FieldNumber_OpenTime = 15,
  PB3PkInfo_FieldNumber_PkStatus = 16,
  PB3PkInfo_FieldNumber_PunishContent = 17,
  PB3PkInfo_FieldNumber_IsEndPk = 18,
};

/**
 * ////////////////////////////// 赏金PK //////////////////////////////////
 * cmdid=800125
 **/
@interface PB3PkInfo : GPBMessage

/** 唯一ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** PK赏金值 */
@property(nonatomic, readwrite) int32_t pkReward;

/** 红队 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3PkTeam*> *teamsArray;
/** The number of items in @c teamsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger teamsArray_Count;

/** 结束时间(秒) */
@property(nonatomic, readwrite) int64_t endTime;

/** 时间戳(毫秒) */
@property(nonatomic, readwrite) int64_t timestamp;

/** PK状态(兼容旧版本，惩罚状态返回已结束) */
@property(nonatomic, readwrite) PB3PkStatus status DEPRECATED_ATTRIBUTE;

/** 赏金比例(如：10%，则传10；该值大于0，才显示赏金池及胜利后分金币动画) */
@property(nonatomic, readwrite) int32_t rewardRate;

/** 轮播tips */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *tipsArray;
/** The number of items in @c tipsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger tipsArray_Count;

/** 轮播时间 */
@property(nonatomic, readwrite) int32_t scrollTime;

/** PK模式 */
@property(nonatomic, readwrite) enum PB3PkMode mode;

/** 被秒杀的房间ID，ID>0，处于秒杀倒计时 */
@property(nonatomic, readwrite) int64_t secKillId;

/** 取消秒杀的分数 */
@property(nonatomic, readwrite) int32_t cancelScore;

/** 是否开始PK的推送 */
@property(nonatomic, readwrite) BOOL isBeginPk;

/** 设备类型 */
@property(nonatomic, readwrite) enum PB3DeviceType deviceType;

/** 展开时长(秒)，0则一直展开 */
@property(nonatomic, readwrite) int32_t openTime;

/** PK状态 */
@property(nonatomic, readwrite) PB3PkStatus pkStatus;

/** 惩罚内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *punishContent;

/** 是否结束PK的推送 */
@property(nonatomic, readwrite) BOOL isEndPk;

@end

/**
 * Fetches the raw value of a @c PB3PkInfo's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3PkInfo_Status_RawValue(PB3PkInfo *message);
/**
 * Sets the raw value of an @c PB3PkInfo's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3PkInfo_Status_RawValue(PB3PkInfo *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3PkInfo's @c mode property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3PkInfo_Mode_RawValue(PB3PkInfo *message);
/**
 * Sets the raw value of an @c PB3PkInfo's @c mode property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3PkInfo_Mode_RawValue(PB3PkInfo *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3PkInfo's @c deviceType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3PkInfo_DeviceType_RawValue(PB3PkInfo *message);
/**
 * Sets the raw value of an @c PB3PkInfo's @c deviceType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3PkInfo_DeviceType_RawValue(PB3PkInfo *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3PkInfo's @c pkStatus property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3PkInfo_PkStatus_RawValue(PB3PkInfo *message);
/**
 * Sets the raw value of an @c PB3PkInfo's @c pkStatus property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3PkInfo_PkStatus_RawValue(PB3PkInfo *message, int32_t value);

#pragma mark - PB3PkTeam

typedef GPB_ENUM(PB3PkTeam_FieldNumber) {
  PB3PkTeam_FieldNumber_RoomId = 1,
  PB3PkTeam_FieldNumber_HostId = 2,
  PB3PkTeam_FieldNumber_HostName = 3,
  PB3PkTeam_FieldNumber_HostIcon = 4,
  PB3PkTeam_FieldNumber_Income = 5,
  PB3PkTeam_FieldNumber_PlayerListArray = 6,
  PB3PkTeam_FieldNumber_Result = 7,
  PB3PkTeam_FieldNumber_IsPunishment = 8,
};

@interface PB3PkTeam : GPBMessage

/** 房间ID */
@property(nonatomic, readwrite) int64_t roomId;

/** 主持ID */
@property(nonatomic, readwrite) int64_t hostId;

/** 主持名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *hostName;

/** 主持头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *hostIcon;

/** 进度条的值，pk值 */
@property(nonatomic, readwrite) int32_t income;

/** 贡献前三的老板 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3PkPlayer*> *playerListArray;
/** The number of items in @c playerListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger playerListArray_Count;

/** PK结果 */
@property(nonatomic, readwrite) PB3PkResult result;

/** 主持是否有PK互动连麦弹窗 */
@property(nonatomic, readwrite) BOOL isPunishment;

@end

/**
 * Fetches the raw value of a @c PB3PkTeam's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3PkTeam_Result_RawValue(PB3PkTeam *message);
/**
 * Sets the raw value of an @c PB3PkTeam's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3PkTeam_Result_RawValue(PB3PkTeam *message, int32_t value);

#pragma mark - PB3PkPlayer

typedef GPB_ENUM(PB3PkPlayer_FieldNumber) {
  PB3PkPlayer_FieldNumber_PlayerId = 1,
  PB3PkPlayer_FieldNumber_Name = 2,
  PB3PkPlayer_FieldNumber_Icon = 3,
  PB3PkPlayer_FieldNumber_Score = 4,
  PB3PkPlayer_FieldNumber_Rank = 5,
  PB3PkPlayer_FieldNumber_StartMatchTime = 6,
  PB3PkPlayer_FieldNumber_RoomId = 7,
};

@interface PB3PkPlayer : GPBMessage

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 用户名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 贡献值 */
@property(nonatomic, readwrite) uint32_t score;

/** 排名 */
@property(nonatomic, readwrite) uint32_t rank;

/** 当前用户开始匹配时间戳 */
@property(nonatomic, readwrite) int64_t startMatchTime;

/** 房间id */
@property(nonatomic, readwrite) int64_t roomId;

@end

#pragma mark - PB3PkTeamPush

typedef GPB_ENUM(PB3PkTeamPush_FieldNumber) {
  PB3PkTeamPush_FieldNumber_Id_p = 1,
  PB3PkTeamPush_FieldNumber_PkReward = 2,
  PB3PkTeamPush_FieldNumber_Team = 3,
  PB3PkTeamPush_FieldNumber_Timestamp = 4,
};

/**
 * cmdid=800126
 **/
@interface PB3PkTeamPush : GPBMessage

/** 唯一ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** PK赏金值 */
@property(nonatomic, readwrite) int32_t pkReward;

/** 红队 */
@property(nonatomic, readwrite, strong, null_resettable) PB3PkTeam *team;
/** Test to see if @c team has been set. */
@property(nonatomic, readwrite) BOOL hasTeam;

/** 时间戳(毫秒) */
@property(nonatomic, readwrite) int64_t timestamp;

@end

#pragma mark - PB3PkSkillPush

typedef GPB_ENUM(PB3PkSkillPush_FieldNumber) {
  PB3PkSkillPush_FieldNumber_Id_p = 1,
  PB3PkSkillPush_FieldNumber_Skill = 2,
  PB3PkSkillPush_FieldNumber_UseRoomId = 3,
  PB3PkSkillPush_FieldNumber_TargetRoomId = 4,
  PB3PkSkillPush_FieldNumber_SecKill = 5,
  PB3PkSkillPush_FieldNumber_Taunt = 6,
};

typedef GPB_ENUM(PB3PkSkillPush_Data_OneOfCase) {
  PB3PkSkillPush_Data_OneOfCase_GPBUnsetOneOfCase = 0,
  PB3PkSkillPush_Data_OneOfCase_SecKill = 5,
  PB3PkSkillPush_Data_OneOfCase_Taunt = 6,
};

/**
 * cmdid=800127
 **/
@interface PB3PkSkillPush : GPBMessage

/** 唯一ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** 技能 */
@property(nonatomic, readwrite) enum PB3PkSkillType skill;

/** 使用技能的房间ID */
@property(nonatomic, readwrite) int64_t useRoomId;

/** 对手的房间ID */
@property(nonatomic, readwrite) int64_t targetRoomId;

@property(nonatomic, readonly) PB3PkSkillPush_Data_OneOfCase dataOneOfCase;

/** 秒杀数据 */
@property(nonatomic, readwrite, strong, null_resettable) PB3SeckillPush *secKill;

/** 嘲讽数据 */
@property(nonatomic, readwrite, strong, null_resettable) PB3TauntPush *taunt;

@end

/**
 * Fetches the raw value of a @c PB3PkSkillPush's @c skill property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3PkSkillPush_Skill_RawValue(PB3PkSkillPush *message);
/**
 * Sets the raw value of an @c PB3PkSkillPush's @c skill property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3PkSkillPush_Skill_RawValue(PB3PkSkillPush *message, int32_t value);

/**
 * Clears whatever value was set for the oneof 'data'.
 **/
void PB3PkSkillPush_ClearDataOneOfCase(PB3PkSkillPush *message);

#pragma mark - PB3SeckillPush

typedef GPB_ENUM(PB3SeckillPush_FieldNumber) {
  PB3SeckillPush_FieldNumber_Status = 1,
  PB3SeckillPush_FieldNumber_EndTime = 2,
  PB3SeckillPush_FieldNumber_CancelScore = 3,
  PB3SeckillPush_FieldNumber_CancelTime = 4,
};

@interface PB3SeckillPush : GPBMessage

@property(nonatomic, readwrite) PB3SeckillStatus status;

/** 结束时间(秒)，更新PK面板的倒计时(PkInfo的end_time) */
@property(nonatomic, readwrite) int64_t endTime;

/** 阻止秒杀PK值 */
@property(nonatomic, readwrite) int32_t cancelScore;

/** 秒杀反应时间(30)秒 */
@property(nonatomic, readwrite) int32_t cancelTime;

@end

/**
 * Fetches the raw value of a @c PB3SeckillPush's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SeckillPush_Status_RawValue(PB3SeckillPush *message);
/**
 * Sets the raw value of an @c PB3SeckillPush's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SeckillPush_Status_RawValue(PB3SeckillPush *message, int32_t value);

#pragma mark - PB3TauntPush

typedef GPB_ENUM(PB3TauntPush_FieldNumber) {
  PB3TauntPush_FieldNumber_Gold = 1,
};

@interface PB3TauntPush : GPBMessage

/** 使用后的金币 */
@property(nonatomic, readwrite) int32_t gold;

@end

#pragma mark - PB3UsePkSkillReq

typedef GPB_ENUM(PB3UsePkSkillReq_FieldNumber) {
  PB3UsePkSkillReq_FieldNumber_Id_p = 1,
  PB3UsePkSkillReq_FieldNumber_Skill = 2,
  PB3UsePkSkillReq_FieldNumber_Gold = 3,
};

@interface PB3UsePkSkillReq : GPBMessage

/** 唯一ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** 技能 */
@property(nonatomic, readwrite) enum PB3PkSkillType skill;

/** 使用嘲讽的金币 */
@property(nonatomic, readwrite) int32_t gold;

@end

/**
 * Fetches the raw value of a @c PB3UsePkSkillReq's @c skill property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3UsePkSkillReq_Skill_RawValue(PB3UsePkSkillReq *message);
/**
 * Sets the raw value of an @c PB3UsePkSkillReq's @c skill property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3UsePkSkillReq_Skill_RawValue(PB3UsePkSkillReq *message, int32_t value);

#pragma mark - PB3UsePkSkillRes

@interface PB3UsePkSkillRes : GPBMessage

@end

#pragma mark - PB3PkSkillListReq

@interface PB3PkSkillListReq : GPBMessage

@end

#pragma mark - PB3PkSkillListRes

typedef GPB_ENUM(PB3PkSkillListRes_FieldNumber) {
  PB3PkSkillListRes_FieldNumber_SkillsArray = 1,
};

@interface PB3PkSkillListRes : GPBMessage

/** 技能列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3PkSkill*> *skillsArray;
/** The number of items in @c skillsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger skillsArray_Count;

@end

#pragma mark - PB3PkSkill

typedef GPB_ENUM(PB3PkSkill_FieldNumber) {
  PB3PkSkill_FieldNumber_Skill = 1,
  PB3PkSkill_FieldNumber_Icon = 2,
  PB3PkSkill_FieldNumber_SecKill = 3,
  PB3PkSkill_FieldNumber_Taunt = 4,
};

typedef GPB_ENUM(PB3PkSkill_Data_OneOfCase) {
  PB3PkSkill_Data_OneOfCase_GPBUnsetOneOfCase = 0,
  PB3PkSkill_Data_OneOfCase_SecKill = 3,
  PB3PkSkill_Data_OneOfCase_Taunt = 4,
};

@interface PB3PkSkill : GPBMessage

/** 技能类型 */
@property(nonatomic, readwrite) enum PB3PkSkillType skill;

/** 技能图标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

@property(nonatomic, readonly) PB3PkSkill_Data_OneOfCase dataOneOfCase;

/** 秒杀数据 */
@property(nonatomic, readwrite, strong, null_resettable) PB3Seckill *secKill;

/** 嘲讽数据 */
@property(nonatomic, readwrite, strong, null_resettable) PB3Taunt *taunt;

@end

/**
 * Fetches the raw value of a @c PB3PkSkill's @c skill property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3PkSkill_Skill_RawValue(PB3PkSkill *message);
/**
 * Sets the raw value of an @c PB3PkSkill's @c skill property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3PkSkill_Skill_RawValue(PB3PkSkill *message, int32_t value);

/**
 * Clears whatever value was set for the oneof 'data'.
 **/
void PB3PkSkill_ClearDataOneOfCase(PB3PkSkill *message);

#pragma mark - PB3Seckill

typedef GPB_ENUM(PB3Seckill_FieldNumber) {
  PB3Seckill_FieldNumber_Score = 1,
  PB3Seckill_FieldNumber_StartTime = 2,
  PB3Seckill_FieldNumber_EndTime = 3,
  PB3Seckill_FieldNumber_IsUsed = 4,
};

@interface PB3Seckill : GPBMessage

/** 门槛分 */
@property(nonatomic, readwrite) int32_t score;

/** 开始显示时间(时间戳，秒) */
@property(nonatomic, readwrite) int64_t startTime;

/** 结束显示时间(时间戳，秒) */
@property(nonatomic, readwrite) int64_t endTime;

/** 是否已使用 */
@property(nonatomic, readwrite) BOOL isUsed;

@end

#pragma mark - PB3Taunt

typedef GPB_ENUM(PB3Taunt_FieldNumber) {
  PB3Taunt_FieldNumber_Gold = 1,
  PB3Taunt_FieldNumber_GoldSuperposition = 2,
};

@interface PB3Taunt : GPBMessage

/** 金币 */
@property(nonatomic, readwrite) int32_t gold;

/** 是否金币叠加 */
@property(nonatomic, readwrite) BOOL goldSuperposition;

@end

#pragma mark - PB3PkTreasureBox

typedef GPB_ENUM(PB3PkTreasureBox_FieldNumber) {
  PB3PkTreasureBox_FieldNumber_Id_p = 1,
  PB3PkTreasureBox_FieldNumber_Name = 2,
  PB3PkTreasureBox_FieldNumber_RoomId = 3,
  PB3PkTreasureBox_FieldNumber_EndTime = 4,
};

/**
 * cmdid=800128
 **/
@interface PB3PkTreasureBox : GPBMessage

/** 唯一ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** 宝箱名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 房间Id */
@property(nonatomic, readwrite) int64_t roomId;

/** 消失时间(时间戳，秒) */
@property(nonatomic, readwrite) int64_t endTime;

@end

#pragma mark - PB3OpenPkTreasureBoxReq

typedef GPB_ENUM(PB3OpenPkTreasureBoxReq_FieldNumber) {
  PB3OpenPkTreasureBoxReq_FieldNumber_Id_p = 1,
  PB3OpenPkTreasureBoxReq_FieldNumber_RoomId = 2,
};

@interface PB3OpenPkTreasureBoxReq : GPBMessage

/** 唯一ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** 房间ID */
@property(nonatomic, readwrite) int64_t roomId;

@end

#pragma mark - PB3OpenPkTreasureBoxRes

typedef GPB_ENUM(PB3OpenPkTreasureBoxRes_FieldNumber) {
  PB3OpenPkTreasureBoxRes_FieldNumber_Status = 1,
  PB3OpenPkTreasureBoxRes_FieldNumber_Icon = 2,
  PB3OpenPkTreasureBoxRes_FieldNumber_Content = 3,
  PB3OpenPkTreasureBoxRes_FieldNumber_ValidTime = 4,
};

@interface PB3OpenPkTreasureBoxRes : GPBMessage

/** 领取状态 */
@property(nonatomic, readwrite) PB3TreasureBoxStatus status;

/** 奖励的图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 奖励内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

/** 有效时长 */
@property(nonatomic, readwrite) int64_t validTime;

@end

/**
 * Fetches the raw value of a @c PB3OpenPkTreasureBoxRes's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3OpenPkTreasureBoxRes_Status_RawValue(PB3OpenPkTreasureBoxRes *message);
/**
 * Sets the raw value of an @c PB3OpenPkTreasureBoxRes's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3OpenPkTreasureBoxRes_Status_RawValue(PB3OpenPkTreasureBoxRes *message, int32_t value);

#pragma mark - PB3InPkRankListReq

@interface PB3InPkRankListReq : GPBMessage

@end

#pragma mark - PB3InPkRankListRes

typedef GPB_ENUM(PB3InPkRankListRes_FieldNumber) {
  PB3InPkRankListRes_FieldNumber_ListArray = 1,
};

@interface PB3InPkRankListRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3InPkRank*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3InPkRank

typedef GPB_ENUM(PB3InPkRank_FieldNumber) {
  PB3InPkRank_FieldNumber_TeamsArray = 1,
};

@interface PB3InPkRank : GPBMessage

/** 红色方 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3InPkTeam*> *teamsArray;
/** The number of items in @c teamsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger teamsArray_Count;

@end

#pragma mark - PB3InPkTeam

typedef GPB_ENUM(PB3InPkTeam_FieldNumber) {
  PB3InPkTeam_FieldNumber_RoomId = 1,
  PB3InPkTeam_FieldNumber_HostId = 2,
  PB3InPkTeam_FieldNumber_HostName = 3,
  PB3InPkTeam_FieldNumber_HostIcon = 4,
  PB3InPkTeam_FieldNumber_Income = 5,
  PB3InPkTeam_FieldNumber_WinOrLose = 6,
};

@interface PB3InPkTeam : GPBMessage

/** 房间ID */
@property(nonatomic, readwrite) int64_t roomId;

/** 主持ID */
@property(nonatomic, readwrite) int64_t hostId;

/** 主持名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *hostName;

/** 主持头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *hostIcon;

/** 进度条的值，pk值 */
@property(nonatomic, readwrite) int32_t income;

/** 连胜或连败次数(正数为连胜，负数为连负) */
@property(nonatomic, readwrite) int32_t winOrLose;

@end

#pragma mark - PB3WeekPkRankListReq

typedef GPB_ENUM(PB3WeekPkRankListReq_FieldNumber) {
  PB3WeekPkRankListReq_FieldNumber_Page = 1,
  PB3WeekPkRankListReq_FieldNumber_PageSize = 2,
  PB3WeekPkRankListReq_FieldNumber_Type = 3,
};

@interface PB3WeekPkRankListReq : GPBMessage

/** 页数，从1开始 */
@property(nonatomic, readwrite) int32_t page;

/** 每页数量 */
@property(nonatomic, readwrite) int32_t pageSize;

/** 本周榜/上周榜 */
@property(nonatomic, readwrite) PB3WeekPkRankType type;

@end

/**
 * Fetches the raw value of a @c PB3WeekPkRankListReq's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3WeekPkRankListReq_Type_RawValue(PB3WeekPkRankListReq *message);
/**
 * Sets the raw value of an @c PB3WeekPkRankListReq's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3WeekPkRankListReq_Type_RawValue(PB3WeekPkRankListReq *message, int32_t value);

#pragma mark - PB3WeekPkRankListRes

typedef GPB_ENUM(PB3WeekPkRankListRes_FieldNumber) {
  PB3WeekPkRankListRes_FieldNumber_ListArray = 1,
};

@interface PB3WeekPkRankListRes : GPBMessage

/** PK周榜 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3WeekPkRank*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3WeekPkRank

typedef GPB_ENUM(PB3WeekPkRank_FieldNumber) {
  PB3WeekPkRank_FieldNumber_HostId = 1,
  PB3WeekPkRank_FieldNumber_HostName = 2,
  PB3WeekPkRank_FieldNumber_HostIcon = 3,
  PB3WeekPkRank_FieldNumber_Score = 4,
  PB3WeekPkRank_FieldNumber_MvpId = 5,
  PB3WeekPkRank_FieldNumber_MvpName = 6,
  PB3WeekPkRank_FieldNumber_MvpIcon = 7,
  PB3WeekPkRank_FieldNumber_WinOrLose = 8,
};

@interface PB3WeekPkRank : GPBMessage

/** 主持ID */
@property(nonatomic, readwrite) int64_t hostId;

/** 主持名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *hostName;

/** 主持头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *hostIcon;

/** 分数 */
@property(nonatomic, readwrite) int32_t score;

/** MVP用户ID */
@property(nonatomic, readwrite) int64_t mvpId;

/** MVP用户名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *mvpName;

/** mvp头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *mvpIcon;

/** 连胜或连败次数(正数为连胜，负数为连负) */
@property(nonatomic, readwrite) int32_t winOrLose;

@end

#pragma mark - PB3PkRecInviteListReq

typedef GPB_ENUM(PB3PkRecInviteListReq_FieldNumber) {
  PB3PkRecInviteListReq_FieldNumber_IsFromMatch = 1,
};

@interface PB3PkRecInviteListReq : GPBMessage

/** 是否从匹配超时点击的 */
@property(nonatomic, readwrite) BOOL isFromMatch;

@end

#pragma mark - PB3PkRecInviteListRes

typedef GPB_ENUM(PB3PkRecInviteListRes_FieldNumber) {
  PB3PkRecInviteListRes_FieldNumber_PlayersArray = 1,
};

@interface PB3PkRecInviteListRes : GPBMessage

/** 推荐可邀请人 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3PkPlayer*> *playersArray;
/** The number of items in @c playersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger playersArray_Count;

@end

#pragma mark - PB3PkInviteReq

typedef GPB_ENUM(PB3PkInviteReq_FieldNumber) {
  PB3PkInviteReq_FieldNumber_InvitedPlayerId = 1,
  PB3PkInviteReq_FieldNumber_InvitedRoomId = 2,
};

@interface PB3PkInviteReq : GPBMessage

/** 被邀请人ID 支持短号 */
@property(nonatomic, readwrite) int64_t invitedPlayerId;

/** 要邀请房间ID 支持短号 */
@property(nonatomic, readwrite) int64_t invitedRoomId;

@end

#pragma mark - PB3PkInviteRes

typedef GPB_ENUM(PB3PkInviteRes_FieldNumber) {
  PB3PkInviteRes_FieldNumber_InviteId = 1,
  PB3PkInviteRes_FieldNumber_PlayersArray = 2,
  PB3PkInviteRes_FieldNumber_Tip = 3,
  PB3PkInviteRes_FieldNumber_EndTime = 4,
};

@interface PB3PkInviteRes : GPBMessage

/** 邀请id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *inviteId;

/** 邀请双方信息 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3PkPlayer*> *playersArray;
/** The number of items in @c playersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger playersArray_Count;

/** 提示信息 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tip;

/** 邀请超时时间结束时间戳 */
@property(nonatomic, readwrite) int64_t endTime;

@end

#pragma mark - PB3PkInviteInfo

typedef GPB_ENUM(PB3PkInviteInfo_FieldNumber) {
  PB3PkInviteInfo_FieldNumber_InviteId = 1,
  PB3PkInviteInfo_FieldNumber_Player = 2,
  PB3PkInviteInfo_FieldNumber_EndTime = 3,
  PB3PkInviteInfo_FieldNumber_OperatorId = 4,
  PB3PkInviteInfo_FieldNumber_PkInviteAction = 5,
};

/**
 * cmdid=800129
 **/
@interface PB3PkInviteInfo : GPBMessage

/** 邀请id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *inviteId;

/** 邀请人信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3PkPlayer *player;
/** Test to see if @c player has been set. */
@property(nonatomic, readwrite) BOOL hasPlayer;

/** 邀请超时时间结束时间戳 */
@property(nonatomic, readwrite) int64_t endTime;

/** 取消、拒绝邀请操作人的用户id */
@property(nonatomic, readwrite) int64_t operatorId;

/** 邀请操作状态 */
@property(nonatomic, readwrite) PB3PkInviteAction pkInviteAction;

@end

/**
 * Fetches the raw value of a @c PB3PkInviteInfo's @c pkInviteAction property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3PkInviteInfo_PkInviteAction_RawValue(PB3PkInviteInfo *message);
/**
 * Sets the raw value of an @c PB3PkInviteInfo's @c pkInviteAction property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3PkInviteInfo_PkInviteAction_RawValue(PB3PkInviteInfo *message, int32_t value);

#pragma mark - PB3PkInviteCancelReq

typedef GPB_ENUM(PB3PkInviteCancelReq_FieldNumber) {
  PB3PkInviteCancelReq_FieldNumber_InviteId = 1,
};

@interface PB3PkInviteCancelReq : GPBMessage

/** 邀请id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *inviteId;

@end

#pragma mark - PB3PkInviteCancelRes

@interface PB3PkInviteCancelRes : GPBMessage

@end

#pragma mark - PB3PkInviteRejectReq

typedef GPB_ENUM(PB3PkInviteRejectReq_FieldNumber) {
  PB3PkInviteRejectReq_FieldNumber_RejectType = 1,
  PB3PkInviteRejectReq_FieldNumber_InviteId = 2,
};

@interface PB3PkInviteRejectReq : GPBMessage

/** 拒绝类型 */
@property(nonatomic, readwrite) PB3PkInviteRejectType rejectType;

/** 邀请id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *inviteId;

@end

/**
 * Fetches the raw value of a @c PB3PkInviteRejectReq's @c rejectType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3PkInviteRejectReq_RejectType_RawValue(PB3PkInviteRejectReq *message);
/**
 * Sets the raw value of an @c PB3PkInviteRejectReq's @c rejectType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3PkInviteRejectReq_RejectType_RawValue(PB3PkInviteRejectReq *message, int32_t value);

#pragma mark - PB3PkInviteRejectRes

@interface PB3PkInviteRejectRes : GPBMessage

@end

#pragma mark - PB3PkInviteAcceptReq

typedef GPB_ENUM(PB3PkInviteAcceptReq_FieldNumber) {
  PB3PkInviteAcceptReq_FieldNumber_InviteId = 1,
};

@interface PB3PkInviteAcceptReq : GPBMessage

/** 邀请id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *inviteId;

@end

#pragma mark - PB3PkInviteAcceptRes

@interface PB3PkInviteAcceptRes : GPBMessage

@end

#pragma mark - PB3PkMatchReq

@interface PB3PkMatchReq : GPBMessage

@end

#pragma mark - PB3PkMatchRes

typedef GPB_ENUM(PB3PkMatchRes_FieldNumber) {
  PB3PkMatchRes_FieldNumber_Player = 1,
  PB3PkMatchRes_FieldNumber_TimeoutAt = 2,
  PB3PkMatchRes_FieldNumber_Tip = 3,
};

@interface PB3PkMatchRes : GPBMessage

/** 当前用户排名分数 */
@property(nonatomic, readwrite, strong, null_resettable) PB3PkPlayer *player;
/** Test to see if @c player has been set. */
@property(nonatomic, readwrite) BOOL hasPlayer;

/** 等待超时弹窗时间戳 */
@property(nonatomic, readwrite) int64_t timeoutAt;

/** 提示信息 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tip;

@end

#pragma mark - PB3PkMatchCancelReq

@interface PB3PkMatchCancelReq : GPBMessage

@end

#pragma mark - PB3PkMatchCancelRes

@interface PB3PkMatchCancelRes : GPBMessage

@end

#pragma mark - PB3PkMatchInfo

typedef GPB_ENUM(PB3PkMatchInfo_FieldNumber) {
  PB3PkMatchInfo_FieldNumber_MatchId = 1,
  PB3PkMatchInfo_FieldNumber_PlayersArray = 2,
  PB3PkMatchInfo_FieldNumber_EndTime = 3,
  PB3PkMatchInfo_FieldNumber_Msg = 4,
  PB3PkMatchInfo_FieldNumber_PkMatchAction = 5,
};

/**
 * cmdid=800130
 **/
@interface PB3PkMatchInfo : GPBMessage

/** 匹配id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *matchId;

/** 匹配双方、点击开始的用户 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3PkPlayer*> *playersArray;
/** The number of items in @c playersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger playersArray_Count;

/** 匹配成功等待点击开始时间结束时间戳 */
@property(nonatomic, readwrite) int64_t endTime;

/** 匹配超时、 提示信息 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;

/** 匹配操作状态 */
@property(nonatomic, readwrite) PB3PkMatchAction pkMatchAction;

@end

/**
 * Fetches the raw value of a @c PB3PkMatchInfo's @c pkMatchAction property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3PkMatchInfo_PkMatchAction_RawValue(PB3PkMatchInfo *message);
/**
 * Sets the raw value of an @c PB3PkMatchInfo's @c pkMatchAction property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3PkMatchInfo_PkMatchAction_RawValue(PB3PkMatchInfo *message, int32_t value);

#pragma mark - PB3PkMatchStartReq

typedef GPB_ENUM(PB3PkMatchStartReq_FieldNumber) {
  PB3PkMatchStartReq_FieldNumber_MatchId = 1,
};

@interface PB3PkMatchStartReq : GPBMessage

/** 匹配id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *matchId;

@end

#pragma mark - PB3PkMatchStartRes

@interface PB3PkMatchStartRes : GPBMessage

@end

#pragma mark - PB3PkMatchKeepWaitReq

@interface PB3PkMatchKeepWaitReq : GPBMessage

@end

#pragma mark - PB3PkMatchKeepWaitRes

@interface PB3PkMatchKeepWaitRes : GPBMessage

@end

#pragma mark - PB3PkProtectPush

typedef GPB_ENUM(PB3PkProtectPush_FieldNumber) {
  PB3PkProtectPush_FieldNumber_EndTime = 1,
};

/**
 * cmdid=800131
 **/
@interface PB3PkProtectPush : GPBMessage

/** 结束时间戳(秒) */
@property(nonatomic, readwrite) int64_t endTime;

@end

#pragma mark - PB3PkMvpGlobalPush

typedef GPB_ENUM(PB3PkMvpGlobalPush_FieldNumber) {
  PB3PkMvpGlobalPush_FieldNumber_MvpId = 1,
  PB3PkMvpGlobalPush_FieldNumber_MvpName = 2,
  PB3PkMvpGlobalPush_FieldNumber_RoomId = 3,
};

/**
 * cmdid=800132
 **/
@interface PB3PkMvpGlobalPush : GPBMessage

/** MVP的ID */
@property(nonatomic, readwrite) int64_t mvpId;

/** MVP名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *mvpName;

/** 获胜房间ID */
@property(nonatomic, readwrite) int64_t roomId;

@end

#pragma mark - PB3PkRewardTicketPush

typedef GPB_ENUM(PB3PkRewardTicketPush_FieldNumber) {
  PB3PkRewardTicketPush_FieldNumber_Ticket = 1,
  PB3PkRewardTicketPush_FieldNumber_RoomId = 2,
};

/**
 * cmdid=800133
 **/
@interface PB3PkRewardTicketPush : GPBMessage

/** 获得钻石数 */
@property(nonatomic, readwrite) int32_t ticket;

/** 当前PK的房间 */
@property(nonatomic, readwrite) int64_t roomId;

@end

#pragma mark - PB3PkTauntRoomNoticePush

typedef GPB_ENUM(PB3PkTauntRoomNoticePush_FieldNumber) {
  PB3PkTauntRoomNoticePush_FieldNumber_UseTauntPlayerId = 1,
  PB3PkTauntRoomNoticePush_FieldNumber_UseTauntPlayerName = 2,
  PB3PkTauntRoomNoticePush_FieldNumber_RoomId = 3,
  PB3PkTauntRoomNoticePush_FieldNumber_TauntRoomId = 4,
  PB3PkTauntRoomNoticePush_FieldNumber_TauntRoomName = 5,
};

/**
 * cmdid=800134
 **/
@interface PB3PkTauntRoomNoticePush : GPBMessage

/** 使用嘲讽的用户ID */
@property(nonatomic, readwrite) int64_t useTauntPlayerId;

/** 使用嘲讽的用户名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *useTauntPlayerName;

/** 发起嘲讽的房间ID */
@property(nonatomic, readwrite) int64_t roomId;

/** 被嘲讽的房间ID */
@property(nonatomic, readwrite) int64_t tauntRoomId;

/** 被嘲讽的房间名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tauntRoomName;

@end

#pragma mark - PB3PkHostInfo

typedef GPB_ENUM(PB3PkHostInfo_FieldNumber) {
  PB3PkHostInfo_FieldNumber_RoomId = 1,
  PB3PkHostInfo_FieldNumber_HostId = 2,
  PB3PkHostInfo_FieldNumber_Voice = 3,
  PB3PkHostInfo_FieldNumber_IsWinner = 4,
  PB3PkHostInfo_FieldNumber_OwnHostId = 5,
  PB3PkHostInfo_FieldNumber_Mute = 6,
  PB3PkHostInfo_FieldNumber_OpponentMute = 7,
};

/**
 * cmdid=800136
 **/
@interface PB3PkHostInfo : GPBMessage

/** 房间ID */
@property(nonatomic, readwrite) int64_t roomId;

/** 主持ID */
@property(nonatomic, readwrite) int64_t hostId;

/** 房间音质 */
@property(nonatomic, readwrite) enum PB3RoomVoice voice;

/** 是否为获胜方的主持 */
@property(nonatomic, readwrite) BOOL isWinner;

/** 己方主持ID */
@property(nonatomic, readwrite) int64_t ownHostId;

/** 己方静音操作类型 */
@property(nonatomic, readwrite) PB3MuteType mute;

/** 对方静音操作类型 */
@property(nonatomic, readwrite) PB3MuteType opponentMute;

@end

/**
 * Fetches the raw value of a @c PB3PkHostInfo's @c voice property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3PkHostInfo_Voice_RawValue(PB3PkHostInfo *message);
/**
 * Sets the raw value of an @c PB3PkHostInfo's @c voice property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3PkHostInfo_Voice_RawValue(PB3PkHostInfo *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3PkHostInfo's @c mute property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3PkHostInfo_Mute_RawValue(PB3PkHostInfo *message);
/**
 * Sets the raw value of an @c PB3PkHostInfo's @c mute property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3PkHostInfo_Mute_RawValue(PB3PkHostInfo *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3PkHostInfo's @c opponentMute property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3PkHostInfo_OpponentMute_RawValue(PB3PkHostInfo *message);
/**
 * Sets the raw value of an @c PB3PkHostInfo's @c opponentMute property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3PkHostInfo_OpponentMute_RawValue(PB3PkHostInfo *message, int32_t value);

#pragma mark - PB3PkVoiceMuteReq

typedef GPB_ENUM(PB3PkVoiceMuteReq_FieldNumber) {
  PB3PkVoiceMuteReq_FieldNumber_Mute = 1,
  PB3PkVoiceMuteReq_FieldNumber_PkId = 2,
};

@interface PB3PkVoiceMuteReq : GPBMessage

/** 静音操作类型 */
@property(nonatomic, readwrite) PB3MuteType mute;

/** PKId */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pkId;

@end

/**
 * Fetches the raw value of a @c PB3PkVoiceMuteReq's @c mute property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3PkVoiceMuteReq_Mute_RawValue(PB3PkVoiceMuteReq *message);
/**
 * Sets the raw value of an @c PB3PkVoiceMuteReq's @c mute property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3PkVoiceMuteReq_Mute_RawValue(PB3PkVoiceMuteReq *message, int32_t value);

#pragma mark - PB3PkVoiceMuteRes

@interface PB3PkVoiceMuteRes : GPBMessage

@end

#pragma mark - PB3PkPushMuteType

typedef GPB_ENUM(PB3PkPushMuteType_FieldNumber) {
  PB3PkPushMuteType_FieldNumber_Mute = 1,
  PB3PkPushMuteType_FieldNumber_RoomId = 2,
};

/**
 * cmdid=800137
 **/
@interface PB3PkPushMuteType : GPBMessage

/** 静音操作类型 */
@property(nonatomic, readwrite) PB3MuteType mute;

/** 静音的房间ID */
@property(nonatomic, readwrite) int64_t roomId;

@end

/**
 * Fetches the raw value of a @c PB3PkPushMuteType's @c mute property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3PkPushMuteType_Mute_RawValue(PB3PkPushMuteType *message);
/**
 * Sets the raw value of an @c PB3PkPushMuteType's @c mute property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3PkPushMuteType_Mute_RawValue(PB3PkPushMuteType *message, int32_t value);

#pragma mark - PB3PkStartPunishReq

typedef GPB_ENUM(PB3PkStartPunishReq_FieldNumber) {
  PB3PkStartPunishReq_FieldNumber_PkId = 1,
};

@interface PB3PkStartPunishReq : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *pkId;

@end

#pragma mark - PB3PkStartPunishRes

@interface PB3PkStartPunishRes : GPBMessage

@end

#pragma mark - PB3SingleLivePkInfo

typedef GPB_ENUM(PB3SingleLivePkInfo_FieldNumber) {
  PB3SingleLivePkInfo_FieldNumber_Id_p = 1,
  PB3SingleLivePkInfo_FieldNumber_PkReward = 2,
  PB3SingleLivePkInfo_FieldNumber_TeamsArray = 3,
  PB3SingleLivePkInfo_FieldNumber_EndTime = 4,
  PB3SingleLivePkInfo_FieldNumber_Timestamp = 5,
  PB3SingleLivePkInfo_FieldNumber_RewardRate = 6,
  PB3SingleLivePkInfo_FieldNumber_TipsArray = 7,
  PB3SingleLivePkInfo_FieldNumber_ScrollTime = 8,
  PB3SingleLivePkInfo_FieldNumber_Mode = 9,
  PB3SingleLivePkInfo_FieldNumber_SecKillId = 10,
  PB3SingleLivePkInfo_FieldNumber_CancelScore = 11,
  PB3SingleLivePkInfo_FieldNumber_IsBeginPk = 12,
  PB3SingleLivePkInfo_FieldNumber_DeviceType = 13,
  PB3SingleLivePkInfo_FieldNumber_OpenTime = 14,
  PB3SingleLivePkInfo_FieldNumber_PkStatus = 15,
  PB3SingleLivePkInfo_FieldNumber_PunishContent = 16,
  PB3SingleLivePkInfo_FieldNumber_IsEndPk = 17,
  PB3SingleLivePkInfo_FieldNumber_RoomInfoArray = 18,
  PB3SingleLivePkInfo_FieldNumber_Voice = 19,
  PB3SingleLivePkInfo_FieldNumber_RouterURL = 20,
};

/**
 * ////////////////////////////// 个播PK //////////////////////////////////
 * cmdid=800138
 **/
@interface PB3SingleLivePkInfo : GPBMessage

/** 唯一ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** PK赏金值 */
@property(nonatomic, readwrite) int32_t pkReward;

/** 红队 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SingleLivePkTeam*> *teamsArray;
/** The number of items in @c teamsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger teamsArray_Count;

/** 结束时间(秒) */
@property(nonatomic, readwrite) int64_t endTime;

/** 时间戳(毫秒) */
@property(nonatomic, readwrite) int64_t timestamp;

/** 赏金比例(如：10%，则传10；该值大于0，才显示赏金池及胜利后分金币动画) */
@property(nonatomic, readwrite) int32_t rewardRate;

/** 轮播tips */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *tipsArray;
/** The number of items in @c tipsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger tipsArray_Count;

/** 轮播时间 */
@property(nonatomic, readwrite) int32_t scrollTime;

/** PK模式 */
@property(nonatomic, readwrite) enum PB3SingleLivePkMode mode;

/** 被秒杀的房间ID，ID>0，处于秒杀倒计时 */
@property(nonatomic, readwrite) int64_t secKillId;

/** 取消秒杀的分数 */
@property(nonatomic, readwrite) int32_t cancelScore;

/** 是否开始PK的推送 */
@property(nonatomic, readwrite) BOOL isBeginPk;

/** 设备类型 */
@property(nonatomic, readwrite) enum PB3DeviceType deviceType;

/** 展开时长(秒)，0则一直展开 */
@property(nonatomic, readwrite) int32_t openTime;

/** PK状态 */
@property(nonatomic, readwrite) PB3SingleLivePkStatus pkStatus;

/** 惩罚内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *punishContent;

/** 是否结束PK的推送 */
@property(nonatomic, readwrite) BOOL isEndPk;

/** 个播PK房间信息房间信息 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SingleLivePkRoomInfo*> *roomInfoArray;
/** The number of items in @c roomInfoArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger roomInfoArray_Count;

/** 房间音质 */
@property(nonatomic, readwrite) enum PB3RoomVoice voice;

/** 规则的路由 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *routerURL;

@end

/**
 * Fetches the raw value of a @c PB3SingleLivePkInfo's @c mode property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SingleLivePkInfo_Mode_RawValue(PB3SingleLivePkInfo *message);
/**
 * Sets the raw value of an @c PB3SingleLivePkInfo's @c mode property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SingleLivePkInfo_Mode_RawValue(PB3SingleLivePkInfo *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3SingleLivePkInfo's @c deviceType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SingleLivePkInfo_DeviceType_RawValue(PB3SingleLivePkInfo *message);
/**
 * Sets the raw value of an @c PB3SingleLivePkInfo's @c deviceType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SingleLivePkInfo_DeviceType_RawValue(PB3SingleLivePkInfo *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3SingleLivePkInfo's @c pkStatus property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SingleLivePkInfo_PkStatus_RawValue(PB3SingleLivePkInfo *message);
/**
 * Sets the raw value of an @c PB3SingleLivePkInfo's @c pkStatus property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SingleLivePkInfo_PkStatus_RawValue(PB3SingleLivePkInfo *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3SingleLivePkInfo's @c voice property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SingleLivePkInfo_Voice_RawValue(PB3SingleLivePkInfo *message);
/**
 * Sets the raw value of an @c PB3SingleLivePkInfo's @c voice property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SingleLivePkInfo_Voice_RawValue(PB3SingleLivePkInfo *message, int32_t value);

#pragma mark - PB3SingleLivePkRoomInfo

typedef GPB_ENUM(PB3SingleLivePkRoomInfo_FieldNumber) {
  PB3SingleLivePkRoomInfo_FieldNumber_RoomId = 1,
  PB3SingleLivePkRoomInfo_FieldNumber_ChairPlayerArray = 2,
  PB3SingleLivePkRoomInfo_FieldNumber_Mute = 3,
  PB3SingleLivePkRoomInfo_FieldNumber_OpponentMute = 4,
};

@interface PB3SingleLivePkRoomInfo : GPBMessage

/** 房间ID */
@property(nonatomic, readwrite) int64_t roomId;

/** 麦上用户 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SingleLiveChairPlayer*> *chairPlayerArray;
/** The number of items in @c chairPlayerArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger chairPlayerArray_Count;

/** 己方静音操作类型 */
@property(nonatomic, readwrite) PB3SingleLiveMuteType mute;

/** 对方静音操作类型 */
@property(nonatomic, readwrite) PB3SingleLiveMuteType opponentMute;

@end

/**
 * Fetches the raw value of a @c PB3SingleLivePkRoomInfo's @c mute property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SingleLivePkRoomInfo_Mute_RawValue(PB3SingleLivePkRoomInfo *message);
/**
 * Sets the raw value of an @c PB3SingleLivePkRoomInfo's @c mute property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SingleLivePkRoomInfo_Mute_RawValue(PB3SingleLivePkRoomInfo *message, int32_t value);

/**
 * Fetches the raw value of a @c PB3SingleLivePkRoomInfo's @c opponentMute property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SingleLivePkRoomInfo_OpponentMute_RawValue(PB3SingleLivePkRoomInfo *message);
/**
 * Sets the raw value of an @c PB3SingleLivePkRoomInfo's @c opponentMute property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SingleLivePkRoomInfo_OpponentMute_RawValue(PB3SingleLivePkRoomInfo *message, int32_t value);

#pragma mark - PB3SingleLivePkTeam

typedef GPB_ENUM(PB3SingleLivePkTeam_FieldNumber) {
  PB3SingleLivePkTeam_FieldNumber_RoomId = 1,
  PB3SingleLivePkTeam_FieldNumber_HostId = 2,
  PB3SingleLivePkTeam_FieldNumber_HostName = 3,
  PB3SingleLivePkTeam_FieldNumber_HostIcon = 4,
  PB3SingleLivePkTeam_FieldNumber_Income = 5,
  PB3SingleLivePkTeam_FieldNumber_PlayerListArray = 6,
  PB3SingleLivePkTeam_FieldNumber_Result = 7,
  PB3SingleLivePkTeam_FieldNumber_IsPunishment = 8,
};

@interface PB3SingleLivePkTeam : GPBMessage

/** 房间ID */
@property(nonatomic, readwrite) int64_t roomId;

/** 主持ID */
@property(nonatomic, readwrite) int64_t hostId;

/** 主持名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *hostName;

/** 主持头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *hostIcon;

/** 进度条的值，pk值 */
@property(nonatomic, readwrite) int32_t income;

/** 贡献前三的老板 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SingleLivePkPlayer*> *playerListArray;
/** The number of items in @c playerListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger playerListArray_Count;

/** PK结果 */
@property(nonatomic, readwrite) PB3SingleLivePkResult result;

/** 主持是否有PK互动连麦弹窗 */
@property(nonatomic, readwrite) BOOL isPunishment;

@end

/**
 * Fetches the raw value of a @c PB3SingleLivePkTeam's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SingleLivePkTeam_Result_RawValue(PB3SingleLivePkTeam *message);
/**
 * Sets the raw value of an @c PB3SingleLivePkTeam's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SingleLivePkTeam_Result_RawValue(PB3SingleLivePkTeam *message, int32_t value);

#pragma mark - PB3SingleLiveChairPlayer

typedef GPB_ENUM(PB3SingleLiveChairPlayer_FieldNumber) {
  PB3SingleLiveChairPlayer_FieldNumber_PlayerId = 1,
  PB3SingleLiveChairPlayer_FieldNumber_Name = 2,
  PB3SingleLiveChairPlayer_FieldNumber_Icon = 3,
  PB3SingleLiveChairPlayer_FieldNumber_ChairId = 4,
  PB3SingleLiveChairPlayer_FieldNumber_EffectId = 5,
  PB3SingleLiveChairPlayer_FieldNumber_Sex = 6,
};

@interface PB3SingleLiveChairPlayer : GPBMessage

@property(nonatomic, readwrite) int64_t playerId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

@property(nonatomic, readwrite) int32_t chairId;

/** 主持上麦特效ID */
@property(nonatomic, readwrite) int32_t effectId;

/** 性别 */
@property(nonatomic, readwrite) enum PB3SexType sex;

@end

/**
 * Fetches the raw value of a @c PB3SingleLiveChairPlayer's @c sex property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SingleLiveChairPlayer_Sex_RawValue(PB3SingleLiveChairPlayer *message);
/**
 * Sets the raw value of an @c PB3SingleLiveChairPlayer's @c sex property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SingleLiveChairPlayer_Sex_RawValue(PB3SingleLiveChairPlayer *message, int32_t value);

#pragma mark - PB3SingleLivePkPlayer

typedef GPB_ENUM(PB3SingleLivePkPlayer_FieldNumber) {
  PB3SingleLivePkPlayer_FieldNumber_PlayerId = 1,
  PB3SingleLivePkPlayer_FieldNumber_Name = 2,
  PB3SingleLivePkPlayer_FieldNumber_Icon = 3,
  PB3SingleLivePkPlayer_FieldNumber_Score = 4,
  PB3SingleLivePkPlayer_FieldNumber_Rank = 5,
  PB3SingleLivePkPlayer_FieldNumber_StartMatchTime = 6,
  PB3SingleLivePkPlayer_FieldNumber_RoomId = 7,
};

@interface PB3SingleLivePkPlayer : GPBMessage

/** 用户ID */
@property(nonatomic, readwrite) int64_t playerId;

/** 用户名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 贡献值 */
@property(nonatomic, readwrite) uint32_t score;

/** 排名 */
@property(nonatomic, readwrite) uint32_t rank;

/** 当前用户开始匹配时间戳 */
@property(nonatomic, readwrite) int64_t startMatchTime;

/** 房间id */
@property(nonatomic, readwrite) int64_t roomId;

@end

#pragma mark - PB3SingleLivePkTeamPush

typedef GPB_ENUM(PB3SingleLivePkTeamPush_FieldNumber) {
  PB3SingleLivePkTeamPush_FieldNumber_Id_p = 1,
  PB3SingleLivePkTeamPush_FieldNumber_PkReward = 2,
  PB3SingleLivePkTeamPush_FieldNumber_Team = 3,
  PB3SingleLivePkTeamPush_FieldNumber_Timestamp = 4,
};

/**
 * cmdid=800139
 **/
@interface PB3SingleLivePkTeamPush : GPBMessage

/** 唯一ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** PK赏金值 */
@property(nonatomic, readwrite) int32_t pkReward;

/** 红队 */
@property(nonatomic, readwrite, strong, null_resettable) PB3SingleLivePkTeam *team;
/** Test to see if @c team has been set. */
@property(nonatomic, readwrite) BOOL hasTeam;

/** 时间戳(毫秒) */
@property(nonatomic, readwrite) int64_t timestamp;

@end

#pragma mark - PB3SingleLivePkSkillPush

typedef GPB_ENUM(PB3SingleLivePkSkillPush_FieldNumber) {
  PB3SingleLivePkSkillPush_FieldNumber_Id_p = 1,
  PB3SingleLivePkSkillPush_FieldNumber_Skill = 2,
  PB3SingleLivePkSkillPush_FieldNumber_UseRoomId = 3,
  PB3SingleLivePkSkillPush_FieldNumber_TargetRoomId = 4,
  PB3SingleLivePkSkillPush_FieldNumber_SecKill = 5,
  PB3SingleLivePkSkillPush_FieldNumber_Taunt = 6,
};

typedef GPB_ENUM(PB3SingleLivePkSkillPush_Data_OneOfCase) {
  PB3SingleLivePkSkillPush_Data_OneOfCase_GPBUnsetOneOfCase = 0,
  PB3SingleLivePkSkillPush_Data_OneOfCase_SecKill = 5,
  PB3SingleLivePkSkillPush_Data_OneOfCase_Taunt = 6,
};

/**
 * cmdid=800140
 **/
@interface PB3SingleLivePkSkillPush : GPBMessage

/** 唯一ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** 技能 */
@property(nonatomic, readwrite) enum PB3SingleLivePkSkillType skill;

/** 使用技能的房间ID */
@property(nonatomic, readwrite) int64_t useRoomId;

/** 对手的房间ID */
@property(nonatomic, readwrite) int64_t targetRoomId;

@property(nonatomic, readonly) PB3SingleLivePkSkillPush_Data_OneOfCase dataOneOfCase;

/** 秒杀数据 */
@property(nonatomic, readwrite, strong, null_resettable) PB3SingleLiveSeckillPush *secKill;

/** 嘲讽数据 */
@property(nonatomic, readwrite, strong, null_resettable) PB3SingleLiveTauntPush *taunt;

@end

/**
 * Fetches the raw value of a @c PB3SingleLivePkSkillPush's @c skill property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SingleLivePkSkillPush_Skill_RawValue(PB3SingleLivePkSkillPush *message);
/**
 * Sets the raw value of an @c PB3SingleLivePkSkillPush's @c skill property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SingleLivePkSkillPush_Skill_RawValue(PB3SingleLivePkSkillPush *message, int32_t value);

/**
 * Clears whatever value was set for the oneof 'data'.
 **/
void PB3SingleLivePkSkillPush_ClearDataOneOfCase(PB3SingleLivePkSkillPush *message);

#pragma mark - PB3SingleLiveSeckillPush

typedef GPB_ENUM(PB3SingleLiveSeckillPush_FieldNumber) {
  PB3SingleLiveSeckillPush_FieldNumber_Status = 1,
  PB3SingleLiveSeckillPush_FieldNumber_EndTime = 2,
  PB3SingleLiveSeckillPush_FieldNumber_CancelScore = 3,
  PB3SingleLiveSeckillPush_FieldNumber_CancelTime = 4,
};

@interface PB3SingleLiveSeckillPush : GPBMessage

@property(nonatomic, readwrite) PB3SingleLiveSeckillStatus status;

/** 结束时间(秒)，更新PK面板的倒计时(PkInfo的end_time) */
@property(nonatomic, readwrite) int64_t endTime;

/** 阻止秒杀PK值 */
@property(nonatomic, readwrite) int32_t cancelScore;

/** 秒杀反应时间(30)秒 */
@property(nonatomic, readwrite) int32_t cancelTime;

@end

/**
 * Fetches the raw value of a @c PB3SingleLiveSeckillPush's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SingleLiveSeckillPush_Status_RawValue(PB3SingleLiveSeckillPush *message);
/**
 * Sets the raw value of an @c PB3SingleLiveSeckillPush's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SingleLiveSeckillPush_Status_RawValue(PB3SingleLiveSeckillPush *message, int32_t value);

#pragma mark - PB3SingleLiveTauntPush

typedef GPB_ENUM(PB3SingleLiveTauntPush_FieldNumber) {
  PB3SingleLiveTauntPush_FieldNumber_Gold = 1,
};

@interface PB3SingleLiveTauntPush : GPBMessage

/** 使用后的金币 */
@property(nonatomic, readwrite) int32_t gold;

@end

#pragma mark - PB3SingleLiveUsePkSkillReq

typedef GPB_ENUM(PB3SingleLiveUsePkSkillReq_FieldNumber) {
  PB3SingleLiveUsePkSkillReq_FieldNumber_Id_p = 1,
  PB3SingleLiveUsePkSkillReq_FieldNumber_Skill = 2,
  PB3SingleLiveUsePkSkillReq_FieldNumber_Gold = 3,
};

@interface PB3SingleLiveUsePkSkillReq : GPBMessage

/** 唯一ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** 技能 */
@property(nonatomic, readwrite) enum PB3SingleLivePkSkillType skill;

/** 使用嘲讽的金币 */
@property(nonatomic, readwrite) int32_t gold;

@end

/**
 * Fetches the raw value of a @c PB3SingleLiveUsePkSkillReq's @c skill property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SingleLiveUsePkSkillReq_Skill_RawValue(PB3SingleLiveUsePkSkillReq *message);
/**
 * Sets the raw value of an @c PB3SingleLiveUsePkSkillReq's @c skill property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SingleLiveUsePkSkillReq_Skill_RawValue(PB3SingleLiveUsePkSkillReq *message, int32_t value);

#pragma mark - PB3SingleLiveUsePkSkillRes

@interface PB3SingleLiveUsePkSkillRes : GPBMessage

@end

#pragma mark - PB3SingleLivePkSkillListReq

@interface PB3SingleLivePkSkillListReq : GPBMessage

@end

#pragma mark - PB3SingleLivePkSkillListRes

typedef GPB_ENUM(PB3SingleLivePkSkillListRes_FieldNumber) {
  PB3SingleLivePkSkillListRes_FieldNumber_SkillsArray = 1,
};

@interface PB3SingleLivePkSkillListRes : GPBMessage

/** 技能列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SingleLivePkSkill*> *skillsArray;
/** The number of items in @c skillsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger skillsArray_Count;

@end

#pragma mark - PB3SingleLivePkSkill

typedef GPB_ENUM(PB3SingleLivePkSkill_FieldNumber) {
  PB3SingleLivePkSkill_FieldNumber_Skill = 1,
  PB3SingleLivePkSkill_FieldNumber_Icon = 2,
  PB3SingleLivePkSkill_FieldNumber_SecKill = 3,
  PB3SingleLivePkSkill_FieldNumber_Taunt = 4,
};

typedef GPB_ENUM(PB3SingleLivePkSkill_Data_OneOfCase) {
  PB3SingleLivePkSkill_Data_OneOfCase_GPBUnsetOneOfCase = 0,
  PB3SingleLivePkSkill_Data_OneOfCase_SecKill = 3,
  PB3SingleLivePkSkill_Data_OneOfCase_Taunt = 4,
};

@interface PB3SingleLivePkSkill : GPBMessage

/** 技能类型 */
@property(nonatomic, readwrite) enum PB3SingleLivePkSkillType skill;

/** 技能图标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

@property(nonatomic, readonly) PB3SingleLivePkSkill_Data_OneOfCase dataOneOfCase;

/** 秒杀数据 */
@property(nonatomic, readwrite, strong, null_resettable) PB3SingleLiveSeckill *secKill;

/** 嘲讽数据 */
@property(nonatomic, readwrite, strong, null_resettable) PB3SingleLiveTaunt *taunt;

@end

/**
 * Fetches the raw value of a @c PB3SingleLivePkSkill's @c skill property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SingleLivePkSkill_Skill_RawValue(PB3SingleLivePkSkill *message);
/**
 * Sets the raw value of an @c PB3SingleLivePkSkill's @c skill property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SingleLivePkSkill_Skill_RawValue(PB3SingleLivePkSkill *message, int32_t value);

/**
 * Clears whatever value was set for the oneof 'data'.
 **/
void PB3SingleLivePkSkill_ClearDataOneOfCase(PB3SingleLivePkSkill *message);

#pragma mark - PB3SingleLiveSeckill

typedef GPB_ENUM(PB3SingleLiveSeckill_FieldNumber) {
  PB3SingleLiveSeckill_FieldNumber_Score = 1,
  PB3SingleLiveSeckill_FieldNumber_StartTime = 2,
  PB3SingleLiveSeckill_FieldNumber_EndTime = 3,
  PB3SingleLiveSeckill_FieldNumber_IsUsed = 4,
};

@interface PB3SingleLiveSeckill : GPBMessage

/** 门槛分 */
@property(nonatomic, readwrite) int32_t score;

/** 开始显示时间(时间戳，秒) */
@property(nonatomic, readwrite) int64_t startTime;

/** 结束显示时间(时间戳，秒) */
@property(nonatomic, readwrite) int64_t endTime;

/** 是否已使用 */
@property(nonatomic, readwrite) BOOL isUsed;

@end

#pragma mark - PB3SingleLiveTaunt

typedef GPB_ENUM(PB3SingleLiveTaunt_FieldNumber) {
  PB3SingleLiveTaunt_FieldNumber_Gold = 1,
  PB3SingleLiveTaunt_FieldNumber_GoldSuperposition = 2,
};

@interface PB3SingleLiveTaunt : GPBMessage

/** 金币 */
@property(nonatomic, readwrite) int32_t gold;

/** 是否金币叠加 */
@property(nonatomic, readwrite) BOOL goldSuperposition;

@end

#pragma mark - PB3SingleLivePkTreasureBox

typedef GPB_ENUM(PB3SingleLivePkTreasureBox_FieldNumber) {
  PB3SingleLivePkTreasureBox_FieldNumber_Id_p = 1,
  PB3SingleLivePkTreasureBox_FieldNumber_Name = 2,
  PB3SingleLivePkTreasureBox_FieldNumber_RoomId = 3,
  PB3SingleLivePkTreasureBox_FieldNumber_EndTime = 4,
};

/**
 * cmdid=800141
 **/
@interface PB3SingleLivePkTreasureBox : GPBMessage

/** 唯一ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** 宝箱名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 房间Id */
@property(nonatomic, readwrite) int64_t roomId;

/** 消失时间(时间戳，秒) */
@property(nonatomic, readwrite) int64_t endTime;

@end

#pragma mark - PB3SingleLiveInPkRankListReq

@interface PB3SingleLiveInPkRankListReq : GPBMessage

@end

#pragma mark - PB3SingleLiveInPkRankListRes

typedef GPB_ENUM(PB3SingleLiveInPkRankListRes_FieldNumber) {
  PB3SingleLiveInPkRankListRes_FieldNumber_ListArray = 1,
};

@interface PB3SingleLiveInPkRankListRes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SingleLiveInPkRank*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3SingleLiveInPkRank

typedef GPB_ENUM(PB3SingleLiveInPkRank_FieldNumber) {
  PB3SingleLiveInPkRank_FieldNumber_TeamsArray = 1,
};

@interface PB3SingleLiveInPkRank : GPBMessage

/** 红色方 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SingleLiveInPkTeam*> *teamsArray;
/** The number of items in @c teamsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger teamsArray_Count;

@end

#pragma mark - PB3SingleLiveInPkTeam

typedef GPB_ENUM(PB3SingleLiveInPkTeam_FieldNumber) {
  PB3SingleLiveInPkTeam_FieldNumber_RoomId = 1,
  PB3SingleLiveInPkTeam_FieldNumber_HostId = 2,
  PB3SingleLiveInPkTeam_FieldNumber_HostName = 3,
  PB3SingleLiveInPkTeam_FieldNumber_HostIcon = 4,
  PB3SingleLiveInPkTeam_FieldNumber_Income = 5,
  PB3SingleLiveInPkTeam_FieldNumber_WinOrLose = 6,
};

@interface PB3SingleLiveInPkTeam : GPBMessage

/** 房间ID */
@property(nonatomic, readwrite) int64_t roomId;

/** 主持ID */
@property(nonatomic, readwrite) int64_t hostId;

/** 主持名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *hostName;

/** 主持头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *hostIcon;

/** 进度条的值，pk值 */
@property(nonatomic, readwrite) int32_t income;

/** 连胜或连败次数(正数为连胜，负数为连负) */
@property(nonatomic, readwrite) int32_t winOrLose;

@end

#pragma mark - PB3SingleLiveWeekPkRankListReq

typedef GPB_ENUM(PB3SingleLiveWeekPkRankListReq_FieldNumber) {
  PB3SingleLiveWeekPkRankListReq_FieldNumber_Page = 1,
  PB3SingleLiveWeekPkRankListReq_FieldNumber_PageSize = 2,
  PB3SingleLiveWeekPkRankListReq_FieldNumber_Type = 3,
};

@interface PB3SingleLiveWeekPkRankListReq : GPBMessage

/** 页数，从1开始 */
@property(nonatomic, readwrite) int32_t page;

/** 每页数量 */
@property(nonatomic, readwrite) int32_t pageSize;

/** 本周榜/上周榜 */
@property(nonatomic, readwrite) PB3SingleLiveWeekPkRankType type;

@end

/**
 * Fetches the raw value of a @c PB3SingleLiveWeekPkRankListReq's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SingleLiveWeekPkRankListReq_Type_RawValue(PB3SingleLiveWeekPkRankListReq *message);
/**
 * Sets the raw value of an @c PB3SingleLiveWeekPkRankListReq's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SingleLiveWeekPkRankListReq_Type_RawValue(PB3SingleLiveWeekPkRankListReq *message, int32_t value);

#pragma mark - PB3SingleLiveWeekPkRankListRes

typedef GPB_ENUM(PB3SingleLiveWeekPkRankListRes_FieldNumber) {
  PB3SingleLiveWeekPkRankListRes_FieldNumber_ListArray = 1,
};

@interface PB3SingleLiveWeekPkRankListRes : GPBMessage

/** PK周榜 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SingleLiveWeekPkRank*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

#pragma mark - PB3SingleLiveWeekPkRank

typedef GPB_ENUM(PB3SingleLiveWeekPkRank_FieldNumber) {
  PB3SingleLiveWeekPkRank_FieldNumber_HostId = 1,
  PB3SingleLiveWeekPkRank_FieldNumber_HostName = 2,
  PB3SingleLiveWeekPkRank_FieldNumber_HostIcon = 3,
  PB3SingleLiveWeekPkRank_FieldNumber_Score = 4,
  PB3SingleLiveWeekPkRank_FieldNumber_MvpId = 5,
  PB3SingleLiveWeekPkRank_FieldNumber_MvpName = 6,
  PB3SingleLiveWeekPkRank_FieldNumber_MvpIcon = 7,
  PB3SingleLiveWeekPkRank_FieldNumber_WinOrLose = 8,
};

@interface PB3SingleLiveWeekPkRank : GPBMessage

/** 主持ID */
@property(nonatomic, readwrite) int64_t hostId;

/** 主持名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *hostName;

/** 主持头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *hostIcon;

/** 分数 */
@property(nonatomic, readwrite) int32_t score;

/** MVP用户ID */
@property(nonatomic, readwrite) int64_t mvpId;

/** MVP用户名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *mvpName;

/** mvp头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *mvpIcon;

/** 连胜或连败次数(正数为连胜，负数为连负) */
@property(nonatomic, readwrite) int32_t winOrLose;

@end

#pragma mark - PB3SingleLivePkRecInviteListReq

typedef GPB_ENUM(PB3SingleLivePkRecInviteListReq_FieldNumber) {
  PB3SingleLivePkRecInviteListReq_FieldNumber_IsFromMatch = 1,
};

@interface PB3SingleLivePkRecInviteListReq : GPBMessage

/** 是否从匹配超时点击的 */
@property(nonatomic, readwrite) BOOL isFromMatch;

@end

#pragma mark - PB3SingleLivePkRecInviteListRes

typedef GPB_ENUM(PB3SingleLivePkRecInviteListRes_FieldNumber) {
  PB3SingleLivePkRecInviteListRes_FieldNumber_PlayersArray = 1,
};

@interface PB3SingleLivePkRecInviteListRes : GPBMessage

/** 推荐可邀请人 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SingleLivePkPlayer*> *playersArray;
/** The number of items in @c playersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger playersArray_Count;

@end

#pragma mark - PB3SingleLivePkInviteReq

typedef GPB_ENUM(PB3SingleLivePkInviteReq_FieldNumber) {
  PB3SingleLivePkInviteReq_FieldNumber_InvitedPlayerId = 1,
  PB3SingleLivePkInviteReq_FieldNumber_InvitedRoomId = 2,
};

@interface PB3SingleLivePkInviteReq : GPBMessage

/** 被邀请人ID 支持短号 */
@property(nonatomic, readwrite) int64_t invitedPlayerId;

/** 要邀请房间ID 支持短号 */
@property(nonatomic, readwrite) int64_t invitedRoomId;

@end

#pragma mark - PB3SingleLivePkInviteRes

typedef GPB_ENUM(PB3SingleLivePkInviteRes_FieldNumber) {
  PB3SingleLivePkInviteRes_FieldNumber_InviteId = 1,
  PB3SingleLivePkInviteRes_FieldNumber_PlayersArray = 2,
  PB3SingleLivePkInviteRes_FieldNumber_Tip = 3,
  PB3SingleLivePkInviteRes_FieldNumber_EndTime = 4,
};

@interface PB3SingleLivePkInviteRes : GPBMessage

/** 邀请id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *inviteId;

/** 邀请双方信息 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SingleLivePkPlayer*> *playersArray;
/** The number of items in @c playersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger playersArray_Count;

/** 提示信息 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tip;

/** 邀请超时时间结束时间戳 */
@property(nonatomic, readwrite) int64_t endTime;

@end

#pragma mark - PB3SingleLivePkInviteInfo

typedef GPB_ENUM(PB3SingleLivePkInviteInfo_FieldNumber) {
  PB3SingleLivePkInviteInfo_FieldNumber_InviteId = 1,
  PB3SingleLivePkInviteInfo_FieldNumber_Player = 2,
  PB3SingleLivePkInviteInfo_FieldNumber_EndTime = 3,
  PB3SingleLivePkInviteInfo_FieldNumber_OperatorId = 4,
  PB3SingleLivePkInviteInfo_FieldNumber_PkInviteAction = 5,
};

/**
 * cmdid=800142
 **/
@interface PB3SingleLivePkInviteInfo : GPBMessage

/** 邀请id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *inviteId;

/** 邀请人信息 */
@property(nonatomic, readwrite, strong, null_resettable) PB3SingleLivePkPlayer *player;
/** Test to see if @c player has been set. */
@property(nonatomic, readwrite) BOOL hasPlayer;

/** 邀请超时时间结束时间戳 */
@property(nonatomic, readwrite) int64_t endTime;

/** 取消、拒绝邀请操作人的用户id */
@property(nonatomic, readwrite) int64_t operatorId;

/** 邀请操作状态 */
@property(nonatomic, readwrite) PB3SingleLivePkInviteAction pkInviteAction;

@end

/**
 * Fetches the raw value of a @c PB3SingleLivePkInviteInfo's @c pkInviteAction property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SingleLivePkInviteInfo_PkInviteAction_RawValue(PB3SingleLivePkInviteInfo *message);
/**
 * Sets the raw value of an @c PB3SingleLivePkInviteInfo's @c pkInviteAction property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SingleLivePkInviteInfo_PkInviteAction_RawValue(PB3SingleLivePkInviteInfo *message, int32_t value);

#pragma mark - PB3SingleLivePkInviteCancelReq

typedef GPB_ENUM(PB3SingleLivePkInviteCancelReq_FieldNumber) {
  PB3SingleLivePkInviteCancelReq_FieldNumber_InviteId = 1,
};

@interface PB3SingleLivePkInviteCancelReq : GPBMessage

/** 邀请id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *inviteId;

@end

#pragma mark - PB3SingleLivePkInviteCancelRes

@interface PB3SingleLivePkInviteCancelRes : GPBMessage

@end

#pragma mark - PB3SingleLivePkInviteRejectReq

typedef GPB_ENUM(PB3SingleLivePkInviteRejectReq_FieldNumber) {
  PB3SingleLivePkInviteRejectReq_FieldNumber_RejectType = 1,
  PB3SingleLivePkInviteRejectReq_FieldNumber_InviteId = 2,
};

@interface PB3SingleLivePkInviteRejectReq : GPBMessage

/** 拒绝类型 */
@property(nonatomic, readwrite) PB3SingleLivePkInviteRejectType rejectType;

/** 邀请id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *inviteId;

@end

/**
 * Fetches the raw value of a @c PB3SingleLivePkInviteRejectReq's @c rejectType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SingleLivePkInviteRejectReq_RejectType_RawValue(PB3SingleLivePkInviteRejectReq *message);
/**
 * Sets the raw value of an @c PB3SingleLivePkInviteRejectReq's @c rejectType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SingleLivePkInviteRejectReq_RejectType_RawValue(PB3SingleLivePkInviteRejectReq *message, int32_t value);

#pragma mark - PB3SingleLivePkInviteRejectRes

@interface PB3SingleLivePkInviteRejectRes : GPBMessage

@end

#pragma mark - PB3SingleLivePkInviteAcceptReq

typedef GPB_ENUM(PB3SingleLivePkInviteAcceptReq_FieldNumber) {
  PB3SingleLivePkInviteAcceptReq_FieldNumber_InviteId = 1,
};

@interface PB3SingleLivePkInviteAcceptReq : GPBMessage

/** 邀请id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *inviteId;

@end

#pragma mark - PB3SingleLivePkInviteAcceptRes

@interface PB3SingleLivePkInviteAcceptRes : GPBMessage

@end

#pragma mark - PB3SingleLivePkMatchReq

@interface PB3SingleLivePkMatchReq : GPBMessage

@end

#pragma mark - PB3SingleLivePkMatchRes

typedef GPB_ENUM(PB3SingleLivePkMatchRes_FieldNumber) {
  PB3SingleLivePkMatchRes_FieldNumber_Player = 1,
  PB3SingleLivePkMatchRes_FieldNumber_TimeoutAt = 2,
  PB3SingleLivePkMatchRes_FieldNumber_Tip = 3,
};

@interface PB3SingleLivePkMatchRes : GPBMessage

/** 当前用户排名分数 */
@property(nonatomic, readwrite, strong, null_resettable) PB3SingleLivePkPlayer *player;
/** Test to see if @c player has been set. */
@property(nonatomic, readwrite) BOOL hasPlayer;

/** 等待超时弹窗时间戳 */
@property(nonatomic, readwrite) int64_t timeoutAt;

/** 提示信息 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tip;

@end

#pragma mark - PB3SingleLivePkMatchCancelReq

@interface PB3SingleLivePkMatchCancelReq : GPBMessage

@end

#pragma mark - PB3SingleLivePkMatchCancelRes

@interface PB3SingleLivePkMatchCancelRes : GPBMessage

@end

#pragma mark - PB3SingleLivePkMatchInfo

typedef GPB_ENUM(PB3SingleLivePkMatchInfo_FieldNumber) {
  PB3SingleLivePkMatchInfo_FieldNumber_MatchId = 1,
  PB3SingleLivePkMatchInfo_FieldNumber_PlayersArray = 2,
  PB3SingleLivePkMatchInfo_FieldNumber_EndTime = 3,
  PB3SingleLivePkMatchInfo_FieldNumber_Msg = 4,
  PB3SingleLivePkMatchInfo_FieldNumber_PkMatchAction = 5,
};

/**
 * cmdid=800143
 **/
@interface PB3SingleLivePkMatchInfo : GPBMessage

/** 匹配id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *matchId;

/** 匹配双方、点击开始的用户 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PB3SingleLivePkPlayer*> *playersArray;
/** The number of items in @c playersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger playersArray_Count;

/** 匹配成功等待点击开始时间结束时间戳 */
@property(nonatomic, readwrite) int64_t endTime;

/** 匹配超时、 提示信息 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;

/** 匹配操作状态 */
@property(nonatomic, readwrite) PB3SingleLivePkMatchAction pkMatchAction;

@end

/**
 * Fetches the raw value of a @c PB3SingleLivePkMatchInfo's @c pkMatchAction property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SingleLivePkMatchInfo_PkMatchAction_RawValue(PB3SingleLivePkMatchInfo *message);
/**
 * Sets the raw value of an @c PB3SingleLivePkMatchInfo's @c pkMatchAction property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SingleLivePkMatchInfo_PkMatchAction_RawValue(PB3SingleLivePkMatchInfo *message, int32_t value);

#pragma mark - PB3SingleLivePkMatchStartReq

typedef GPB_ENUM(PB3SingleLivePkMatchStartReq_FieldNumber) {
  PB3SingleLivePkMatchStartReq_FieldNumber_MatchId = 1,
};

@interface PB3SingleLivePkMatchStartReq : GPBMessage

/** 匹配id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *matchId;

@end

#pragma mark - PB3SingleLivePkMatchStartRes

@interface PB3SingleLivePkMatchStartRes : GPBMessage

@end

#pragma mark - PB3SingleLivePkMatchKeepWaitReq

@interface PB3SingleLivePkMatchKeepWaitReq : GPBMessage

@end

#pragma mark - PB3SingleLivePkMatchKeepWaitRes

@interface PB3SingleLivePkMatchKeepWaitRes : GPBMessage

@end

#pragma mark - PB3SingleLivePkProtectPush

typedef GPB_ENUM(PB3SingleLivePkProtectPush_FieldNumber) {
  PB3SingleLivePkProtectPush_FieldNumber_EndTime = 1,
};

/**
 * cmdid=800144
 **/
@interface PB3SingleLivePkProtectPush : GPBMessage

/** 结束时间戳(秒) */
@property(nonatomic, readwrite) int64_t endTime;

@end

#pragma mark - PB3SingleLivePkMvpGlobalPush

typedef GPB_ENUM(PB3SingleLivePkMvpGlobalPush_FieldNumber) {
  PB3SingleLivePkMvpGlobalPush_FieldNumber_MvpId = 1,
  PB3SingleLivePkMvpGlobalPush_FieldNumber_MvpName = 2,
  PB3SingleLivePkMvpGlobalPush_FieldNumber_RoomId = 3,
};

/**
 * cmdid=800145
 **/
@interface PB3SingleLivePkMvpGlobalPush : GPBMessage

/** MVP的ID */
@property(nonatomic, readwrite) int64_t mvpId;

/** MVP名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *mvpName;

/** 获胜房间ID */
@property(nonatomic, readwrite) int64_t roomId;

@end

#pragma mark - PB3SingleLivePkRewardTicketPush

typedef GPB_ENUM(PB3SingleLivePkRewardTicketPush_FieldNumber) {
  PB3SingleLivePkRewardTicketPush_FieldNumber_Ticket = 1,
  PB3SingleLivePkRewardTicketPush_FieldNumber_RoomId = 2,
};

/**
 * cmdid=800146
 **/
@interface PB3SingleLivePkRewardTicketPush : GPBMessage

/** 获得钻石数 */
@property(nonatomic, readwrite) int32_t ticket;

/** 当前PK的房间 */
@property(nonatomic, readwrite) int64_t roomId;

@end

#pragma mark - PB3SingleLivePkTauntRoomNoticePush

typedef GPB_ENUM(PB3SingleLivePkTauntRoomNoticePush_FieldNumber) {
  PB3SingleLivePkTauntRoomNoticePush_FieldNumber_UseTauntPlayerId = 1,
  PB3SingleLivePkTauntRoomNoticePush_FieldNumber_UseTauntPlayerName = 2,
  PB3SingleLivePkTauntRoomNoticePush_FieldNumber_RoomId = 3,
  PB3SingleLivePkTauntRoomNoticePush_FieldNumber_TauntHostId = 4,
  PB3SingleLivePkTauntRoomNoticePush_FieldNumber_TauntHostName = 5,
};

/**
 * cmdid=800147
 **/
@interface PB3SingleLivePkTauntRoomNoticePush : GPBMessage

/** 使用嘲讽的用户ID */
@property(nonatomic, readwrite) int64_t useTauntPlayerId;

/** 使用嘲讽的用户名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *useTauntPlayerName;

/** 发起嘲讽的房间ID */
@property(nonatomic, readwrite) int64_t roomId;

/** 被嘲讽的达人ID */
@property(nonatomic, readwrite) int64_t tauntHostId;

/** 被嘲讽的达人名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tauntHostName;

@end

#pragma mark - PB3SingleLivePkVoiceMuteReq

typedef GPB_ENUM(PB3SingleLivePkVoiceMuteReq_FieldNumber) {
  PB3SingleLivePkVoiceMuteReq_FieldNumber_Mute = 1,
  PB3SingleLivePkVoiceMuteReq_FieldNumber_PkId = 2,
};

@interface PB3SingleLivePkVoiceMuteReq : GPBMessage

/** 静音操作类型 */
@property(nonatomic, readwrite) PB3SingleLiveMuteType mute;

/** PKId */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pkId;

@end

/**
 * Fetches the raw value of a @c PB3SingleLivePkVoiceMuteReq's @c mute property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SingleLivePkVoiceMuteReq_Mute_RawValue(PB3SingleLivePkVoiceMuteReq *message);
/**
 * Sets the raw value of an @c PB3SingleLivePkVoiceMuteReq's @c mute property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SingleLivePkVoiceMuteReq_Mute_RawValue(PB3SingleLivePkVoiceMuteReq *message, int32_t value);

#pragma mark - PB3SingleLivePkVoiceMuteRes

@interface PB3SingleLivePkVoiceMuteRes : GPBMessage

@end

#pragma mark - PB3SingleLivePkPushMuteType

typedef GPB_ENUM(PB3SingleLivePkPushMuteType_FieldNumber) {
  PB3SingleLivePkPushMuteType_FieldNumber_Mute = 1,
  PB3SingleLivePkPushMuteType_FieldNumber_RoomId = 2,
};

/**
 * cmdid=800149
 **/
@interface PB3SingleLivePkPushMuteType : GPBMessage

/** 静音操作类型 */
@property(nonatomic, readwrite) PB3SingleLiveMuteType mute;

/** 静音的房间ID */
@property(nonatomic, readwrite) int64_t roomId;

@end

/**
 * Fetches the raw value of a @c PB3SingleLivePkPushMuteType's @c mute property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SingleLivePkPushMuteType_Mute_RawValue(PB3SingleLivePkPushMuteType *message);
/**
 * Sets the raw value of an @c PB3SingleLivePkPushMuteType's @c mute property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SingleLivePkPushMuteType_Mute_RawValue(PB3SingleLivePkPushMuteType *message, int32_t value);

#pragma mark - PB3SingleLivePkChairChange

typedef GPB_ENUM(PB3SingleLivePkChairChange_FieldNumber) {
  PB3SingleLivePkChairChange_FieldNumber_ChangeType = 1,
  PB3SingleLivePkChairChange_FieldNumber_Move = 2,
  PB3SingleLivePkChairChange_FieldNumber_Sit = 3,
};

typedef GPB_ENUM(PB3SingleLivePkChairChange_Data_OneOfCase) {
  PB3SingleLivePkChairChange_Data_OneOfCase_GPBUnsetOneOfCase = 0,
  PB3SingleLivePkChairChange_Data_OneOfCase_Move = 2,
  PB3SingleLivePkChairChange_Data_OneOfCase_Sit = 3,
};

/**
 * cmdid=800151
 **/
@interface PB3SingleLivePkChairChange : GPBMessage

@property(nonatomic, readwrite) PB3SingleLivePkChairChangeType changeType;

@property(nonatomic, readonly) PB3SingleLivePkChairChange_Data_OneOfCase dataOneOfCase;

/** 移麦推送 */
@property(nonatomic, readwrite, strong, null_resettable) PB3BroadcastChairMove *move;

/** 上麦推送 */
@property(nonatomic, readwrite, strong, null_resettable) PB3BroadcastChair *sit;

@end

/**
 * Fetches the raw value of a @c PB3SingleLivePkChairChange's @c changeType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PB3SingleLivePkChairChange_ChangeType_RawValue(PB3SingleLivePkChairChange *message);
/**
 * Sets the raw value of an @c PB3SingleLivePkChairChange's @c changeType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPB3SingleLivePkChairChange_ChangeType_RawValue(PB3SingleLivePkChairChange *message, int32_t value);

/**
 * Clears whatever value was set for the oneof 'data'.
 **/
void PB3SingleLivePkChairChange_ClearDataOneOfCase(PB3SingleLivePkChairChange *message);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
