// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client/http0000.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum PROTOUpdateNotice_NoticeType

typedef GPB_ENUM(PROTOUpdateNotice_NoticeType) {
  PROTOUpdateNotice_NoticeType_NtNone = 0,
  PROTOUpdateNotice_NoticeType_NtRecommend = 1,
  PROTOUpdateNotice_NoticeType_NtForce = 2,
};

GPBEnumDescriptor *PROTOUpdateNotice_NoticeType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PROTOUpdateNotice_NoticeType_IsValidValue(int32_t value);

#pragma mark - PROTOHTTP0000Root

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface PROTOHTTP0000Root : GPBRootObject
@end

#pragma mark - PROTOUpdateNotice

typedef GPB_ENUM(PROTOUpdateNotice_FieldNumber) {
  PROTOUpdateNotice_FieldNumber_Version = 1,
  PROTOUpdateNotice_FieldNumber_VersionName = 2,
  PROTOUpdateNotice_FieldNumber_NoticeType = 3,
  PROTOUpdateNotice_FieldNumber_ReleaseNotes = 4,
  PROTOUpdateNotice_FieldNumber_LevelVersion = 10,
  PROTOUpdateNotice_FieldNumber_GiftVersion = 11,
  PROTOUpdateNotice_FieldNumber_WordFilterVersion = 12,
  PROTOUpdateNotice_FieldNumber_SplashVersion = 13,
  PROTOUpdateNotice_FieldNumber_SocketsArray = 20,
  PROTOUpdateNotice_FieldNumber_Msg = 31,
};

@interface PROTOUpdateNotice : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *version;
/** Test to see if @c version has been set. */
@property(nonatomic, readwrite) BOOL hasVersion;

@property(nonatomic, readwrite, copy, null_resettable) NSString *versionName;
/** Test to see if @c versionName has been set. */
@property(nonatomic, readwrite) BOOL hasVersionName;

@property(nonatomic, readwrite) PROTOUpdateNotice_NoticeType noticeType;

@property(nonatomic, readwrite) BOOL hasNoticeType;
@property(nonatomic, readwrite, copy, null_resettable) NSString *releaseNotes;
/** Test to see if @c releaseNotes has been set. */
@property(nonatomic, readwrite) BOOL hasReleaseNotes;

@property(nonatomic, readwrite, copy, null_resettable) NSString *levelVersion;
/** Test to see if @c levelVersion has been set. */
@property(nonatomic, readwrite) BOOL hasLevelVersion;

@property(nonatomic, readwrite, copy, null_resettable) NSString *giftVersion;
/** Test to see if @c giftVersion has been set. */
@property(nonatomic, readwrite) BOOL hasGiftVersion;

@property(nonatomic, readwrite, copy, null_resettable) NSString *wordFilterVersion;
/** Test to see if @c wordFilterVersion has been set. */
@property(nonatomic, readwrite) BOOL hasWordFilterVersion;

@property(nonatomic, readwrite, copy, null_resettable) NSString *splashVersion;
/** Test to see if @c splashVersion has been set. */
@property(nonatomic, readwrite) BOOL hasSplashVersion;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *socketsArray;
/** The number of items in @c socketsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger socketsArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;
/** Test to see if @c msg has been set. */
@property(nonatomic, readwrite) BOOL hasMsg;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
