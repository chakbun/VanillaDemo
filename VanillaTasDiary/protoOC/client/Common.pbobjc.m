// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client/common.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import <stdatomic.h>

#import "client/Common.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - PROTOCommonRoot

@implementation PROTOCommonRoot

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

#pragma mark - PROTOCommonRoot_FileDescriptor

static GPBFileDescriptor *PROTOCommonRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"proto.client"
                                                 objcPrefix:@"PROTO"
                                                     syntax:GPBFileSyntaxProto2];
  }
  return descriptor;
}

#pragma mark - Enum PROTOSexType

GPBEnumDescriptor *PROTOSexType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "Unknown\000Mail\000Femail\000";
    static const int32_t values[] = {
        PROTOSexType_Unknown,
        PROTOSexType_Mail,
        PROTOSexType_Femail,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PROTOSexType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PROTOSexType_IsValidValue];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PROTOSexType_IsValidValue(int32_t value__) {
  switch (value__) {
    case PROTOSexType_Unknown:
    case PROTOSexType_Mail:
    case PROTOSexType_Femail:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PROTOSceneType

GPBEnumDescriptor *PROTOSceneType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "StHome\000";
    static const int32_t values[] = {
        PROTOSceneType_StHome,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PROTOSceneType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PROTOSceneType_IsValidValue];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PROTOSceneType_IsValidValue(int32_t value__) {
  switch (value__) {
    case PROTOSceneType_StHome:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PROTOOnlineStateType

GPBEnumDescriptor *PROTOOnlineStateType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "OstOffline\000OstDisconnected\000OstBackground"
        "\000OstOnline\000";
    static const int32_t values[] = {
        PROTOOnlineStateType_OstOffline,
        PROTOOnlineStateType_OstDisconnected,
        PROTOOnlineStateType_OstBackground,
        PROTOOnlineStateType_OstOnline,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PROTOOnlineStateType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PROTOOnlineStateType_IsValidValue];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PROTOOnlineStateType_IsValidValue(int32_t value__) {
  switch (value__) {
    case PROTOOnlineStateType_OstOffline:
    case PROTOOnlineStateType_OstDisconnected:
    case PROTOOnlineStateType_OstBackground:
    case PROTOOnlineStateType_OstOnline:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - PROTOIntegerVO

@implementation PROTOIntegerVO

@dynamic hasValue, value;

typedef struct PROTOIntegerVO__storage_ {
  uint32_t _has_storage_[1];
  int32_t value;
} PROTOIntegerVO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "value",
        .dataTypeSpecific.className = NULL,
        .number = PROTOIntegerVO_FieldNumber_Value,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PROTOIntegerVO__storage_, value),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PROTOIntegerVO class]
                                     rootClass:[PROTOCommonRoot class]
                                          file:PROTOCommonRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PROTOIntegerVO__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PROTOIntString

@implementation PROTOIntString

@dynamic hasKey, key;
@dynamic hasValue, value;

typedef struct PROTOIntString__storage_ {
  uint32_t _has_storage_[1];
  int32_t key;
  NSString *value;
} PROTOIntString__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "key",
        .dataTypeSpecific.className = NULL,
        .number = PROTOIntString_FieldNumber_Key,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PROTOIntString__storage_, key),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt32,
      },
      {
        .name = "value",
        .dataTypeSpecific.className = NULL,
        .number = PROTOIntString_FieldNumber_Value,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PROTOIntString__storage_, value),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PROTOIntString class]
                                     rootClass:[PROTOCommonRoot class]
                                          file:PROTOCommonRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PROTOIntString__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PROTOLongInt

@implementation PROTOLongInt

@dynamic hasKey, key;
@dynamic hasValue, value;

typedef struct PROTOLongInt__storage_ {
  uint32_t _has_storage_[1];
  int32_t value;
  int64_t key;
} PROTOLongInt__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "key",
        .dataTypeSpecific.className = NULL,
        .number = PROTOLongInt_FieldNumber_Key,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PROTOLongInt__storage_, key),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt64,
      },
      {
        .name = "value",
        .dataTypeSpecific.className = NULL,
        .number = PROTOLongInt_FieldNumber_Value,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PROTOLongInt__storage_, value),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PROTOLongInt class]
                                     rootClass:[PROTOCommonRoot class]
                                          file:PROTOCommonRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PROTOLongInt__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PROTOSceneID

@implementation PROTOSceneID

@dynamic hasType, type;
@dynamic hasSeq, seq;

typedef struct PROTOSceneID__storage_ {
  uint32_t _has_storage_[1];
  PROTOSceneType type;
  int64_t seq;
} PROTOSceneID__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescriptionWithDefault fields[] = {
      {
        .defaultValue.valueEnum = PROTOSceneType_StHome,
        .core.name = "type",
        .core.dataTypeSpecific.enumDescFunc = PROTOSceneType_EnumDescriptor,
        .core.number = PROTOSceneID_FieldNumber_Type,
        .core.hasIndex = 0,
        .core.offset = (uint32_t)offsetof(PROTOSceneID__storage_, type),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasDefaultValue | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
      {
        .defaultValue.valueInt64 = 0LL,
        .core.name = "seq",
        .core.dataTypeSpecific.className = NULL,
        .core.number = PROTOSceneID_FieldNumber_Seq,
        .core.hasIndex = 1,
        .core.offset = (uint32_t)offsetof(PROTOSceneID__storage_, seq),
        .core.flags = GPBFieldOptional,
        .core.dataType = GPBDataTypeSInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PROTOSceneID class]
                                     rootClass:[PROTOCommonRoot class]
                                          file:PROTOCommonRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescriptionWithDefault))
                                   storageSize:sizeof(PROTOSceneID__storage_)
                                         flags:GPBDescriptorInitializationFlag_FieldsWithDefault];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PROTOImageInfo

@implementation PROTOImageInfo

@dynamic hasId_p, id_p;
@dynamic hasWidth, width;
@dynamic hasHeight, height;
@dynamic hasIsVideo, isVideo;

typedef struct PROTOImageInfo__storage_ {
  uint32_t _has_storage_[1];
  uint32_t width;
  uint32_t height;
  int64_t id_p;
} PROTOImageInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = PROTOImageInfo_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PROTOImageInfo__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt64,
      },
      {
        .name = "width",
        .dataTypeSpecific.className = NULL,
        .number = PROTOImageInfo_FieldNumber_Width,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PROTOImageInfo__storage_, width),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "height",
        .dataTypeSpecific.className = NULL,
        .number = PROTOImageInfo_FieldNumber_Height,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PROTOImageInfo__storage_, height),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "isVideo",
        .dataTypeSpecific.className = NULL,
        .number = PROTOImageInfo_FieldNumber_IsVideo,
        .hasIndex = 3,
        .offset = 4,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PROTOImageInfo class]
                                     rootClass:[PROTOCommonRoot class]
                                          file:PROTOCommonRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PROTOImageInfo__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\004\007\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PROTOImageInfoList

@implementation PROTOImageInfoList

@dynamic picsArray, picsArray_Count;

typedef struct PROTOImageInfoList__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *picsArray;
} PROTOImageInfoList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "picsArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PROTOImageInfo),
        .number = PROTOImageInfoList_FieldNumber_PicsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PROTOImageInfoList__storage_, picsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PROTOImageInfoList class]
                                     rootClass:[PROTOCommonRoot class]
                                          file:PROTOCommonRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PROTOImageInfoList__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PROTOSearchPlayerEntry

@implementation PROTOSearchPlayerEntry

@dynamic hasId_p, id_p;
@dynamic hasId2, id2;
@dynamic hasNickname, nickname;
@dynamic hasSex, sex;
@dynamic hasIcon, icon;
@dynamic hasCharm, charm;
@dynamic hasCharmLevel, charmLevel;
@dynamic hasWealth, wealth;
@dynamic hasWealthLevel, wealthLevel;
@dynamic hasOnline, online;
@dynamic hasSceneId, sceneId;
@dynamic hasHasPasswd, hasPasswd;

typedef struct PROTOSearchPlayerEntry__storage_ {
  uint32_t _has_storage_[1];
  PROTOSexType sex;
  int32_t charmLevel;
  int32_t wealth;
  int32_t wealthLevel;
  NSString *nickname;
  NSString *icon;
  PROTOSceneID *sceneId;
  int64_t id_p;
  int64_t id2;
  int64_t charm;
} PROTOSearchPlayerEntry__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = PROTOSearchPlayerEntry_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PROTOSearchPlayerEntry__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt64,
      },
      {
        .name = "id2",
        .dataTypeSpecific.className = NULL,
        .number = PROTOSearchPlayerEntry_FieldNumber_Id2,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PROTOSearchPlayerEntry__storage_, id2),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt64,
      },
      {
        .name = "nickname",
        .dataTypeSpecific.className = NULL,
        .number = PROTOSearchPlayerEntry_FieldNumber_Nickname,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PROTOSearchPlayerEntry__storage_, nickname),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sex",
        .dataTypeSpecific.enumDescFunc = PROTOSexType_EnumDescriptor,
        .number = PROTOSearchPlayerEntry_FieldNumber_Sex,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PROTOSearchPlayerEntry__storage_, sex),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "icon",
        .dataTypeSpecific.className = NULL,
        .number = PROTOSearchPlayerEntry_FieldNumber_Icon,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PROTOSearchPlayerEntry__storage_, icon),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "charm",
        .dataTypeSpecific.className = NULL,
        .number = PROTOSearchPlayerEntry_FieldNumber_Charm,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PROTOSearchPlayerEntry__storage_, charm),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt64,
      },
      {
        .name = "charmLevel",
        .dataTypeSpecific.className = NULL,
        .number = PROTOSearchPlayerEntry_FieldNumber_CharmLevel,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PROTOSearchPlayerEntry__storage_, charmLevel),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeSInt32,
      },
      {
        .name = "wealth",
        .dataTypeSpecific.className = NULL,
        .number = PROTOSearchPlayerEntry_FieldNumber_Wealth,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PROTOSearchPlayerEntry__storage_, wealth),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt32,
      },
      {
        .name = "wealthLevel",
        .dataTypeSpecific.className = NULL,
        .number = PROTOSearchPlayerEntry_FieldNumber_WealthLevel,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(PROTOSearchPlayerEntry__storage_, wealthLevel),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeSInt32,
      },
      {
        .name = "online",
        .dataTypeSpecific.className = NULL,
        .number = PROTOSearchPlayerEntry_FieldNumber_Online,
        .hasIndex = 9,
        .offset = 10,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasDefaultValue),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "sceneId",
        .dataTypeSpecific.className = GPBStringifySymbol(PROTOSceneID),
        .number = PROTOSearchPlayerEntry_FieldNumber_SceneId,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(PROTOSearchPlayerEntry__storage_, sceneId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "hasPasswd",
        .dataTypeSpecific.className = NULL,
        .number = PROTOSearchPlayerEntry_FieldNumber_HasPasswd,
        .hasIndex = 12,
        .offset = 13,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PROTOSearchPlayerEntry class]
                                     rootClass:[PROTOCommonRoot class]
                                          file:PROTOCommonRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PROTOSearchPlayerEntry__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\007\n\000\t\013\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PROTOTaskGiftStep

@implementation PROTOTaskGiftStep

@dynamic hasId_p, id_p;
@dynamic hasTaskId, taskId;
@dynamic hasStep, step;
@dynamic hasGiftId, giftId;
@dynamic hasGiftNum, giftNum;
@dynamic hasRoomPoint, roomPoint;
@dynamic hasPlayerPoint, playerPoint;

typedef struct PROTOTaskGiftStep__storage_ {
  uint32_t _has_storage_[1];
  uint32_t step;
  uint32_t giftId;
  uint32_t giftNum;
  uint32_t roomPoint;
  uint32_t playerPoint;
  int64_t id_p;
  int64_t taskId;
} PROTOTaskGiftStep__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = PROTOTaskGiftStep_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PROTOTaskGiftStep__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeSInt64,
      },
      {
        .name = "taskId",
        .dataTypeSpecific.className = NULL,
        .number = PROTOTaskGiftStep_FieldNumber_TaskId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PROTOTaskGiftStep__storage_, taskId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeSInt64,
      },
      {
        .name = "step",
        .dataTypeSpecific.className = NULL,
        .number = PROTOTaskGiftStep_FieldNumber_Step,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PROTOTaskGiftStep__storage_, step),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "giftId",
        .dataTypeSpecific.className = NULL,
        .number = PROTOTaskGiftStep_FieldNumber_GiftId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PROTOTaskGiftStep__storage_, giftId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "giftNum",
        .dataTypeSpecific.className = NULL,
        .number = PROTOTaskGiftStep_FieldNumber_GiftNum,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PROTOTaskGiftStep__storage_, giftNum),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "roomPoint",
        .dataTypeSpecific.className = NULL,
        .number = PROTOTaskGiftStep_FieldNumber_RoomPoint,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PROTOTaskGiftStep__storage_, roomPoint),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "playerPoint",
        .dataTypeSpecific.className = NULL,
        .number = PROTOTaskGiftStep_FieldNumber_PlayerPoint,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PROTOTaskGiftStep__storage_, playerPoint),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PROTOTaskGiftStep class]
                                     rootClass:[PROTOCommonRoot class]
                                          file:PROTOCommonRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PROTOTaskGiftStep__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\002\006\000\004\006\000\005\007\000\006\t\000\007\013\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
