syntax = "proto3";
option objc_class_prefix = "PROTO";
package uauth_pb;

import "uauth_common.proto";
import "uauth.ext.proto";

message AliCertifyReq {
	string name = 1;
	string card_no = 2;
	string certify_req_id = 3;
	sint64 player_id = 4;
}
message AliCertifyRes {
	string certify_id = 1;
	string certify_url = 2;
}

message QueryIsCertificatedReq {
	string certify_id = 1;
}
message QueryIsCertificatedRes {
	bool isPassed = 1;
}

message UauthAdminReq {
	string     obj                         = 1;
	string     func_name                   = 2;
	bytes     params                      = 3;
}

message UauthAdminRes {
	bytes data = 1;
}

enum AdminCallbackType {
	ACT_NULL = 0;
	ACT_CheckCmbAccountRepo = 1;  
}

message AdminCallbackReq {
	AdminCallbackType type = 1;
}
message AdminCallbackRes {

}

message CheckLogChargeReq {
	int64 player_id = 1;
	int64 gold = 2;
}
message CheckLogChargeRes {

}

message AuthSession {
	string id = 1;
	int64 account_id = 2;
	string ip = 3;
}

message AuthSessionReq {
	string key = 1;
}

message AuthSessionRes {
	sint32 result = 1;  
	AuthSession session = 2;
}

message LogoutSessionReq {
	string key = 1;  
	int64 uid = 2;
}
message LogoutSessionRes {
}

message RobotLoginReq {
	sint64 id = 1;  
	string name = 2;  
	string ip = 3;  
}

 
message LoginAccountReq {
	int64 id = 1;
	UauthAccountType type = 2;
	string name = 3;
	string phone = 4;
	string password = 5;
	UauthLoginType login_type = 6;  
	string ip = 7;
	string client = 8;			  
	string application = 9;			    
	map<string, string> extends = 10;       
}

 
message CreateAccountReq {
	UauthAccountType type = 1;
	string account_name = 2;
	string phone = 3;
	string nickname = 4;
	string device_id = 5;
	UauthDeviceType device_type = 6;
	int32 ad_channel = 7;  		  
	string client = 8;			  
	string ip = 9;
	UauthSexType sex = 10;		 
	string open_id = 11;		 
	UauthLoginType login_type = 12;  
	string icon = 13;			 
	string application = 14;			    
	map<string, string> extends = 15;       
}


service UauthIntObj {
	 
	rpc AliCertify(AliCertifyReq) returns (AliCertifyRes);
	 
	rpc QueryIsCertificated(QueryIsCertificatedReq) returns (QueryIsCertificatedRes);
	rpc UauthAdmin (UauthAdminReq) returns (UauthAdminRes);  
	 
	rpc AdminCallback(AdminCallbackReq) returns (AdminCallbackRes);
	 
	rpc CheckLogCharge(CheckLogChargeReq) returns (CheckLogChargeRes);

	 
	rpc AuthSession(AuthSessionReq) returns (AuthSessionRes);
	 
	rpc LogoutSession(LogoutSessionReq) returns (LogoutSessionRes);

	 
	rpc RobotLogin(RobotLoginReq) returns (CommonSignInRes);
}
